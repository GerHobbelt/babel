!(function(e, t) {
  "object" == typeof exports && "object" == typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
      ? define([], t)
      : "object" == typeof exports
        ? (exports.Babel = t())
        : (e.Babel = t());
})(
  "undefined" != typeof window
    ? window
    : "undefined" != typeof self
      ? self
      : this,
  function() {
    return (function(n) {
      var a = {};
      function r(e) {
        if (a[e]) return a[e].exports;
        var t = (a[e] = { i: e, l: !1, exports: {} });
        return n[e].call(t.exports, t, t.exports, r), (t.l = !0), t.exports;
      }
      return (
        (r.m = n),
        (r.c = a),
        (r.d = function(e, t, n) {
          r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n });
        }),
        (r.r = function(e) {
          "undefined" != typeof Symbol &&
            Symbol.toStringTag &&
            Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
            Object.defineProperty(e, "__esModule", { value: !0 });
        }),
        (r.t = function(t, e) {
          if ((1 & e && (t = r(t)), 8 & e)) return t;
          if (4 & e && "object" == typeof t && t && t.__esModule) return t;
          var n = Object.create(null);
          if (
            (r.r(n),
            Object.defineProperty(n, "default", { enumerable: !0, value: t }),
            2 & e && "string" != typeof t)
          )
            for (var a in t)
              r.d(
                n,
                a,
                function(e) {
                  return t[e];
                }.bind(null, a)
              );
          return n;
        }),
        (r.n = function(e) {
          var t =
            e && e.__esModule
              ? function() {
                  return e.default;
                }
              : function() {
                  return e;
                };
          return r.d(t, "a", t), t;
        }),
        (r.o = function(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }),
        (r.p = ""),
        r((r.s = 985))
      );
    })([
      function(e, N, B) {
        (function(j, M) {
          var I;
          !(function(e) {
            var t = ("object" == typeof j && j && j.exports,
            "object" == typeof M && M);
            t.global !== t && t.window;
            var d =
                "A range’s `stop` value must be greater than or equal to the `start` value.",
              u =
                "Invalid code point value. Code points range from U+000000 to U+10FFFF.",
              n = /\\x00([^0123456789]|$)/g,
              a = {},
              r = a.hasOwnProperty,
              g = function(e, t) {
                for (var n = -1, a = e.length; ++n < a; ) t(e[n], n);
              },
              i = a.toString,
              o = function(e) {
                return "[object Array]" == i.call(e);
              },
              s = function(e) {
                return "number" == typeof e || "[object Number]" == i.call(e);
              },
              l = function(e, t) {
                var n = String(e);
                return n.length < t ? ("0000" + n).slice(-t) : n;
              },
              c = function(e) {
                return Number(e)
                  .toString(16)
                  .toUpperCase();
              },
              p = [].slice,
              f = function(e, t) {
                for (var n, a, r = 0, i = e.length; r < i; ) {
                  if (((n = e[r]), (a = e[r + 1]), n <= t && t < a))
                    return (
                      t == n
                        ? a == n + 1
                          ? e.splice(r, 2)
                          : (e[r] = t + 1)
                        : t == a - 1
                          ? (e[r + 1] = t)
                          : e.splice(r, 2, n, t, t + 1, a),
                      e
                    );
                  r += 2;
                }
                return e;
              },
              h = function(e, t, n) {
                if (n < t) throw Error(d);
                for (var a, r, i = 0; i < e.length; ) {
                  if (((a = e[i]), (r = e[i + 1] - 1), n < a)) return e;
                  if (t <= a && r <= n) e.splice(i, 2);
                  else {
                    if (a <= t && n < r)
                      return (
                        t == a
                          ? ((e[i] = n + 1), (e[i + 1] = r + 1))
                          : e.splice(i, 2, a, t, n + 1, r + 1),
                        e
                      );
                    if (a <= t && t <= r) e[i + 1] = t;
                    else if (a <= n && n <= r) return (e[i] = n + 1), e;
                    i += 2;
                  }
                }
                return e;
              },
              R = function(e, t) {
                var n,
                  a,
                  r = 0,
                  i = null,
                  o = e.length;
                if (t < 0 || 1114111 < t) throw RangeError(u);
                for (; r < o; ) {
                  if (((n = e[r]), (a = e[r + 1]), n <= t && t < a)) return e;
                  if (t == n - 1) return (e[r] = t), e;
                  if (t < n)
                    return e.splice(null != i ? i + 2 : 0, 0, t, t + 1), e;
                  if (t == a)
                    return (
                      t + 1 == e[r + 2]
                        ? e.splice(r, 4, n, e[r + 3])
                        : (e[r + 1] = t + 1),
                      e
                    );
                  (i = r), (r += 2);
                }
                return e.push(t, t + 1), e;
              },
              y = function(e, t) {
                for (var n, a, r = 0, i = e.slice(), o = t.length; r < o; )
                  (i = (n = t[r]) == (a = t[r + 1] - 1) ? R(i, n) : m(i, n, a)),
                    (r += 2);
                return i;
              },
              m = function(e, t, n) {
                if (n < t) throw Error(d);
                if (t < 0 || 1114111 < t || n < 0 || 1114111 < n)
                  throw RangeError(u);
                for (var a, r, i = 0, o = !1, s = e.length; i < s; ) {
                  if (((a = e[i]), (r = e[i + 1]), o)) {
                    if (a == n + 1) return e.splice(i - 1, 2), e;
                    if (n < a) return e;
                    t <= a &&
                      a <= n &&
                      (t < r && r - 1 <= n
                        ? e.splice(i, 2)
                        : e.splice(i - 1, 2),
                      (i -= 2));
                  } else {
                    if (a == n + 1) return (e[i] = t), e;
                    if (n < a) return e.splice(i, 0, t, n + 1), e;
                    if (a <= t && t < r && n + 1 <= r) return e;
                    (a <= t && t < r) || r == t
                      ? ((e[i + 1] = n + 1), (o = !0))
                      : t <= a &&
                        r <= n + 1 &&
                        ((e[i] = t), (e[i + 1] = n + 1), (o = !0));
                  }
                  i += 2;
                }
                return o || e.push(t, n + 1), e;
              },
              v = function(e, t) {
                var n = 0,
                  a = e.length,
                  r = e[n],
                  i = e[a - 1];
                if (2 <= a && (t < r || i < t)) return !1;
                for (; n < a; ) {
                  if (((r = e[n]), (i = e[n + 1]), r <= t && t < i)) return !0;
                  n += 2;
                }
                return !1;
              },
              b = function(e) {
                return !e.length;
              },
              E = function(e) {
                return 2 == e.length && e[0] + 1 == e[1];
              },
              x = function(e) {
                for (var t, n, a = 0, r = [], i = e.length; a < i; ) {
                  for (t = e[a], n = e[a + 1]; t < n; ) r.push(t), ++t;
                  a += 2;
                }
                return r;
              },
              A = Math.floor,
              S = function(e) {
                return parseInt(A((e - 65536) / 1024) + 55296, 10);
              },
              _ = function(e) {
                return parseInt(((e - 65536) % 1024) + 56320, 10);
              },
              T = String.fromCharCode,
              P = function(e) {
                return 9 == e
                  ? "\\t"
                  : 10 == e
                    ? "\\n"
                    : 12 == e
                      ? "\\f"
                      : 13 == e
                        ? "\\r"
                        : 45 == e
                          ? "\\x2D"
                          : 92 == e
                            ? "\\\\"
                            : 36 == e ||
                              (40 <= e && e <= 43) ||
                              46 == e ||
                              47 == e ||
                              63 == e ||
                              (91 <= e && e <= 94) ||
                              (123 <= e && e <= 125)
                              ? "\\" + T(e)
                              : 32 <= e && e <= 126
                                ? T(e)
                                : e <= 255
                                  ? "\\x" + l(c(e), 2)
                                  : "\\u" + l(c(e), 4);
              },
              C = function(e) {
                return e <= 65535
                  ? P(e)
                  : "\\u{" + e.toString(16).toUpperCase() + "}";
              },
              w = function(e) {
                var t = e.length,
                  n = e.charCodeAt(0);
                return 55296 <= n && n <= 56319 && 1 < t
                  ? 1024 * (n - 55296) + e.charCodeAt(1) - 56320 + 65536
                  : n;
              },
              D = function(e) {
                var t,
                  n,
                  a = "",
                  r = 0,
                  i = e.length;
                if (E(e)) return P(e[0]);
                for (; r < i; )
                  (a +=
                    (t = e[r]) == (n = e[r + 1] - 1)
                      ? P(t)
                      : t + 1 == n
                        ? P(t) + P(n)
                        : P(t) + "-" + P(n)),
                    (r += 2);
                return "[" + a + "]";
              },
              O = function(e) {
                if (!e.length) return [];
                for (
                  var t, n, a, r, i, o, s = 0, d = [], u = e.length;
                  s < u;

                ) {
                  (t = e[s]),
                    (n = e[s + 1] - 1),
                    (a = S(t)),
                    (r = _(t)),
                    (i = S(n));
                  var l = 57343 == (o = _(n)),
                    c = !1;
                  a == i || (56320 == r && l)
                    ? (d.push([[a, i + 1], [r, o + 1]]), (c = !0))
                    : d.push([[a, a + 1], [r, 57344]]),
                    !c &&
                      a + 1 < i &&
                      (l
                        ? (d.push([[a + 1, i + 1], [56320, o + 1]]), (c = !0))
                        : d.push([[a + 1, i], [56320, 57344]])),
                    c || d.push([[i, i + 1], [56320, o + 1]]),
                    (s += 2);
                }
                return (function(e) {
                  for (
                    var t,
                      n,
                      a,
                      r,
                      i,
                      o,
                      s = [],
                      d = [],
                      u = !1,
                      l = -1,
                      c = e.length;
                    ++l < c;

                  )
                    if (((t = e[l]), (n = e[l + 1]))) {
                      for (
                        a = t[0], r = t[1], i = n[0], o = n[1], d = r;
                        i && a[0] == i[0] && a[1] == i[1];

                      )
                        (d = E(o) ? R(d, o[0]) : m(d, o[0], o[1] - 1)),
                          (a = (t = e[++l])[0]),
                          (r = t[1]),
                          (i = (n = e[l + 1]) && n[0]),
                          (o = n && n[1]),
                          (u = !0);
                      s.push([a, u ? d : r]), (u = !1);
                    } else s.push(t);
                  return (function(e) {
                    if (1 == e.length) return e;
                    for (var t = -1, n = -1; ++t < e.length; ) {
                      var a = e[t],
                        r = a[1],
                        i = r[0],
                        o = r[1];
                      for (n = t; ++n < e.length; ) {
                        var s = e[n],
                          d = s[1],
                          u = d[0],
                          l = d[1];
                        i == u &&
                          o == l &&
                          (E(s[0])
                            ? (a[0] = R(a[0], s[0][0]))
                            : (a[0] = m(a[0], s[0][0], s[0][1] - 1)),
                          e.splice(n, 1),
                          --n);
                      }
                    }
                    return e;
                  })(s);
                })(d);
              },
              F = function e(t) {
                return (
                  1 < arguments.length && (t = p.call(arguments)),
                  this instanceof e
                    ? ((this.data = []), t ? this.add(t) : this)
                    : new e().add(t)
                );
              };
            F.version = "1.3.3";
            var k = F.prototype;
            !(function(e, t) {
              var n;
              for (n in t) r.call(t, n) && (e[n] = t[n]);
            })(k, {
              add: function(e) {
                var t = this;
                return (
                  null == e ||
                    (e instanceof F
                      ? (t.data = y(t.data, e.data))
                      : (1 < arguments.length && (e = p.call(arguments)),
                        o(e)
                          ? g(e, function(e) {
                              t.add(e);
                            })
                          : (t.data = R(t.data, s(e) ? e : w(e))))),
                  t
                );
              },
              remove: function(e) {
                var t = this;
                return (
                  null == e ||
                    (e instanceof F
                      ? (t.data = (function(e, t) {
                          for (
                            var n, a, r = 0, i = e.slice(), o = t.length;
                            r < o;

                          )
                            (i =
                              (n = t[r]) == (a = t[r + 1] - 1)
                                ? f(i, n)
                                : h(i, n, a)),
                              (r += 2);
                          return i;
                        })(t.data, e.data))
                      : (1 < arguments.length && (e = p.call(arguments)),
                        o(e)
                          ? g(e, function(e) {
                              t.remove(e);
                            })
                          : (t.data = f(t.data, s(e) ? e : w(e))))),
                  t
                );
              },
              addRange: function(e, t) {
                return (
                  (this.data = m(this.data, s(e) ? e : w(e), s(t) ? t : w(t))),
                  this
                );
              },
              removeRange: function(e, t) {
                var n = s(e) ? e : w(e),
                  a = s(t) ? t : w(t);
                return (this.data = h(this.data, n, a)), this;
              },
              intersection: function(e) {
                var t = e instanceof F ? x(e.data) : e;
                return (
                  (this.data = (function(e, t) {
                    for (var n, a = 0, r = t.length, i = []; a < r; )
                      (n = t[a]), v(e, n) && i.push(n), ++a;
                    return (function(e) {
                      for (
                        var t,
                          n = -1,
                          a = e.length,
                          r = a - 1,
                          i = [],
                          o = !0,
                          s = 0;
                        ++n < a;

                      )
                        if (((t = e[n]), o)) i.push(t), (s = t), (o = !1);
                        else if (t == s + 1) {
                          if (n != r) {
                            s = t;
                            continue;
                          }
                          (o = !0), i.push(t + 1);
                        } else i.push(s + 1, t), (s = t);
                      return o || i.push(t + 1), i;
                    })(i);
                  })(this.data, t)),
                  this
                );
              },
              contains: function(e) {
                return v(this.data, s(e) ? e : w(e));
              },
              clone: function() {
                var e = new F();
                return (e.data = this.data.slice(0)), e;
              },
              toString: function(e) {
                var t = (function(e, t, n) {
                  if (n)
                    return (function(e) {
                      var t,
                        n,
                        a = "",
                        r = 0,
                        i = e.length;
                      if (E(e)) return C(e[0]);
                      for (; r < i; )
                        (a +=
                          (t = e[r]) == (n = e[r + 1] - 1)
                            ? C(t)
                            : t + 1 == n
                              ? C(t) + C(n)
                              : C(t) + "-" + C(n)),
                          (r += 2);
                      return "[" + a + "]";
                    })(e);
                  var a,
                    r = [],
                    i = (function(e) {
                      for (
                        var t,
                          n,
                          a = [],
                          r = [],
                          i = [],
                          o = [],
                          s = 0,
                          d = e.length;
                        s < d;

                      )
                        (t = e[s]),
                          (n = e[s + 1] - 1),
                          t < 55296
                            ? (n < 55296 && i.push(t, n + 1),
                              55296 <= n &&
                                n <= 56319 &&
                                (i.push(t, 55296), a.push(55296, n + 1)),
                              56320 <= n &&
                                n <= 57343 &&
                                (i.push(t, 55296),
                                a.push(55296, 56320),
                                r.push(56320, n + 1)),
                              57343 < n &&
                                (i.push(t, 55296),
                                a.push(55296, 56320),
                                r.push(56320, 57344),
                                n <= 65535
                                  ? i.push(57344, n + 1)
                                  : (i.push(57344, 65536),
                                    o.push(65536, n + 1))))
                            : 55296 <= t && t <= 56319
                              ? (55296 <= n && n <= 56319 && a.push(t, n + 1),
                                56320 <= n &&
                                  n <= 57343 &&
                                  (a.push(t, 56320), r.push(56320, n + 1)),
                                57343 < n &&
                                  (a.push(t, 56320),
                                  r.push(56320, 57344),
                                  n <= 65535
                                    ? i.push(57344, n + 1)
                                    : (i.push(57344, 65536),
                                      o.push(65536, n + 1))))
                              : 56320 <= t && t <= 57343
                                ? (56320 <= n && n <= 57343 && r.push(t, n + 1),
                                  57343 < n &&
                                    (r.push(t, 57344),
                                    n <= 65535
                                      ? i.push(57344, n + 1)
                                      : (i.push(57344, 65536),
                                        o.push(65536, n + 1))))
                                : 57343 < t && t <= 65535
                                  ? n <= 65535
                                    ? i.push(t, n + 1)
                                    : (i.push(t, 65536), o.push(65536, n + 1))
                                  : o.push(t, n + 1),
                          (s += 2);
                      return {
                        loneHighSurrogates: a,
                        loneLowSurrogates: r,
                        bmp: i,
                        astral: o,
                      };
                    })(e),
                    o = i.loneHighSurrogates,
                    s = i.loneLowSurrogates,
                    d = i.bmp,
                    u = i.astral,
                    l = !b(o),
                    c = !b(s),
                    p = O(u);
                  return (
                    t && ((d = y(d, o)), (l = !1), (d = y(d, s)), (c = !1)),
                    b(d) || r.push(D(d)),
                    p.length &&
                      r.push(
                        ((a = []),
                        g(p, function(e) {
                          var t = e[0],
                            n = e[1];
                          a.push(D(t) + D(n));
                        }),
                        a.join("|"))
                      ),
                    l && r.push(D(o) + "(?![\\uDC00-\\uDFFF])"),
                    c && r.push("(?:[^\\uD800-\\uDBFF]|^)" + D(s)),
                    r.join("|")
                  );
                })(this.data, !!e && e.bmpOnly, !!e && e.hasUnicodeFlag);
                return t ? t.replace(n, "\\0$1") : "[]";
              },
              toRegExp: function(e) {
                var t = this.toString(
                  e && -1 != e.indexOf("u") ? { hasUnicodeFlag: !0 } : null
                );
                return RegExp(t, e || "");
              },
              valueOf: function() {
                return x(this.data);
              },
            }),
              (k.toArray = k.valueOf),
              void 0 ===
                (I = function() {
                  return F;
                }.call(N, B, N, j)) || (j.exports = I);
          })();
        }.call(this, B(28)(e), B(21)));
      },
      function(e, t) {
        e.exports = function(e, t) {
          return t || (t = e.slice(0)), (e.raw = t), e;
        };
      },
      function(e, t, n) {
        "use strict";
        function o(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.declare = function(i) {
            return function(t, e, n) {
              return (
                t.assertVersion ||
                  (t = Object.assign(
                    ((r = null),
                    "string" == typeof (a = t).version &&
                      /^7\./.test(a.version) &&
                      (!(r = Object.getPrototypeOf(a)) ||
                        (o(r, "version") &&
                          o(r, "transform") &&
                          o(r, "template") &&
                          o(r, "types")) ||
                        (r = null)),
                    Object.assign({}, r, a)),
                    {
                      assertVersion: function(e) {
                        !(function(e, t) {
                          if ("number" == typeof e) {
                            if (!Number.isInteger(e))
                              throw new Error(
                                "Expected string or integer value."
                              );
                            e = "^" + e + ".0.0-0";
                          }
                          if ("string" != typeof e)
                            throw new Error(
                              "Expected string or integer value."
                            );
                          var n,
                            a = Error.stackTraceLimit;
                          throw ("number" == typeof a &&
                            a < 25 &&
                            (Error.stackTraceLimit = 25),
                          (n =
                            "7." === t.slice(0, 2)
                              ? new Error(
                                  'Requires Babel "^7.0.0-beta.41", but was loaded with "' +
                                    t +
                                    "\". You'll need to update your @gerhobbelt/babel-core version."
                                )
                              : new Error(
                                  'Requires Babel "' +
                                    e +
                                    '", but was loaded with "' +
                                    t +
                                    '". If you are sure you have a compatible version of @gerhobbelt/babel-core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn\'t mention "@gerhobbelt/babel-core" or "babel-core" to see what is calling Babel.'
                                )),
                          "number" == typeof a && (Error.stackTraceLimit = a),
                          Object.assign(n, {
                            code: "BABEL_VERSION_UNSUPPORTED",
                            version: t,
                            range: e,
                          }));
                        })(e, t.version);
                      },
                    }
                  )),
                i(t, e || {}, n)
              );
              var a, r;
            };
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Plugin = function(e) {
            throw new Error(
              "The (" +
                e +
                ") Babel 5 plugin is being run with an unsupported Babel version."
            );
          }),
          Object.defineProperty(t, "File", {
            enumerable: !0,
            get: function() {
              return a.default;
            },
          }),
          Object.defineProperty(t, "buildExternalHelpers", {
            enumerable: !0,
            get: function() {
              return r.default;
            },
          }),
          Object.defineProperty(t, "resolvePlugin", {
            enumerable: !0,
            get: function() {
              return i.resolvePlugin;
            },
          }),
          Object.defineProperty(t, "resolvePreset", {
            enumerable: !0,
            get: function() {
              return i.resolvePreset;
            },
          }),
          Object.defineProperty(t, "version", {
            enumerable: !0,
            get: function() {
              return o.version;
            },
          }),
          Object.defineProperty(t, "getEnv", {
            enumerable: !0,
            get: function() {
              return s.getEnv;
            },
          }),
          Object.defineProperty(t, "traverse", {
            enumerable: !0,
            get: function() {
              return ((e = h(n(10))), e).default;
              var e;
            },
          }),
          Object.defineProperty(t, "template", {
            enumerable: !0,
            get: function() {
              return ((e = h(n(24))), e).default;
              var e;
            },
          }),
          Object.defineProperty(t, "createConfigItem", {
            enumerable: !0,
            get: function() {
              return u.createConfigItem;
            },
          }),
          Object.defineProperty(t, "loadPartialConfig", {
            enumerable: !0,
            get: function() {
              return l.loadPartialConfig;
            },
          }),
          Object.defineProperty(t, "loadOptions", {
            enumerable: !0,
            get: function() {
              return l.loadOptions;
            },
          }),
          Object.defineProperty(t, "transform", {
            enumerable: !0,
            get: function() {
              return c.transform;
            },
          }),
          Object.defineProperty(t, "transformSync", {
            enumerable: !0,
            get: function() {
              return c.transformSync;
            },
          }),
          Object.defineProperty(t, "transformAsync", {
            enumerable: !0,
            get: function() {
              return c.transformAsync;
            },
          }),
          Object.defineProperty(t, "transformFile", {
            enumerable: !0,
            get: function() {
              return p.transformFile;
            },
          }),
          Object.defineProperty(t, "transformFileSync", {
            enumerable: !0,
            get: function() {
              return p.transformFileSync;
            },
          }),
          Object.defineProperty(t, "transformFileAsync", {
            enumerable: !0,
            get: function() {
              return p.transformFileAsync;
            },
          }),
          Object.defineProperty(t, "transformFromAst", {
            enumerable: !0,
            get: function() {
              return g.transformFromAst;
            },
          }),
          Object.defineProperty(t, "transformFromAstSync", {
            enumerable: !0,
            get: function() {
              return g.transformFromAstSync;
            },
          }),
          Object.defineProperty(t, "transformFromAstAsync", {
            enumerable: !0,
            get: function() {
              return g.transformFromAstAsync;
            },
          }),
          Object.defineProperty(t, "parse", {
            enumerable: !0,
            get: function() {
              return f.parse;
            },
          }),
          Object.defineProperty(t, "parseSync", {
            enumerable: !0,
            get: function() {
              return f.parseSync;
            },
          }),
          Object.defineProperty(t, "parseAsync", {
            enumerable: !0,
            get: function() {
              return f.parseAsync;
            },
          }),
          (t.types = t.OptionManager = t.DEFAULT_EXTENSIONS = void 0);
        var a = h(n(139)),
          r = h(n(455)),
          i = n(89),
          o = n(456),
          s = n(197);
        function d() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "types", {
          enumerable: !0,
          get: function() {
            return d();
          },
        });
        var u = n(56),
          l = n(40),
          c = n(464),
          p = n(511),
          g = n(512),
          f = n(513);
        function h(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var R = Object.freeze([".js", ".jsx", ".es6", ".es", ".mjs"]);
        t.DEFAULT_EXTENSIONS = R;
        var y = (function() {
          function e() {}
          return (
            (e.prototype.init = function(e) {
              return (0, l.loadOptions)(e);
            }),
            e
          );
        })();
        t.OptionManager = y;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var a = {
          react: !0,
          assertNode: !0,
          createTypeAnnotationBasedOnTypeof: !0,
          createUnionTypeAnnotation: !0,
          cloneNode: !0,
          clone: !0,
          cloneDeep: !0,
          cloneWithoutLoc: !0,
          addComment: !0,
          addComments: !0,
          inheritInnerComments: !0,
          inheritLeadingComments: !0,
          inheritsComments: !0,
          inheritTrailingComments: !0,
          removeComments: !0,
          ensureBlock: !0,
          toBindingIdentifierName: !0,
          toBlock: !0,
          toComputedKey: !0,
          toExpression: !0,
          toIdentifier: !0,
          toKeyAlias: !0,
          toSequenceExpression: !0,
          toStatement: !0,
          valueToNode: !0,
          appendToMemberExpression: !0,
          inherits: !0,
          prependToMemberExpression: !0,
          removeProperties: !0,
          removePropertiesDeep: !0,
          removeTypeDuplicates: !0,
          getBindingIdentifiers: !0,
          getOuterBindingIdentifiers: !0,
          traverse: !0,
          traverseFast: !0,
          shallowEqual: !0,
          is: !0,
          isBinding: !0,
          isBlockScoped: !0,
          isImmutable: !0,
          isLet: !0,
          isNode: !0,
          isNodesEquivalent: !0,
          isReferenced: !0,
          isScope: !0,
          isSpecifierDefault: !0,
          isType: !0,
          isValidES3Identifier: !0,
          isValidIdentifier: !0,
          isVar: !0,
          matchesPattern: !0,
          validate: !0,
          buildMatchMemberExpression: !0,
        };
        Object.defineProperty(t, "assertNode", {
          enumerable: !0,
          get: function() {
            return s.default;
          },
        }),
          Object.defineProperty(t, "createTypeAnnotationBasedOnTypeof", {
            enumerable: !0,
            get: function() {
              return u.default;
            },
          }),
          Object.defineProperty(t, "createUnionTypeAnnotation", {
            enumerable: !0,
            get: function() {
              return l.default;
            },
          }),
          Object.defineProperty(t, "cloneNode", {
            enumerable: !0,
            get: function() {
              return p.default;
            },
          }),
          Object.defineProperty(t, "clone", {
            enumerable: !0,
            get: function() {
              return g.default;
            },
          }),
          Object.defineProperty(t, "cloneDeep", {
            enumerable: !0,
            get: function() {
              return f.default;
            },
          }),
          Object.defineProperty(t, "cloneWithoutLoc", {
            enumerable: !0,
            get: function() {
              return h.default;
            },
          }),
          Object.defineProperty(t, "addComment", {
            enumerable: !0,
            get: function() {
              return R.default;
            },
          }),
          Object.defineProperty(t, "addComments", {
            enumerable: !0,
            get: function() {
              return y.default;
            },
          }),
          Object.defineProperty(t, "inheritInnerComments", {
            enumerable: !0,
            get: function() {
              return m.default;
            },
          }),
          Object.defineProperty(t, "inheritLeadingComments", {
            enumerable: !0,
            get: function() {
              return v.default;
            },
          }),
          Object.defineProperty(t, "inheritsComments", {
            enumerable: !0,
            get: function() {
              return b.default;
            },
          }),
          Object.defineProperty(t, "inheritTrailingComments", {
            enumerable: !0,
            get: function() {
              return E.default;
            },
          }),
          Object.defineProperty(t, "removeComments", {
            enumerable: !0,
            get: function() {
              return x.default;
            },
          }),
          Object.defineProperty(t, "ensureBlock", {
            enumerable: !0,
            get: function() {
              return _.default;
            },
          }),
          Object.defineProperty(t, "toBindingIdentifierName", {
            enumerable: !0,
            get: function() {
              return T.default;
            },
          }),
          Object.defineProperty(t, "toBlock", {
            enumerable: !0,
            get: function() {
              return P.default;
            },
          }),
          Object.defineProperty(t, "toComputedKey", {
            enumerable: !0,
            get: function() {
              return C.default;
            },
          }),
          Object.defineProperty(t, "toExpression", {
            enumerable: !0,
            get: function() {
              return w.default;
            },
          }),
          Object.defineProperty(t, "toIdentifier", {
            enumerable: !0,
            get: function() {
              return D.default;
            },
          }),
          Object.defineProperty(t, "toKeyAlias", {
            enumerable: !0,
            get: function() {
              return O.default;
            },
          }),
          Object.defineProperty(t, "toSequenceExpression", {
            enumerable: !0,
            get: function() {
              return F.default;
            },
          }),
          Object.defineProperty(t, "toStatement", {
            enumerable: !0,
            get: function() {
              return k.default;
            },
          }),
          Object.defineProperty(t, "valueToNode", {
            enumerable: !0,
            get: function() {
              return j.default;
            },
          }),
          Object.defineProperty(t, "appendToMemberExpression", {
            enumerable: !0,
            get: function() {
              return I.default;
            },
          }),
          Object.defineProperty(t, "inherits", {
            enumerable: !0,
            get: function() {
              return N.default;
            },
          }),
          Object.defineProperty(t, "prependToMemberExpression", {
            enumerable: !0,
            get: function() {
              return B.default;
            },
          }),
          Object.defineProperty(t, "removeProperties", {
            enumerable: !0,
            get: function() {
              return L.default;
            },
          }),
          Object.defineProperty(t, "removePropertiesDeep", {
            enumerable: !0,
            get: function() {
              return U.default;
            },
          }),
          Object.defineProperty(t, "removeTypeDuplicates", {
            enumerable: !0,
            get: function() {
              return V.default;
            },
          }),
          Object.defineProperty(t, "getBindingIdentifiers", {
            enumerable: !0,
            get: function() {
              return W.default;
            },
          }),
          Object.defineProperty(t, "getOuterBindingIdentifiers", {
            enumerable: !0,
            get: function() {
              return G.default;
            },
          }),
          Object.defineProperty(t, "traverse", {
            enumerable: !0,
            get: function() {
              return K.default;
            },
          }),
          Object.defineProperty(t, "traverseFast", {
            enumerable: !0,
            get: function() {
              return H.default;
            },
          }),
          Object.defineProperty(t, "shallowEqual", {
            enumerable: !0,
            get: function() {
              return q.default;
            },
          }),
          Object.defineProperty(t, "is", {
            enumerable: !0,
            get: function() {
              return Y.default;
            },
          }),
          Object.defineProperty(t, "isBinding", {
            enumerable: !0,
            get: function() {
              return J.default;
            },
          }),
          Object.defineProperty(t, "isBlockScoped", {
            enumerable: !0,
            get: function() {
              return X.default;
            },
          }),
          Object.defineProperty(t, "isImmutable", {
            enumerable: !0,
            get: function() {
              return z.default;
            },
          }),
          Object.defineProperty(t, "isLet", {
            enumerable: !0,
            get: function() {
              return $.default;
            },
          }),
          Object.defineProperty(t, "isNode", {
            enumerable: !0,
            get: function() {
              return Q.default;
            },
          }),
          Object.defineProperty(t, "isNodesEquivalent", {
            enumerable: !0,
            get: function() {
              return Z.default;
            },
          }),
          Object.defineProperty(t, "isReferenced", {
            enumerable: !0,
            get: function() {
              return ee.default;
            },
          }),
          Object.defineProperty(t, "isScope", {
            enumerable: !0,
            get: function() {
              return te.default;
            },
          }),
          Object.defineProperty(t, "isSpecifierDefault", {
            enumerable: !0,
            get: function() {
              return ne.default;
            },
          }),
          Object.defineProperty(t, "isType", {
            enumerable: !0,
            get: function() {
              return ae.default;
            },
          }),
          Object.defineProperty(t, "isValidES3Identifier", {
            enumerable: !0,
            get: function() {
              return re.default;
            },
          }),
          Object.defineProperty(t, "isValidIdentifier", {
            enumerable: !0,
            get: function() {
              return ie.default;
            },
          }),
          Object.defineProperty(t, "isVar", {
            enumerable: !0,
            get: function() {
              return oe.default;
            },
          }),
          Object.defineProperty(t, "matchesPattern", {
            enumerable: !0,
            get: function() {
              return se.default;
            },
          }),
          Object.defineProperty(t, "validate", {
            enumerable: !0,
            get: function() {
              return de.default;
            },
          }),
          Object.defineProperty(t, "buildMatchMemberExpression", {
            enumerable: !0,
            get: function() {
              return ue.default;
            },
          }),
          (t.react = void 0);
        var r = ce(n(259)),
          i = ce(n(260)),
          o = ce(n(261)),
          s = ce(n(331)),
          d = n(332);
        Object.keys(d).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            (Object.prototype.hasOwnProperty.call(a, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function() {
                  return d[e];
                },
              }));
        });
        var u = ce(n(333)),
          l = ce(n(334)),
          c = n(8);
        Object.keys(c).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            (Object.prototype.hasOwnProperty.call(a, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function() {
                  return c[e];
                },
              }));
        });
        var p = ce(n(37)),
          g = ce(n(166)),
          f = ce(n(335)),
          h = ce(n(336)),
          R = ce(n(337)),
          y = ce(n(167)),
          m = ce(n(168)),
          v = ce(n(171)),
          b = ce(n(172)),
          E = ce(n(173)),
          x = ce(n(349)),
          A = n(350);
        Object.keys(A).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            (Object.prototype.hasOwnProperty.call(a, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function() {
                  return A[e];
                },
              }));
        });
        var S = n(22);
        Object.keys(S).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            (Object.prototype.hasOwnProperty.call(a, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function() {
                  return S[e];
                },
              }));
        });
        var _ = ce(n(351)),
          T = ce(n(352)),
          P = ce(n(174)),
          C = ce(n(353)),
          w = ce(n(354)),
          D = ce(n(175)),
          O = ce(n(355)),
          F = ce(n(356)),
          k = ce(n(358)),
          j = ce(n(359)),
          M = n(13);
        Object.keys(M).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            (Object.prototype.hasOwnProperty.call(a, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function() {
                  return M[e];
                },
              }));
        });
        var I = ce(n(363)),
          N = ce(n(364)),
          B = ce(n(365)),
          L = ce(n(178)),
          U = ce(n(176)),
          V = ce(n(165)),
          W = ce(n(48)),
          G = ce(n(366)),
          K = ce(n(367)),
          H = ce(n(177)),
          q = ce(n(61)),
          Y = ce(n(76)),
          J = ce(n(368)),
          X = ce(n(369)),
          z = ce(n(370)),
          $ = ce(n(179)),
          Q = ce(n(164)),
          Z = ce(n(371)),
          ee = ce(n(372)),
          te = ce(n(373)),
          ne = ce(n(374)),
          ae = ce(n(77)),
          re = ce(n(375)),
          ie = ce(n(36)),
          oe = ce(n(376)),
          se = ce(n(143)),
          de = ce(n(163)),
          ue = ce(n(142)),
          le = n(5);
        function ce(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.keys(le).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            (Object.prototype.hasOwnProperty.call(a, e) ||
              Object.defineProperty(t, e, {
                enumerable: !0,
                get: function() {
                  return le[e];
                },
              }));
        });
        var pe = {
          isReactComponent: r.default,
          isCompatTag: i.default,
          buildChildren: o.default,
        };
        t.react = pe;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.isArrayExpression = function(e, t) {
            return (
              !!e &&
              ("ArrayExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isAssignmentExpression = function(e, t) {
            return (
              !!e &&
              ("AssignmentExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBinaryExpression = function(e, t) {
            return (
              !!e &&
              ("BinaryExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isInterpreterDirective = function(e, t) {
            return (
              !!e &&
              ("InterpreterDirective" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDirective = function(e, t) {
            return (
              !!e &&
              ("Directive" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDirectiveLiteral = function(e, t) {
            return (
              !!e &&
              ("DirectiveLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBlockStatement = function(e, t) {
            return (
              !!e &&
              ("BlockStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBreakStatement = function(e, t) {
            return (
              !!e &&
              ("BreakStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isCallExpression = function(e, t) {
            return (
              !!e &&
              ("CallExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isCatchClause = function(e, t) {
            return (
              !!e &&
              ("CatchClause" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isConditionalExpression = function(e, t) {
            return (
              !!e &&
              ("ConditionalExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isContinueStatement = function(e, t) {
            return (
              !!e &&
              ("ContinueStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDebuggerStatement = function(e, t) {
            return (
              !!e &&
              ("DebuggerStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDoWhileStatement = function(e, t) {
            return (
              !!e &&
              ("DoWhileStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isEmptyStatement = function(e, t) {
            return (
              !!e &&
              ("EmptyStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExpressionStatement = function(e, t) {
            return (
              !!e &&
              ("ExpressionStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isFile = function(e, t) {
            return (
              !!e &&
              ("File" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isForInStatement = function(e, t) {
            return (
              !!e &&
              ("ForInStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isForStatement = function(e, t) {
            return (
              !!e &&
              ("ForStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isFunctionDeclaration = function(e, t) {
            return (
              !!e &&
              ("FunctionDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isFunctionExpression = function(e, t) {
            return (
              !!e &&
              ("FunctionExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isIdentifier = function(e, t) {
            return (
              !!e &&
              ("Identifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isIfStatement = function(e, t) {
            return (
              !!e &&
              ("IfStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isLabeledStatement = function(e, t) {
            return (
              !!e &&
              ("LabeledStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isStringLiteral = function(e, t) {
            return (
              !!e &&
              ("StringLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNumericLiteral = function(e, t) {
            return (
              !!e &&
              ("NumericLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNullLiteral = function(e, t) {
            return (
              !!e &&
              ("NullLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBooleanLiteral = function(e, t) {
            return (
              !!e &&
              ("BooleanLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isRegExpLiteral = function(e, t) {
            return (
              !!e &&
              ("RegExpLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isLogicalExpression = function(e, t) {
            return (
              !!e &&
              ("LogicalExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isMemberExpression = function(e, t) {
            return (
              !!e &&
              ("MemberExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNewExpression = function(e, t) {
            return (
              !!e &&
              ("NewExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isProgram = function(e, t) {
            return (
              !!e &&
              ("Program" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectExpression = function(e, t) {
            return (
              !!e &&
              ("ObjectExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectMethod = function(e, t) {
            return (
              !!e &&
              ("ObjectMethod" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectProperty = function(e, t) {
            return (
              !!e &&
              ("ObjectProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isRestElement = function(e, t) {
            return (
              !!e &&
              ("RestElement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isReturnStatement = function(e, t) {
            return (
              !!e &&
              ("ReturnStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isSequenceExpression = function(e, t) {
            return (
              !!e &&
              ("SequenceExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isSwitchCase = function(e, t) {
            return (
              !!e &&
              ("SwitchCase" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isSwitchStatement = function(e, t) {
            return (
              !!e &&
              ("SwitchStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isThisExpression = function(e, t) {
            return (
              !!e &&
              ("ThisExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isThrowStatement = function(e, t) {
            return (
              !!e &&
              ("ThrowStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTryStatement = function(e, t) {
            return (
              !!e &&
              ("TryStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isUnaryExpression = function(e, t) {
            return (
              !!e &&
              ("UnaryExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isUpdateExpression = function(e, t) {
            return (
              !!e &&
              ("UpdateExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isVariableDeclaration = function(e, t) {
            return (
              !!e &&
              ("VariableDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isVariableDeclarator = function(e, t) {
            return (
              !!e &&
              ("VariableDeclarator" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isWhileStatement = function(e, t) {
            return (
              !!e &&
              ("WhileStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isWithStatement = function(e, t) {
            return (
              !!e &&
              ("WithStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isAssignmentPattern = function(e, t) {
            return (
              !!e &&
              ("AssignmentPattern" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isArrayPattern = function(e, t) {
            return (
              !!e &&
              ("ArrayPattern" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isArrowFunctionExpression = function(e, t) {
            return (
              !!e &&
              ("ArrowFunctionExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassBody = function(e, t) {
            return (
              !!e &&
              ("ClassBody" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassDeclaration = function(e, t) {
            return (
              !!e &&
              ("ClassDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassExpression = function(e, t) {
            return (
              !!e &&
              ("ClassExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExportAllDeclaration = function(e, t) {
            return (
              !!e &&
              ("ExportAllDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExportDefaultDeclaration = function(e, t) {
            return (
              !!e &&
              ("ExportDefaultDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExportNamedDeclaration = function(e, t) {
            return (
              !!e &&
              ("ExportNamedDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExportSpecifier = function(e, t) {
            return (
              !!e &&
              ("ExportSpecifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isForOfStatement = function(e, t) {
            return (
              !!e &&
              ("ForOfStatement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isImportDeclaration = function(e, t) {
            return (
              !!e &&
              ("ImportDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isImportDefaultSpecifier = function(e, t) {
            return (
              !!e &&
              ("ImportDefaultSpecifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isImportNamespaceSpecifier = function(e, t) {
            return (
              !!e &&
              ("ImportNamespaceSpecifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isImportSpecifier = function(e, t) {
            return (
              !!e &&
              ("ImportSpecifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isMetaProperty = function(e, t) {
            return (
              !!e &&
              ("MetaProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassMethod = function(e, t) {
            return (
              !!e &&
              ("ClassMethod" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectPattern = function(e, t) {
            return (
              !!e &&
              ("ObjectPattern" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isSpreadElement = function(e, t) {
            return (
              !!e &&
              ("SpreadElement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isSuper = function(e, t) {
            return (
              !!e &&
              ("Super" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTaggedTemplateExpression = function(e, t) {
            return (
              !!e &&
              ("TaggedTemplateExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTemplateElement = function(e, t) {
            return (
              !!e &&
              ("TemplateElement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTemplateLiteral = function(e, t) {
            return (
              !!e &&
              ("TemplateLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isYieldExpression = function(e, t) {
            return (
              !!e &&
              ("YieldExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isAnyTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("AnyTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isArrayTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("ArrayTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBooleanTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("BooleanTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBooleanLiteralTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("BooleanLiteralTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNullLiteralTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("NullLiteralTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassImplements = function(e, t) {
            return (
              !!e &&
              ("ClassImplements" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareClass = function(e, t) {
            return (
              !!e &&
              ("DeclareClass" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareFunction = function(e, t) {
            return (
              !!e &&
              ("DeclareFunction" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareInterface = function(e, t) {
            return (
              !!e &&
              ("DeclareInterface" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareModule = function(e, t) {
            return (
              !!e &&
              ("DeclareModule" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareModuleExports = function(e, t) {
            return (
              !!e &&
              ("DeclareModuleExports" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareTypeAlias = function(e, t) {
            return (
              !!e &&
              ("DeclareTypeAlias" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareOpaqueType = function(e, t) {
            return (
              !!e &&
              ("DeclareOpaqueType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareVariable = function(e, t) {
            return (
              !!e &&
              ("DeclareVariable" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareExportDeclaration = function(e, t) {
            return (
              !!e &&
              ("DeclareExportDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclareExportAllDeclaration = function(e, t) {
            return (
              !!e &&
              ("DeclareExportAllDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDeclaredPredicate = function(e, t) {
            return (
              !!e &&
              ("DeclaredPredicate" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExistsTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("ExistsTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isFunctionTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("FunctionTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isFunctionTypeParam = function(e, t) {
            return (
              !!e &&
              ("FunctionTypeParam" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isGenericTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("GenericTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isInferredPredicate = function(e, t) {
            return (
              !!e &&
              ("InferredPredicate" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isInterfaceExtends = function(e, t) {
            return (
              !!e &&
              ("InterfaceExtends" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isInterfaceDeclaration = function(e, t) {
            return (
              !!e &&
              ("InterfaceDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isInterfaceTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("InterfaceTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isIntersectionTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("IntersectionTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isMixedTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("MixedTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isEmptyTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("EmptyTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNullableTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("NullableTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNumberLiteralTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("NumberLiteralTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNumberTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("NumberTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("ObjectTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectTypeInternalSlot = function(e, t) {
            return (
              !!e &&
              ("ObjectTypeInternalSlot" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectTypeCallProperty = function(e, t) {
            return (
              !!e &&
              ("ObjectTypeCallProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectTypeIndexer = function(e, t) {
            return (
              !!e &&
              ("ObjectTypeIndexer" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectTypeProperty = function(e, t) {
            return (
              !!e &&
              ("ObjectTypeProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isObjectTypeSpreadProperty = function(e, t) {
            return (
              !!e &&
              ("ObjectTypeSpreadProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isOpaqueType = function(e, t) {
            return (
              !!e &&
              ("OpaqueType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isQualifiedTypeIdentifier = function(e, t) {
            return (
              !!e &&
              ("QualifiedTypeIdentifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isStringLiteralTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("StringLiteralTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isStringTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("StringTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isThisTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("ThisTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTupleTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("TupleTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeofTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("TypeofTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeAlias = function(e, t) {
            return (
              !!e &&
              ("TypeAlias" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("TypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeCastExpression = function(e, t) {
            return (
              !!e &&
              ("TypeCastExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeParameter = function(e, t) {
            return (
              !!e &&
              ("TypeParameter" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeParameterDeclaration = function(e, t) {
            return (
              !!e &&
              ("TypeParameterDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTypeParameterInstantiation = function(e, t) {
            return (
              !!e &&
              ("TypeParameterInstantiation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isUnionTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("UnionTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isVariance = function(e, t) {
            return (
              !!e &&
              ("Variance" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isVoidTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("VoidTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXAttribute = function(e, t) {
            return (
              !!e &&
              ("JSXAttribute" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXClosingElement = function(e, t) {
            return (
              !!e &&
              ("JSXClosingElement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXElement = function(e, t) {
            return (
              !!e &&
              ("JSXElement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXEmptyExpression = function(e, t) {
            return (
              !!e &&
              ("JSXEmptyExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXExpressionContainer = function(e, t) {
            return (
              !!e &&
              ("JSXExpressionContainer" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXSpreadChild = function(e, t) {
            return (
              !!e &&
              ("JSXSpreadChild" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXIdentifier = function(e, t) {
            return (
              !!e &&
              ("JSXIdentifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXMemberExpression = function(e, t) {
            return (
              !!e &&
              ("JSXMemberExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXNamespacedName = function(e, t) {
            return (
              !!e &&
              ("JSXNamespacedName" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXOpeningElement = function(e, t) {
            return (
              !!e &&
              ("JSXOpeningElement" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXSpreadAttribute = function(e, t) {
            return (
              !!e &&
              ("JSXSpreadAttribute" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXText = function(e, t) {
            return (
              !!e &&
              ("JSXText" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXFragment = function(e, t) {
            return (
              !!e &&
              ("JSXFragment" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXOpeningFragment = function(e, t) {
            return (
              !!e &&
              ("JSXOpeningFragment" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isJSXClosingFragment = function(e, t) {
            return (
              !!e &&
              ("JSXClosingFragment" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isNoop = function(e, t) {
            return (
              !!e &&
              ("Noop" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isParenthesizedExpression = function(e, t) {
            return (
              !!e &&
              ("ParenthesizedExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isAwaitExpression = function(e, t) {
            return (
              !!e &&
              ("AwaitExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBindExpression = function(e, t) {
            return (
              !!e &&
              ("BindExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassProperty = function(e, t) {
            return (
              !!e &&
              ("ClassProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isOptionalMemberExpression = function(e, t) {
            return (
              !!e &&
              ("OptionalMemberExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isOptionalCallExpression = function(e, t) {
            return (
              !!e &&
              ("OptionalCallExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isClassPrivateProperty = function(e, t) {
            return (
              !!e &&
              ("ClassPrivateProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isImport = function(e, t) {
            return (
              !!e &&
              ("Import" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDecorator = function(e, t) {
            return (
              !!e &&
              ("Decorator" === e.type && (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isDoExpression = function(e, t) {
            return (
              !!e &&
              ("DoExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExportDefaultSpecifier = function(e, t) {
            return (
              !!e &&
              ("ExportDefaultSpecifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExportNamespaceSpecifier = function(e, t) {
            return (
              !!e &&
              ("ExportNamespaceSpecifier" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isPrivateName = function(e, t) {
            return (
              !!e &&
              ("PrivateName" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isBigIntLiteral = function(e, t) {
            return (
              !!e &&
              ("BigIntLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSParameterProperty = function(e, t) {
            return (
              !!e &&
              ("TSParameterProperty" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSDeclareFunction = function(e, t) {
            return (
              !!e &&
              ("TSDeclareFunction" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSDeclareMethod = function(e, t) {
            return (
              !!e &&
              ("TSDeclareMethod" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSQualifiedName = function(e, t) {
            return (
              !!e &&
              ("TSQualifiedName" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSCallSignatureDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSCallSignatureDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSConstructSignatureDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSConstructSignatureDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSPropertySignature = function(e, t) {
            return (
              !!e &&
              ("TSPropertySignature" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSMethodSignature = function(e, t) {
            return (
              !!e &&
              ("TSMethodSignature" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSIndexSignature = function(e, t) {
            return (
              !!e &&
              ("TSIndexSignature" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSAnyKeyword = function(e, t) {
            return (
              !!e &&
              ("TSAnyKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSNumberKeyword = function(e, t) {
            return (
              !!e &&
              ("TSNumberKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSObjectKeyword = function(e, t) {
            return (
              !!e &&
              ("TSObjectKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSBooleanKeyword = function(e, t) {
            return (
              !!e &&
              ("TSBooleanKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSStringKeyword = function(e, t) {
            return (
              !!e &&
              ("TSStringKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSSymbolKeyword = function(e, t) {
            return (
              !!e &&
              ("TSSymbolKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSVoidKeyword = function(e, t) {
            return (
              !!e &&
              ("TSVoidKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSUndefinedKeyword = function(e, t) {
            return (
              !!e &&
              ("TSUndefinedKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSNullKeyword = function(e, t) {
            return (
              !!e &&
              ("TSNullKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSNeverKeyword = function(e, t) {
            return (
              !!e &&
              ("TSNeverKeyword" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSThisType = function(e, t) {
            return (
              !!e &&
              ("TSThisType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSFunctionType = function(e, t) {
            return (
              !!e &&
              ("TSFunctionType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSConstructorType = function(e, t) {
            return (
              !!e &&
              ("TSConstructorType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeReference = function(e, t) {
            return (
              !!e &&
              ("TSTypeReference" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypePredicate = function(e, t) {
            return (
              !!e &&
              ("TSTypePredicate" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeQuery = function(e, t) {
            return (
              !!e &&
              ("TSTypeQuery" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeLiteral = function(e, t) {
            return (
              !!e &&
              ("TSTypeLiteral" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSArrayType = function(e, t) {
            return (
              !!e &&
              ("TSArrayType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTupleType = function(e, t) {
            return (
              !!e &&
              ("TSTupleType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSUnionType = function(e, t) {
            return (
              !!e &&
              ("TSUnionType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSIntersectionType = function(e, t) {
            return (
              !!e &&
              ("TSIntersectionType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSConditionalType = function(e, t) {
            return (
              !!e &&
              ("TSConditionalType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSInferType = function(e, t) {
            return (
              !!e &&
              ("TSInferType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSParenthesizedType = function(e, t) {
            return (
              !!e &&
              ("TSParenthesizedType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeOperator = function(e, t) {
            return (
              !!e &&
              ("TSTypeOperator" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSIndexedAccessType = function(e, t) {
            return (
              !!e &&
              ("TSIndexedAccessType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSMappedType = function(e, t) {
            return (
              !!e &&
              ("TSMappedType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSLiteralType = function(e, t) {
            return (
              !!e &&
              ("TSLiteralType" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSExpressionWithTypeArguments = function(e, t) {
            return (
              !!e &&
              ("TSExpressionWithTypeArguments" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSInterfaceDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSInterfaceDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSInterfaceBody = function(e, t) {
            return (
              !!e &&
              ("TSInterfaceBody" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeAliasDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSTypeAliasDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSAsExpression = function(e, t) {
            return (
              !!e &&
              ("TSAsExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeAssertion = function(e, t) {
            return (
              !!e &&
              ("TSTypeAssertion" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSEnumDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSEnumDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSEnumMember = function(e, t) {
            return (
              !!e &&
              ("TSEnumMember" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSModuleDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSModuleDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSModuleBlock = function(e, t) {
            return (
              !!e &&
              ("TSModuleBlock" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSImportEqualsDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSImportEqualsDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSExternalModuleReference = function(e, t) {
            return (
              !!e &&
              ("TSExternalModuleReference" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSNonNullExpression = function(e, t) {
            return (
              !!e &&
              ("TSNonNullExpression" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSExportAssignment = function(e, t) {
            return (
              !!e &&
              ("TSExportAssignment" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSNamespaceExportDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSNamespaceExportDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeAnnotation = function(e, t) {
            return (
              !!e &&
              ("TSTypeAnnotation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeParameterInstantiation = function(e, t) {
            return (
              !!e &&
              ("TSTypeParameterInstantiation" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeParameterDeclaration = function(e, t) {
            return (
              !!e &&
              ("TSTypeParameterDeclaration" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isTSTypeParameter = function(e, t) {
            return (
              !!e &&
              ("TSTypeParameter" === e.type &&
                (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isExpression = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Expression" === n ||
                "ArrayExpression" === n ||
                "AssignmentExpression" === n ||
                "BinaryExpression" === n ||
                "CallExpression" === n ||
                "ConditionalExpression" === n ||
                "FunctionExpression" === n ||
                "Identifier" === n ||
                "StringLiteral" === n ||
                "NumericLiteral" === n ||
                "NullLiteral" === n ||
                "BooleanLiteral" === n ||
                "RegExpLiteral" === n ||
                "LogicalExpression" === n ||
                "MemberExpression" === n ||
                "NewExpression" === n ||
                "ObjectExpression" === n ||
                "SequenceExpression" === n ||
                "ThisExpression" === n ||
                "UnaryExpression" === n ||
                "UpdateExpression" === n ||
                "ArrowFunctionExpression" === n ||
                "ClassExpression" === n ||
                "MetaProperty" === n ||
                "Super" === n ||
                "TaggedTemplateExpression" === n ||
                "TemplateLiteral" === n ||
                "YieldExpression" === n ||
                "TypeCastExpression" === n ||
                "JSXElement" === n ||
                "JSXFragment" === n ||
                "ParenthesizedExpression" === n ||
                "AwaitExpression" === n ||
                "BindExpression" === n ||
                "OptionalMemberExpression" === n ||
                "OptionalCallExpression" === n ||
                "Import" === n ||
                "DoExpression" === n ||
                "BigIntLiteral" === n ||
                "TSAsExpression" === n ||
                "TSTypeAssertion" === n ||
                "TSNonNullExpression" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isBinary = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Binary" === n ||
                "BinaryExpression" === n ||
                "LogicalExpression" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isScopable = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Scopable" === n ||
                "BlockStatement" === n ||
                "CatchClause" === n ||
                "DoWhileStatement" === n ||
                "ForInStatement" === n ||
                "ForStatement" === n ||
                "FunctionDeclaration" === n ||
                "FunctionExpression" === n ||
                "Program" === n ||
                "ObjectMethod" === n ||
                "SwitchStatement" === n ||
                "WhileStatement" === n ||
                "ArrowFunctionExpression" === n ||
                "ClassDeclaration" === n ||
                "ClassExpression" === n ||
                "ForOfStatement" === n ||
                "ClassMethod" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isBlockParent = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("BlockParent" === n ||
                "BlockStatement" === n ||
                "CatchClause" === n ||
                "DoWhileStatement" === n ||
                "ForInStatement" === n ||
                "ForStatement" === n ||
                "FunctionDeclaration" === n ||
                "FunctionExpression" === n ||
                "Program" === n ||
                "ObjectMethod" === n ||
                "SwitchStatement" === n ||
                "WhileStatement" === n ||
                "ArrowFunctionExpression" === n ||
                "ForOfStatement" === n ||
                "ClassMethod" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isBlock = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Block" === n || "BlockStatement" === n || "Program" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isStatement = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Statement" === n ||
                "BlockStatement" === n ||
                "BreakStatement" === n ||
                "ContinueStatement" === n ||
                "DebuggerStatement" === n ||
                "DoWhileStatement" === n ||
                "EmptyStatement" === n ||
                "ExpressionStatement" === n ||
                "ForInStatement" === n ||
                "ForStatement" === n ||
                "FunctionDeclaration" === n ||
                "IfStatement" === n ||
                "LabeledStatement" === n ||
                "ReturnStatement" === n ||
                "SwitchStatement" === n ||
                "ThrowStatement" === n ||
                "TryStatement" === n ||
                "VariableDeclaration" === n ||
                "WhileStatement" === n ||
                "WithStatement" === n ||
                "ClassDeclaration" === n ||
                "ExportAllDeclaration" === n ||
                "ExportDefaultDeclaration" === n ||
                "ExportNamedDeclaration" === n ||
                "ForOfStatement" === n ||
                "ImportDeclaration" === n ||
                "DeclareClass" === n ||
                "DeclareFunction" === n ||
                "DeclareInterface" === n ||
                "DeclareModule" === n ||
                "DeclareModuleExports" === n ||
                "DeclareTypeAlias" === n ||
                "DeclareOpaqueType" === n ||
                "DeclareVariable" === n ||
                "DeclareExportDeclaration" === n ||
                "DeclareExportAllDeclaration" === n ||
                "InterfaceDeclaration" === n ||
                "OpaqueType" === n ||
                "TypeAlias" === n ||
                "TSDeclareFunction" === n ||
                "TSInterfaceDeclaration" === n ||
                "TSTypeAliasDeclaration" === n ||
                "TSEnumDeclaration" === n ||
                "TSModuleDeclaration" === n ||
                "TSImportEqualsDeclaration" === n ||
                "TSExportAssignment" === n ||
                "TSNamespaceExportDeclaration" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isTerminatorless = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Terminatorless" === n ||
                "BreakStatement" === n ||
                "ContinueStatement" === n ||
                "ReturnStatement" === n ||
                "ThrowStatement" === n ||
                "YieldExpression" === n ||
                "AwaitExpression" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isCompletionStatement = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("CompletionStatement" === n ||
                "BreakStatement" === n ||
                "ContinueStatement" === n ||
                "ReturnStatement" === n ||
                "ThrowStatement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isConditional = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Conditional" === n ||
                "ConditionalExpression" === n ||
                "IfStatement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isLoop = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Loop" === n ||
                "DoWhileStatement" === n ||
                "ForInStatement" === n ||
                "ForStatement" === n ||
                "WhileStatement" === n ||
                "ForOfStatement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isWhile = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("While" === n ||
                "DoWhileStatement" === n ||
                "WhileStatement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isExpressionWrapper = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("ExpressionWrapper" === n ||
                "ExpressionStatement" === n ||
                "TypeCastExpression" === n ||
                "ParenthesizedExpression" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFor = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("For" === n ||
                "ForInStatement" === n ||
                "ForStatement" === n ||
                "ForOfStatement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isForXStatement = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("ForXStatement" === n ||
                "ForInStatement" === n ||
                "ForOfStatement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFunction = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Function" === n ||
                "FunctionDeclaration" === n ||
                "FunctionExpression" === n ||
                "ObjectMethod" === n ||
                "ArrowFunctionExpression" === n ||
                "ClassMethod" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFunctionParent = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("FunctionParent" === n ||
                "FunctionDeclaration" === n ||
                "FunctionExpression" === n ||
                "ObjectMethod" === n ||
                "ArrowFunctionExpression" === n ||
                "ClassMethod" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isPureish = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Pureish" === n ||
                "FunctionDeclaration" === n ||
                "FunctionExpression" === n ||
                "StringLiteral" === n ||
                "NumericLiteral" === n ||
                "NullLiteral" === n ||
                "BooleanLiteral" === n ||
                "ArrowFunctionExpression" === n ||
                "ClassDeclaration" === n ||
                "ClassExpression" === n ||
                "BigIntLiteral" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isDeclaration = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Declaration" === n ||
                "FunctionDeclaration" === n ||
                "VariableDeclaration" === n ||
                "ClassDeclaration" === n ||
                "ExportAllDeclaration" === n ||
                "ExportDefaultDeclaration" === n ||
                "ExportNamedDeclaration" === n ||
                "ImportDeclaration" === n ||
                "DeclareClass" === n ||
                "DeclareFunction" === n ||
                "DeclareInterface" === n ||
                "DeclareModule" === n ||
                "DeclareModuleExports" === n ||
                "DeclareTypeAlias" === n ||
                "DeclareOpaqueType" === n ||
                "DeclareVariable" === n ||
                "DeclareExportDeclaration" === n ||
                "DeclareExportAllDeclaration" === n ||
                "InterfaceDeclaration" === n ||
                "OpaqueType" === n ||
                "TypeAlias" === n ||
                "TSDeclareFunction" === n ||
                "TSInterfaceDeclaration" === n ||
                "TSTypeAliasDeclaration" === n ||
                "TSEnumDeclaration" === n ||
                "TSModuleDeclaration" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isPatternLike = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("PatternLike" === n ||
                "Identifier" === n ||
                "RestElement" === n ||
                "AssignmentPattern" === n ||
                "ArrayPattern" === n ||
                "ObjectPattern" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isLVal = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("LVal" === n ||
                "Identifier" === n ||
                "MemberExpression" === n ||
                "RestElement" === n ||
                "AssignmentPattern" === n ||
                "ArrayPattern" === n ||
                "ObjectPattern" === n ||
                "TSParameterProperty" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isTSEntityName = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("TSEntityName" === n ||
                "Identifier" === n ||
                "TSQualifiedName" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isLiteral = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Literal" === n ||
                "StringLiteral" === n ||
                "NumericLiteral" === n ||
                "NullLiteral" === n ||
                "BooleanLiteral" === n ||
                "RegExpLiteral" === n ||
                "TemplateLiteral" === n ||
                "BigIntLiteral" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isImmutable = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Immutable" === n ||
                "StringLiteral" === n ||
                "NumericLiteral" === n ||
                "NullLiteral" === n ||
                "BooleanLiteral" === n ||
                "JSXAttribute" === n ||
                "JSXClosingElement" === n ||
                "JSXElement" === n ||
                "JSXExpressionContainer" === n ||
                "JSXSpreadChild" === n ||
                "JSXOpeningElement" === n ||
                "JSXText" === n ||
                "JSXFragment" === n ||
                "JSXOpeningFragment" === n ||
                "JSXClosingFragment" === n ||
                "BigIntLiteral" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isUserWhitespacable = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("UserWhitespacable" === n ||
                "ObjectMethod" === n ||
                "ObjectProperty" === n ||
                "ObjectTypeInternalSlot" === n ||
                "ObjectTypeCallProperty" === n ||
                "ObjectTypeIndexer" === n ||
                "ObjectTypeProperty" === n ||
                "ObjectTypeSpreadProperty" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isMethod = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Method" === n || "ObjectMethod" === n || "ClassMethod" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isObjectMember = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("ObjectMember" === n ||
                "ObjectMethod" === n ||
                "ObjectProperty" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isProperty = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Property" === n ||
                "ObjectProperty" === n ||
                "ClassProperty" === n ||
                "ClassPrivateProperty" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isUnaryLike = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("UnaryLike" === n ||
                "UnaryExpression" === n ||
                "SpreadElement" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isPattern = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Pattern" === n ||
                "AssignmentPattern" === n ||
                "ArrayPattern" === n ||
                "ObjectPattern" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isClass = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Class" === n ||
                "ClassDeclaration" === n ||
                "ClassExpression" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isModuleDeclaration = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("ModuleDeclaration" === n ||
                "ExportAllDeclaration" === n ||
                "ExportDefaultDeclaration" === n ||
                "ExportNamedDeclaration" === n ||
                "ImportDeclaration" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isExportDeclaration = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("ExportDeclaration" === n ||
                "ExportAllDeclaration" === n ||
                "ExportDefaultDeclaration" === n ||
                "ExportNamedDeclaration" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isModuleSpecifier = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("ModuleSpecifier" === n ||
                "ExportSpecifier" === n ||
                "ImportDefaultSpecifier" === n ||
                "ImportNamespaceSpecifier" === n ||
                "ImportSpecifier" === n ||
                "ExportDefaultSpecifier" === n ||
                "ExportNamespaceSpecifier" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFlow = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Flow" === n ||
                "AnyTypeAnnotation" === n ||
                "ArrayTypeAnnotation" === n ||
                "BooleanTypeAnnotation" === n ||
                "BooleanLiteralTypeAnnotation" === n ||
                "NullLiteralTypeAnnotation" === n ||
                "ClassImplements" === n ||
                "DeclareClass" === n ||
                "DeclareFunction" === n ||
                "DeclareInterface" === n ||
                "DeclareModule" === n ||
                "DeclareModuleExports" === n ||
                "DeclareTypeAlias" === n ||
                "DeclareOpaqueType" === n ||
                "DeclareVariable" === n ||
                "DeclareExportDeclaration" === n ||
                "DeclareExportAllDeclaration" === n ||
                "DeclaredPredicate" === n ||
                "ExistsTypeAnnotation" === n ||
                "FunctionTypeAnnotation" === n ||
                "FunctionTypeParam" === n ||
                "GenericTypeAnnotation" === n ||
                "InferredPredicate" === n ||
                "InterfaceExtends" === n ||
                "InterfaceDeclaration" === n ||
                "InterfaceTypeAnnotation" === n ||
                "IntersectionTypeAnnotation" === n ||
                "MixedTypeAnnotation" === n ||
                "EmptyTypeAnnotation" === n ||
                "NullableTypeAnnotation" === n ||
                "NumberLiteralTypeAnnotation" === n ||
                "NumberTypeAnnotation" === n ||
                "ObjectTypeAnnotation" === n ||
                "ObjectTypeInternalSlot" === n ||
                "ObjectTypeCallProperty" === n ||
                "ObjectTypeIndexer" === n ||
                "ObjectTypeProperty" === n ||
                "ObjectTypeSpreadProperty" === n ||
                "OpaqueType" === n ||
                "QualifiedTypeIdentifier" === n ||
                "StringLiteralTypeAnnotation" === n ||
                "StringTypeAnnotation" === n ||
                "ThisTypeAnnotation" === n ||
                "TupleTypeAnnotation" === n ||
                "TypeofTypeAnnotation" === n ||
                "TypeAlias" === n ||
                "TypeAnnotation" === n ||
                "TypeCastExpression" === n ||
                "TypeParameter" === n ||
                "TypeParameterDeclaration" === n ||
                "TypeParameterInstantiation" === n ||
                "UnionTypeAnnotation" === n ||
                "Variance" === n ||
                "VoidTypeAnnotation" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFlowType = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("FlowType" === n ||
                "AnyTypeAnnotation" === n ||
                "ArrayTypeAnnotation" === n ||
                "BooleanTypeAnnotation" === n ||
                "BooleanLiteralTypeAnnotation" === n ||
                "NullLiteralTypeAnnotation" === n ||
                "ExistsTypeAnnotation" === n ||
                "FunctionTypeAnnotation" === n ||
                "GenericTypeAnnotation" === n ||
                "InterfaceTypeAnnotation" === n ||
                "IntersectionTypeAnnotation" === n ||
                "MixedTypeAnnotation" === n ||
                "EmptyTypeAnnotation" === n ||
                "NullableTypeAnnotation" === n ||
                "NumberLiteralTypeAnnotation" === n ||
                "NumberTypeAnnotation" === n ||
                "ObjectTypeAnnotation" === n ||
                "StringLiteralTypeAnnotation" === n ||
                "StringTypeAnnotation" === n ||
                "ThisTypeAnnotation" === n ||
                "TupleTypeAnnotation" === n ||
                "TypeofTypeAnnotation" === n ||
                "UnionTypeAnnotation" === n ||
                "VoidTypeAnnotation" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFlowBaseAnnotation = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("FlowBaseAnnotation" === n ||
                "AnyTypeAnnotation" === n ||
                "BooleanTypeAnnotation" === n ||
                "NullLiteralTypeAnnotation" === n ||
                "MixedTypeAnnotation" === n ||
                "EmptyTypeAnnotation" === n ||
                "NumberTypeAnnotation" === n ||
                "StringTypeAnnotation" === n ||
                "ThisTypeAnnotation" === n ||
                "VoidTypeAnnotation" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFlowDeclaration = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("FlowDeclaration" === n ||
                "DeclareClass" === n ||
                "DeclareFunction" === n ||
                "DeclareInterface" === n ||
                "DeclareModule" === n ||
                "DeclareModuleExports" === n ||
                "DeclareTypeAlias" === n ||
                "DeclareOpaqueType" === n ||
                "DeclareVariable" === n ||
                "DeclareExportDeclaration" === n ||
                "DeclareExportAllDeclaration" === n ||
                "InterfaceDeclaration" === n ||
                "OpaqueType" === n ||
                "TypeAlias" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isFlowPredicate = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("FlowPredicate" === n ||
                "DeclaredPredicate" === n ||
                "InferredPredicate" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isJSX = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("JSX" === n ||
                "JSXAttribute" === n ||
                "JSXClosingElement" === n ||
                "JSXElement" === n ||
                "JSXEmptyExpression" === n ||
                "JSXExpressionContainer" === n ||
                "JSXSpreadChild" === n ||
                "JSXIdentifier" === n ||
                "JSXMemberExpression" === n ||
                "JSXNamespacedName" === n ||
                "JSXOpeningElement" === n ||
                "JSXSpreadAttribute" === n ||
                "JSXText" === n ||
                "JSXFragment" === n ||
                "JSXOpeningFragment" === n ||
                "JSXClosingFragment" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isPrivate = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("Private" === n ||
                "ClassPrivateProperty" === n ||
                "PrivateName" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isTSTypeElement = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("TSTypeElement" === n ||
                "TSCallSignatureDeclaration" === n ||
                "TSConstructSignatureDeclaration" === n ||
                "TSPropertySignature" === n ||
                "TSMethodSignature" === n ||
                "TSIndexSignature" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isTSType = function(e, t) {
            if (!e) return !1;
            var n = e.type;
            return (
              ("TSType" === n ||
                "TSAnyKeyword" === n ||
                "TSNumberKeyword" === n ||
                "TSObjectKeyword" === n ||
                "TSBooleanKeyword" === n ||
                "TSStringKeyword" === n ||
                "TSSymbolKeyword" === n ||
                "TSVoidKeyword" === n ||
                "TSUndefinedKeyword" === n ||
                "TSNullKeyword" === n ||
                "TSNeverKeyword" === n ||
                "TSThisType" === n ||
                "TSFunctionType" === n ||
                "TSConstructorType" === n ||
                "TSTypeReference" === n ||
                "TSTypePredicate" === n ||
                "TSTypeQuery" === n ||
                "TSTypeLiteral" === n ||
                "TSArrayType" === n ||
                "TSTupleType" === n ||
                "TSUnionType" === n ||
                "TSIntersectionType" === n ||
                "TSConditionalType" === n ||
                "TSInferType" === n ||
                "TSParenthesizedType" === n ||
                "TSTypeOperator" === n ||
                "TSIndexedAccessType" === n ||
                "TSMappedType" === n ||
                "TSLiteralType" === n ||
                "TSExpressionWithTypeArguments" === n) &&
              (void 0 === t || (0, r.default)(e, t))
            );
          }),
          (t.isNumberLiteral = function(e, t) {
            return (
              console.trace(
                "The node type NumberLiteral has been renamed to NumericLiteral"
              ),
              !!e &&
                ("NumberLiteral" === e.type &&
                  (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isRegexLiteral = function(e, t) {
            return (
              console.trace(
                "The node type RegexLiteral has been renamed to RegExpLiteral"
              ),
              !!e &&
                ("RegexLiteral" === e.type &&
                  (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isRestProperty = function(e, t) {
            return (
              console.trace(
                "The node type RestProperty has been renamed to RestElement"
              ),
              !!e &&
                ("RestProperty" === e.type &&
                  (void 0 === t || (0, r.default)(e, t)))
            );
          }),
          (t.isSpreadProperty = function(e, t) {
            return (
              console.trace(
                "The node type SpreadProperty has been renamed to SpreadElement"
              ),
              !!e &&
                ("SpreadProperty" === e.type &&
                  (void 0 === t || (0, r.default)(e, t)))
            );
          });
        var a,
          r = (a = n(61)) && a.__esModule ? a : { default: a };
      },
      function(e, u, t) {
        (function(r) {
          function i(e, t) {
            for (var n = 0, a = e.length - 1; 0 <= a; a--) {
              var r = e[a];
              "." === r
                ? e.splice(a, 1)
                : ".." === r
                  ? (e.splice(a, 1), n++)
                  : n && (e.splice(a, 1), n--);
            }
            if (t) for (; n--; n) e.unshift("..");
            return e;
          }
          var t = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
            o = function(e) {
              return t.exec(e).slice(1);
            };
          function s(e, t) {
            if (e.filter) return e.filter(t);
            for (var n = [], a = 0; a < e.length; a++)
              t(e[a], a, e) && n.push(e[a]);
            return n;
          }
          (u.resolve = function() {
            for (
              var e = "", t = !1, n = arguments.length - 1;
              -1 <= n && !t;
              n--
            ) {
              var a = 0 <= n ? arguments[n] : r.cwd();
              if ("string" != typeof a)
                throw new TypeError(
                  "Arguments to path.resolve must be strings"
                );
              a && ((e = a + "/" + e), (t = "/" === a.charAt(0)));
            }
            return (
              (t ? "/" : "") +
                (e = i(
                  s(e.split("/"), function(e) {
                    return !!e;
                  }),
                  !t
                ).join("/")) || "."
            );
          }),
            (u.normalize = function(e) {
              var t = u.isAbsolute(e),
                n = "/" === a(e, -1);
              return (
                (e = i(
                  s(e.split("/"), function(e) {
                    return !!e;
                  }),
                  !t
                ).join("/")) ||
                  t ||
                  (e = "."),
                e && n && (e += "/"),
                (t ? "/" : "") + e
              );
            }),
            (u.isAbsolute = function(e) {
              return "/" === e.charAt(0);
            }),
            (u.join = function() {
              var e = Array.prototype.slice.call(arguments, 0);
              return u.normalize(
                s(e, function(e, t) {
                  if ("string" != typeof e)
                    throw new TypeError(
                      "Arguments to path.join must be strings"
                    );
                  return e;
                }).join("/")
              );
            }),
            (u.relative = function(e, t) {
              function n(e) {
                for (var t = 0; t < e.length && "" === e[t]; t++);
                for (var n = e.length - 1; 0 <= n && "" === e[n]; n--);
                return n < t ? [] : e.slice(t, n - t + 1);
              }
              (e = u.resolve(e).substr(1)), (t = u.resolve(t).substr(1));
              for (
                var a = n(e.split("/")),
                  r = n(t.split("/")),
                  i = Math.min(a.length, r.length),
                  o = i,
                  s = 0;
                s < i;
                s++
              )
                if (a[s] !== r[s]) {
                  o = s;
                  break;
                }
              var d = [];
              for (s = o; s < a.length; s++) d.push("..");
              return (d = d.concat(r.slice(o))).join("/");
            }),
            (u.sep = "/"),
            (u.delimiter = ":"),
            (u.dirname = function(e) {
              var t = o(e),
                n = t[0],
                a = t[1];
              return n || a
                ? (a && (a = a.substr(0, a.length - 1)), n + a)
                : ".";
            }),
            (u.basename = function(e, t) {
              var n = o(e)[2];
              return (
                t &&
                  n.substr(-1 * t.length) === t &&
                  (n = n.substr(0, n.length - t.length)),
                n
              );
            }),
            (u.extname = function(e) {
              return o(e)[3];
            });
          var a =
            "b" === "ab".substr(-1)
              ? function(e, t, n) {
                  return e.substr(t, n);
                }
              : function(e, t, n) {
                  return t < 0 && (t = e.length + t), e.substr(t, n);
                };
        }.call(this, t(7)));
      },
      function(e, t) {
        var n,
          a,
          r = (e.exports = {});
        function i() {
          throw new Error("setTimeout has not been defined");
        }
        function o() {
          throw new Error("clearTimeout has not been defined");
        }
        function s(t) {
          if (n === setTimeout) return setTimeout(t, 0);
          if ((n === i || !n) && setTimeout)
            return (n = setTimeout), setTimeout(t, 0);
          try {
            return n(t, 0);
          } catch (e) {
            try {
              return n.call(null, t, 0);
            } catch (e) {
              return n.call(this, t, 0);
            }
          }
        }
        !(function() {
          try {
            n = "function" == typeof setTimeout ? setTimeout : i;
          } catch (e) {
            n = i;
          }
          try {
            a = "function" == typeof clearTimeout ? clearTimeout : o;
          } catch (e) {
            a = o;
          }
        })();
        var d,
          u = [],
          l = !1,
          c = -1;
        function p() {
          l &&
            d &&
            ((l = !1),
            d.length ? (u = d.concat(u)) : (c = -1),
            u.length && g());
        }
        function g() {
          if (!l) {
            var e = s(p);
            l = !0;
            for (var t = u.length; t; ) {
              for (d = u, u = []; ++c < t; ) d && d[c].run();
              (c = -1), (t = u.length);
            }
            (d = null),
              (l = !1),
              (function(t) {
                if (a === clearTimeout) return clearTimeout(t);
                if ((a === o || !a) && clearTimeout)
                  return (a = clearTimeout), clearTimeout(t);
                try {
                  a(t);
                } catch (e) {
                  try {
                    return a.call(null, t);
                  } catch (e) {
                    return a.call(this, t);
                  }
                }
              })(e);
          }
        }
        function f(e, t) {
          (this.fun = e), (this.array = t);
        }
        function h() {}
        (r.nextTick = function(e) {
          var t = new Array(arguments.length - 1);
          if (1 < arguments.length)
            for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
          u.push(new f(e, t)), 1 !== u.length || l || s(g);
        }),
          (f.prototype.run = function() {
            this.fun.apply(null, this.array);
          }),
          (r.title = "browser"),
          (r.browser = !0),
          (r.env = {}),
          (r.argv = []),
          (r.version = ""),
          (r.versions = {}),
          (r.on = h),
          (r.addListener = h),
          (r.once = h),
          (r.off = h),
          (r.removeListener = h),
          (r.removeAllListeners = h),
          (r.emit = h),
          (r.prependListener = h),
          (r.prependOnceListener = h),
          (r.listeners = function(e) {
            return [];
          }),
          (r.binding = function(e) {
            throw new Error("process.binding is not supported");
          }),
          (r.cwd = function() {
            return "/";
          }),
          (r.chdir = function(e) {
            throw new Error("process.chdir is not supported");
          }),
          (r.umask = function() {
            return 0;
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.arrayExpression = t.ArrayExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ArrayExpression"].concat(t));
          }),
          (t.assignmentExpression = t.AssignmentExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["AssignmentExpression"].concat(t));
          }),
          (t.binaryExpression = t.BinaryExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BinaryExpression"].concat(t));
          }),
          (t.interpreterDirective = t.InterpreterDirective = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["InterpreterDirective"].concat(t));
          }),
          (t.directive = t.Directive = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Directive"].concat(t));
          }),
          (t.directiveLiteral = t.DirectiveLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DirectiveLiteral"].concat(t));
          }),
          (t.blockStatement = t.BlockStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BlockStatement"].concat(t));
          }),
          (t.breakStatement = t.BreakStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BreakStatement"].concat(t));
          }),
          (t.callExpression = t.CallExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["CallExpression"].concat(t));
          }),
          (t.catchClause = t.CatchClause = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["CatchClause"].concat(t));
          }),
          (t.conditionalExpression = t.ConditionalExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ConditionalExpression"].concat(t));
          }),
          (t.continueStatement = t.ContinueStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ContinueStatement"].concat(t));
          }),
          (t.debuggerStatement = t.DebuggerStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DebuggerStatement"].concat(t));
          }),
          (t.doWhileStatement = t.DoWhileStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DoWhileStatement"].concat(t));
          }),
          (t.emptyStatement = t.EmptyStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["EmptyStatement"].concat(t));
          }),
          (t.expressionStatement = t.ExpressionStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ExpressionStatement"].concat(t));
          }),
          (t.file = t.File = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["File"].concat(t));
          }),
          (t.forInStatement = t.ForInStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ForInStatement"].concat(t));
          }),
          (t.forStatement = t.ForStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ForStatement"].concat(t));
          }),
          (t.functionDeclaration = t.FunctionDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["FunctionDeclaration"].concat(t));
          }),
          (t.functionExpression = t.FunctionExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["FunctionExpression"].concat(t));
          }),
          (t.identifier = t.Identifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Identifier"].concat(t));
          }),
          (t.ifStatement = t.IfStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["IfStatement"].concat(t));
          }),
          (t.labeledStatement = t.LabeledStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["LabeledStatement"].concat(t));
          }),
          (t.stringLiteral = t.StringLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["StringLiteral"].concat(t));
          }),
          (t.numericLiteral = t.NumericLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["NumericLiteral"].concat(t));
          }),
          (t.nullLiteral = t.NullLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["NullLiteral"].concat(t));
          }),
          (t.booleanLiteral = t.BooleanLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BooleanLiteral"].concat(t));
          }),
          (t.regExpLiteral = t.RegExpLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["RegExpLiteral"].concat(t));
          }),
          (t.logicalExpression = t.LogicalExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["LogicalExpression"].concat(t));
          }),
          (t.memberExpression = t.MemberExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["MemberExpression"].concat(t));
          }),
          (t.newExpression = t.NewExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["NewExpression"].concat(t));
          }),
          (t.program = t.Program = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Program"].concat(t));
          }),
          (t.objectExpression = t.ObjectExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectExpression"].concat(t));
          }),
          (t.objectMethod = t.ObjectMethod = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectMethod"].concat(t));
          }),
          (t.objectProperty = t.ObjectProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectProperty"].concat(t));
          }),
          (t.restElement = t.RestElement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["RestElement"].concat(t));
          }),
          (t.returnStatement = t.ReturnStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ReturnStatement"].concat(t));
          }),
          (t.sequenceExpression = t.SequenceExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["SequenceExpression"].concat(t));
          }),
          (t.switchCase = t.SwitchCase = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["SwitchCase"].concat(t));
          }),
          (t.switchStatement = t.SwitchStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["SwitchStatement"].concat(t));
          }),
          (t.thisExpression = t.ThisExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ThisExpression"].concat(t));
          }),
          (t.throwStatement = t.ThrowStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ThrowStatement"].concat(t));
          }),
          (t.tryStatement = t.TryStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TryStatement"].concat(t));
          }),
          (t.unaryExpression = t.UnaryExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["UnaryExpression"].concat(t));
          }),
          (t.updateExpression = t.UpdateExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["UpdateExpression"].concat(t));
          }),
          (t.variableDeclaration = t.VariableDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["VariableDeclaration"].concat(t));
          }),
          (t.variableDeclarator = t.VariableDeclarator = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["VariableDeclarator"].concat(t));
          }),
          (t.whileStatement = t.WhileStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["WhileStatement"].concat(t));
          }),
          (t.withStatement = t.WithStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["WithStatement"].concat(t));
          }),
          (t.assignmentPattern = t.AssignmentPattern = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["AssignmentPattern"].concat(t));
          }),
          (t.arrayPattern = t.ArrayPattern = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ArrayPattern"].concat(t));
          }),
          (t.arrowFunctionExpression = t.ArrowFunctionExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ArrowFunctionExpression"].concat(t)
            );
          }),
          (t.classBody = t.ClassBody = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassBody"].concat(t));
          }),
          (t.classDeclaration = t.ClassDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassDeclaration"].concat(t));
          }),
          (t.classExpression = t.ClassExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassExpression"].concat(t));
          }),
          (t.exportAllDeclaration = t.ExportAllDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ExportAllDeclaration"].concat(t));
          }),
          (t.exportDefaultDeclaration = t.ExportDefaultDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ExportDefaultDeclaration"].concat(t)
            );
          }),
          (t.exportNamedDeclaration = t.ExportNamedDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ExportNamedDeclaration"].concat(t)
            );
          }),
          (t.exportSpecifier = t.ExportSpecifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ExportSpecifier"].concat(t));
          }),
          (t.forOfStatement = t.ForOfStatement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ForOfStatement"].concat(t));
          }),
          (t.importDeclaration = t.ImportDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ImportDeclaration"].concat(t));
          }),
          (t.importDefaultSpecifier = t.ImportDefaultSpecifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ImportDefaultSpecifier"].concat(t)
            );
          }),
          (t.importNamespaceSpecifier = t.ImportNamespaceSpecifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ImportNamespaceSpecifier"].concat(t)
            );
          }),
          (t.importSpecifier = t.ImportSpecifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ImportSpecifier"].concat(t));
          }),
          (t.metaProperty = t.MetaProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["MetaProperty"].concat(t));
          }),
          (t.classMethod = t.ClassMethod = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassMethod"].concat(t));
          }),
          (t.objectPattern = t.ObjectPattern = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectPattern"].concat(t));
          }),
          (t.spreadElement = t.SpreadElement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["SpreadElement"].concat(t));
          }),
          (t.super = t.Super = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Super"].concat(t));
          }),
          (t.taggedTemplateExpression = t.TaggedTemplateExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TaggedTemplateExpression"].concat(t)
            );
          }),
          (t.templateElement = t.TemplateElement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TemplateElement"].concat(t));
          }),
          (t.templateLiteral = t.TemplateLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TemplateLiteral"].concat(t));
          }),
          (t.yieldExpression = t.YieldExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["YieldExpression"].concat(t));
          }),
          (t.anyTypeAnnotation = t.AnyTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["AnyTypeAnnotation"].concat(t));
          }),
          (t.arrayTypeAnnotation = t.ArrayTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ArrayTypeAnnotation"].concat(t));
          }),
          (t.booleanTypeAnnotation = t.BooleanTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BooleanTypeAnnotation"].concat(t));
          }),
          (t.booleanLiteralTypeAnnotation = t.BooleanLiteralTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["BooleanLiteralTypeAnnotation"].concat(t)
            );
          }),
          (t.nullLiteralTypeAnnotation = t.NullLiteralTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["NullLiteralTypeAnnotation"].concat(t)
            );
          }),
          (t.classImplements = t.ClassImplements = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassImplements"].concat(t));
          }),
          (t.declareClass = t.DeclareClass = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareClass"].concat(t));
          }),
          (t.declareFunction = t.DeclareFunction = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareFunction"].concat(t));
          }),
          (t.declareInterface = t.DeclareInterface = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareInterface"].concat(t));
          }),
          (t.declareModule = t.DeclareModule = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareModule"].concat(t));
          }),
          (t.declareModuleExports = t.DeclareModuleExports = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareModuleExports"].concat(t));
          }),
          (t.declareTypeAlias = t.DeclareTypeAlias = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareTypeAlias"].concat(t));
          }),
          (t.declareOpaqueType = t.DeclareOpaqueType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareOpaqueType"].concat(t));
          }),
          (t.declareVariable = t.DeclareVariable = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclareVariable"].concat(t));
          }),
          (t.declareExportDeclaration = t.DeclareExportDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["DeclareExportDeclaration"].concat(t)
            );
          }),
          (t.declareExportAllDeclaration = t.DeclareExportAllDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["DeclareExportAllDeclaration"].concat(t)
            );
          }),
          (t.declaredPredicate = t.DeclaredPredicate = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DeclaredPredicate"].concat(t));
          }),
          (t.existsTypeAnnotation = t.ExistsTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ExistsTypeAnnotation"].concat(t));
          }),
          (t.functionTypeAnnotation = t.FunctionTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["FunctionTypeAnnotation"].concat(t)
            );
          }),
          (t.functionTypeParam = t.FunctionTypeParam = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["FunctionTypeParam"].concat(t));
          }),
          (t.genericTypeAnnotation = t.GenericTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["GenericTypeAnnotation"].concat(t));
          }),
          (t.inferredPredicate = t.InferredPredicate = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["InferredPredicate"].concat(t));
          }),
          (t.interfaceExtends = t.InterfaceExtends = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["InterfaceExtends"].concat(t));
          }),
          (t.interfaceDeclaration = t.InterfaceDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["InterfaceDeclaration"].concat(t));
          }),
          (t.interfaceTypeAnnotation = t.InterfaceTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["InterfaceTypeAnnotation"].concat(t)
            );
          }),
          (t.intersectionTypeAnnotation = t.IntersectionTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["IntersectionTypeAnnotation"].concat(t)
            );
          }),
          (t.mixedTypeAnnotation = t.MixedTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["MixedTypeAnnotation"].concat(t));
          }),
          (t.emptyTypeAnnotation = t.EmptyTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["EmptyTypeAnnotation"].concat(t));
          }),
          (t.nullableTypeAnnotation = t.NullableTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["NullableTypeAnnotation"].concat(t)
            );
          }),
          (t.numberLiteralTypeAnnotation = t.NumberLiteralTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["NumberLiteralTypeAnnotation"].concat(t)
            );
          }),
          (t.numberTypeAnnotation = t.NumberTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["NumberTypeAnnotation"].concat(t));
          }),
          (t.objectTypeAnnotation = t.ObjectTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectTypeAnnotation"].concat(t));
          }),
          (t.objectTypeInternalSlot = t.ObjectTypeInternalSlot = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ObjectTypeInternalSlot"].concat(t)
            );
          }),
          (t.objectTypeCallProperty = t.ObjectTypeCallProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ObjectTypeCallProperty"].concat(t)
            );
          }),
          (t.objectTypeIndexer = t.ObjectTypeIndexer = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectTypeIndexer"].concat(t));
          }),
          (t.objectTypeProperty = t.ObjectTypeProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ObjectTypeProperty"].concat(t));
          }),
          (t.objectTypeSpreadProperty = t.ObjectTypeSpreadProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ObjectTypeSpreadProperty"].concat(t)
            );
          }),
          (t.opaqueType = t.OpaqueType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["OpaqueType"].concat(t));
          }),
          (t.qualifiedTypeIdentifier = t.QualifiedTypeIdentifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["QualifiedTypeIdentifier"].concat(t)
            );
          }),
          (t.stringLiteralTypeAnnotation = t.StringLiteralTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["StringLiteralTypeAnnotation"].concat(t)
            );
          }),
          (t.stringTypeAnnotation = t.StringTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["StringTypeAnnotation"].concat(t));
          }),
          (t.thisTypeAnnotation = t.ThisTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ThisTypeAnnotation"].concat(t));
          }),
          (t.tupleTypeAnnotation = t.TupleTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TupleTypeAnnotation"].concat(t));
          }),
          (t.typeofTypeAnnotation = t.TypeofTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TypeofTypeAnnotation"].concat(t));
          }),
          (t.typeAlias = t.TypeAlias = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TypeAlias"].concat(t));
          }),
          (t.typeAnnotation = t.TypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TypeAnnotation"].concat(t));
          }),
          (t.typeCastExpression = t.TypeCastExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TypeCastExpression"].concat(t));
          }),
          (t.typeParameter = t.TypeParameter = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TypeParameter"].concat(t));
          }),
          (t.typeParameterDeclaration = t.TypeParameterDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TypeParameterDeclaration"].concat(t)
            );
          }),
          (t.typeParameterInstantiation = t.TypeParameterInstantiation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TypeParameterInstantiation"].concat(t)
            );
          }),
          (t.unionTypeAnnotation = t.UnionTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["UnionTypeAnnotation"].concat(t));
          }),
          (t.variance = t.Variance = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Variance"].concat(t));
          }),
          (t.voidTypeAnnotation = t.VoidTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["VoidTypeAnnotation"].concat(t));
          }),
          (t.jSXAttribute = t.jsxAttribute = t.JSXAttribute = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXAttribute"].concat(t));
          }),
          (t.jSXClosingElement = t.jsxClosingElement = t.JSXClosingElement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXClosingElement"].concat(t));
          }),
          (t.jSXElement = t.jsxElement = t.JSXElement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXElement"].concat(t));
          }),
          (t.jSXEmptyExpression = t.jsxEmptyExpression = t.JSXEmptyExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXEmptyExpression"].concat(t));
          }),
          (t.jSXExpressionContainer = t.jsxExpressionContainer = t.JSXExpressionContainer = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["JSXExpressionContainer"].concat(t)
            );
          }),
          (t.jSXSpreadChild = t.jsxSpreadChild = t.JSXSpreadChild = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXSpreadChild"].concat(t));
          }),
          (t.jSXIdentifier = t.jsxIdentifier = t.JSXIdentifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXIdentifier"].concat(t));
          }),
          (t.jSXMemberExpression = t.jsxMemberExpression = t.JSXMemberExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXMemberExpression"].concat(t));
          }),
          (t.jSXNamespacedName = t.jsxNamespacedName = t.JSXNamespacedName = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXNamespacedName"].concat(t));
          }),
          (t.jSXOpeningElement = t.jsxOpeningElement = t.JSXOpeningElement = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXOpeningElement"].concat(t));
          }),
          (t.jSXSpreadAttribute = t.jsxSpreadAttribute = t.JSXSpreadAttribute = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXSpreadAttribute"].concat(t));
          }),
          (t.jSXText = t.jsxText = t.JSXText = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXText"].concat(t));
          }),
          (t.jSXFragment = t.jsxFragment = t.JSXFragment = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXFragment"].concat(t));
          }),
          (t.jSXOpeningFragment = t.jsxOpeningFragment = t.JSXOpeningFragment = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXOpeningFragment"].concat(t));
          }),
          (t.jSXClosingFragment = t.jsxClosingFragment = t.JSXClosingFragment = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["JSXClosingFragment"].concat(t));
          }),
          (t.noop = t.Noop = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Noop"].concat(t));
          }),
          (t.parenthesizedExpression = t.ParenthesizedExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ParenthesizedExpression"].concat(t)
            );
          }),
          (t.awaitExpression = t.AwaitExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["AwaitExpression"].concat(t));
          }),
          (t.bindExpression = t.BindExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BindExpression"].concat(t));
          }),
          (t.classProperty = t.ClassProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassProperty"].concat(t));
          }),
          (t.optionalMemberExpression = t.OptionalMemberExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["OptionalMemberExpression"].concat(t)
            );
          }),
          (t.optionalCallExpression = t.OptionalCallExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["OptionalCallExpression"].concat(t)
            );
          }),
          (t.classPrivateProperty = t.ClassPrivateProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["ClassPrivateProperty"].concat(t));
          }),
          (t.import = t.Import = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Import"].concat(t));
          }),
          (t.decorator = t.Decorator = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["Decorator"].concat(t));
          }),
          (t.doExpression = t.DoExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["DoExpression"].concat(t));
          }),
          (t.exportDefaultSpecifier = t.ExportDefaultSpecifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ExportDefaultSpecifier"].concat(t)
            );
          }),
          (t.exportNamespaceSpecifier = t.ExportNamespaceSpecifier = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["ExportNamespaceSpecifier"].concat(t)
            );
          }),
          (t.privateName = t.PrivateName = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["PrivateName"].concat(t));
          }),
          (t.bigIntLiteral = t.BigIntLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["BigIntLiteral"].concat(t));
          }),
          (t.tSParameterProperty = t.tsParameterProperty = t.TSParameterProperty = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSParameterProperty"].concat(t));
          }),
          (t.tSDeclareFunction = t.tsDeclareFunction = t.TSDeclareFunction = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSDeclareFunction"].concat(t));
          }),
          (t.tSDeclareMethod = t.tsDeclareMethod = t.TSDeclareMethod = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSDeclareMethod"].concat(t));
          }),
          (t.tSQualifiedName = t.tsQualifiedName = t.TSQualifiedName = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSQualifiedName"].concat(t));
          }),
          (t.tSCallSignatureDeclaration = t.tsCallSignatureDeclaration = t.TSCallSignatureDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSCallSignatureDeclaration"].concat(t)
            );
          }),
          (t.tSConstructSignatureDeclaration = t.tsConstructSignatureDeclaration = t.TSConstructSignatureDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSConstructSignatureDeclaration"].concat(t)
            );
          }),
          (t.tSPropertySignature = t.tsPropertySignature = t.TSPropertySignature = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSPropertySignature"].concat(t));
          }),
          (t.tSMethodSignature = t.tsMethodSignature = t.TSMethodSignature = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSMethodSignature"].concat(t));
          }),
          (t.tSIndexSignature = t.tsIndexSignature = t.TSIndexSignature = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSIndexSignature"].concat(t));
          }),
          (t.tSAnyKeyword = t.tsAnyKeyword = t.TSAnyKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSAnyKeyword"].concat(t));
          }),
          (t.tSNumberKeyword = t.tsNumberKeyword = t.TSNumberKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSNumberKeyword"].concat(t));
          }),
          (t.tSObjectKeyword = t.tsObjectKeyword = t.TSObjectKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSObjectKeyword"].concat(t));
          }),
          (t.tSBooleanKeyword = t.tsBooleanKeyword = t.TSBooleanKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSBooleanKeyword"].concat(t));
          }),
          (t.tSStringKeyword = t.tsStringKeyword = t.TSStringKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSStringKeyword"].concat(t));
          }),
          (t.tSSymbolKeyword = t.tsSymbolKeyword = t.TSSymbolKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSSymbolKeyword"].concat(t));
          }),
          (t.tSVoidKeyword = t.tsVoidKeyword = t.TSVoidKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSVoidKeyword"].concat(t));
          }),
          (t.tSUndefinedKeyword = t.tsUndefinedKeyword = t.TSUndefinedKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSUndefinedKeyword"].concat(t));
          }),
          (t.tSNullKeyword = t.tsNullKeyword = t.TSNullKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSNullKeyword"].concat(t));
          }),
          (t.tSNeverKeyword = t.tsNeverKeyword = t.TSNeverKeyword = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSNeverKeyword"].concat(t));
          }),
          (t.tSThisType = t.tsThisType = t.TSThisType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSThisType"].concat(t));
          }),
          (t.tSFunctionType = t.tsFunctionType = t.TSFunctionType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSFunctionType"].concat(t));
          }),
          (t.tSConstructorType = t.tsConstructorType = t.TSConstructorType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSConstructorType"].concat(t));
          }),
          (t.tSTypeReference = t.tsTypeReference = t.TSTypeReference = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeReference"].concat(t));
          }),
          (t.tSTypePredicate = t.tsTypePredicate = t.TSTypePredicate = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypePredicate"].concat(t));
          }),
          (t.tSTypeQuery = t.tsTypeQuery = t.TSTypeQuery = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeQuery"].concat(t));
          }),
          (t.tSTypeLiteral = t.tsTypeLiteral = t.TSTypeLiteral = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeLiteral"].concat(t));
          }),
          (t.tSArrayType = t.tsArrayType = t.TSArrayType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSArrayType"].concat(t));
          }),
          (t.tSTupleType = t.tsTupleType = t.TSTupleType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTupleType"].concat(t));
          }),
          (t.tSUnionType = t.tsUnionType = t.TSUnionType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSUnionType"].concat(t));
          }),
          (t.tSIntersectionType = t.tsIntersectionType = t.TSIntersectionType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSIntersectionType"].concat(t));
          }),
          (t.tSConditionalType = t.tsConditionalType = t.TSConditionalType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSConditionalType"].concat(t));
          }),
          (t.tSInferType = t.tsInferType = t.TSInferType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSInferType"].concat(t));
          }),
          (t.tSParenthesizedType = t.tsParenthesizedType = t.TSParenthesizedType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSParenthesizedType"].concat(t));
          }),
          (t.tSTypeOperator = t.tsTypeOperator = t.TSTypeOperator = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeOperator"].concat(t));
          }),
          (t.tSIndexedAccessType = t.tsIndexedAccessType = t.TSIndexedAccessType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSIndexedAccessType"].concat(t));
          }),
          (t.tSMappedType = t.tsMappedType = t.TSMappedType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSMappedType"].concat(t));
          }),
          (t.tSLiteralType = t.tsLiteralType = t.TSLiteralType = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSLiteralType"].concat(t));
          }),
          (t.tSExpressionWithTypeArguments = t.tsExpressionWithTypeArguments = t.TSExpressionWithTypeArguments = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSExpressionWithTypeArguments"].concat(t)
            );
          }),
          (t.tSInterfaceDeclaration = t.tsInterfaceDeclaration = t.TSInterfaceDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSInterfaceDeclaration"].concat(t)
            );
          }),
          (t.tSInterfaceBody = t.tsInterfaceBody = t.TSInterfaceBody = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSInterfaceBody"].concat(t));
          }),
          (t.tSTypeAliasDeclaration = t.tsTypeAliasDeclaration = t.TSTypeAliasDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSTypeAliasDeclaration"].concat(t)
            );
          }),
          (t.tSAsExpression = t.tsAsExpression = t.TSAsExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSAsExpression"].concat(t));
          }),
          (t.tSTypeAssertion = t.tsTypeAssertion = t.TSTypeAssertion = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeAssertion"].concat(t));
          }),
          (t.tSEnumDeclaration = t.tsEnumDeclaration = t.TSEnumDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSEnumDeclaration"].concat(t));
          }),
          (t.tSEnumMember = t.tsEnumMember = t.TSEnumMember = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSEnumMember"].concat(t));
          }),
          (t.tSModuleDeclaration = t.tsModuleDeclaration = t.TSModuleDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSModuleDeclaration"].concat(t));
          }),
          (t.tSModuleBlock = t.tsModuleBlock = t.TSModuleBlock = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSModuleBlock"].concat(t));
          }),
          (t.tSImportEqualsDeclaration = t.tsImportEqualsDeclaration = t.TSImportEqualsDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSImportEqualsDeclaration"].concat(t)
            );
          }),
          (t.tSExternalModuleReference = t.tsExternalModuleReference = t.TSExternalModuleReference = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSExternalModuleReference"].concat(t)
            );
          }),
          (t.tSNonNullExpression = t.tsNonNullExpression = t.TSNonNullExpression = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSNonNullExpression"].concat(t));
          }),
          (t.tSExportAssignment = t.tsExportAssignment = t.TSExportAssignment = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSExportAssignment"].concat(t));
          }),
          (t.tSNamespaceExportDeclaration = t.tsNamespaceExportDeclaration = t.TSNamespaceExportDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSNamespaceExportDeclaration"].concat(t)
            );
          }),
          (t.tSTypeAnnotation = t.tsTypeAnnotation = t.TSTypeAnnotation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeAnnotation"].concat(t));
          }),
          (t.tSTypeParameterInstantiation = t.tsTypeParameterInstantiation = t.TSTypeParameterInstantiation = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSTypeParameterInstantiation"].concat(t)
            );
          }),
          (t.tSTypeParameterDeclaration = t.tsTypeParameterDeclaration = t.TSTypeParameterDeclaration = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(
              void 0,
              ["TSTypeParameterDeclaration"].concat(t)
            );
          }),
          (t.tSTypeParameter = t.tsTypeParameter = t.TSTypeParameter = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
              t[n] = arguments[n];
            return r.default.apply(void 0, ["TSTypeParameter"].concat(t));
          }),
          (t.numberLiteral = t.NumberLiteral = function e() {
            console.trace(
              "The node type NumberLiteral has been renamed to NumericLiteral"
            );
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
              n[a] = arguments[a];
            return e.apply(void 0, ["NumberLiteral"].concat(n));
          }),
          (t.regexLiteral = t.RegexLiteral = function e() {
            console.trace(
              "The node type RegexLiteral has been renamed to RegExpLiteral"
            );
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
              n[a] = arguments[a];
            return e.apply(void 0, ["RegexLiteral"].concat(n));
          }),
          (t.restProperty = t.RestProperty = function e() {
            console.trace(
              "The node type RestProperty has been renamed to RestElement"
            );
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
              n[a] = arguments[a];
            return e.apply(void 0, ["RestProperty"].concat(n));
          }),
          (t.spreadProperty = t.SpreadProperty = function e() {
            console.trace(
              "The node type SpreadProperty has been renamed to SpreadElement"
            );
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
              n[a] = arguments[a];
            return e.apply(void 0, ["SpreadProperty"].concat(n));
          });
        var a,
          r = (a = n(263)) && a.__esModule ? a : { default: a };
      },
      function(e, t) {
        var n = Array.isArray;
        e.exports = n;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = c),
          Object.defineProperty(t, "NodePath", {
            enumerable: !0,
            get: function() {
              return o.default;
            },
          }),
          Object.defineProperty(t, "Scope", {
            enumerable: !0,
            get: function() {
              return s.default;
            },
          }),
          Object.defineProperty(t, "Hub", {
            enumerable: !0,
            get: function() {
              return d.default;
            },
          }),
          (t.visitors = void 0);
        var g = l(n(258)),
          i = u(n(452));
        function r() {
          var e = l(n(82));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function f() {
          var e = u(n(4));
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        t.visitors = i;
        var a = u(n(53)),
          o = l(n(25)),
          s = l(n(181)),
          d = l(n(453));
        function u(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function c(e, t, n, a, r) {
          if (e) {
            if (
              (t || (t = {}),
              !t.noScope && !n && "Program" !== e.type && "File" !== e.type)
            )
              throw new Error(
                "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a " +
                  e.type +
                  " node without passing scope and parentPath."
              );
            i.explode(t), c.node(e, t, n, a, r);
          }
        }
        function p(e, t) {
          e.node.type === t.type && ((t.has = !0), e.stop());
        }
        (c.visitors = i),
          (c.verify = i.verify),
          (c.explode = i.explode),
          (c.cheap = function(e, t) {
            return f().traverseFast(e, t);
          }),
          (c.node = function(e, t, n, a, r, i) {
            var o = f().VISITOR_KEYS[e.type];
            if (o) {
              var s = new g.default(n, t, a, r),
                d = o,
                u = Array.isArray(d),
                l = 0;
              for (d = u ? d : d[Symbol.iterator](); ; ) {
                var c;
                if (u) {
                  if (l >= d.length) break;
                  c = d[l++];
                } else {
                  if ((l = d.next()).done) break;
                  c = l.value;
                }
                var p = c;
                if ((!i || !i[p]) && s.visit(e, p)) return;
              }
            }
          }),
          (c.clearNode = function(e, t) {
            f().removeProperties(e, t), a.path.delete(e);
          }),
          (c.removeProperties = function(e, t) {
            return f().traverseFast(e, c.clearNode, t), e;
          }),
          (c.hasType = function(e, t, n) {
            if ((0, r().default)(n, e.type)) return !1;
            if (e.type === t) return !0;
            var a = { has: !1, type: t };
            return (
              c(e, { noScope: !0, blacklist: n, enter: p }, null, a), a.has
            );
          }),
          (c.cache = a);
      },
      function(e, t, n) {
        var a = n(147),
          r = "object" == typeof self && self && self.Object === Object && self,
          i = a || r || Function("return this")();
        e.exports = i;
      },
      function(e, t) {
        e.exports = function(e) {
          return null != e && "object" == typeof e;
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(323)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "VISITOR_KEYS", {
            enumerable: !0,
            get: function() {
              return r.VISITOR_KEYS;
            },
          }),
          Object.defineProperty(t, "ALIAS_KEYS", {
            enumerable: !0,
            get: function() {
              return r.ALIAS_KEYS;
            },
          }),
          Object.defineProperty(t, "FLIPPED_ALIAS_KEYS", {
            enumerable: !0,
            get: function() {
              return r.FLIPPED_ALIAS_KEYS;
            },
          }),
          Object.defineProperty(t, "NODE_FIELDS", {
            enumerable: !0,
            get: function() {
              return r.NODE_FIELDS;
            },
          }),
          Object.defineProperty(t, "BUILDER_KEYS", {
            enumerable: !0,
            get: function() {
              return r.BUILDER_KEYS;
            },
          }),
          Object.defineProperty(t, "DEPRECATED_KEYS", {
            enumerable: !0,
            get: function() {
              return r.DEPRECATED_KEYS;
            },
          }),
          (t.TYPES = void 0),
          n(74),
          n(78),
          n(326),
          n(327),
          n(328),
          n(329),
          n(330);
        var r = n(18);
        (0, a().default)(r.VISITOR_KEYS),
          (0, a().default)(r.ALIAS_KEYS),
          (0, a().default)(r.FLIPPED_ALIAS_KEYS),
          (0, a().default)(r.NODE_FIELDS),
          (0, a().default)(r.BUILDER_KEYS),
          (0, a().default)(r.DEPRECATED_KEYS);
        var i = Object.keys(r.VISITOR_KEYS)
          .concat(Object.keys(r.FLIPPED_ALIAS_KEYS))
          .concat(Object.keys(r.DEPRECATED_KEYS));
        t.TYPES = i;
      },
      function(e, t) {
        function a(e, t) {
          for (var n = 0; n < t.length; n++) {
            var a = t[n];
            (a.enumerable = a.enumerable || !1),
              (a.configurable = !0),
              "value" in a && (a.writable = !0),
              Object.defineProperty(e, a.key, a);
          }
        }
        e.exports = function(e, t, n) {
          return t && a(e.prototype, t), n && a(e, n), e;
        };
      },
      function(E, e, x) {
        "use strict";
        (function(t) {
          function i(e, t) {
            if (e === t) return 0;
            for (
              var n = e.length, a = t.length, r = 0, i = Math.min(n, a);
              r < i;
              ++r
            )
              if (e[r] !== t[r]) {
                (n = e[r]), (a = t[r]);
                break;
              }
            return n < a ? -1 : a < n ? 1 : 0;
          }
          function o(e) {
            return t.Buffer && "function" == typeof t.Buffer.isBuffer
              ? t.Buffer.isBuffer(e)
              : !(null == e || !e._isBuffer);
          }
          var l = x(234),
            a = Object.prototype.hasOwnProperty,
            c = Array.prototype.slice,
            n = "foo" === function() {}.name;
          function s(e) {
            return Object.prototype.toString.call(e);
          }
          function d(e) {
            return (
              !o(e) &&
              "function" == typeof t.ArrayBuffer &&
              ("function" == typeof ArrayBuffer.isView
                ? ArrayBuffer.isView(e)
                : !!e &&
                  (e instanceof DataView ||
                    !!(e.buffer && e.buffer instanceof ArrayBuffer)))
            );
          }
          var u = (E.exports = e),
            r = /\s*function\s+([^\(\s]*)\s*/;
          function p(e) {
            if (l.isFunction(e)) {
              if (n) return e.name;
              var t = e.toString().match(r);
              return t && t[1];
            }
          }
          function g(e, t) {
            return "string" == typeof e
              ? e.length < t
                ? e
                : e.slice(0, t)
              : e;
          }
          function f(e) {
            if (n || !l.isFunction(e)) return l.inspect(e);
            var t = p(e);
            return "[Function" + (t ? ": " + t : "") + "]";
          }
          function h(e, t, n, a, r) {
            throw new u.AssertionError({
              message: n,
              actual: e,
              expected: t,
              operator: a,
              stackStartFunction: r,
            });
          }
          function e(e, t) {
            e || h(e, !0, t, "==", u.ok);
          }
          function R(e, t, n, a) {
            if (e === t) return !0;
            if (o(e) && o(t)) return 0 === i(e, t);
            if (l.isDate(e) && l.isDate(t)) return e.getTime() === t.getTime();
            if (l.isRegExp(e) && l.isRegExp(t))
              return (
                e.source === t.source &&
                e.global === t.global &&
                e.multiline === t.multiline &&
                e.lastIndex === t.lastIndex &&
                e.ignoreCase === t.ignoreCase
              );
            if (
              (null !== e && "object" == typeof e) ||
              (null !== t && "object" == typeof t)
            ) {
              if (
                d(e) &&
                d(t) &&
                s(e) === s(t) &&
                !(e instanceof Float32Array || e instanceof Float64Array)
              )
                return (
                  0 === i(new Uint8Array(e.buffer), new Uint8Array(t.buffer))
                );
              if (o(e) !== o(t)) return !1;
              var r = (a = a || { actual: [], expected: [] }).actual.indexOf(e);
              return (
                (-1 !== r && r === a.expected.indexOf(t)) ||
                (a.actual.push(e),
                a.expected.push(t),
                (function(e, t, n, a) {
                  if (null == e || null == t) return !1;
                  if (l.isPrimitive(e) || l.isPrimitive(t)) return e === t;
                  if (
                    n &&
                    Object.getPrototypeOf(e) !== Object.getPrototypeOf(t)
                  )
                    return !1;
                  var r = y(e),
                    i = y(t);
                  if ((r && !i) || (!r && i)) return !1;
                  if (r) return R((e = c.call(e)), (t = c.call(t)), n);
                  var o,
                    s,
                    d = b(e),
                    u = b(t);
                  if (d.length !== u.length) return !1;
                  for (d.sort(), u.sort(), s = d.length - 1; 0 <= s; s--)
                    if (d[s] !== u[s]) return !1;
                  for (s = d.length - 1; 0 <= s; s--)
                    if (!R(e[(o = d[s])], t[o], n, a)) return !1;
                  return !0;
                })(e, t, n, a))
              );
            }
            return n ? e === t : e == t;
          }
          function y(e) {
            return "[object Arguments]" == Object.prototype.toString.call(e);
          }
          function m(e, t) {
            if (!e || !t) return !1;
            if ("[object RegExp]" == Object.prototype.toString.call(t))
              return t.test(e);
            try {
              if (e instanceof t) return !0;
            } catch (e) {}
            return !Error.isPrototypeOf(t) && !0 === t.call({}, e);
          }
          function v(e, t, n, a) {
            var r;
            if ("function" != typeof t)
              throw new TypeError('"block" argument must be a function');
            "string" == typeof n && ((a = n), (n = null)),
              (r = (function(e) {
                var t;
                try {
                  e();
                } catch (e) {
                  t = e;
                }
                return t;
              })(t)),
              (a =
                (n && n.name ? " (" + n.name + ")." : ".") +
                (a ? " " + a : ".")),
              e && !r && h(r, n, "Missing expected exception" + a);
            var i = "string" == typeof a,
              o = !e && r && !n;
            if (
              (((!e && l.isError(r) && i && m(r, n)) || o) &&
                h(r, n, "Got unwanted exception" + a),
              (e && r && n && !m(r, n)) || (!e && r))
            )
              throw r;
          }
          (u.AssertionError = function(e) {
            var t;
            (this.name = "AssertionError"),
              (this.actual = e.actual),
              (this.expected = e.expected),
              (this.operator = e.operator),
              e.message
                ? ((this.message = e.message), (this.generatedMessage = !1))
                : ((this.message =
                    g(f((t = this).actual), 128) +
                    " " +
                    t.operator +
                    " " +
                    g(f(t.expected), 128)),
                  (this.generatedMessage = !0));
            var n = e.stackStartFunction || h;
            if (Error.captureStackTrace) Error.captureStackTrace(this, n);
            else {
              var a = new Error();
              if (a.stack) {
                var r = a.stack,
                  i = p(n),
                  o = r.indexOf("\n" + i);
                if (0 <= o) {
                  var s = r.indexOf("\n", o + 1);
                  r = r.substring(s + 1);
                }
                this.stack = r;
              }
            }
          }),
            l.inherits(u.AssertionError, Error),
            (u.fail = h),
            (u.ok = e),
            (u.equal = function(e, t, n) {
              e != t && h(e, t, n, "==", u.equal);
            }),
            (u.notEqual = function(e, t, n) {
              e == t && h(e, t, n, "!=", u.notEqual);
            }),
            (u.deepEqual = function(e, t, n) {
              R(e, t, !1) || h(e, t, n, "deepEqual", u.deepEqual);
            }),
            (u.deepStrictEqual = function(e, t, n) {
              R(e, t, !0) || h(e, t, n, "deepStrictEqual", u.deepStrictEqual);
            }),
            (u.notDeepEqual = function(e, t, n) {
              R(e, t, !1) && h(e, t, n, "notDeepEqual", u.notDeepEqual);
            }),
            (u.notDeepStrictEqual = function e(t, n, a) {
              R(t, n, !0) && h(t, n, a, "notDeepStrictEqual", e);
            }),
            (u.strictEqual = function(e, t, n) {
              e !== t && h(e, t, n, "===", u.strictEqual);
            }),
            (u.notStrictEqual = function(e, t, n) {
              e === t && h(e, t, n, "!==", u.notStrictEqual);
            }),
            (u.throws = function(e, t, n) {
              v(!0, e, t, n);
            }),
            (u.doesNotThrow = function(e, t, n) {
              v(!1, e, t, n);
            }),
            (u.ifError = function(e) {
              if (e) throw e;
            });
          var b =
            Object.keys ||
            function(e) {
              var t = [];
              for (var n in e) a.call(e, n) && t.push(n);
              return t;
            };
        }.call(this, x(21)));
      },
      function(e, t, n) {
        var a = n(26),
          r = n(275),
          i = n(276),
          o = a ? a.toStringTag : void 0;
        e.exports = function(e) {
          return null == e
            ? void 0 === e
              ? "[object Undefined]"
              : "[object Null]"
            : o && o in Object(e)
              ? r(e)
              : i(e);
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var t = typeof e;
          return null != e && ("object" == t || "function" == t);
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.validate = r),
          (t.typeIs = i),
          (t.validateType = function(e) {
            return r(i(e));
          }),
          (t.validateOptional = function(e) {
            return { validate: e, optional: !0 };
          }),
          (t.validateOptionalType = function(e) {
            return { validate: i(e), optional: !0 };
          }),
          (t.arrayOf = o),
          (t.arrayOfType = d),
          (t.validateArrayOfType = function(e) {
            return r(d(e));
          }),
          (t.assertEach = u),
          (t.assertOneOf = function() {
            for (var e = arguments.length, a = new Array(e), t = 0; t < e; t++)
              a[t] = arguments[t];
            function n(e, t, n) {
              if (a.indexOf(n) < 0)
                throw new TypeError(
                  "Property " +
                    t +
                    " expected value to be one of " +
                    JSON.stringify(a) +
                    " but got " +
                    JSON.stringify(n)
                );
            }
            return (n.oneOf = a), n;
          }),
          (t.assertNodeType = l),
          (t.assertNodeOrValueType = function() {
            for (var e = arguments.length, o = new Array(e), t = 0; t < e; t++)
              o[t] = arguments[t];
            function n(e, t, n) {
              for (var a = !1, r = 0; r < o.length; r++) {
                var i = o[r];
                if (b(n) === i || (0, s.default)(i, n)) {
                  a = !0;
                  break;
                }
              }
              if (!a)
                throw new TypeError(
                  "Property " +
                    t +
                    " of " +
                    e.type +
                    " expected node to be of a type " +
                    JSON.stringify(o) +
                    " but instead got " +
                    JSON.stringify(n && n.type)
                );
            }
            return (n.oneOfNodeOrValueTypes = o), n;
          }),
          (t.assertValueType = E),
          (t.chain = c),
          (t.default = function(t, e) {
            void 0 === e && (e = {});
            var n = (e.inherits && x[e.inherits]) || {},
              a = e.fields || n.fields || {},
              r = e.visitor || n.visitor || [],
              i = e.aliases || n.aliases || [],
              o = e.builder || n.builder || e.visitor || [];
            e.deprecatedAlias && (v[e.deprecatedAlias] = t);
            var s = r.concat(o),
              d = Array.isArray(s),
              u = 0;
            for (s = d ? s : s[Symbol.iterator](); ; ) {
              var l;
              if (d) {
                if (u >= s.length) break;
                l = s[u++];
              } else {
                if ((u = s.next()).done) break;
                l = u.value;
              }
              var c = l;
              a[c] = a[c] || {};
            }
            for (var p in a) {
              var g = a[p];
              -1 === o.indexOf(p) && (g.optional = !0),
                void 0 === g.default
                  ? (g.default = null)
                  : g.validate || (g.validate = E(b(g.default)));
            }
            (f[t] = e.visitor = r),
              (m[t] = e.builder = o),
              (y[t] = e.fields = a),
              (h[t] = e.aliases = i),
              i.forEach(function(e) {
                (R[e] = R[e] || []), R[e].push(t);
              }),
              (x[t] = e);
          }),
          (t.DEPRECATED_KEYS = t.BUILDER_KEYS = t.NODE_FIELDS = t.FLIPPED_ALIAS_KEYS = t.ALIAS_KEYS = t.VISITOR_KEYS = void 0);
        var a,
          s = (a = n(76)) && a.__esModule ? a : { default: a },
          f = {};
        t.VISITOR_KEYS = f;
        var h = {};
        t.ALIAS_KEYS = h;
        var R = {};
        t.FLIPPED_ALIAS_KEYS = R;
        var y = {};
        t.NODE_FIELDS = y;
        var m = {};
        t.BUILDER_KEYS = m;
        var v = {};
        function b(e) {
          return Array.isArray(e)
            ? "array"
            : null === e
              ? "null"
              : void 0 === e
                ? "undefined"
                : typeof e;
        }
        function r(e) {
          return { validate: e };
        }
        function i(e) {
          return "string" == typeof e ? l(e) : l.apply(void 0, e);
        }
        function o(e) {
          return c(E("array"), u(e));
        }
        function d(e) {
          return o(i(e));
        }
        function u(r) {
          function e(e, t, n) {
            if (Array.isArray(n))
              for (var a = 0; a < n.length; a++) r(e, t + "[" + a + "]", n[a]);
          }
          return (e.each = r), e;
        }
        function l() {
          for (var e = arguments.length, o = new Array(e), t = 0; t < e; t++)
            o[t] = arguments[t];
          function n(e, t, n) {
            for (var a = !1, r = 0; r < o.length; r++) {
              var i = o[r];
              if ((0, s.default)(i, n)) {
                a = !0;
                break;
              }
            }
            if (!a)
              throw new TypeError(
                "Property " +
                  t +
                  " of " +
                  e.type +
                  " expected node to be of a type " +
                  JSON.stringify(o) +
                  " but instead got " +
                  JSON.stringify(n && n.type)
              );
          }
          return (n.oneOfNodeTypes = o), n;
        }
        function E(a) {
          function e(e, t, n) {
            if (b(n) !== a)
              throw new TypeError(
                "Property " + t + " expected type of " + a + " but got " + b(n)
              );
          }
          return (e.type = a), e;
        }
        function c() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
          function a() {
            for (var e = 0; e < t.length; e++) t[e].apply(void 0, arguments);
          }
          return (a.chainOf = t), a;
        }
        t.DEPRECATED_KEYS = v;
        var x = {};
      },
      function(e, t) {
        e.exports = function(e, t) {
          (e.prototype = Object.create(t.prototype)),
            ((e.prototype.constructor = e).__proto__ = t);
        };
      },
      function(e, t, n) {
        var a = n(274),
          r = n(279);
        e.exports = function(e, t) {
          var n = r(e, t);
          return a(n) ? n : void 0;
        };
      },
      function(gK, hK) {
        var iK;
        iK = (function() {
          return this;
        })();
        try {
          iK = iK || Function("return this")() || eval("this");
        } catch (gK) {
          "object" == typeof window && (iK = window);
        }
        gK.exports = iK;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.NOT_LOCAL_BINDING = t.BLOCK_SCOPED_SYMBOL = t.INHERIT_KEYS = t.UNARY_OPERATORS = t.STRING_UNARY_OPERATORS = t.NUMBER_UNARY_OPERATORS = t.BOOLEAN_UNARY_OPERATORS = t.BINARY_OPERATORS = t.NUMBER_BINARY_OPERATORS = t.BOOLEAN_BINARY_OPERATORS = t.COMPARISON_BINARY_OPERATORS = t.EQUALITY_BINARY_OPERATORS = t.BOOLEAN_NUMBER_BINARY_OPERATORS = t.UPDATE_OPERATORS = t.LOGICAL_OPERATORS = t.COMMENT_KEYS = t.FOR_INIT_KEYS = t.FLATTENABLE_KEYS = t.STATEMENT_OR_BLOCK_KEYS = void 0),
          (t.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"]),
          (t.FLATTENABLE_KEYS = ["body", "expressions"]),
          (t.FOR_INIT_KEYS = ["left", "init"]),
          (t.COMMENT_KEYS = [
            "leadingComments",
            "trailingComments",
            "innerComments",
          ]),
          (t.LOGICAL_OPERATORS = ["||", "&&", "??"]),
          (t.UPDATE_OPERATORS = ["++", "--"]);
        var a = [">", "<", ">=", "<="];
        t.BOOLEAN_NUMBER_BINARY_OPERATORS = a;
        var r = ["==", "===", "!=", "!=="],
          i = (t.EQUALITY_BINARY_OPERATORS = r).concat(["in", "instanceof"]),
          o = (t.COMPARISON_BINARY_OPERATORS = i).concat(a);
        t.BOOLEAN_BINARY_OPERATORS = o;
        var s = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
        t.NUMBER_BINARY_OPERATORS = s;
        var d = ["+"].concat(s, o);
        t.BINARY_OPERATORS = d;
        var u = ["delete", "!"];
        t.BOOLEAN_UNARY_OPERATORS = u;
        var l = ["+", "-", "~"];
        t.NUMBER_UNARY_OPERATORS = l;
        var c = ["typeof"];
        t.STRING_UNARY_OPERATORS = c;
        var p = ["void", "throw"].concat(u, l, c);
        (t.UNARY_OPERATORS = p),
          (t.INHERIT_KEYS = {
            optional: ["typeAnnotation", "typeParameters", "returnType"],
            force: ["start", "loc", "end"],
          });
        var g = Symbol.for("var used to be block scoped");
        t.BLOCK_SCOPED_SYMBOL = g;
        var f = Symbol.for("should not be considered a local binding");
        t.NOT_LOCAL_BINDING = f;
      },
      function(e, t, n) {
        "use strict";
        function f() {
          var e = r(n(439));
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        function a() {
          var e = r(n(24));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function h() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n,
              a = e.node,
              r = e.parent,
              i = e.scope,
              o = e.id;
            if ((void 0 === t && (t = !1), !a.id)) {
              if (
                (!h().isObjectProperty(r) &&
                  !h().isObjectMethod(r, { kind: "method" })) ||
                (r.computed && !h().isLiteral(r.key))
              ) {
                if (h().isVariableDeclarator(r)) {
                  if (((o = r.id), h().isIdentifier(o) && !t)) {
                    var s = i.parent.getBinding(o.name);
                    if (s && s.constant && i.getBinding(o.name) === s)
                      return (
                        (a.id = h().cloneNode(o)),
                        void (a.id[h().NOT_LOCAL_BINDING] = !0)
                      );
                  }
                } else if (h().isAssignmentExpression(r)) o = r.left;
                else if (!o) return;
              } else o = r.key;
              var d, u, l, c, p, g;
              if (
                (o && h().isLiteral(o)
                  ? ((d = o),
                    (n = h().isNullLiteral(d)
                      ? "null"
                      : h().isRegExpLiteral(d)
                        ? "_" + d.pattern + "_" + d.flags
                        : h().isTemplateLiteral(d)
                          ? d.quasis
                              .map(function(e) {
                                return e.value.raw;
                              })
                              .join("")
                          : void 0 !== d.value
                            ? d.value + ""
                            : ""))
                  : o && h().isIdentifier(o) && (n = o.name),
                void 0 !== n)
              )
                return (
                  (n = h().toBindingIdentifierName(n)),
                  ((o = h().identifier(n))[h().NOT_LOCAL_BINDING] = !0),
                  (function(e, t, n, a) {
                    if (e.selfReference) {
                      if (!a.hasBinding(n.name) || a.hasGlobal(n.name)) {
                        if (!h().isFunction(t)) return;
                        var r = R;
                        t.generator && (r = y);
                        for (
                          var i = r({
                              FUNCTION: t,
                              FUNCTION_ID: n,
                              FUNCTION_KEY: a.generateUidIdentifier(n.name),
                            }).expression,
                            o = i.callee.body.body[0].params,
                            s = 0,
                            d = (0, f().default)(t);
                          s < d;
                          s++
                        )
                          o.push(a.generateUidIdentifier("x"));
                        return i;
                      }
                      a.rename(n.name);
                    }
                    (t.id = n), (a.getProgramParent().references[n.name] = !0);
                  })(
                    ((u = a),
                    (l = n),
                    (p = {
                      selfAssignment: !1,
                      selfReference: !1,
                      outerDeclar: (c = i).getBindingIdentifier(l),
                      references: [],
                      name: l,
                    }),
                    (g = c.getOwnBinding(l))
                      ? "param" === g.kind && (p.selfReference = !0)
                      : (p.outerDeclar || c.hasGlobal(l)) &&
                        c.traverse(u, m, p),
                    p),
                    a,
                    o,
                    i
                  ) || a
                );
            }
          });
        var R = (0, a().default)(
            "\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"
          ),
          y = (0, a().default)(
            "\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"
          ),
          m = {
            "ReferencedIdentifier|BindingIdentifier": function(e, t) {
              e.node.name === t.name &&
                e.scope.getBindingIdentifier(t.name) === t.outerDeclar &&
                ((t.selfReference = !0), e.stop());
            },
          };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = t.program = t.expression = t.statements = t.statement = t.smart = void 0);
        var a,
          r = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(440)),
          i = (a = n(441)) && a.__esModule ? a : { default: a },
          o = (0, i.default)(r.smart);
        t.smart = o;
        var s = (0, i.default)(r.statement);
        t.statement = s;
        var d = (0, i.default)(r.statements);
        t.statements = d;
        var u = (0, i.default)(r.expression);
        t.expression = u;
        var l = (0, i.default)(r.program);
        t.program = l;
        var c = Object.assign(o.bind(void 0), {
          smart: o,
          statement: s,
          statements: d,
          expression: u,
          program: l,
          ast: o.ast,
        });
        t.default = c;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a = x(n(141));
        function r() {
          var e = E(n(377));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        var i = E(n(10)),
          o = E(n(181));
        function s() {
          var e = x(n(4));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        var g = n(53);
        function d() {
          var e = E(n(85));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        var u = x(n(422)),
          l = x(n(423)),
          c = x(n(426)),
          p = x(n(437)),
          f = x(n(438)),
          h = x(n(444)),
          R = x(n(445)),
          y = x(n(446)),
          m = x(n(448)),
          v = x(n(450)),
          b = x(n(451));
        function E(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function x(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        var A = (0, r().default)("babel"),
          S = (function() {
            function p(e, t) {
              (this.parent = t),
                (this.hub = e),
                (this.contexts = []),
                (this.data = {}),
                (this.shouldSkip = !1),
                (this.shouldStop = !1),
                (this.removed = !1),
                (this.state = null),
                (this.opts = null),
                (this.skipKeys = null),
                (this.parentPath = null),
                (this.context = null),
                (this.container = null),
                (this.listKey = null),
                (this.inList = !1),
                (this.parentKey = null),
                (this.key = null),
                (this.node = null),
                (this.scope = null),
                (this.type = null),
                (this.typeAnnotation = null);
            }
            p.get = function(e) {
              var t = e.hub,
                n = e.parentPath,
                a = e.parent,
                r = e.container,
                i = e.listKey,
                o = e.key;
              if ((!t && n && (t = n.hub), !a))
                throw new Error("To get a node path the parent needs to exist");
              var s,
                d = r[o],
                u = g.path.get(a) || [];
              g.path.has(a) || g.path.set(a, u);
              for (var l = 0; l < u.length; l++) {
                var c = u[l];
                if (c.node === d) {
                  s = c;
                  break;
                }
              }
              return (
                s || ((s = new p(t, a)), u.push(s)), s.setup(n, r, i, o), s
              );
            };
            var e = p.prototype;
            return (
              (e.getScope = function(e) {
                return this.isScope() ? new o.default(this) : e;
              }),
              (e.setData = function(e, t) {
                return (this.data[e] = t);
              }),
              (e.getData = function(e, t) {
                var n = this.data[e];
                return !n && t && (n = this.data[e] = t), n;
              }),
              (e.buildCodeFrameError = function(e, t) {
                return (
                  void 0 === t && (t = SyntaxError),
                  this.hub.buildError(this.node, e, t)
                );
              }),
              (e.traverse = function(e, t) {
                (0, i.default)(this.node, e, this.scope, t, this);
              }),
              (e.set = function(e, t) {
                s().validate(this.node, e, t), (this.node[e] = t);
              }),
              (e.getPathLocation = function() {
                var e = [],
                  t = this;
                do {
                  var n = t.key;
                  t.inList && (n = t.listKey + "[" + n + "]"), e.unshift(n);
                } while ((t = t.parentPath));
                return e.join(".");
              }),
              (e.debug = function(e) {
                A.enabled &&
                  A(this.getPathLocation() + " " + this.type + ": " + e);
              }),
              (e.toString = function() {
                return (0, d().default)(this.node).code;
              }),
              p
            );
          })();
        (t.default = S),
          Object.assign(S.prototype, u, l, c, p, f, h, R, y, m, v, b);
        var _ = function() {
            if (P) {
              if (C >= T.length) return "break";
              w = T[C++];
            } else {
              if ((C = T.next()).done) return "break";
              w = C.value;
            }
            var t = w,
              e = "is" + t,
              n = s()[e];
            (S.prototype[e] = function(e) {
              return n(this.node, e);
            }),
              (S.prototype["assert" + t] = function(e) {
                if (!n(this.node, e))
                  throw new TypeError("Expected node path of type " + t);
              });
          },
          T = s().TYPES,
          P = Array.isArray(T),
          C = 0;
        for (T = P ? T : T[Symbol.iterator](); ; ) {
          var w;
          if ("break" === _()) break;
        }
        var D = function(e) {
          if ("_" === e[0]) return "continue";
          s().TYPES.indexOf(e) < 0 && s().TYPES.push(e);
          var t = a[e];
          S.prototype["is" + e] = function(e) {
            return t.checkPath(this, e);
          };
        };
        for (var O in a) D(O);
      },
      function(e, t, n) {
        var a = n(11).Symbol;
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(152),
          r = n(298),
          i = n(30);
        e.exports = function(e) {
          return i(e) ? a(e) : r(e);
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return (
            e.webpackPolyfill ||
              ((e.deprecate = function() {}),
              (e.paths = []),
              e.children || (e.children = []),
              Object.defineProperty(e, "loaded", {
                enumerable: !0,
                get: function() {
                  return e.l;
                },
              }),
              Object.defineProperty(e, "id", {
                enumerable: !0,
                get: function() {
                  return e.i;
                },
              }),
              (e.webpackPolyfill = 1)),
            e
          );
        };
      },
      function(e, t) {
        e.exports = function(t) {
          return function(e) {
            return t(e);
          };
        };
      },
      function(e, t, n) {
        var a = n(146),
          r = n(68);
        e.exports = function(e) {
          return null != e && r(e.length) && !a(e);
        };
      },
      function(e, t) {},
      function(e, t, n) {
        "use strict";
        (t.__esModule = !0),
          (t.wrapWithTypes = function(r, i) {
            return function() {
              var e = o;
              o = r;
              try {
                for (
                  var t = arguments.length, n = new Array(t), a = 0;
                  a < t;
                  a++
                )
                  n[a] = arguments[a];
                return i.apply(this, n);
              } finally {
                o = e;
              }
            };
          }),
          (t.getTypes = a),
          (t.runtimeProperty = function(e) {
            var t = a();
            return t.memberExpression(
              t.identifier("regeneratorRuntime"),
              t.identifier(e),
              !1
            );
          }),
          (t.isReference = function(e) {
            return (
              e.isReferenced() ||
              e.parentPath.isAssignmentExpression({ left: e.node })
            );
          }),
          (t.replaceWithOrRemove = function(e, t) {
            t ? e.replaceWith(t) : e.remove();
          });
        var o = null;
        function a() {
          return o;
        }
      },
      function(e, t) {
        e.exports = function(e) {
          if (void 0 === e)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return e;
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          return e === t || (e != e && t != t);
        };
      },
      function(e, t, n) {
        var u = n(149),
          l = n(150);
        e.exports = function(e, t, n, a) {
          var r = !n;
          n || (n = {});
          for (var i = -1, o = t.length; ++i < o; ) {
            var s = t[i],
              d = a ? a(n[s], e[s], s, n, e) : void 0;
            void 0 === d && (d = e[s]), r ? l(n, s, d) : u(n, s, d);
          }
          return n;
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(75)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              "string" == typeof e &&
              !a().default.keyword.isReservedWordES6(e, !0) &&
              "await" !== e &&
              a().default.keyword.isIdentifierNameES6(e)
            );
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.default = r);
        var s = n(13),
          d = Function.call.bind(Object.prototype.hasOwnProperty);
        function a(e, t) {
          return e &&
            "string" == typeof e.type &&
            "CommentLine" !== e.type &&
            "CommentBlock" !== e.type
            ? r(e, t)
            : e;
        }
        function u(e, t) {
          return Array.isArray(e)
            ? e.map(function(e) {
                return a(e, t);
              })
            : a(e, t);
        }
        function r(e, t) {
          if ((void 0 === t && (t = !0), !e)) return e;
          var n = e.type,
            a = { type: n };
          if ("Identifier" === n) a.name = e.name;
          else {
            if (!d(s.NODE_FIELDS, n))
              throw new Error('Unknown node type: "' + n + '"');
            for (
              var r = Object.keys(s.NODE_FIELDS[n]), i = 0;
              i < r.length;
              i++
            ) {
              var o = r[i];
              d(e, o) && (a[o] = t ? u(e[o], !0) : e[o]);
            }
          }
          return (
            d(e, "loc") && (a.loc = e.loc),
            d(e, "leadingComments") && (a.leadingComments = e.leadingComments),
            d(e, "innerComments") && (a.innerComments = e.innerCmments),
            d(e, "trailingComments") &&
              (a.trailingComments = e.trailingComments),
            d(e, "extra") && (a.extra = Object.assign({}, e.extra)),
            a
          );
        }
      },
      function(e, t, n) {
        var a = n(16),
          r = n(12);
        e.exports = function(e) {
          return "symbol" == typeof e || (r(e) && "[object Symbol]" == a(e));
        };
      },
      function(e, t, n) {
        var r = n(34),
          i = n(30),
          o = n(67),
          s = n(17);
        e.exports = function(e, t, n) {
          if (!s(n)) return !1;
          var a = typeof t;
          return (
            !!("number" == a
              ? i(n) && o(t, n.length)
              : "string" == a && t in n) && r(n[t], e)
          );
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.loadOptions = function(e) {
            var t = (0, r.default)(e);
            return t ? t.options : null;
          }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function() {
              return r.default;
            },
          }),
          Object.defineProperty(t, "loadPartialConfig", {
            enumerable: !0,
            get: function() {
              return i.loadPartialConfig;
            },
          });
        var a,
          r = (a = n(457)) && a.__esModule ? a : { default: a },
          i = n(203);
      },
      function(e, t, n) {
        var a = n(264),
          r = n(265),
          i = n(266),
          o = n(267),
          s = n(268);
        function d(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var a = e[t];
            this.set(a[0], a[1]);
          }
        }
        (d.prototype.clear = a),
          (d.prototype.delete = r),
          (d.prototype.get = i),
          (d.prototype.has = o),
          (d.prototype.set = s),
          (e.exports = d);
      },
      function(e, t, n) {
        var a = n(34);
        e.exports = function(e, t) {
          for (var n = e.length; n--; ) if (a(e[n][0], t)) return n;
          return -1;
        };
      },
      function(e, t, n) {
        var a = n(20)(Object, "create");
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(288);
        e.exports = function(e, t) {
          var n = e.__data__;
          return a(t) ? n["string" == typeof t ? "string" : "hash"] : n.map;
        };
      },
      function(e, o, s) {
        (function(e) {
          var t = s(147),
            n = "object" == typeof o && o && !o.nodeType && o,
            a = n && "object" == typeof e && e && !e.nodeType && e,
            r = a && a.exports === n && t.process,
            i = (function() {
              try {
                return (
                  (a && a.require && a.require("util").types) ||
                  (r && r.binding && r.binding("util"))
                );
              } catch (e) {}
            })();
          e.exports = i;
        }.call(this, s(28)(e)));
      },
      function(e, t, n) {
        var a = n(152),
          r = n(301),
          i = n(30);
        e.exports = function(e) {
          return i(e) ? a(e, !0) : r(e);
        };
      },
      function(e, t, n) {
        var a = n(308),
          r = n(63),
          i = n(309),
          o = n(160),
          s = n(310),
          d = n(16),
          u = n(148),
          l = u(a),
          c = u(r),
          p = u(i),
          g = u(o),
          f = u(s),
          h = d;
        ((a && "[object DataView]" != h(new a(new ArrayBuffer(1)))) ||
          (r && "[object Map]" != h(new r())) ||
          (i && "[object Promise]" != h(i.resolve())) ||
          (o && "[object Set]" != h(new o())) ||
          (s && "[object WeakMap]" != h(new s()))) &&
          (h = function(e) {
            var t = d(e),
              n = "[object Object]" == t ? e.constructor : void 0,
              a = n ? u(n) : "";
            if (a)
              switch (a) {
                case l:
                  return "[object DataView]";
                case c:
                  return "[object Map]";
                case p:
                  return "[object Promise]";
                case g:
                  return "[object Set]";
                case f:
                  return "[object WeakMap]";
              }
            return t;
          }),
          (e.exports = h);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.default = l);
        var u = n(5);
        function l(e, t, n) {
          for (var a = [].concat(e), r = Object.create(null); a.length; ) {
            var i = a.shift();
            if (i) {
              var o = l.keys[i.type];
              if ((0, u.isIdentifier)(i))
                t ? (r[i.name] = r[i.name] || []).push(i) : (r[i.name] = i);
              else if ((0, u.isExportDeclaration)(i))
                (0, u.isDeclaration)(i.declaration) && a.push(i.declaration);
              else {
                if (n) {
                  if ((0, u.isFunctionDeclaration)(i)) {
                    a.push(i.id);
                    continue;
                  }
                  if ((0, u.isFunctionExpression)(i)) continue;
                }
                if (o)
                  for (var s = 0; s < o.length; s++) {
                    var d = o[s];
                    i[d] && (a = a.concat(i[d]));
                  }
              }
            }
          }
          return r;
        }
        l.keys = {
          DeclareClass: ["id"],
          DeclareFunction: ["id"],
          DeclareModule: ["id"],
          DeclareVariable: ["id"],
          DeclareInterface: ["id"],
          DeclareTypeAlias: ["id"],
          DeclareOpaqueType: ["id"],
          InterfaceDeclaration: ["id"],
          TypeAlias: ["id"],
          OpaqueType: ["id"],
          CatchClause: ["param"],
          LabeledStatement: ["label"],
          UnaryExpression: ["argument"],
          AssignmentExpression: ["left"],
          ImportSpecifier: ["local"],
          ImportNamespaceSpecifier: ["local"],
          ImportDefaultSpecifier: ["local"],
          ImportDeclaration: ["specifiers"],
          ExportSpecifier: ["exported"],
          ExportNamespaceSpecifier: ["exported"],
          ExportDefaultSpecifier: ["exported"],
          FunctionDeclaration: ["id", "params"],
          FunctionExpression: ["id", "params"],
          ArrowFunctionExpression: ["params"],
          ObjectMethod: ["params"],
          ClassMethod: ["params"],
          ForInStatement: ["left"],
          ForOfStatement: ["left"],
          ClassDeclaration: ["id"],
          ClassExpression: ["id"],
          RestElement: ["argument"],
          UpdateExpression: ["argument"],
          ObjectProperty: ["value"],
          AssignmentPattern: ["left"],
          ArrayPattern: ["elements"],
          ObjectPattern: ["properties"],
          VariableDeclaration: ["declarations"],
          VariableDeclarator: ["id"],
        };
      },
      function(e, t, n) {
        var a = n(380);
        e.exports = function(e) {
          var t = a(e),
            n = t % 1;
          return t == t ? (n ? t - n : t) : 0;
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          for (
            var n = -1, a = null == e ? 0 : e.length, r = Array(a);
            ++n < a;

          )
            r[n] = t(e[n], n, e);
          return r;
        };
      },
      function(e, t, n) {
        var a = n(52),
          r = n(387),
          i = n(389);
        e.exports = function(e, t) {
          return i(r(e, t, a), e + "");
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return e;
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.clear = function() {
            i(), o();
          }),
          (t.clearPath = i),
          (t.clearScope = o),
          (t.scope = t.path = void 0);
        var a = new WeakMap();
        t.path = a;
        var r = new WeakMap();
        function i() {
          t.path = a = new WeakMap();
        }
        function o() {
          t.scope = r = new WeakMap();
        }
        t.scope = r;
      },
      function(e, u) {
        u.getArg = function(e, t, n) {
          if (t in e) return e[t];
          if (3 === arguments.length) return n;
          throw new Error('"' + t + '" is a required argument.');
        };
        var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,
          i = /^data:.+\,.+$/;
        function l(e) {
          var t = e.match(n);
          return t
            ? { scheme: t[1], auth: t[2], host: t[3], port: t[4], path: t[5] }
            : null;
        }
        function c(e) {
          var t = "";
          return (
            e.scheme && (t += e.scheme + ":"),
            (t += "//"),
            e.auth && (t += e.auth + "@"),
            e.host && (t += e.host),
            e.port && (t += ":" + e.port),
            e.path && (t += e.path),
            t
          );
        }
        (u.urlParse = l), (u.urlGenerate = c);
        var r,
          o = ((r = []),
          function(e) {
            for (var t = 0; t < r.length; t++)
              if (r[t].input === e) {
                var n = r[0];
                return (r[0] = r[t]), (r[t] = n), r[0].result;
              }
            var a = (function(e) {
              var t = e,
                n = l(e);
              if (n) {
                if (!n.path) return e;
                t = n.path;
              }
              for (var a = u.isAbsolute(t), r = [], i = 0, o = 0; ; ) {
                if (((i = o), -1 === (o = t.indexOf("/", i)))) {
                  r.push(t.slice(i));
                  break;
                }
                for (r.push(t.slice(i, o)); o < t.length && "/" === t[o]; ) o++;
              }
              var s = 0;
              for (o = r.length - 1; 0 <= o; o--) {
                var d = r[o];
                "." === d
                  ? r.splice(o, 1)
                  : ".." === d
                    ? s++
                    : 0 < s &&
                      ("" === d
                        ? (r.splice(o + 1, s), (s = 0))
                        : (r.splice(o, 2), s--));
              }
              return (
                "" === (t = r.join("/")) && (t = a ? "/" : "."),
                n ? ((n.path = t), c(n)) : t
              );
            })(e);
            return (
              r.unshift({ input: e, result: a }), 32 < r.length && r.pop(), a
            );
          });
        function s(e, t) {
          "" === e && (e = "."), "" === t && (t = ".");
          var n = l(t),
            a = l(e);
          if ((a && (e = a.path || "/"), n && !n.scheme))
            return a && (n.scheme = a.scheme), c(n);
          if (n || t.match(i)) return t;
          if (a && !a.host && !a.path) return (a.host = t), c(a);
          var r = "/" === t.charAt(0) ? t : o(e.replace(/\/+$/, "") + "/" + t);
          return a ? ((a.path = r), c(a)) : r;
        }
        (u.normalize = o),
          (u.join = s),
          (u.isAbsolute = function(e) {
            return "/" === e.charAt(0) || n.test(e);
          }),
          (u.relative = function(e, t) {
            "" === e && (e = "."), (e = e.replace(/\/$/, ""));
            for (var n = 0; 0 !== t.indexOf(e + "/"); ) {
              var a = e.lastIndexOf("/");
              if (a < 0) return t;
              if ((e = e.slice(0, a)).match(/^([^\/]+:\/)?\/*$/)) return t;
              ++n;
            }
            return Array(n + 1).join("../") + t.substr(e.length + 1);
          });
        var t = !("__proto__" in Object.create(null));
        function a(e) {
          return e;
        }
        function d(e) {
          if (!e) return !1;
          var t = e.length;
          if (t < 9) return !1;
          if (
            95 !== e.charCodeAt(t - 1) ||
            95 !== e.charCodeAt(t - 2) ||
            111 !== e.charCodeAt(t - 3) ||
            116 !== e.charCodeAt(t - 4) ||
            111 !== e.charCodeAt(t - 5) ||
            114 !== e.charCodeAt(t - 6) ||
            112 !== e.charCodeAt(t - 7) ||
            95 !== e.charCodeAt(t - 8) ||
            95 !== e.charCodeAt(t - 9)
          )
            return !1;
          for (var n = t - 10; 0 <= n; n--)
            if (36 !== e.charCodeAt(n)) return !1;
          return !0;
        }
        function p(e, t) {
          return e === t
            ? 0
            : null === e
              ? 1
              : null === t
                ? -1
                : t < e
                  ? 1
                  : -1;
        }
        (u.toSetString = t
          ? a
          : function(e) {
              return d(e) ? "$" + e : e;
            }),
          (u.fromSetString = t
            ? a
            : function(e) {
                return d(e) ? e.slice(1) : e;
              }),
          (u.compareByOriginalPositions = function(e, t, n) {
            var a = p(e.source, t.source);
            return 0 !== a
              ? a
              : 0 != (a = e.originalLine - t.originalLine)
                ? a
                : 0 != (a = e.originalColumn - t.originalColumn) || n
                  ? a
                  : 0 != (a = e.generatedColumn - t.generatedColumn)
                    ? a
                    : 0 != (a = e.generatedLine - t.generatedLine)
                      ? a
                      : p(e.name, t.name);
          }),
          (u.compareByGeneratedPositionsDeflated = function(e, t, n) {
            var a = e.generatedLine - t.generatedLine;
            return 0 !== a
              ? a
              : 0 != (a = e.generatedColumn - t.generatedColumn) || n
                ? a
                : 0 !== (a = p(e.source, t.source))
                  ? a
                  : 0 != (a = e.originalLine - t.originalLine)
                    ? a
                    : 0 != (a = e.originalColumn - t.originalColumn)
                      ? a
                      : p(e.name, t.name);
          }),
          (u.compareByGeneratedPositionsInflated = function(e, t) {
            var n = e.generatedLine - t.generatedLine;
            return 0 !== n
              ? n
              : 0 != (n = e.generatedColumn - t.generatedColumn)
                ? n
                : 0 !== (n = p(e.source, t.source))
                  ? n
                  : 0 != (n = e.originalLine - t.originalLine)
                    ? n
                    : 0 != (n = e.originalColumn - t.originalColumn)
                      ? n
                      : p(e.name, t.name);
          }),
          (u.parseSourceMapInput = function(e) {
            return JSON.parse(e.replace(/^\)]}'[^\n]*\n/, ""));
          }),
          (u.computeSourceURL = function(e, t, n) {
            if (
              ((t = t || ""),
              e &&
                ("/" !== e[e.length - 1] && "/" !== t[0] && (e += "/"),
                (t = e + t)),
              n)
            ) {
              var a = l(n);
              if (!a) throw new Error("sourceMapURL could not be parsed");
              if (a.path) {
                var r = a.path.lastIndexOf("/");
                0 <= r && (a.path = a.path.substring(0, r + 1));
              }
              t = s(c(a), t);
            }
            return o(t);
          });
      },
      function(e, t, n) {
        "use strict";
        (function(i) {
          function R() {
            var e = (function(e) {
              if (e && e.__esModule) return e;
              var t = {};
              if (null != e)
                for (var n in e)
                  if (Object.prototype.hasOwnProperty.call(e, n)) {
                    var a =
                      Object.defineProperty && Object.getOwnPropertyDescriptor
                        ? Object.getOwnPropertyDescriptor(e, n)
                        : {};
                    a.get || a.set
                      ? Object.defineProperty(t, n, a)
                      : (t[n] = e[n]);
                  }
              return (t.default = e), t;
            })(n(427));
            return (
              (R = function() {
                return e;
              }),
              e
            );
          }
          Object.defineProperty(t, "__esModule", { value: !0 }),
            (t.codeFrameColumns = s);
          var o = !(t.default = function(e, t, n, a) {
              if ((void 0 === a && (a = {}), !o)) {
                o = !0;
                var r =
                  "Passing lineNumber and colNumber is deprecated to @gerhobbelt/babel-code-frame. Please use `codeFrameColumns`.";
                if (i.emitWarning) i.emitWarning(r, "DeprecationWarning");
                else
                  (new Error(r).name = "DeprecationWarning"),
                    console.warn(new Error(r));
              }
              return s(
                e,
                { start: { column: (n = Math.max(n, 0)), line: t } },
                a
              );
            }),
            y = /\r\n|[\n\r\u2028\u2029]/;
          function s(e, t, u) {
            void 0 === u && (u = {});
            var n,
              a =
                (u.highlightCode || u.forceColor) &&
                (0, R().shouldHighlight)(u),
              r = (0, R().getChalk)(u),
              l = {
                gutter: (n = r).grey,
                marker: n.red.bold,
                message: n.red.bold,
              },
              c = function(e, t) {
                return a ? e(t) : t;
              };
            a && (e = (0, R().default)(e, u));
            var i = e.split(y),
              o = (function(e, t, n) {
                var a = Object.assign({ column: 0, line: -1 }, e.start),
                  r = Object.assign({}, a, e.end),
                  i = n || {},
                  o = i.linesAbove,
                  s = void 0 === o ? 2 : o,
                  d = i.linesBelow,
                  u = void 0 === d ? 3 : d,
                  l = a.line,
                  c = a.column,
                  p = r.line,
                  g = r.column,
                  f = Math.max(l - (s + 1), 0),
                  h = Math.min(t.length, p + u);
                -1 === l && (f = 0), -1 === p && (h = t.length);
                var R = p - l,
                  y = {};
                if (R)
                  for (var m = 0; m <= R; m++) {
                    var v = m + l;
                    if (c)
                      if (0 === m) {
                        var b = t[v - 1].length;
                        y[v] = [c, b - c];
                      } else if (m === R) y[v] = [0, g];
                      else {
                        var E = t[v - m].length;
                        y[v] = [0, E];
                      }
                    else y[v] = !0;
                  }
                else y[l] = c === g ? !c || [c, 0] : [c, g - c];
                return { start: f, end: h, markerLines: y };
              })(t, i, u),
              p = o.start,
              s = o.end,
              g = o.markerLines,
              d = t.start && "number" == typeof t.start.column,
              f = String(s).length,
              h = i
                .slice(p, s)
                .map(function(e, t) {
                  var n = p + 1 + t,
                    a = " " + (" " + n).slice(-f) + " | ",
                    r = g[n],
                    i = !g[n + 1];
                  if (r) {
                    var o = "";
                    if (Array.isArray(r)) {
                      var s = e
                          .slice(0, Math.max(r[0] - 1, 0))
                          .replace(/[^\t]/g, " "),
                        d = r[1] || 1;
                      (o = [
                        "\n ",
                        c(l.gutter, a.replace(/\d/g, " ")),
                        s,
                        c(l.marker, "^").repeat(d),
                      ].join("")),
                        i && u.message && (o += " " + c(l.message, u.message));
                    }
                    return [c(l.marker, ">"), c(l.gutter, a), e, o].join("");
                  }
                  return " " + c(l.gutter, a) + e;
                })
                .join("\n");
            return (
              u.message &&
                !d &&
                (h = "" + " ".repeat(f + 1) + u.message + "\n" + h),
              a ? r.reset(h) : h
            );
          }
        }.call(this, n(7)));
      },
      function(e, t, n) {
        "use strict";
        function o() {
          var e,
            t = (e = n(6)) && e.__esModule ? e : { default: e };
          return (
            (o = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createItemFromDescriptor = d),
          (t.createConfigItem = function(e, t) {
            var n = void 0 === t ? {} : t,
              a = n.dirname,
              r = void 0 === a ? "." : a,
              i = n.type;
            return d(
              (0, s.createDescriptor)(e, o().default.resolve(r), {
                type: i,
                alias: "programmatic item",
              })
            );
          }),
          (t.getItemDescriptor = function(e) {
            if (e instanceof a) return e._descriptor;
          });
        var s = n(198);
        function d(e) {
          return new a(e);
        }
        var a = function(e) {
          (this._descriptor = e),
            Object.defineProperty(this, "_descriptor", { enumerable: !1 }),
            (this.value = this._descriptor.value),
            (this.options = this._descriptor.options),
            (this.dirname = this._descriptor.dirname),
            (this.name = this._descriptor.name),
            (this.file = this._descriptor.file
              ? {
                  request: this._descriptor.file.request,
                  resolved: this._descriptor.file.resolved,
                }
              : void 0),
            Object.freeze(this);
        };
        Object.freeze(a.prototype);
      },
      function(e, t, n) {
        "use strict";
        function a(c, p) {
          return function(e, t) {
            var n = c.get(e);
            if (n) {
              var a = n,
                r = Array.isArray(a),
                i = 0;
              for (a = r ? a : a[Symbol.iterator](); ; ) {
                var o;
                if (r) {
                  if (i >= a.length) break;
                  o = a[i++];
                } else {
                  if ((i = a.next()).done) break;
                  o = i.value;
                }
                var s = o,
                  d = s.value;
                if ((0, s.valid)(t)) return d;
              }
            }
            var u = new g(t),
              l = p(e, u);
            switch ((u.configured() || u.forever(), u.deactivate(), u.mode())) {
              case "forever":
                (n = [
                  {
                    value: l,
                    valid: function() {
                      return !0;
                    },
                  },
                ]),
                  c.set(e, n);
                break;
              case "invalidate":
                (n = [{ value: l, valid: u.validator() }]), c.set(e, n);
                break;
              case "valid":
                n
                  ? n.push({ value: l, valid: u.validator() })
                  : ((n = [{ value: l, valid: u.validator() }]), c.set(e, n));
            }
            return l;
          };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.makeStrongCache = function(e) {
            return a(new Map(), e);
          }),
          (t.makeWeakCache = function(e) {
            return a(new WeakMap(), e);
          }),
          (t.assertSimpleType = r);
        var g = (function() {
          function e(e) {
            (this._active = !0),
              (this._never = !1),
              (this._forever = !1),
              (this._invalidate = !1),
              (this._configured = !1),
              (this._pairs = []),
              (this._data = e);
          }
          var t = e.prototype;
          return (
            (t.simple = function() {
              return (function(t) {
                function e(e) {
                  if ("boolean" != typeof e)
                    return t.using(function() {
                      return r(e());
                    });
                  e ? t.forever() : t.never();
                }
                return (
                  (e.forever = function() {
                    return t.forever();
                  }),
                  (e.never = function() {
                    return t.never();
                  }),
                  (e.using = function(e) {
                    return t.using(function() {
                      return r(e());
                    });
                  }),
                  (e.invalidate = function(e) {
                    return t.invalidate(function() {
                      return r(e());
                    });
                  }),
                  e
                );
              })(this);
            }),
            (t.mode = function() {
              return this._never
                ? "never"
                : this._forever
                  ? "forever"
                  : this._invalidate
                    ? "invalidate"
                    : "valid";
            }),
            (t.forever = function() {
              if (!this._active)
                throw new Error(
                  "Cannot change caching after evaluation has completed."
                );
              if (this._never)
                throw new Error(
                  "Caching has already been configured with .never()"
                );
              (this._forever = !0), (this._configured = !0);
            }),
            (t.never = function() {
              if (!this._active)
                throw new Error(
                  "Cannot change caching after evaluation has completed."
                );
              if (this._forever)
                throw new Error(
                  "Caching has already been configured with .forever()"
                );
              (this._never = !0), (this._configured = !0);
            }),
            (t.using = function(e) {
              if (!this._active)
                throw new Error(
                  "Cannot change caching after evaluation has completed."
                );
              if (this._never || this._forever)
                throw new Error(
                  "Caching has already been configured with .never or .forever()"
                );
              this._configured = !0;
              var t = e(this._data);
              return this._pairs.push([t, e]), t;
            }),
            (t.invalidate = function(e) {
              if (!this._active)
                throw new Error(
                  "Cannot change caching after evaluation has completed."
                );
              if (this._never || this._forever)
                throw new Error(
                  "Caching has already been configured with .never or .forever()"
                );
              (this._invalidate = !0), (this._configured = !0);
              var t = e(this._data);
              return this._pairs.push([t, e]), t;
            }),
            (t.validator = function() {
              var e = this._pairs;
              return function(t) {
                return e.every(function(e) {
                  return e[0] === (0, e[1])(t);
                });
              };
            }),
            (t.deactivate = function() {
              this._active = !1;
            }),
            (t.configured = function() {
              return this._configured;
            }),
            e
          );
        })();
        function r(e) {
          if (
            null != e &&
            "string" != typeof e &&
            "boolean" != typeof e &&
            "number" != typeof e
          )
            throw new Error(
              "Cache keys must be either string, boolean, number, null, or undefined."
            );
          return e;
        }
      },
      function(e, t, n) {
        var a = n(38);
        e.exports = function(e) {
          if ("string" == typeof e || a(e)) return e;
          var t = e + "";
          return "0" == t && 1 / e == -1 / 0 ? "-0" : t;
        };
      },
      function(e, u) {
        u.getArg = function(e, t, n) {
          if (t in e) return e[t];
          if (3 === arguments.length) return n;
          throw new Error('"' + t + '" is a required argument.');
        };
        var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,
          i = /^data:.+\,.+$/;
        function l(e) {
          var t = e.match(n);
          return t
            ? { scheme: t[1], auth: t[2], host: t[3], port: t[4], path: t[5] }
            : null;
        }
        function c(e) {
          var t = "";
          return (
            e.scheme && (t += e.scheme + ":"),
            (t += "//"),
            e.auth && (t += e.auth + "@"),
            e.host && (t += e.host),
            e.port && (t += ":" + e.port),
            e.path && (t += e.path),
            t
          );
        }
        (u.urlParse = l), (u.urlGenerate = c);
        var r,
          o = ((r = []),
          function(e) {
            for (var t = 0; t < r.length; t++)
              if (r[t].input === e) {
                var n = r[0];
                return (r[0] = r[t]), (r[t] = n), r[0].result;
              }
            var a = (function(e) {
              var t = e,
                n = l(e);
              if (n) {
                if (!n.path) return e;
                t = n.path;
              }
              for (var a = u.isAbsolute(t), r = [], i = 0, o = 0; ; ) {
                if (((i = o), -1 === (o = t.indexOf("/", i)))) {
                  r.push(t.slice(i));
                  break;
                }
                for (r.push(t.slice(i, o)); o < t.length && "/" === t[o]; ) o++;
              }
              var s = 0;
              for (o = r.length - 1; 0 <= o; o--) {
                var d = r[o];
                "." === d
                  ? r.splice(o, 1)
                  : ".." === d
                    ? s++
                    : 0 < s &&
                      ("" === d
                        ? (r.splice(o + 1, s), (s = 0))
                        : (r.splice(o, 2), s--));
              }
              return (
                "" === (t = r.join("/")) && (t = a ? "/" : "."),
                n ? ((n.path = t), c(n)) : t
              );
            })(e);
            return (
              r.unshift({ input: e, result: a }), 32 < r.length && r.pop(), a
            );
          });
        function s(e, t) {
          "" === e && (e = "."), "" === t && (t = ".");
          var n = l(t),
            a = l(e);
          if ((a && (e = a.path || "/"), n && !n.scheme))
            return a && (n.scheme = a.scheme), c(n);
          if (n || t.match(i)) return t;
          if (a && !a.host && !a.path) return (a.host = t), c(a);
          var r = "/" === t.charAt(0) ? t : o(e.replace(/\/+$/, "") + "/" + t);
          return a ? ((a.path = r), c(a)) : r;
        }
        (u.normalize = o),
          (u.join = s),
          (u.isAbsolute = function(e) {
            return "/" === e.charAt(0) || n.test(e);
          }),
          (u.relative = function(e, t) {
            "" === e && (e = "."), (e = e.replace(/\/$/, ""));
            for (var n = 0; 0 !== t.indexOf(e + "/"); ) {
              var a = e.lastIndexOf("/");
              if (a < 0) return t;
              if ((e = e.slice(0, a)).match(/^([^\/]+:\/)?\/*$/)) return t;
              ++n;
            }
            return Array(n + 1).join("../") + t.substr(e.length + 1);
          });
        var t = !("__proto__" in Object.create(null));
        function a(e) {
          return e;
        }
        function d(e) {
          if (!e) return !1;
          var t = e.length;
          if (t < 9) return !1;
          if (
            95 !== e.charCodeAt(t - 1) ||
            95 !== e.charCodeAt(t - 2) ||
            111 !== e.charCodeAt(t - 3) ||
            116 !== e.charCodeAt(t - 4) ||
            111 !== e.charCodeAt(t - 5) ||
            114 !== e.charCodeAt(t - 6) ||
            112 !== e.charCodeAt(t - 7) ||
            95 !== e.charCodeAt(t - 8) ||
            95 !== e.charCodeAt(t - 9)
          )
            return !1;
          for (var n = t - 10; 0 <= n; n--)
            if (36 !== e.charCodeAt(n)) return !1;
          return !0;
        }
        function p(e, t) {
          return e === t
            ? 0
            : null === e
              ? 1
              : null === t
                ? -1
                : t < e
                  ? 1
                  : -1;
        }
        (u.toSetString = t
          ? a
          : function(e) {
              return d(e) ? "$" + e : e;
            }),
          (u.fromSetString = t
            ? a
            : function(e) {
                return d(e) ? e.slice(1) : e;
              }),
          (u.compareByOriginalPositions = function(e, t, n) {
            var a = p(e.source, t.source);
            return 0 !== a
              ? a
              : 0 != (a = e.originalLine - t.originalLine)
                ? a
                : 0 != (a = e.originalColumn - t.originalColumn) || n
                  ? a
                  : 0 != (a = e.generatedColumn - t.generatedColumn)
                    ? a
                    : 0 != (a = e.generatedLine - t.generatedLine)
                      ? a
                      : p(e.name, t.name);
          }),
          (u.compareByGeneratedPositionsDeflated = function(e, t, n) {
            var a = e.generatedLine - t.generatedLine;
            return 0 !== a
              ? a
              : 0 != (a = e.generatedColumn - t.generatedColumn) || n
                ? a
                : 0 !== (a = p(e.source, t.source))
                  ? a
                  : 0 != (a = e.originalLine - t.originalLine)
                    ? a
                    : 0 != (a = e.originalColumn - t.originalColumn)
                      ? a
                      : p(e.name, t.name);
          }),
          (u.compareByGeneratedPositionsInflated = function(e, t) {
            var n = e.generatedLine - t.generatedLine;
            return 0 !== n
              ? n
              : 0 != (n = e.generatedColumn - t.generatedColumn)
                ? n
                : 0 !== (n = p(e.source, t.source))
                  ? n
                  : 0 != (n = e.originalLine - t.originalLine)
                    ? n
                    : 0 != (n = e.originalColumn - t.originalColumn)
                      ? n
                      : p(e.name, t.name);
          }),
          (u.parseSourceMapInput = function(e) {
            return JSON.parse(e.replace(/^\)]}'[^\n]*\n/, ""));
          }),
          (u.computeSourceURL = function(e, t, n) {
            if (
              ((t = t || ""),
              e &&
                ("/" !== e[e.length - 1] && "/" !== t[0] && (e += "/"),
                (t = e + t)),
              n)
            ) {
              var a = l(n);
              if (!a) throw new Error("sourceMapURL could not be parsed");
              if (a.path) {
                var r = a.path.lastIndexOf("/");
                0 <= r && (a.path = a.path.substring(0, r + 1));
              }
              t = s(c(a), t);
            }
            return o(t);
          });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(238)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.is = function(e, t) {
            return "RegExpLiteral" === e.type && 0 <= e.flags.indexOf(t);
          }),
          (t.pullFlag = function(e, t) {
            var n = e.flags.split("");
            e.flags.indexOf(t) < 0 ||
              ((0, a().default)(n, t), (e.flags = n.join("")));
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            for (var n = Object.keys(t), a = 0; a < n.length; a++) {
              var r = n[a];
              if (e[r] !== t[r]) return !1;
            }
            return !0;
          });
      },
      function(e, t, n) {
        var a = n(41),
          r = n(269),
          i = n(270),
          o = n(271),
          s = n(272),
          d = n(273);
        function u(e) {
          var t = (this.__data__ = new a(e));
          this.size = t.size;
        }
        (u.prototype.clear = r),
          (u.prototype.delete = i),
          (u.prototype.get = o),
          (u.prototype.has = s),
          (u.prototype.set = d),
          (e.exports = u);
      },
      function(e, t, n) {
        var a = n(20)(n(11), "Map");
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(280),
          r = n(287),
          i = n(289),
          o = n(290),
          s = n(291);
        function d(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var a = e[t];
            this.set(a[0], a[1]);
          }
        }
        (d.prototype.clear = a),
          (d.prototype.delete = r),
          (d.prototype.get = i),
          (d.prototype.has = o),
          (d.prototype.set = s),
          (e.exports = d);
      },
      function(e, t, n) {
        var a = n(295),
          r = n(12),
          i = Object.prototype,
          o = i.hasOwnProperty,
          s = i.propertyIsEnumerable,
          d = a(
            (function() {
              return arguments;
            })()
          )
            ? a
            : function(e) {
                return r(e) && o.call(e, "callee") && !s.call(e, "callee");
              };
        e.exports = d;
      },
      function(e, s, d) {
        (function(e) {
          var t = d(11),
            n = d(296),
            a = "object" == typeof s && s && !s.nodeType && s,
            r = a && "object" == typeof e && e && !e.nodeType && e,
            i = r && r.exports === a ? t.Buffer : void 0,
            o = (i ? i.isBuffer : void 0) || n;
          e.exports = o;
        }.call(this, d(28)(e)));
      },
      function(e, t) {
        var a = /^(?:0|[1-9]\d*)$/;
        e.exports = function(e, t) {
          var n = typeof e;
          return (
            !!(t = null == t ? 9007199254740991 : t) &&
            ("number" == n || ("symbol" != n && a.test(e))) &&
            -1 < e &&
            e % 1 == 0 &&
            e < t
          );
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return (
            "number" == typeof e &&
            -1 < e &&
            e % 1 == 0 &&
            e <= 9007199254740991
          );
        };
      },
      function(e, t) {
        var n = Object.prototype;
        e.exports = function(e) {
          var t = e && e.constructor;
          return e === (("function" == typeof t && t.prototype) || n);
        };
      },
      function(e, t, n) {
        var a = n(305),
          r = n(156),
          i = Object.prototype.propertyIsEnumerable,
          o = Object.getOwnPropertySymbols,
          s = o
            ? function(t) {
                return null == t
                  ? []
                  : ((t = Object(t)),
                    a(o(t), function(e) {
                      return i.call(t, e);
                    }));
              }
            : r;
        e.exports = s;
      },
      function(e, t) {
        e.exports = function(e, t) {
          for (var n = -1, a = t.length, r = e.length; ++n < a; )
            e[r + n] = t[n];
          return e;
        };
      },
      function(e, t, n) {
        var a = n(154)(Object.getPrototypeOf, Object);
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(161);
        e.exports = function(e) {
          var t = new e.constructor(e.byteLength);
          return new a(t).set(new a(e)), t;
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.patternLikeCommon = t.functionDeclarationCommon = t.functionTypeAnnotationCommon = t.functionCommon = void 0);
        var a,
          r = (a = n(36)) && a.__esModule ? a : { default: a },
          i = n(22),
          o = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(18));
        (0, o.default)("ArrayExpression", {
          fields: {
            elements: {
              validate: (0, o.chain)(
                (0, o.assertValueType)("array"),
                (0, o.assertEach)(
                  (0, o.assertNodeOrValueType)(
                    "null",
                    "Expression",
                    "SpreadElement"
                  )
                )
              ),
              default: [],
            },
          },
          visitor: ["elements"],
          aliases: ["Expression"],
        }),
          (0, o.default)("AssignmentExpression", {
            fields: {
              operator: { validate: (0, o.assertValueType)("string") },
              left: { validate: (0, o.assertNodeType)("LVal") },
              right: { validate: (0, o.assertNodeType)("Expression") },
            },
            builder: ["operator", "left", "right"],
            visitor: ["left", "right"],
            aliases: ["Expression"],
          }),
          (0, o.default)("BinaryExpression", {
            builder: ["operator", "left", "right"],
            fields: {
              operator: {
                validate: o.assertOneOf.apply(void 0, i.BINARY_OPERATORS),
              },
              left: { validate: (0, o.assertNodeType)("Expression") },
              right: { validate: (0, o.assertNodeType)("Expression") },
            },
            visitor: ["left", "right"],
            aliases: ["Binary", "Expression"],
          }),
          (0, o.default)("InterpreterDirective", {
            builder: ["value"],
            fields: { value: { validate: (0, o.assertValueType)("string") } },
          }),
          (0, o.default)("Directive", {
            visitor: ["value"],
            fields: {
              value: { validate: (0, o.assertNodeType)("DirectiveLiteral") },
            },
          }),
          (0, o.default)("DirectiveLiteral", {
            builder: ["value"],
            fields: { value: { validate: (0, o.assertValueType)("string") } },
          }),
          (0, o.default)("BlockStatement", {
            builder: ["body", "directives"],
            visitor: ["directives", "body"],
            fields: {
              directives: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Directive"))
                ),
                default: [],
              },
              body: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Statement"))
                ),
              },
            },
            aliases: ["Scopable", "BlockParent", "Block", "Statement"],
          }),
          (0, o.default)("BreakStatement", {
            visitor: ["label"],
            fields: {
              label: {
                validate: (0, o.assertNodeType)("Identifier"),
                optional: !0,
              },
            },
            aliases: ["Statement", "Terminatorless", "CompletionStatement"],
          }),
          (0, o.default)("CallExpression", {
            visitor: ["callee", "arguments", "typeParameters", "typeArguments"],
            builder: ["callee", "arguments"],
            aliases: ["Expression"],
            fields: {
              callee: { validate: (0, o.assertNodeType)("Expression") },
              arguments: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)(
                    (0, o.assertNodeType)(
                      "Expression",
                      "SpreadElement",
                      "JSXNamespacedName"
                    )
                  )
                ),
              },
              optional: { validate: (0, o.assertOneOf)(!0, !1), optional: !0 },
              typeArguments: {
                validate: (0, o.assertNodeType)("TypeParameterInstantiation"),
                optional: !0,
              },
              typeParameters: {
                validate: (0, o.assertNodeType)("TSTypeParameterInstantiation"),
                optional: !0,
              },
            },
          }),
          (0, o.default)("CatchClause", {
            visitor: ["param", "body"],
            fields: {
              param: {
                validate: (0, o.assertNodeType)("Identifier"),
                optional: !0,
              },
              body: { validate: (0, o.assertNodeType)("BlockStatement") },
            },
            aliases: ["Scopable", "BlockParent"],
          }),
          (0, o.default)("ConditionalExpression", {
            visitor: ["test", "consequent", "alternate"],
            fields: {
              test: { validate: (0, o.assertNodeType)("Expression") },
              consequent: { validate: (0, o.assertNodeType)("Expression") },
              alternate: { validate: (0, o.assertNodeType)("Expression") },
            },
            aliases: ["Expression", "Conditional"],
          }),
          (0, o.default)("ContinueStatement", {
            visitor: ["label"],
            fields: {
              label: {
                validate: (0, o.assertNodeType)("Identifier"),
                optional: !0,
              },
            },
            aliases: ["Statement", "Terminatorless", "CompletionStatement"],
          }),
          (0, o.default)("DebuggerStatement", { aliases: ["Statement"] }),
          (0, o.default)("DoWhileStatement", {
            visitor: ["test", "body"],
            fields: {
              test: { validate: (0, o.assertNodeType)("Expression") },
              body: { validate: (0, o.assertNodeType)("Statement") },
            },
            aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
          }),
          (0, o.default)("EmptyStatement", { aliases: ["Statement"] }),
          (0, o.default)("ExpressionStatement", {
            visitor: ["expression"],
            fields: {
              expression: { validate: (0, o.assertNodeType)("Expression") },
            },
            aliases: ["Statement", "ExpressionWrapper"],
          }),
          (0, o.default)("File", {
            builder: ["program", "comments", "tokens"],
            visitor: ["program"],
            fields: { program: { validate: (0, o.assertNodeType)("Program") } },
          }),
          (0, o.default)("ForInStatement", {
            visitor: ["left", "right", "body"],
            aliases: [
              "Scopable",
              "Statement",
              "For",
              "BlockParent",
              "Loop",
              "ForXStatement",
            ],
            fields: {
              left: {
                validate: (0, o.assertNodeType)("VariableDeclaration", "LVal"),
              },
              right: { validate: (0, o.assertNodeType)("Expression") },
              body: { validate: (0, o.assertNodeType)("Statement") },
            },
          }),
          (0, o.default)("ForStatement", {
            visitor: ["init", "test", "update", "body"],
            aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
            fields: {
              init: {
                validate: (0, o.assertNodeType)(
                  "VariableDeclaration",
                  "Expression"
                ),
                optional: !0,
              },
              test: {
                validate: (0, o.assertNodeType)("Expression"),
                optional: !0,
              },
              update: {
                validate: (0, o.assertNodeType)("Expression"),
                optional: !0,
              },
              body: { validate: (0, o.assertNodeType)("Statement") },
            },
          });
        var s = {
          params: {
            validate: (0, o.chain)(
              (0, o.assertValueType)("array"),
              (0, o.assertEach)((0, o.assertNodeType)("LVal"))
            ),
          },
          generator: {
            default: !1,
            validate: (0, o.assertValueType)("boolean"),
          },
          async: { validate: (0, o.assertValueType)("boolean"), default: !1 },
        };
        t.functionCommon = s;
        var d = {
          returnType: {
            validate: (0, o.assertNodeType)(
              "TypeAnnotation",
              "TSTypeAnnotation",
              "Noop"
            ),
            optional: !0,
          },
          typeParameters: {
            validate: (0, o.assertNodeType)(
              "TypeParameterDeclaration",
              "TSTypeParameterDeclaration",
              "Noop"
            ),
            optional: !0,
          },
        };
        t.functionTypeAnnotationCommon = d;
        var u = Object.assign({}, s, {
          declare: {
            validate: (0, o.assertValueType)("boolean"),
            optional: !0,
          },
          id: { validate: (0, o.assertNodeType)("Identifier"), optional: !0 },
        });
        (t.functionDeclarationCommon = u),
          (0, o.default)("FunctionDeclaration", {
            builder: ["id", "params", "body", "generator", "async"],
            visitor: ["id", "params", "body", "returnType", "typeParameters"],
            fields: Object.assign({}, u, d, {
              body: { validate: (0, o.assertNodeType)("BlockStatement") },
            }),
            aliases: [
              "Scopable",
              "Function",
              "BlockParent",
              "FunctionParent",
              "Statement",
              "Pureish",
              "Declaration",
            ],
          }),
          (0, o.default)("FunctionExpression", {
            inherits: "FunctionDeclaration",
            aliases: [
              "Scopable",
              "Function",
              "BlockParent",
              "FunctionParent",
              "Expression",
              "Pureish",
            ],
            fields: Object.assign({}, s, d, {
              id: {
                validate: (0, o.assertNodeType)("Identifier"),
                optional: !0,
              },
              body: { validate: (0, o.assertNodeType)("BlockStatement") },
            }),
          });
        var l,
          c,
          p,
          g,
          f,
          h,
          R = {
            typeAnnotation: {
              validate: (0, o.assertNodeType)(
                "TypeAnnotation",
                "TSTypeAnnotation",
                "Noop"
              ),
              optional: !0,
            },
            decorators: {
              validate: (0, o.chain)(
                (0, o.assertValueType)("array"),
                (0, o.assertEach)((0, o.assertNodeType)("Decorator"))
              ),
            },
          };
        (t.patternLikeCommon = R),
          (0, o.default)("Identifier", {
            builder: ["name"],
            visitor: ["typeAnnotation"],
            aliases: ["Expression", "PatternLike", "LVal", "TSEntityName"],
            fields: Object.assign({}, R, {
              name: {
                validate: (0, o.chain)(function(e, t, n) {
                  (0, r.default)(n);
                }, (0, o.assertValueType)("string")),
              },
              optional: {
                validate: (0, o.assertValueType)("boolean"),
                optional: !0,
              },
            }),
          }),
          (0, o.default)("IfStatement", {
            visitor: ["test", "consequent", "alternate"],
            aliases: ["Statement", "Conditional"],
            fields: {
              test: { validate: (0, o.assertNodeType)("Expression") },
              consequent: { validate: (0, o.assertNodeType)("Statement") },
              alternate: {
                optional: !0,
                validate: (0, o.assertNodeType)("Statement"),
              },
            },
          }),
          (0, o.default)("LabeledStatement", {
            visitor: ["label", "body"],
            aliases: ["Statement"],
            fields: {
              label: { validate: (0, o.assertNodeType)("Identifier") },
              body: { validate: (0, o.assertNodeType)("Statement") },
            },
          }),
          (0, o.default)("StringLiteral", {
            builder: ["value"],
            fields: { value: { validate: (0, o.assertValueType)("string") } },
            aliases: ["Expression", "Pureish", "Literal", "Immutable"],
          }),
          (0, o.default)("NumericLiteral", {
            builder: ["value"],
            deprecatedAlias: "NumberLiteral",
            fields: { value: { validate: (0, o.assertValueType)("number") } },
            aliases: ["Expression", "Pureish", "Literal", "Immutable"],
          }),
          (0, o.default)("NullLiteral", {
            aliases: ["Expression", "Pureish", "Literal", "Immutable"],
          }),
          (0, o.default)("BooleanLiteral", {
            builder: ["value"],
            fields: { value: { validate: (0, o.assertValueType)("boolean") } },
            aliases: ["Expression", "Pureish", "Literal", "Immutable"],
          }),
          (0, o.default)("RegExpLiteral", {
            builder: ["pattern", "flags"],
            deprecatedAlias: "RegexLiteral",
            aliases: ["Expression", "Literal"],
            fields: {
              pattern: { validate: (0, o.assertValueType)("string") },
              flags: {
                validate: (0, o.assertValueType)("string"),
                default: "",
              },
            },
          }),
          (0, o.default)("LogicalExpression", {
            builder: ["operator", "left", "right"],
            visitor: ["left", "right"],
            aliases: ["Binary", "Expression"],
            fields: {
              operator: {
                validate: o.assertOneOf.apply(void 0, i.LOGICAL_OPERATORS),
              },
              left: { validate: (0, o.assertNodeType)("Expression") },
              right: { validate: (0, o.assertNodeType)("Expression") },
            },
          }),
          (0, o.default)("MemberExpression", {
            builder: ["object", "property", "computed", "optional"],
            visitor: ["object", "property"],
            aliases: ["Expression", "LVal"],
            fields: {
              object: { validate: (0, o.assertNodeType)("Expression") },
              property: {
                validate: ((f = (0, o.assertNodeType)(
                  "Identifier",
                  "PrivateName"
                )),
                (h = (0, o.assertNodeType)("Expression")),
                function(e, t, n) {
                  (e.computed ? h : f)(e, t, n);
                }),
              },
              computed: { default: !1 },
              optional: { validate: (0, o.assertOneOf)(!0, !1), optional: !0 },
            },
          }),
          (0, o.default)("NewExpression", { inherits: "CallExpression" }),
          (0, o.default)("Program", {
            visitor: ["directives", "body"],
            builder: ["body", "directives", "sourceType", "interpreter"],
            fields: {
              sourceFile: { validate: (0, o.assertValueType)("string") },
              sourceType: {
                validate: (0, o.assertOneOf)("script", "module"),
                default: "script",
              },
              interpreter: {
                validate: (0, o.assertNodeType)("InterpreterDirective"),
                default: null,
                optional: !0,
              },
              directives: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Directive"))
                ),
                default: [],
              },
              body: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Statement"))
                ),
              },
            },
            aliases: ["Scopable", "BlockParent", "Block"],
          }),
          (0, o.default)("ObjectExpression", {
            visitor: ["properties"],
            aliases: ["Expression"],
            fields: {
              properties: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)(
                    (0, o.assertNodeType)(
                      "ObjectMethod",
                      "ObjectProperty",
                      "SpreadElement"
                    )
                  )
                ),
              },
            },
          }),
          (0, o.default)("ObjectMethod", {
            builder: ["kind", "key", "params", "body", "computed"],
            fields: Object.assign({}, s, d, {
              kind: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("string"),
                  (0, o.assertOneOf)("method", "get", "set")
                ),
                default: "method",
              },
              computed: {
                validate: (0, o.assertValueType)("boolean"),
                default: !1,
              },
              key: {
                validate: ((p = (0, o.assertNodeType)(
                  "Identifier",
                  "StringLiteral",
                  "NumericLiteral"
                )),
                (g = (0, o.assertNodeType)("Expression")),
                function(e, t, n) {
                  (e.computed ? g : p)(e, t, n);
                }),
              },
              decorators: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Decorator"))
                ),
              },
              body: { validate: (0, o.assertNodeType)("BlockStatement") },
            }),
            visitor: [
              "key",
              "params",
              "body",
              "decorators",
              "returnType",
              "typeParameters",
            ],
            aliases: [
              "UserWhitespacable",
              "Function",
              "Scopable",
              "BlockParent",
              "FunctionParent",
              "Method",
              "ObjectMember",
            ],
          }),
          (0, o.default)("ObjectProperty", {
            builder: ["key", "value", "computed", "shorthand", "decorators"],
            fields: {
              computed: {
                validate: (0, o.assertValueType)("boolean"),
                default: !1,
              },
              key: {
                validate: ((l = (0, o.assertNodeType)(
                  "Identifier",
                  "StringLiteral",
                  "NumericLiteral"
                )),
                (c = (0, o.assertNodeType)("Expression")),
                function(e, t, n) {
                  (e.computed ? c : l)(e, t, n);
                }),
              },
              value: {
                validate: (0, o.assertNodeType)("Expression", "PatternLike"),
              },
              shorthand: {
                validate: (0, o.assertValueType)("boolean"),
                default: !1,
              },
              decorators: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Decorator"))
                ),
                optional: !0,
              },
            },
            visitor: ["key", "value", "decorators"],
            aliases: ["UserWhitespacable", "Property", "ObjectMember"],
          }),
          (0, o.default)("RestElement", {
            visitor: ["argument", "typeAnnotation"],
            builder: ["argument"],
            aliases: ["LVal", "PatternLike"],
            deprecatedAlias: "RestProperty",
            fields: Object.assign({}, R, {
              argument: { validate: (0, o.assertNodeType)("LVal") },
            }),
          }),
          (0, o.default)("ReturnStatement", {
            visitor: ["argument"],
            aliases: ["Statement", "Terminatorless", "CompletionStatement"],
            fields: {
              argument: {
                validate: (0, o.assertNodeType)("Expression"),
                optional: !0,
              },
            },
          }),
          (0, o.default)("SequenceExpression", {
            visitor: ["expressions"],
            fields: {
              expressions: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Expression"))
                ),
              },
            },
            aliases: ["Expression"],
          }),
          (0, o.default)("SwitchCase", {
            visitor: ["test", "consequent"],
            fields: {
              test: {
                validate: (0, o.assertNodeType)("Expression"),
                optional: !0,
              },
              consequent: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("Statement"))
                ),
              },
            },
          }),
          (0, o.default)("SwitchStatement", {
            visitor: ["discriminant", "cases"],
            aliases: ["Statement", "BlockParent", "Scopable"],
            fields: {
              discriminant: { validate: (0, o.assertNodeType)("Expression") },
              cases: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("SwitchCase"))
                ),
              },
            },
          }),
          (0, o.default)("ThisExpression", { aliases: ["Expression"] }),
          (0, o.default)("ThrowStatement", {
            visitor: ["argument"],
            aliases: ["Statement", "Terminatorless", "CompletionStatement"],
            fields: {
              argument: { validate: (0, o.assertNodeType)("Expression") },
            },
          }),
          (0, o.default)("TryStatement", {
            visitor: ["block", "handler", "finalizer"],
            aliases: ["Statement"],
            fields: {
              block: { validate: (0, o.assertNodeType)("BlockStatement") },
              handler: {
                optional: !0,
                validate: (0, o.assertNodeType)("CatchClause"),
              },
              finalizer: {
                optional: !0,
                validate: (0, o.assertNodeType)("BlockStatement"),
              },
            },
          }),
          (0, o.default)("UnaryExpression", {
            builder: ["operator", "argument", "prefix"],
            fields: {
              prefix: { default: !0 },
              argument: { validate: (0, o.assertNodeType)("Expression") },
              operator: {
                validate: o.assertOneOf.apply(void 0, i.UNARY_OPERATORS),
              },
            },
            visitor: ["argument"],
            aliases: ["UnaryLike", "Expression"],
          }),
          (0, o.default)("UpdateExpression", {
            builder: ["operator", "argument", "prefix"],
            fields: {
              prefix: { default: !1 },
              argument: { validate: (0, o.assertNodeType)("Expression") },
              operator: {
                validate: o.assertOneOf.apply(void 0, i.UPDATE_OPERATORS),
              },
            },
            visitor: ["argument"],
            aliases: ["Expression"],
          }),
          (0, o.default)("VariableDeclaration", {
            builder: ["kind", "declarations"],
            visitor: ["declarations"],
            aliases: ["Statement", "Declaration"],
            fields: {
              declare: {
                validate: (0, o.assertValueType)("boolean"),
                optional: !0,
              },
              kind: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("string"),
                  (0, o.assertOneOf)("var", "let", "const")
                ),
              },
              declarations: {
                validate: (0, o.chain)(
                  (0, o.assertValueType)("array"),
                  (0, o.assertEach)((0, o.assertNodeType)("VariableDeclarator"))
                ),
              },
            },
          }),
          (0, o.default)("VariableDeclarator", {
            visitor: ["id", "init"],
            fields: {
              id: { validate: (0, o.assertNodeType)("LVal") },
              definite: {
                optional: !0,
                validate: (0, o.assertValueType)("boolean"),
              },
              init: {
                optional: !0,
                validate: (0, o.assertNodeType)("Expression"),
              },
            },
          }),
          (0, o.default)("WhileStatement", {
            visitor: ["test", "body"],
            aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
            fields: {
              test: { validate: (0, o.assertNodeType)("Expression") },
              body: {
                validate: (0, o.assertNodeType)("BlockStatement", "Statement"),
              },
            },
          }),
          (0, o.default)("WithStatement", {
            visitor: ["object", "body"],
            aliases: ["Statement"],
            fields: {
              object: { validate: (0, o.assertNodeType)("Expression") },
              body: {
                validate: (0, o.assertNodeType)("BlockStatement", "Statement"),
              },
            },
          });
      },
      function(e, t, n) {
        !(function() {
          "use strict";
          (t.ast = n(324)), (t.code = n(162)), (t.keyword = n(325));
        })();
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            return (
              !!t &&
              (!!(0, r.default)(t.type, e) &&
                (void 0 === n || (0, a.default)(t, n)))
            );
          });
        var a = i(n(61)),
          r = i(n(77));
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            if (e === t) return !0;
            if (s.ALIAS_KEYS[t]) return !1;
            var n = s.FLIPPED_ALIAS_KEYS[t];
            if (n) {
              if (n[0] === e) return !0;
              var a = n,
                r = Array.isArray(a),
                i = 0;
              for (a = r ? a : a[Symbol.iterator](); ; ) {
                var o;
                if (r) {
                  if (i >= a.length) break;
                  o = a[i++];
                } else {
                  if ((i = a.next()).done) break;
                  o = i.value;
                }
                if (e === o) return !0;
              }
            }
            return !1;
          });
        var s = n(13);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.classMethodOrDeclareMethodCommon = t.classMethodOrPropertyCommon = void 0);
        var a = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(18)),
          r = n(74);
        (0, a.default)("AssignmentPattern", {
          visitor: ["left", "right"],
          builder: ["left", "right"],
          aliases: ["Pattern", "PatternLike", "LVal"],
          fields: Object.assign({}, r.patternLikeCommon, {
            left: {
              validate: (0, a.assertNodeType)(
                "Identifier",
                "ObjectPattern",
                "ArrayPattern"
              ),
            },
            right: { validate: (0, a.assertNodeType)("Expression") },
            decorators: {
              validate: (0, a.chain)(
                (0, a.assertValueType)("array"),
                (0, a.assertEach)((0, a.assertNodeType)("Decorator"))
              ),
            },
          }),
        }),
          (0, a.default)("ArrayPattern", {
            visitor: ["elements", "typeAnnotation"],
            builder: ["elements"],
            aliases: ["Pattern", "PatternLike", "LVal"],
            fields: Object.assign({}, r.patternLikeCommon, {
              elements: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("PatternLike"))
                ),
              },
              decorators: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("Decorator"))
                ),
              },
            }),
          }),
          (0, a.default)("ArrowFunctionExpression", {
            builder: ["params", "body", "async"],
            visitor: ["params", "body", "returnType", "typeParameters"],
            aliases: [
              "Scopable",
              "Function",
              "BlockParent",
              "FunctionParent",
              "Expression",
              "Pureish",
            ],
            fields: Object.assign(
              {},
              r.functionCommon,
              r.functionTypeAnnotationCommon,
              {
                expression: { validate: (0, a.assertValueType)("boolean") },
                body: {
                  validate: (0, a.assertNodeType)(
                    "BlockStatement",
                    "Expression"
                  ),
                },
              }
            ),
          }),
          (0, a.default)("ClassBody", {
            visitor: ["body"],
            fields: {
              body: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)(
                      "ClassMethod",
                      "ClassProperty",
                      "ClassPrivateProperty",
                      "TSDeclareMethod",
                      "TSIndexSignature"
                    )
                  )
                ),
              },
            },
          });
        var i = {
          typeParameters: {
            validate: (0, a.assertNodeType)(
              "TypeParameterDeclaration",
              "TSTypeParameterDeclaration",
              "Noop"
            ),
            optional: !0,
          },
          body: { validate: (0, a.assertNodeType)("ClassBody") },
          superClass: {
            optional: !0,
            validate: (0, a.assertNodeType)("Expression"),
          },
          superTypeParameters: {
            validate: (0, a.assertNodeType)(
              "TypeParameterInstantiation",
              "TSTypeParameterInstantiation"
            ),
            optional: !0,
          },
          implements: {
            validate: (0, a.chain)(
              (0, a.assertValueType)("array"),
              (0, a.assertEach)(
                (0, a.assertNodeType)(
                  "TSExpressionWithTypeArguments",
                  "ClassImplements"
                )
              )
            ),
            optional: !0,
          },
        };
        (0, a.default)("ClassDeclaration", {
          builder: ["id", "superClass", "body", "decorators"],
          visitor: [
            "id",
            "body",
            "superClass",
            "mixins",
            "typeParameters",
            "superTypeParameters",
            "implements",
            "decorators",
          ],
          aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
          fields: Object.assign({}, i, {
            declare: {
              validate: (0, a.assertValueType)("boolean"),
              optional: !0,
            },
            abstract: {
              validate: (0, a.assertValueType)("boolean"),
              optional: !0,
            },
            id: { validate: (0, a.assertNodeType)("Identifier"), optional: !0 },
            decorators: {
              validate: (0, a.chain)(
                (0, a.assertValueType)("array"),
                (0, a.assertEach)((0, a.assertNodeType)("Decorator"))
              ),
              optional: !0,
            },
          }),
        }),
          (0, a.default)("ClassExpression", {
            inherits: "ClassDeclaration",
            aliases: ["Scopable", "Class", "Expression", "Pureish"],
            fields: Object.assign({}, i, {
              id: {
                optional: !0,
                validate: (0, a.assertNodeType)("Identifier"),
              },
              body: { validate: (0, a.assertNodeType)("ClassBody") },
              superClass: {
                optional: !0,
                validate: (0, a.assertNodeType)("Expression"),
              },
              decorators: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("Decorator"))
                ),
                optional: !0,
              },
            }),
          }),
          (0, a.default)("ExportAllDeclaration", {
            visitor: ["source"],
            aliases: [
              "Statement",
              "Declaration",
              "ModuleDeclaration",
              "ExportDeclaration",
            ],
            fields: {
              source: { validate: (0, a.assertNodeType)("StringLiteral") },
            },
          }),
          (0, a.default)("ExportDefaultDeclaration", {
            visitor: ["declaration"],
            aliases: [
              "Statement",
              "Declaration",
              "ModuleDeclaration",
              "ExportDeclaration",
            ],
            fields: {
              declaration: {
                validate: (0, a.assertNodeType)(
                  "FunctionDeclaration",
                  "TSDeclareFunction",
                  "ClassDeclaration",
                  "Expression"
                ),
              },
            },
          }),
          (0, a.default)("ExportNamedDeclaration", {
            visitor: ["declaration", "specifiers", "source"],
            aliases: [
              "Statement",
              "Declaration",
              "ModuleDeclaration",
              "ExportDeclaration",
            ],
            fields: {
              declaration: {
                validate: (0, a.assertNodeType)("Declaration"),
                optional: !0,
              },
              specifiers: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)(
                      "ExportSpecifier",
                      "ExportDefaultSpecifier",
                      "ExportNamespaceSpecifier"
                    )
                  )
                ),
              },
              source: {
                validate: (0, a.assertNodeType)("StringLiteral"),
                optional: !0,
              },
            },
          }),
          (0, a.default)("ExportSpecifier", {
            visitor: ["local", "exported"],
            aliases: ["ModuleSpecifier"],
            fields: {
              local: { validate: (0, a.assertNodeType)("Identifier") },
              exported: { validate: (0, a.assertNodeType)("Identifier") },
            },
          }),
          (0, a.default)("ForOfStatement", {
            visitor: ["left", "right", "body"],
            aliases: [
              "Scopable",
              "Statement",
              "For",
              "BlockParent",
              "Loop",
              "ForXStatement",
            ],
            fields: {
              left: {
                validate: (0, a.assertNodeType)("VariableDeclaration", "LVal"),
              },
              right: { validate: (0, a.assertNodeType)("Expression") },
              body: { validate: (0, a.assertNodeType)("Statement") },
              await: {
                default: !1,
                validate: (0, a.assertValueType)("boolean"),
              },
            },
          }),
          (0, a.default)("ImportDeclaration", {
            visitor: ["specifiers", "source"],
            aliases: ["Statement", "Declaration", "ModuleDeclaration"],
            fields: {
              specifiers: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)(
                      "ImportSpecifier",
                      "ImportDefaultSpecifier",
                      "ImportNamespaceSpecifier"
                    )
                  )
                ),
              },
              source: { validate: (0, a.assertNodeType)("StringLiteral") },
            },
          }),
          (0, a.default)("ImportDefaultSpecifier", {
            visitor: ["local"],
            aliases: ["ModuleSpecifier"],
            fields: {
              local: { validate: (0, a.assertNodeType)("Identifier") },
            },
          }),
          (0, a.default)("ImportNamespaceSpecifier", {
            visitor: ["local"],
            aliases: ["ModuleSpecifier"],
            fields: {
              local: { validate: (0, a.assertNodeType)("Identifier") },
            },
          }),
          (0, a.default)("ImportSpecifier", {
            visitor: ["local", "imported"],
            aliases: ["ModuleSpecifier"],
            fields: {
              local: { validate: (0, a.assertNodeType)("Identifier") },
              imported: { validate: (0, a.assertNodeType)("Identifier") },
              importKind: {
                validate: (0, a.assertOneOf)(null, "type", "typeof"),
              },
            },
          }),
          (0, a.default)("MetaProperty", {
            visitor: ["meta", "property"],
            aliases: ["Expression"],
            fields: {
              meta: { validate: (0, a.assertNodeType)("Identifier") },
              property: { validate: (0, a.assertNodeType)("Identifier") },
            },
          });
        var o,
          s,
          d = {
            abstract: {
              validate: (0, a.assertValueType)("boolean"),
              optional: !0,
            },
            accessibility: {
              validate: (0, a.chain)(
                (0, a.assertValueType)("string"),
                (0, a.assertOneOf)("public", "private", "protected")
              ),
              optional: !0,
            },
            static: {
              validate: (0, a.assertValueType)("boolean"),
              optional: !0,
            },
            computed: {
              default: !1,
              validate: (0, a.assertValueType)("boolean"),
            },
            optional: {
              validate: (0, a.assertValueType)("boolean"),
              optional: !0,
            },
            key: {
              validate: (0, a.chain)(
                ((o = (0, a.assertNodeType)(
                  "Identifier",
                  "StringLiteral",
                  "NumericLiteral"
                )),
                (s = (0, a.assertNodeType)("Expression")),
                function(e, t, n) {
                  (e.computed ? s : o)(e, t, n);
                }),
                (0, a.assertNodeType)(
                  "Identifier",
                  "StringLiteral",
                  "NumericLiteral",
                  "Expression"
                )
              ),
            },
          };
        t.classMethodOrPropertyCommon = d;
        var u = Object.assign({}, r.functionCommon, d, {
          kind: {
            validate: (0, a.chain)(
              (0, a.assertValueType)("string"),
              (0, a.assertOneOf)("get", "set", "method", "constructor")
            ),
            default: "method",
          },
          access: {
            validate: (0, a.chain)(
              (0, a.assertValueType)("string"),
              (0, a.assertOneOf)("public", "private", "protected")
            ),
            optional: !0,
          },
          decorators: {
            validate: (0, a.chain)(
              (0, a.assertValueType)("array"),
              (0, a.assertEach)((0, a.assertNodeType)("Decorator"))
            ),
            optional: !0,
          },
        });
        (t.classMethodOrDeclareMethodCommon = u),
          (0, a.default)("ClassMethod", {
            aliases: [
              "Function",
              "Scopable",
              "BlockParent",
              "FunctionParent",
              "Method",
            ],
            builder: ["kind", "key", "params", "body", "computed", "static"],
            visitor: [
              "key",
              "params",
              "body",
              "decorators",
              "returnType",
              "typeParameters",
            ],
            fields: Object.assign({}, u, r.functionTypeAnnotationCommon, {
              body: { validate: (0, a.assertNodeType)("BlockStatement") },
            }),
          }),
          (0, a.default)("ObjectPattern", {
            visitor: ["properties", "typeAnnotation"],
            builder: ["properties"],
            aliases: ["Pattern", "PatternLike", "LVal"],
            fields: Object.assign({}, r.patternLikeCommon, {
              properties: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)("RestElement", "ObjectProperty")
                  )
                ),
              },
            }),
          }),
          (0, a.default)("SpreadElement", {
            visitor: ["argument"],
            aliases: ["UnaryLike"],
            deprecatedAlias: "SpreadProperty",
            fields: {
              argument: { validate: (0, a.assertNodeType)("Expression") },
            },
          }),
          (0, a.default)("Super", { aliases: ["Expression"] }),
          (0, a.default)("TaggedTemplateExpression", {
            visitor: ["tag", "quasi"],
            aliases: ["Expression"],
            fields: {
              tag: { validate: (0, a.assertNodeType)("Expression") },
              quasi: { validate: (0, a.assertNodeType)("TemplateLiteral") },
              typeParameters: {
                validate: (0, a.assertNodeType)(
                  "TypeParameterInstantiation",
                  "TSTypeParameterInstantiation"
                ),
                optional: !0,
              },
            },
          }),
          (0, a.default)("TemplateElement", {
            builder: ["value", "tail"],
            fields: {
              value: {},
              tail: {
                validate: (0, a.assertValueType)("boolean"),
                default: !1,
              },
            },
          }),
          (0, a.default)("TemplateLiteral", {
            visitor: ["quasis", "expressions"],
            aliases: ["Expression", "Literal"],
            fields: {
              quasis: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("TemplateElement"))
                ),
              },
              expressions: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("Expression"))
                ),
              },
            },
          }),
          (0, a.default)("YieldExpression", {
            builder: ["argument", "delegate"],
            visitor: ["argument"],
            aliases: ["Expression", "Terminatorless"],
            fields: {
              delegate: {
                validate: (0, a.assertValueType)("boolean"),
                default: !1,
              },
              argument: {
                optional: !0,
                validate: (0, a.assertNodeType)("Expression"),
              },
            },
          });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(338)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            t &&
              n &&
              (t[e] = (0, a().default)([].concat(t[e], n[e]).filter(Boolean)));
          });
      },
      function(e, t, n) {
        var a = n(343),
          r = n(344),
          i = n(345);
        e.exports = function(e, t, n) {
          return t == t ? i(e, t, n) : a(e, r, n);
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var t = -1,
            n = Array(e.size);
          return (
            e.forEach(function(e) {
              n[++t] = e;
            }),
            n
          );
        };
      },
      function(e, t, n) {
        var i = n(80),
          o = n(30),
          s = n(379),
          d = n(49),
          u = n(182),
          l = Math.max;
        e.exports = function(e, t, n, a) {
          (e = o(e) ? e : u(e)), (n = n && !a ? d(n) : 0);
          var r = e.length;
          return (
            n < 0 && (n = l(r + n, 0)),
            s(e) ? n <= r && -1 < e.indexOf(t, n) : !!r && -1 < i(e, t, n)
          );
        };
      },
      function(e, t, n) {
        var a = n(384);
        e.exports = function(e) {
          return null == e ? "" : a(e);
        };
      },
      function(e, t, n) {
        "use strict";
        function g() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (g = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            if (!e.isExportDeclaration())
              throw new Error("Only export declarations can be splitted.");
            var t = e.isExportDefaultDeclaration(),
              n = e.get("declaration"),
              a = n.isClassDeclaration();
            if (t) {
              var r = n.isFunctionDeclaration() || a,
                i = n.isScope() ? n.scope.parent : n.scope,
                o = n.node.id,
                s = !1;
              o ||
                ((s = !0),
                (o = i.generateUidIdentifier("default")),
                (r || n.isFunctionExpression() || n.isClassExpression()) &&
                  (n.node.id = g().cloneNode(o)));
              var d = r
                  ? n
                  : g().variableDeclaration("var", [
                      g().variableDeclarator(g().cloneNode(o), n.node),
                    ]),
                u = g().exportNamedDeclaration(null, [
                  g().exportSpecifier(
                    g().cloneNode(o),
                    g().identifier("default")
                  ),
                ]);
              return (
                e.insertAfter(u),
                e.replaceWith(d),
                s && i.registerBinding(a ? "let" : "var", e),
                e
              );
            }
            if (0 < e.get("specifiers").length)
              throw new Error(
                "It doesn't make sense to split exported specifiers."
              );
            var l = n.getOuterBindingIdentifiers(),
              c = Object.keys(l).map(function(e) {
                return g().exportSpecifier(
                  g().identifier(e),
                  g().identifier(e)
                );
              }),
              p = g().exportNamedDeclaration(null, c);
            return e.insertAfter(p), e.replaceWith(n.node), e;
          });
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(19),
          r = n.n(a);
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = function(e, t, n) {
            return new o(e, t, n).generate();
          }),
          (exports.CodeGenerator = void 0);
        var l = i(n(394));
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var o = (function(u) {
            function e(e, t, n) {
              var a;
              void 0 === t && (t = {});
              var r,
                i,
                o,
                s = ((r = n),
                (o = {
                  auxiliaryCommentBefore: (i = t).auxiliaryCommentBefore,
                  auxiliaryCommentAfter: i.auxiliaryCommentAfter,
                  shouldPrintComment: i.shouldPrintComment,
                  retainLines: i.retainLines,
                  retainFunctionParens: i.retainFunctionParens,
                  comments: null == i.comments || i.comments,
                  compact: i.compact,
                  minified: i.minified,
                  concise: i.concise,
                  jsonCompatibleStrings: i.jsonCompatibleStrings,
                  indent: { adjustMultilineComment: !0, style: "  ", base: 0 },
                  decoratorsBeforeExport: !!i.decoratorsBeforeExport,
                  jsescOption: Object.assign(
                    { quotes: "double", wrap: !0 },
                    i.jsescOption
                  ),
                }).minified
                  ? ((o.compact = !0),
                    (o.shouldPrintComment =
                      o.shouldPrintComment ||
                      function() {
                        return o.comments;
                      }))
                  : (o.shouldPrintComment =
                      o.shouldPrintComment ||
                      function(e) {
                        return (
                          o.comments ||
                          0 <= e.indexOf("@license") ||
                          0 <= e.indexOf("@preserve")
                        );
                      }),
                "auto" === o.compact &&
                  ((o.compact = 5e5 < r.length),
                  o.compact &&
                    console.error(
                      "[BABEL] Note: The code generator has deoptimised the styling of " +
                        i.filename +
                        " as it exceeds the max of 500KB."
                    )),
                o.compact && (o.indent.adjustMultilineComment = !1),
                o),
                d = t.sourceMaps ? new l.default(t, n) : null;
              return ((a = u.call(this, s, d) || this).ast = e), a;
            }
            return (
              r()(e, u),
              (e.prototype.generate = function() {
                return u.prototype.generate.call(this, this.ast);
              }),
              e
            );
          })(i(n(402)).default),
          s = (function() {
            function e(e, t, n) {
              this._generator = new o(e, t, n);
            }
            return (
              (e.prototype.generate = function() {
                return this._generator.generate();
              }),
              e
            );
          })();
        exports.CodeGenerator = s;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(414)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.Identifier = function(e) {
            var t = this;
            this.exactSource(e.loc, function() {
              t.word(e.name);
            });
          }),
          (t.SpreadElement = t.RestElement = function(e) {
            this.token("..."), this.print(e.argument, e);
          }),
          (t.ObjectPattern = t.ObjectExpression = function(e) {
            var t = e.properties;
            this.token("{"),
              this.printInnerComments(e),
              t.length &&
                (this.space(),
                this.printList(t, e, { indent: !0, statement: !0 }),
                this.space()),
              this.token("}");
          }),
          (t.ObjectMethod = function(e) {
            this.printJoin(e.decorators, e),
              this._methodHead(e),
              this.space(),
              this.print(e.body, e);
          }),
          (t.ObjectProperty = function(e) {
            if ((this.printJoin(e.decorators, e), e.computed))
              this.token("["), this.print(e.key, e), this.token("]");
            else {
              if (
                a().isAssignmentPattern(e.value) &&
                a().isIdentifier(e.key) &&
                e.key.name === e.value.left.name
              )
                return void this.print(e.value, e);
              if (
                (this.print(e.key, e),
                e.shorthand &&
                  a().isIdentifier(e.key) &&
                  a().isIdentifier(e.value) &&
                  e.key.name === e.value.name)
              )
                return;
            }
            this.token(":"), this.space(), this.print(e.value, e);
          }),
          (t.ArrayPattern = t.ArrayExpression = function(e) {
            var t = e.elements,
              n = t.length;
            this.token("["), this.printInnerComments(e);
            for (var a = 0; a < t.length; a++) {
              var r = t[a];
              r
                ? (0 < a && this.space(),
                  this.print(r, e),
                  a < n - 1 && this.token(","))
                : this.token(",");
            }
            this.token("]");
          }),
          (t.RegExpLiteral = function(e) {
            this.word("/" + e.pattern + "/" + e.flags);
          }),
          (t.BooleanLiteral = function(e) {
            this.word(e.value ? "true" : "false");
          }),
          (t.NullLiteral = function() {
            this.word("null");
          }),
          (t.NumericLiteral = function(e) {
            var t = this.getPossibleRaw(e),
              n = e.value + "";
            null == t
              ? this.number(n)
              : this.format.minified
                ? this.number(t.length < n.length ? t : n)
                : this.number(t);
          }),
          (t.StringLiteral = function(e) {
            var t = this.getPossibleRaw(e);
            if (this.format.minified || null == t) {
              var n = this.format.jsescOption;
              this.format.jsonCompatibleStrings && (n.json = !0);
              var a = (0, r().default)(e.value, n);
              return this.token(a);
            }
            this.token(t);
          }),
          (t.BigIntLiteral = function(e) {
            var t = this.getPossibleRaw(e);
            this.format.minified || null == t
              ? this.token(e.value)
              : this.token(t);
          });
      },
      function(e, t, n) {
        "use strict";
        function r(e, t) {
          (e.prototype = Object.create(t.prototype)),
            ((e.prototype.constructor = e).__proto__ = t);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          "function" == typeof Symbol &&
            Symbol.asyncIterator &&
            Symbol.asyncIterator;
        var a = function(e, t) {
          void 0 === t && (t = {}),
            (this.label = e),
            (this.keyword = t.keyword),
            (this.beforeExpr = !!t.beforeExpr),
            (this.startsExpr = !!t.startsExpr),
            (this.rightAssociative = !!t.rightAssociative),
            (this.isLoop = !!t.isLoop),
            (this.isAssign = !!t.isAssign),
            (this.prefix = !!t.prefix),
            (this.postfix = !!t.postfix),
            (this.binop = 0 === t.binop ? 0 : t.binop || null),
            (this.updateContext = null);
        };
        function i(e, t) {
          return (
            void 0 === t && (t = {}),
            new a(e, Object.assign({}, t, { keyword: e }))
          );
        }
        function o(e, t) {
          return new a(e, { beforeExpr: !0, binop: t });
        }
        var x = {
            num: new a("num", { startsExpr: !0 }),
            bigint: new a("bigint", { startsExpr: !0 }),
            regexp: new a("regexp", { startsExpr: !0 }),
            string: new a("string", { startsExpr: !0 }),
            name: new a("name", { startsExpr: !0 }),
            eof: new a("eof"),
            bracketL: new a("[", { beforeExpr: !0, startsExpr: !0 }),
            bracketR: new a("]"),
            braceL: new a("{", { beforeExpr: !0, startsExpr: !0 }),
            braceBarL: new a("{|", { beforeExpr: !0, startsExpr: !0 }),
            braceR: new a("}"),
            braceBarR: new a("|}"),
            parenL: new a("(", { beforeExpr: !0, startsExpr: !0 }),
            parenR: new a(")"),
            comma: new a(",", { beforeExpr: !0 }),
            semi: new a(";", { beforeExpr: !0 }),
            colon: new a(":", { beforeExpr: !0 }),
            doubleColon: new a("::", { beforeExpr: !0 }),
            dot: new a("."),
            question: new a("?", { beforeExpr: !0 }),
            questionDot: new a("?."),
            arrow: new a("=>", { beforeExpr: !0 }),
            template: new a("template"),
            ellipsis: new a("...", { beforeExpr: !0 }),
            backQuote: new a("`", { startsExpr: !0 }),
            dollarBraceL: new a("${", { beforeExpr: !0, startsExpr: !0 }),
            at: new a("@"),
            hash: new a("#"),
            interpreterDirective: new a("#!..."),
            eq: new a("=", { beforeExpr: !0, isAssign: !0 }),
            assign: new a("_=", { beforeExpr: !0, isAssign: !0 }),
            incDec: new a("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
            bang: new a("!", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
            tilde: new a("~", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
            pipeline: new o("|>", 0),
            nullishCoalescing: new o("??", 1),
            logicalOR: new o("||", 1),
            logicalAND: new o("&&", 2),
            bitwiseOR: new o("|", 3),
            bitwiseXOR: new o("^", 4),
            bitwiseAND: new o("&", 5),
            equality: new o("==/!=", 6),
            relational: new o("</>", 7),
            bitShift: new o("<</>>", 8),
            plusMin: new a("+/-", {
              beforeExpr: !0,
              binop: 9,
              prefix: !0,
              startsExpr: !0,
            }),
            modulo: new o("%", 10),
            star: new o("*", 10),
            slash: new o("/", 10),
            exponent: new a("**", {
              beforeExpr: !0,
              binop: 11,
              rightAssociative: !0,
            }),
          },
          s = {
            break: new i("break"),
            case: new i("case", { beforeExpr: !0 }),
            catch: new i("catch"),
            continue: new i("continue"),
            debugger: new i("debugger"),
            default: new i("default", { beforeExpr: !0 }),
            do: new i("do", { isLoop: !0, beforeExpr: !0 }),
            else: new i("else", { beforeExpr: !0 }),
            finally: new i("finally"),
            for: new i("for", { isLoop: !0 }),
            function: new i("function", { startsExpr: !0 }),
            if: new i("if"),
            return: new i("return", { beforeExpr: !0 }),
            switch: new i("switch"),
            throw: new i("throw", {
              beforeExpr: !0,
              prefix: !0,
              startsExpr: !0,
            }),
            try: new i("try"),
            var: new i("var"),
            let: new i("let"),
            const: new i("const"),
            while: new i("while", { isLoop: !0 }),
            with: new i("with"),
            new: new i("new", { beforeExpr: !0, startsExpr: !0 }),
            this: new i("this", { startsExpr: !0 }),
            super: new i("super", { startsExpr: !0 }),
            class: new i("class"),
            extends: new i("extends", { beforeExpr: !0 }),
            export: new i("export"),
            import: new i("import", { startsExpr: !0 }),
            yield: new i("yield", { beforeExpr: !0, startsExpr: !0 }),
            null: new i("null", { startsExpr: !0 }),
            true: new i("true", { startsExpr: !0 }),
            false: new i("false", { startsExpr: !0 }),
            in: new i("in", { beforeExpr: !0, binop: 7 }),
            instanceof: new i("instanceof", { beforeExpr: !0, binop: 7 }),
            typeof: new i("typeof", {
              beforeExpr: !0,
              prefix: !0,
              startsExpr: !0,
            }),
            void: new i("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
            delete: new i("delete", {
              beforeExpr: !0,
              prefix: !0,
              startsExpr: !0,
            }),
          };
        function d(e) {
          return (
            null != e &&
            "Property" === e.type &&
            "init" === e.kind &&
            !1 === e.method
          );
        }
        function u(e) {
          var t = e.split(" ");
          return function(e) {
            return 0 <= t.indexOf(e);
          };
        }
        Object.keys(s).forEach(function(e) {
          x["_" + e] = s[e];
        });
        var l = {
            6: u("enum await"),
            strict: u(
              "implements interface let package private protected public static yield"
            ),
            strictBind: u("eval arguments"),
          },
          c = u(
            "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super"
          ),
          p =
            "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿯ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞹꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",
          g =
            "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛࣓-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ංඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ູົຼ່-ໍ໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠐-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭ᳲ-᳴᳷-᳹᷀-᷹᷻-᷿‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿",
          f = new RegExp("[" + p + "]"),
          h = new RegExp("[" + p + g + "]");
        p = g = null;
        var R = [
            0,
            11,
            2,
            25,
            2,
            18,
            2,
            1,
            2,
            14,
            3,
            13,
            35,
            122,
            70,
            52,
            268,
            28,
            4,
            48,
            48,
            31,
            14,
            29,
            6,
            37,
            11,
            29,
            3,
            35,
            5,
            7,
            2,
            4,
            43,
            157,
            19,
            35,
            5,
            35,
            5,
            39,
            9,
            51,
            157,
            310,
            10,
            21,
            11,
            7,
            153,
            5,
            3,
            0,
            2,
            43,
            2,
            1,
            4,
            0,
            3,
            22,
            11,
            22,
            10,
            30,
            66,
            18,
            2,
            1,
            11,
            21,
            11,
            25,
            71,
            55,
            7,
            1,
            65,
            0,
            16,
            3,
            2,
            2,
            2,
            28,
            43,
            28,
            4,
            28,
            36,
            7,
            2,
            27,
            28,
            53,
            11,
            21,
            11,
            18,
            14,
            17,
            111,
            72,
            56,
            50,
            14,
            50,
            14,
            35,
            477,
            28,
            11,
            0,
            9,
            21,
            190,
            52,
            76,
            44,
            33,
            24,
            27,
            35,
            30,
            0,
            12,
            34,
            4,
            0,
            13,
            47,
            15,
            3,
            22,
            0,
            2,
            0,
            36,
            17,
            2,
            24,
            85,
            6,
            2,
            0,
            2,
            3,
            2,
            14,
            2,
            9,
            8,
            46,
            39,
            7,
            3,
            1,
            3,
            21,
            2,
            6,
            2,
            1,
            2,
            4,
            4,
            0,
            19,
            0,
            13,
            4,
            159,
            52,
            19,
            3,
            54,
            47,
            21,
            1,
            2,
            0,
            185,
            46,
            42,
            3,
            37,
            47,
            21,
            0,
            60,
            42,
            86,
            26,
            230,
            43,
            117,
            63,
            32,
            0,
            257,
            0,
            11,
            39,
            8,
            0,
            22,
            0,
            12,
            39,
            3,
            3,
            20,
            0,
            35,
            56,
            264,
            8,
            2,
            36,
            18,
            0,
            50,
            29,
            113,
            6,
            2,
            1,
            2,
            37,
            22,
            0,
            26,
            5,
            2,
            1,
            2,
            31,
            15,
            0,
            328,
            18,
            270,
            921,
            103,
            110,
            18,
            195,
            2749,
            1070,
            4050,
            582,
            8634,
            568,
            8,
            30,
            114,
            29,
            19,
            47,
            17,
            3,
            32,
            20,
            6,
            18,
            689,
            63,
            129,
            68,
            12,
            0,
            67,
            12,
            65,
            1,
            31,
            6129,
            15,
            754,
            9486,
            286,
            82,
            395,
            2309,
            106,
            6,
            12,
            4,
            8,
            8,
            9,
            5991,
            84,
            2,
            70,
            2,
            1,
            3,
            0,
            3,
            1,
            3,
            3,
            2,
            11,
            2,
            0,
            2,
            6,
            2,
            64,
            2,
            3,
            3,
            7,
            2,
            6,
            2,
            27,
            2,
            3,
            2,
            4,
            2,
            0,
            4,
            6,
            2,
            339,
            3,
            24,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            30,
            2,
            24,
            2,
            7,
            4149,
            196,
            60,
            67,
            1213,
            3,
            2,
            26,
            2,
            1,
            2,
            0,
            3,
            0,
            2,
            9,
            2,
            3,
            2,
            0,
            2,
            0,
            7,
            0,
            5,
            0,
            2,
            0,
            2,
            0,
            2,
            2,
            2,
            1,
            2,
            0,
            3,
            0,
            2,
            0,
            2,
            0,
            2,
            0,
            2,
            0,
            2,
            1,
            2,
            0,
            3,
            3,
            2,
            6,
            2,
            3,
            2,
            3,
            2,
            0,
            2,
            9,
            2,
            16,
            6,
            2,
            2,
            4,
            2,
            16,
            4421,
            42710,
            42,
            4148,
            12,
            221,
            3,
            5761,
            15,
            7472,
            3104,
            541,
          ],
          y = [
            509,
            0,
            227,
            0,
            150,
            4,
            294,
            9,
            1368,
            2,
            2,
            1,
            6,
            3,
            41,
            2,
            5,
            0,
            166,
            1,
            574,
            3,
            9,
            9,
            525,
            10,
            176,
            2,
            54,
            14,
            32,
            9,
            16,
            3,
            46,
            10,
            54,
            9,
            7,
            2,
            37,
            13,
            2,
            9,
            6,
            1,
            45,
            0,
            13,
            2,
            49,
            13,
            9,
            3,
            4,
            9,
            83,
            11,
            7,
            0,
            161,
            11,
            6,
            9,
            7,
            3,
            56,
            1,
            2,
            6,
            3,
            1,
            3,
            2,
            10,
            0,
            11,
            1,
            3,
            6,
            4,
            4,
            193,
            17,
            10,
            9,
            5,
            0,
            82,
            19,
            13,
            9,
            214,
            6,
            3,
            8,
            28,
            1,
            83,
            16,
            16,
            9,
            82,
            12,
            9,
            9,
            84,
            14,
            5,
            9,
            243,
            14,
            166,
            9,
            280,
            9,
            41,
            6,
            2,
            3,
            9,
            0,
            10,
            10,
            47,
            15,
            406,
            7,
            2,
            7,
            17,
            9,
            57,
            21,
            2,
            13,
            123,
            5,
            4,
            0,
            2,
            1,
            2,
            6,
            2,
            0,
            9,
            9,
            49,
            4,
            2,
            1,
            2,
            4,
            9,
            9,
            330,
            3,
            19306,
            9,
            135,
            4,
            60,
            6,
            26,
            9,
            1016,
            45,
            17,
            3,
            19723,
            1,
            5319,
            4,
            4,
            5,
            9,
            7,
            3,
            6,
            31,
            3,
            149,
            2,
            1418,
            49,
            513,
            54,
            5,
            49,
            9,
            0,
            15,
            0,
            23,
            4,
            2,
            14,
            1361,
            6,
            2,
            16,
            3,
            6,
            2,
            1,
            2,
            4,
            2214,
            6,
            110,
            6,
            6,
            9,
            792487,
            239,
          ];
        function m(e, t) {
          for (var n = 65536, a = 0; a < t.length; a += 2) {
            if ((n += t[a]) > e) return !1;
            if ((n += t[a + 1]) >= e) return !0;
          }
          return !1;
        }
        function v(e) {
          return e < 65
            ? 36 === e
            : e <= 90 ||
                (e < 97
                  ? 95 === e
                  : e <= 122 ||
                    (e <= 65535
                      ? 170 <= e && f.test(String.fromCharCode(e))
                      : m(e, R)));
        }
        function b(e) {
          return e < 48
            ? 36 === e
            : e < 58 ||
                (!(e < 65) &&
                  (e <= 90 ||
                    (e < 97
                      ? 95 === e
                      : e <= 122 ||
                        (e <= 65535
                          ? 170 <= e && h.test(String.fromCharCode(e))
                          : m(e, R) || m(e, y)))));
        }
        var A = [
          "any",
          "bool",
          "boolean",
          "empty",
          "false",
          "mixed",
          "null",
          "number",
          "static",
          "string",
          "true",
          "typeof",
          "void",
        ];
        function S(e) {
          return "type" === e.importKind || "typeof" === e.importKind;
        }
        function _(e) {
          return (e.type === x.name || !!e.type.keyword) && "from" !== e.value;
        }
        var T = {
            const: "declare export var",
            let: "declare export var",
            type: "export type",
            interface: "export interface",
          },
          P = /\*?\s*@((?:no)?flow)\b/,
          E = {
            quot: '"',
            amp: "&",
            apos: "'",
            lt: "<",
            gt: ">",
            nbsp: " ",
            iexcl: "¡",
            cent: "¢",
            pound: "£",
            curren: "¤",
            yen: "¥",
            brvbar: "¦",
            sect: "§",
            uml: "¨",
            copy: "©",
            ordf: "ª",
            laquo: "«",
            not: "¬",
            shy: "­",
            reg: "®",
            macr: "¯",
            deg: "°",
            plusmn: "±",
            sup2: "²",
            sup3: "³",
            acute: "´",
            micro: "µ",
            para: "¶",
            middot: "·",
            cedil: "¸",
            sup1: "¹",
            ordm: "º",
            raquo: "»",
            frac14: "¼",
            frac12: "½",
            frac34: "¾",
            iquest: "¿",
            Agrave: "À",
            Aacute: "Á",
            Acirc: "Â",
            Atilde: "Ã",
            Auml: "Ä",
            Aring: "Å",
            AElig: "Æ",
            Ccedil: "Ç",
            Egrave: "È",
            Eacute: "É",
            Ecirc: "Ê",
            Euml: "Ë",
            Igrave: "Ì",
            Iacute: "Í",
            Icirc: "Î",
            Iuml: "Ï",
            ETH: "Ð",
            Ntilde: "Ñ",
            Ograve: "Ò",
            Oacute: "Ó",
            Ocirc: "Ô",
            Otilde: "Õ",
            Ouml: "Ö",
            times: "×",
            Oslash: "Ø",
            Ugrave: "Ù",
            Uacute: "Ú",
            Ucirc: "Û",
            Uuml: "Ü",
            Yacute: "Ý",
            THORN: "Þ",
            szlig: "ß",
            agrave: "à",
            aacute: "á",
            acirc: "â",
            atilde: "ã",
            auml: "ä",
            aring: "å",
            aelig: "æ",
            ccedil: "ç",
            egrave: "è",
            eacute: "é",
            ecirc: "ê",
            euml: "ë",
            igrave: "ì",
            iacute: "í",
            icirc: "î",
            iuml: "ï",
            eth: "ð",
            ntilde: "ñ",
            ograve: "ò",
            oacute: "ó",
            ocirc: "ô",
            otilde: "õ",
            ouml: "ö",
            divide: "÷",
            oslash: "ø",
            ugrave: "ù",
            uacute: "ú",
            ucirc: "û",
            uuml: "ü",
            yacute: "ý",
            thorn: "þ",
            yuml: "ÿ",
            OElig: "Œ",
            oelig: "œ",
            Scaron: "Š",
            scaron: "š",
            Yuml: "Ÿ",
            fnof: "ƒ",
            circ: "ˆ",
            tilde: "˜",
            Alpha: "Α",
            Beta: "Β",
            Gamma: "Γ",
            Delta: "Δ",
            Epsilon: "Ε",
            Zeta: "Ζ",
            Eta: "Η",
            Theta: "Θ",
            Iota: "Ι",
            Kappa: "Κ",
            Lambda: "Λ",
            Mu: "Μ",
            Nu: "Ν",
            Xi: "Ξ",
            Omicron: "Ο",
            Pi: "Π",
            Rho: "Ρ",
            Sigma: "Σ",
            Tau: "Τ",
            Upsilon: "Υ",
            Phi: "Φ",
            Chi: "Χ",
            Psi: "Ψ",
            Omega: "Ω",
            alpha: "α",
            beta: "β",
            gamma: "γ",
            delta: "δ",
            epsilon: "ε",
            zeta: "ζ",
            eta: "η",
            theta: "θ",
            iota: "ι",
            kappa: "κ",
            lambda: "λ",
            mu: "μ",
            nu: "ν",
            xi: "ξ",
            omicron: "ο",
            pi: "π",
            rho: "ρ",
            sigmaf: "ς",
            sigma: "σ",
            tau: "τ",
            upsilon: "υ",
            phi: "φ",
            chi: "χ",
            psi: "ψ",
            omega: "ω",
            thetasym: "ϑ",
            upsih: "ϒ",
            piv: "ϖ",
            ensp: " ",
            emsp: " ",
            thinsp: " ",
            zwnj: "‌",
            zwj: "‍",
            lrm: "‎",
            rlm: "‏",
            ndash: "–",
            mdash: "—",
            lsquo: "‘",
            rsquo: "’",
            sbquo: "‚",
            ldquo: "“",
            rdquo: "”",
            bdquo: "„",
            dagger: "†",
            Dagger: "‡",
            bull: "•",
            hellip: "…",
            permil: "‰",
            prime: "′",
            Prime: "″",
            lsaquo: "‹",
            rsaquo: "›",
            oline: "‾",
            frasl: "⁄",
            euro: "€",
            image: "ℑ",
            weierp: "℘",
            real: "ℜ",
            trade: "™",
            alefsym: "ℵ",
            larr: "←",
            uarr: "↑",
            rarr: "→",
            darr: "↓",
            harr: "↔",
            crarr: "↵",
            lArr: "⇐",
            uArr: "⇑",
            rArr: "⇒",
            dArr: "⇓",
            hArr: "⇔",
            forall: "∀",
            part: "∂",
            exist: "∃",
            empty: "∅",
            nabla: "∇",
            isin: "∈",
            notin: "∉",
            ni: "∋",
            prod: "∏",
            sum: "∑",
            minus: "−",
            lowast: "∗",
            radic: "√",
            prop: "∝",
            infin: "∞",
            ang: "∠",
            and: "∧",
            or: "∨",
            cap: "∩",
            cup: "∪",
            int: "∫",
            there4: "∴",
            sim: "∼",
            cong: "≅",
            asymp: "≈",
            ne: "≠",
            equiv: "≡",
            le: "≤",
            ge: "≥",
            sub: "⊂",
            sup: "⊃",
            nsub: "⊄",
            sube: "⊆",
            supe: "⊇",
            oplus: "⊕",
            otimes: "⊗",
            perp: "⊥",
            sdot: "⋅",
            lceil: "⌈",
            rceil: "⌉",
            lfloor: "⌊",
            rfloor: "⌋",
            lang: "〈",
            rang: "〉",
            loz: "◊",
            spades: "♠",
            clubs: "♣",
            hearts: "♥",
            diams: "♦",
          },
          C = /\r\n?|\n|\u2028|\u2029/,
          w = new RegExp(C.source, "g");
        function D(e) {
          switch (e) {
            case 10:
            case 13:
            case 8232:
            case 8233:
              return !0;
            default:
              return !1;
          }
        }
        function O(e) {
          switch (e) {
            case 9:
            case 11:
            case 12:
            case 32:
            case 160:
            case 5760:
            case 8192:
            case 8193:
            case 8194:
            case 8195:
            case 8196:
            case 8197:
            case 8198:
            case 8199:
            case 8200:
            case 8201:
            case 8202:
            case 8239:
            case 8287:
            case 12288:
            case 65279:
              return !0;
            default:
              return !1;
          }
        }
        var F = function(e, t, n, a) {
            (this.token = e),
              (this.isExpr = !!t),
              (this.preserveSpace = !!n),
              (this.override = a);
          },
          k = {
            braceStatement: new F("{", !1),
            braceExpression: new F("{", !0),
            templateQuasi: new F("${", !0),
            parenStatement: new F("(", !1),
            parenExpression: new F("(", !0),
            template: new F("`", !0, !0, function(e) {
              return e.readTmplToken();
            }),
            functionExpression: new F("function", !0),
          };
        (x.parenR.updateContext = x.braceR.updateContext = function() {
          if (1 !== this.state.context.length) {
            var e = this.state.context.pop();
            e === k.braceStatement && this.curContext() === k.functionExpression
              ? (this.state.context.pop(), (this.state.exprAllowed = !1))
              : e === k.templateQuasi
                ? (this.state.exprAllowed = !0)
                : (this.state.exprAllowed = !e.isExpr);
          } else this.state.exprAllowed = !0;
        }),
          (x.name.updateContext = function(e) {
            "of" !== this.state.value || this.curContext() !== k.parenStatement
              ? ((this.state.exprAllowed = !1),
                (e !== x._let && e !== x._const && e !== x._var) ||
                  (C.test(this.input.slice(this.state.end)) &&
                    (this.state.exprAllowed = !0)),
                this.state.isIterator && (this.state.isIterator = !1))
              : (this.state.exprAllowed = !e.beforeExpr);
          }),
          (x.braceL.updateContext = function(e) {
            this.state.context.push(
              this.braceIsBlock(e) ? k.braceStatement : k.braceExpression
            ),
              (this.state.exprAllowed = !0);
          }),
          (x.dollarBraceL.updateContext = function() {
            this.state.context.push(k.templateQuasi),
              (this.state.exprAllowed = !0);
          }),
          (x.parenL.updateContext = function(e) {
            var t =
              e === x._if || e === x._for || e === x._with || e === x._while;
            this.state.context.push(t ? k.parenStatement : k.parenExpression),
              (this.state.exprAllowed = !0);
          }),
          (x.incDec.updateContext = function() {}),
          (x._function.updateContext = function(e) {
            this.state.exprAllowed &&
              !this.braceIsBlock(e) &&
              this.state.context.push(k.functionExpression),
              (this.state.exprAllowed = !1);
          }),
          (x.backQuote.updateContext = function() {
            this.curContext() === k.template
              ? this.state.context.pop()
              : this.state.context.push(k.template),
              (this.state.exprAllowed = !1);
          });
        var j = /^[\da-fA-F]+$/,
          M = /^\d+$/;
        function I(e) {
          return (
            !!e &&
            ("JSXOpeningFragment" === e.type || "JSXClosingFragment" === e.type)
          );
        }
        function N(e) {
          if ("JSXIdentifier" === e.type) return e.name;
          if ("JSXNamespacedName" === e.type)
            return e.namespace.name + ":" + e.name.name;
          if ("JSXMemberExpression" === e.type)
            return N(e.object) + "." + N(e.property);
          throw new Error("Node had unexpected type: " + e.type);
        }
        (k.j_oTag = new F("<tag", !1)),
          (k.j_cTag = new F("</tag", !1)),
          (k.j_expr = new F("<tag>...</tag>", !0, !0)),
          (x.jsxName = new a("jsxName")),
          (x.jsxText = new a("jsxText", { beforeExpr: !0 })),
          (x.jsxTagStart = new a("jsxTagStart", { startsExpr: !0 })),
          (x.jsxTagEnd = new a("jsxTagEnd")),
          (x.jsxTagStart.updateContext = function() {
            this.state.context.push(k.j_expr),
              this.state.context.push(k.j_oTag),
              (this.state.exprAllowed = !1);
          });
        var B = {
            sourceType: "script",
            sourceFilename: void 0,
            startLine: 1,
            allowAwaitOutsideFunction: !(x.jsxTagEnd.updateContext = function(
              e
            ) {
              var t = this.state.context.pop();
              (t === k.j_oTag && e === x.slash) || t === k.j_cTag
                ? (this.state.context.pop(),
                  (this.state.exprAllowed = this.curContext() === k.j_expr))
                : (this.state.exprAllowed = !0);
            }),
            allowReturnOutsideFunction: !1,
            allowImportExportEverywhere: !1,
            allowSuperOutsideMethod: !1,
            plugins: [],
            strictMode: null,
            ranges: !1,
            tokens: !1,
            jisonVariables: !1,
          },
          L = function(e, t) {
            (this.line = e), (this.column = t);
          },
          U = function(e, t) {
            (this.start = e), (this.end = t);
          };
        function V(e) {
          return e[e.length - 1];
        }
        var W = (function(e) {
            function t() {
              return e.apply(this, arguments) || this;
            }
            return (
              r(t, e),
              (t.prototype.raise = function(e, t, n) {
                var a = void 0 === n ? {} : n,
                  r = a.missingPluginNames,
                  i = a.code,
                  o = (function(e, t) {
                    var n,
                      a = 1,
                      r = 0;
                    for (w.lastIndex = 0; (n = w.exec(e)) && n.index < t; )
                      a++, (r = w.lastIndex);
                    return new L(a, t - r);
                  })(this.input, e);
                t += " (" + o.line + ":" + o.column + ")";
                var s = new SyntaxError(t);
                throw ((s.pos = e),
                (s.loc = o),
                r && (s.missingPlugin = r),
                void 0 !== i && (s.code = i),
                s);
              }),
              t
            );
          })(
            (function(e) {
              function t() {
                return e.apply(this, arguments) || this;
              }
              r(t, e);
              var n = t.prototype;
              return (
                (n.addComment = function(e) {
                  this.filename && (e.loc.filename = this.filename),
                    this.state.trailingComments.push(e),
                    this.state.leadingComments.push(e);
                }),
                (n.processComment = function(e) {
                  if (!("Program" === e.type && 0 < e.body.length)) {
                    var t,
                      n,
                      a,
                      r,
                      i,
                      o = this.state.commentStack;
                    if (0 < this.state.trailingComments.length)
                      this.state.trailingComments[0].start >= e.end
                        ? ((a = this.state.trailingComments),
                          (this.state.trailingComments = []))
                        : (this.state.trailingComments.length = 0);
                    else if (0 < o.length) {
                      var s = V(o);
                      s.trailingComments &&
                        s.trailingComments[0].start >= e.end &&
                        ((a = s.trailingComments), delete s.trailingComments);
                    }
                    for (
                      0 < o.length && V(o).start >= e.start && (t = o.pop());
                      0 < o.length && V(o).start >= e.start;

                    )
                      n = o.pop();
                    if (
                      (!n && t && (n = t),
                      t && 0 < this.state.leadingComments.length)
                    ) {
                      var d = V(this.state.leadingComments);
                      if ("ObjectProperty" === t.type) {
                        if (
                          d.start >= e.start &&
                          this.state.commentPreviousNode
                        ) {
                          for (
                            i = 0;
                            i < this.state.leadingComments.length;
                            i++
                          )
                            this.state.leadingComments[i].end <
                              this.state.commentPreviousNode.end &&
                              (this.state.leadingComments.splice(i, 1), i--);
                          0 < this.state.leadingComments.length &&
                            ((t.trailingComments = this.state.leadingComments),
                            (this.state.leadingComments = []));
                        }
                      } else if (
                        "CallExpression" === e.type &&
                        e.arguments &&
                        e.arguments.length
                      ) {
                        var u = V(e.arguments);
                        if (
                          u &&
                          d.start >= u.start &&
                          d.end <= e.end &&
                          this.state.commentPreviousNode
                        ) {
                          for (
                            i = 0;
                            i < this.state.leadingComments.length;
                            i++
                          )
                            this.state.leadingComments[i].end <
                              this.state.commentPreviousNode.end &&
                              (this.state.leadingComments.splice(i, 1), i--);
                          0 < this.state.leadingComments.length &&
                            ((u.trailingComments = this.state.leadingComments),
                            (this.state.leadingComments = []));
                        }
                      }
                    }
                    if (n) {
                      if (n.leadingComments)
                        if (
                          n !== e &&
                          0 < n.leadingComments.length &&
                          V(n.leadingComments).end <= e.start
                        )
                          (e.leadingComments = n.leadingComments),
                            delete n.leadingComments;
                        else
                          for (r = n.leadingComments.length - 2; 0 <= r; --r)
                            if (n.leadingComments[r].end <= e.start) {
                              e.leadingComments = n.leadingComments.splice(
                                0,
                                r + 1
                              );
                              break;
                            }
                    } else if (0 < this.state.leadingComments.length)
                      if (V(this.state.leadingComments).end <= e.start) {
                        if (this.state.commentPreviousNode)
                          for (
                            i = 0;
                            i < this.state.leadingComments.length;
                            i++
                          )
                            this.state.leadingComments[i].end <
                              this.state.commentPreviousNode.end &&
                              (this.state.leadingComments.splice(i, 1), i--);
                        0 < this.state.leadingComments.length &&
                          ((e.leadingComments = this.state.leadingComments),
                          (this.state.leadingComments = []));
                      } else {
                        for (
                          r = 0;
                          r < this.state.leadingComments.length &&
                          !(this.state.leadingComments[r].end > e.start);
                          r++
                        );
                        var l = this.state.leadingComments.slice(0, r);
                        l.length && (e.leadingComments = l),
                          0 ===
                            (a = this.state.leadingComments.slice(r)).length &&
                            (a = null);
                      }
                    (this.state.commentPreviousNode = e),
                      a &&
                        (a.length && a[0].start >= e.start && V(a).end <= e.end
                          ? (e.innerComments = a)
                          : (e.trailingComments = a)),
                      o.push(e);
                  }
                }),
                t
              );
            })(
              (function() {
                function e() {
                  this.sawUnambiguousESM = !1;
                }
                var t = e.prototype;
                return (
                  (t.isReservedWord = function(e) {
                    return "await" === e ? this.inModule : l[6](e);
                  }),
                  (t.hasPlugin = function(e) {
                    return Object.hasOwnProperty.call(this.plugins, e);
                  }),
                  (t.getPluginOption = function(e, t) {
                    if (this.hasPlugin(e)) return this.plugins[e][t];
                  }),
                  e
                );
              })()
            )
          ),
          G = (function() {
            function e() {}
            var t = e.prototype;
            return (
              (t.init = function(e, t) {
                (this.strict =
                  !1 !== e.strictMode && "module" === e.sourceType),
                  (this.input = t),
                  (this.potentialArrowAt = -1),
                  (this.noArrowAt = []),
                  (this.noArrowParamsConversionAt = []),
                  (this.inMethod = !1),
                  (this.inFunction = !1),
                  (this.inParameters = !1),
                  (this.maybeInArrowParameters = !1),
                  (this.inGenerator = !1),
                  (this.inAsync = !1),
                  (this.inPropertyName = !1),
                  (this.inType = !1),
                  (this.inClassProperty = !1),
                  (this.noAnonFunctionType = !1),
                  (this.hasFlowComment = !1),
                  (this.isIterator = !1),
                  (this.classLevel = 0),
                  (this.labels = []),
                  (this.decoratorStack = [[]]),
                  (this.yieldInPossibleArrowParameters = null),
                  (this.tokens = []),
                  (this.comments = []),
                  (this.trailingComments = []),
                  (this.leadingComments = []),
                  (this.commentStack = []),
                  (this.commentPreviousNode = null),
                  (this.pos = this.lineStart = 0),
                  (this.curLine = e.startLine),
                  (this.type = x.eof),
                  (this.value = null),
                  (this.start = this.end = this.pos),
                  (this.startLoc = this.endLoc = this.curPosition()),
                  (this.lastTokEndLoc = this.lastTokStartLoc = null),
                  (this.lastTokStart = this.lastTokEnd = this.pos),
                  (this.context = [k.braceStatement]),
                  (this.exprAllowed = !0),
                  (this.containsEsc = this.containsOctal = !1),
                  (this.octalPosition = null),
                  (this.invalidTemplateEscapePosition = null),
                  (this.exportedIdentifiers = []);
              }),
              (t.curPosition = function() {
                return new L(this.curLine, this.pos - this.lineStart);
              }),
              (t.clone = function(n) {
                var a = this,
                  r = new e();
                return (
                  Object.keys(this).forEach(function(e) {
                    var t = a[e];
                    (n && "context" !== e) ||
                      !Array.isArray(t) ||
                      (t = t.slice()),
                      (r[e] = t);
                  }),
                  r
                );
              }),
              e
            );
          })(),
          K = {
            decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],
            hex: [46, 88, 95, 120],
          },
          H = { bin: [48, 49] };
        (H.oct = H.bin.concat([50, 51, 52, 53, 54, 55])),
          (H.dec = H.oct.concat([56, 57])),
          (H.hex = H.dec.concat([
            65,
            66,
            67,
            68,
            69,
            70,
            97,
            98,
            99,
            100,
            101,
            102,
          ]));
        var q = (function(e) {
            function t() {
              return e.apply(this, arguments) || this;
            }
            r(t, e);
            var n = t.prototype;
            return (
              (n.addExtra = function(e, t, n) {
                e && ((e.extra = e.extra || {})[t] = n);
              }),
              (n.isRelational = function(e) {
                return this.match(x.relational) && this.state.value === e;
              }),
              (n.isLookaheadRelational = function(e) {
                var t = this.lookahead();
                return t.type == x.relational && t.value == e;
              }),
              (n.expectRelational = function(e) {
                this.isRelational(e)
                  ? this.next()
                  : this.unexpected(null, x.relational);
              }),
              (n.eatRelational = function(e) {
                return !!this.isRelational(e) && (this.next(), !0);
              }),
              (n.isContextual = function(e) {
                return (
                  this.match(x.name) &&
                  this.state.value === e &&
                  !this.state.containsEsc
                );
              }),
              (n.isLookaheadContextual = function(e) {
                var t = this.lookahead();
                return t.type === x.name && t.value === e;
              }),
              (n.eatContextual = function(e) {
                return this.isContextual(e) && this.eat(x.name);
              }),
              (n.expectContextual = function(e, t) {
                this.eatContextual(e) || this.unexpected(null, t);
              }),
              (n.canInsertSemicolon = function() {
                return (
                  this.match(x.eof) ||
                  this.match(x.braceR) ||
                  this.hasPrecedingLineBreak()
                );
              }),
              (n.hasPrecedingLineBreak = function() {
                return C.test(
                  this.input.slice(this.state.lastTokEnd, this.state.start)
                );
              }),
              (n.isLineTerminator = function() {
                return this.eat(x.semi) || this.canInsertSemicolon();
              }),
              (n.semicolon = function() {
                this.isLineTerminator() || this.unexpected(null, x.semi);
              }),
              (n.expect = function(e, t) {
                this.eat(e) || this.unexpected(t, e);
              }),
              (n.unexpected = function(e, t) {
                throw (void 0 === t && (t = "Unexpected token"),
                "string" != typeof t &&
                  (t = 'Unexpected token, expected "' + t.label + '"'),
                this.raise(null != e ? e : this.state.start, t));
              }),
              (n.expectPlugin = function(e, t) {
                if (!this.hasPlugin(e))
                  throw this.raise(
                    null != t ? t : this.state.start,
                    "This experimental syntax requires enabling the parser plugin: '" +
                      e +
                      "'",
                    { missingPluginNames: [e] }
                  );
                return !0;
              }),
              (n.expectOnePlugin = function(e, t) {
                var n = this;
                if (
                  !e.some(function(e) {
                    return n.hasPlugin(e);
                  })
                )
                  throw this.raise(
                    null != t ? t : this.state.start,
                    "This experimental syntax requires enabling one of the following parser plugin(s): '" +
                      e.join(", ") +
                      "'",
                    { missingPluginNames: e }
                  );
              }),
              t
            );
          })(
            (function(a) {
              function e(e, t) {
                var n;
                return (
                  ((n = a.call(this) || this).state = new G()),
                  n.state.init(e, t),
                  (n.isLookahead = !1),
                  n
                );
              }
              r(e, a);
              var t = e.prototype;
              return (
                (t.next = function() {
                  this.options.tokens &&
                    !this.isLookahead &&
                    this.state.tokens.push(
                      new function(e) {
                        (this.type = e.type),
                          (this.value = e.value),
                          (this.start = e.start),
                          (this.end = e.end),
                          (this.loc = new U(e.startLoc, e.endLoc));
                      }(this.state)
                    ),
                    (this.state.lastTokEnd = this.state.end),
                    (this.state.lastTokStart = this.state.start),
                    (this.state.lastTokEndLoc = this.state.endLoc),
                    (this.state.lastTokStartLoc = this.state.startLoc),
                    this.nextToken();
                }),
                (t.eat = function(e) {
                  return !!this.match(e) && (this.next(), !0);
                }),
                (t.match = function(e) {
                  return this.state.type === e;
                }),
                (t.isKeyword = function(e) {
                  return c(e);
                }),
                (t.lookahead = function() {
                  var e = this.state;
                  (this.state = e.clone(!0)),
                    (this.isLookahead = !0),
                    this.next(),
                    (this.isLookahead = !1);
                  var t = this.state;
                  return (this.state = e), t;
                }),
                (t.setStrict = function(e) {
                  if (
                    ((this.state.strict = e),
                    this.match(x.num) || this.match(x.string))
                  ) {
                    for (
                      this.state.pos = this.state.start;
                      this.state.pos < this.state.lineStart;

                    )
                      (this.state.lineStart =
                        this.input.lastIndexOf("\n", this.state.lineStart - 2) +
                        1),
                        --this.state.curLine;
                    this.nextToken();
                  }
                }),
                (t.curContext = function() {
                  return this.state.context[this.state.context.length - 1];
                }),
                (t.nextToken = function() {
                  var e = this.curContext();
                  (e && e.preserveSpace) || this.skipSpace(),
                    (this.state.containsOctal = !1),
                    (this.state.octalPosition = null),
                    (this.state.start = this.state.pos),
                    (this.state.startLoc = this.state.curPosition()),
                    this.state.pos >= this.input.length
                      ? this.finishToken(x.eof)
                      : e.override
                        ? e.override(this)
                        : this.readToken(
                            this.input.codePointAt(this.state.pos)
                          );
                }),
                (t.readToken = function(e) {
                  if (
                    !this.options.jisonVariables ||
                    this.state.isIterator ||
                    this.state.inType ||
                    (35 !== e && 64 !== e && 36 !== e)
                  )
                    v(e) || 92 === e
                      ? this.readWord()
                      : this.getTokenFromCode(e);
                  else {
                    for (
                      var t = x.name, n = this.state.pos;
                      this.input.charCodeAt(this.state.pos) === e;

                    )
                      this.state.pos++;
                    if (45 === this.input.charCodeAt(this.state.pos)) {
                      var a = this.input.charCodeAt(this.state.pos + 1);
                      48 <= a && a <= 57 && this.state.pos++;
                    }
                    var r = this.state.pos;
                    for (
                      this.readWord1(),
                        this.state.pos === r &&
                          36 !== e &&
                          this.raise(
                            n,
                            "Invalid JISON identifier " +
                              this.input.slice(n, this.state.pos)
                          );
                      this.input.charCodeAt(this.state.pos) === e;

                    )
                      this.state.pos++;
                    var i = this.input.slice(n, this.state.pos);
                    this.finishToken(t, i);
                  }
                }),
                (t.pushComment = function(e, t, n, a, r, i) {
                  var o = {
                    type: e ? "CommentBlock" : "CommentLine",
                    value: t,
                    start: n,
                    end: a,
                    loc: new U(r, i),
                  };
                  this.isLookahead ||
                    (this.options.tokens && this.state.tokens.push(o),
                    this.state.comments.push(o),
                    this.addComment(o));
                }),
                (t.skipBlockComment = function() {
                  var e,
                    t = this.state.curPosition(),
                    n = this.state.pos,
                    a = this.input.indexOf("*/", (this.state.pos += 2));
                  for (
                    -1 === a &&
                      this.raise(this.state.pos - 2, "Unterminated comment"),
                      this.state.pos = a + 2,
                      w.lastIndex = n;
                    (e = w.exec(this.input)) && e.index < this.state.pos;

                  )
                    ++this.state.curLine,
                      (this.state.lineStart = e.index + e[0].length);
                  this.pushComment(
                    !0,
                    this.input.slice(n + 2, a),
                    n,
                    this.state.pos,
                    t,
                    this.state.curPosition()
                  );
                }),
                (t.skipLineComment = function(e) {
                  var t = this.state.pos,
                    n = this.state.curPosition(),
                    a = this.input.charCodeAt((this.state.pos += e));
                  if (this.state.pos < this.input.length)
                    for (
                      ;
                      10 !== a &&
                      13 !== a &&
                      8232 !== a &&
                      8233 !== a &&
                      ++this.state.pos < this.input.length;

                    )
                      a = this.input.charCodeAt(this.state.pos);
                  this.pushComment(
                    !1,
                    this.input.slice(t + e, this.state.pos),
                    t,
                    this.state.pos,
                    n,
                    this.state.curPosition()
                  );
                }),
                (t.skipSpace = function() {
                  e: for (; this.state.pos < this.input.length; ) {
                    var e = this.input.charCodeAt(this.state.pos);
                    switch (e) {
                      case 13:
                        10 === this.input.charCodeAt(this.state.pos + 1) &&
                          ++this.state.pos;
                      case 10:
                      case 8232:
                      case 8233:
                        ++this.state.pos,
                          ++this.state.curLine,
                          (this.state.lineStart = this.state.pos);
                        break;
                      case 47:
                        switch (this.input.charCodeAt(this.state.pos + 1)) {
                          case 42:
                            this.skipBlockComment();
                            break;
                          case 47:
                            this.skipLineComment(2);
                            break;
                          default:
                            break e;
                        }
                        break;
                      default:
                        if (!O(e)) break e;
                        ++this.state.pos;
                    }
                  }
                }),
                (t.finishToken = function(e, t) {
                  (this.state.end = this.state.pos),
                    (this.state.endLoc = this.state.curPosition());
                  var n = this.state.type;
                  (this.state.type = e),
                    (this.state.value = t),
                    this.updateContext(n);
                }),
                (t.readToken_dot = function() {
                  var e = this.input.charCodeAt(this.state.pos + 1);
                  if (48 <= e && e <= 57) this.readNumber(!0);
                  else {
                    var t = this.input.charCodeAt(this.state.pos + 2);
                    46 === e && 46 === t
                      ? ((this.state.pos += 3), this.finishToken(x.ellipsis))
                      : (++this.state.pos, this.finishToken(x.dot));
                  }
                }),
                (t.readToken_slash = function() {
                  if (this.state.exprAllowed && !this.state.inType)
                    return ++this.state.pos, void this.readRegexp();
                  61 === this.input.charCodeAt(this.state.pos + 1)
                    ? this.finishOp(x.assign, 2)
                    : this.finishOp(x.slash, 1);
                }),
                (t.readToken_interpreter = function() {
                  if (0 !== this.state.pos || this.state.input.length < 2)
                    return !1;
                  var e = this.state.pos;
                  this.state.pos += 1;
                  var t = this.input.charCodeAt(this.state.pos);
                  if (33 !== t) return !1;
                  for (
                    ;
                    10 !== t &&
                    13 !== t &&
                    8232 !== t &&
                    8233 !== t &&
                    ++this.state.pos < this.input.length;

                  )
                    t = this.input.charCodeAt(this.state.pos);
                  var n = this.input.slice(e + 2, this.state.pos);
                  return this.finishToken(x.interpreterDirective, n), !0;
                }),
                (t.readToken_mult_modulo = function(e) {
                  var t = 42 === e ? x.star : x.modulo,
                    n = 1,
                    a = this.input.charCodeAt(this.state.pos + 1),
                    r = this.state.exprAllowed;
                  42 === e &&
                    42 === a &&
                    (n++,
                    (a = this.input.charCodeAt(this.state.pos + 2)),
                    (t = x.exponent)),
                    61 !== a || r || (n++, (t = x.assign)),
                    this.finishOp(t, n);
                }),
                (t.readToken_pipe_amp = function(e) {
                  var t = this.input.charCodeAt(this.state.pos + 1);
                  if (t !== e) {
                    if (124 === e) {
                      if (62 === t) return void this.finishOp(x.pipeline, 2);
                      if (125 === t && this.hasPlugin("flow"))
                        return void this.finishOp(x.braceBarR, 2);
                    }
                    61 !== t
                      ? this.finishOp(124 === e ? x.bitwiseOR : x.bitwiseAND, 1)
                      : this.finishOp(x.assign, 2);
                  } else
                    61 === this.input.charCodeAt(this.state.pos + 2)
                      ? this.finishOp(x.assign, 3)
                      : this.finishOp(
                          124 === e ? x.logicalOR : x.logicalAND,
                          2
                        );
                }),
                (t.readToken_caret = function() {
                  61 === this.input.charCodeAt(this.state.pos + 1)
                    ? this.finishOp(x.assign, 2)
                    : this.finishOp(x.bitwiseXOR, 1);
                }),
                (t.readToken_plus_min = function(e) {
                  var t = this.input.charCodeAt(this.state.pos + 1);
                  if (t === e)
                    return 45 === t &&
                      !this.inModule &&
                      62 === this.input.charCodeAt(this.state.pos + 2) &&
                      C.test(
                        this.input.slice(this.state.lastTokEnd, this.state.pos)
                      )
                      ? (this.skipLineComment(3),
                        this.skipSpace(),
                        void this.nextToken())
                      : void this.finishOp(x.incDec, 2);
                  61 === t
                    ? this.finishOp(x.assign, 2)
                    : this.finishOp(x.plusMin, 1);
                }),
                (t.readToken_lt_gt = function(e) {
                  var t = this.input.charCodeAt(this.state.pos + 1),
                    n = 1;
                  return t === e
                    ? ((n =
                        62 === e &&
                        62 === this.input.charCodeAt(this.state.pos + 2)
                          ? 3
                          : 2),
                      61 === this.input.charCodeAt(this.state.pos + n)
                        ? void this.finishOp(x.assign, n + 1)
                        : void this.finishOp(x.bitShift, n))
                    : 33 !== t ||
                      60 !== e ||
                      this.inModule ||
                      45 !== this.input.charCodeAt(this.state.pos + 2) ||
                      45 !== this.input.charCodeAt(this.state.pos + 3)
                      ? (61 === t && (n = 2),
                        void this.finishOp(x.relational, n))
                      : (this.skipLineComment(4),
                        this.skipSpace(),
                        void this.nextToken());
                }),
                (t.readToken_eq_excl = function(e) {
                  var t = this.input.charCodeAt(this.state.pos + 1);
                  if (61 !== t)
                    return 61 === e && 62 === t
                      ? ((this.state.pos += 2), void this.finishToken(x.arrow))
                      : void this.finishOp(61 === e ? x.eq : x.bang, 1);
                  this.finishOp(
                    x.equality,
                    61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2
                  );
                }),
                (t.readToken_question = function() {
                  var e = this.input.charCodeAt(this.state.pos + 1),
                    t = this.input.charCodeAt(this.state.pos + 2);
                  63 !== e || this.state.inType
                    ? 46 !== e || (48 <= t && t <= 57)
                      ? (++this.state.pos, this.finishToken(x.question))
                      : ((this.state.pos += 2), this.finishToken(x.questionDot))
                    : 61 === t
                      ? this.finishOp(x.assign, 3)
                      : this.finishOp(x.nullishCoalescing, 2);
                }),
                (t.getTokenFromCode = function(e) {
                  switch (e) {
                    case 35:
                      if (0 === this.state.pos && this.readToken_interpreter())
                        return;
                      if (
                        (this.hasPlugin("classPrivateProperties") ||
                          this.hasPlugin("classPrivateMethods")) &&
                        0 < this.state.classLevel
                      )
                        return ++this.state.pos, void this.finishToken(x.hash);
                      this.raise(
                        this.state.pos,
                        "Unexpected character '" + String.fromCodePoint(e) + "'"
                      );
                    case 46:
                      return void this.readToken_dot();
                    case 40:
                      return ++this.state.pos, void this.finishToken(x.parenL);
                    case 41:
                      return ++this.state.pos, void this.finishToken(x.parenR);
                    case 59:
                      return ++this.state.pos, void this.finishToken(x.semi);
                    case 44:
                      return ++this.state.pos, void this.finishToken(x.comma);
                    case 91:
                      return (
                        ++this.state.pos, void this.finishToken(x.bracketL)
                      );
                    case 93:
                      return (
                        ++this.state.pos, void this.finishToken(x.bracketR)
                      );
                    case 123:
                      return void (this.hasPlugin("flow") &&
                      124 === this.input.charCodeAt(this.state.pos + 1)
                        ? this.finishOp(x.braceBarL, 2)
                        : (++this.state.pos, this.finishToken(x.braceL)));
                    case 125:
                      return ++this.state.pos, void this.finishToken(x.braceR);
                    case 58:
                      return void (this.hasPlugin("functionBind") &&
                      58 === this.input.charCodeAt(this.state.pos + 1)
                        ? this.finishOp(x.doubleColon, 2)
                        : (++this.state.pos, this.finishToken(x.colon)));
                    case 63:
                      return void this.readToken_question();
                    case 64:
                      return ++this.state.pos, void this.finishToken(x.at);
                    case 96:
                      return (
                        ++this.state.pos, void this.finishToken(x.backQuote)
                      );
                    case 48:
                      var t = this.input.charCodeAt(this.state.pos + 1);
                      if (120 === t || 88 === t)
                        return void this.readRadixNumber(16);
                      if (111 === t || 79 === t)
                        return void this.readRadixNumber(8);
                      if (98 === t || 66 === t)
                        return void this.readRadixNumber(2);
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                      return void this.readNumber(!1);
                    case 34:
                    case 39:
                      return void this.readString(e);
                    case 47:
                      return void this.readToken_slash();
                    case 37:
                    case 42:
                      return void this.readToken_mult_modulo(e);
                    case 124:
                    case 38:
                      return void this.readToken_pipe_amp(e);
                    case 94:
                      return void this.readToken_caret();
                    case 43:
                    case 45:
                      return void this.readToken_plus_min(e);
                    case 60:
                    case 62:
                      return void this.readToken_lt_gt(e);
                    case 61:
                    case 33:
                      return void this.readToken_eq_excl(e);
                    case 126:
                      return void this.finishOp(x.tilde, 1);
                  }
                  this.raise(
                    this.state.pos,
                    "Unexpected character '" + String.fromCodePoint(e) + "'"
                  );
                }),
                (t.finishOp = function(e, t) {
                  var n = this.input.slice(this.state.pos, this.state.pos + t);
                  (this.state.pos += t), this.finishToken(e, n);
                }),
                (t.readRegexp = function() {
                  for (var e, t, n = this.state.pos; ; ) {
                    this.state.pos >= this.input.length &&
                      this.raise(n, "Unterminated regular expression");
                    var a = this.input.charAt(this.state.pos);
                    if (
                      (C.test(a) &&
                        this.raise(n, "Unterminated regular expression"),
                      e)
                    )
                      e = !1;
                    else {
                      if ("[" === a) t = !0;
                      else if ("]" === a && t) t = !1;
                      else if ("/" === a && !t) break;
                      e = "\\" === a;
                    }
                    ++this.state.pos;
                  }
                  var r = this.input.slice(n, this.state.pos);
                  ++this.state.pos;
                  for (var i = ""; this.state.pos < this.input.length; ) {
                    var o = this.input[this.state.pos],
                      s = this.input.codePointAt(this.state.pos);
                    if (-1 < "gmsiyu".indexOf(o))
                      -1 < i.indexOf(o) &&
                        this.raise(
                          this.state.pos + 1,
                          "Duplicate regular expression flag"
                        ),
                        ++this.state.pos,
                        (i += o);
                    else {
                      if (!b(s) && 92 !== s) break;
                      this.raise(
                        this.state.pos + 1,
                        "Invalid regular expression flag"
                      );
                    }
                  }
                  this.finishToken(x.regexp, { pattern: r, flags: i });
                }),
                (t.readInt = function(e, t) {
                  for (
                    var n = this.state.pos,
                      a = 16 === e ? K.hex : K.decBinOct,
                      r =
                        16 === e
                          ? H.hex
                          : 10 === e
                            ? H.dec
                            : 8 === e
                              ? H.oct
                              : H.bin,
                      i = 0,
                      o = 0,
                      s = null == t ? 1 / 0 : t;
                    o < s;
                    ++o
                  ) {
                    var d,
                      u = this.input.charCodeAt(this.state.pos);
                    if (this.hasPlugin("numericSeparator")) {
                      var l = this.input.charCodeAt(this.state.pos - 1),
                        c = this.input.charCodeAt(this.state.pos + 1);
                      if (95 === u) {
                        -1 === r.indexOf(c) &&
                          this.raise(
                            this.state.pos,
                            "Invalid or unexpected token"
                          ),
                          (-1 < a.indexOf(l) ||
                            -1 < a.indexOf(c) ||
                            Number.isNaN(c)) &&
                            this.raise(
                              this.state.pos,
                              "Invalid or unexpected token"
                            ),
                          ++this.state.pos;
                        continue;
                      }
                    }
                    if (
                      (d =
                        97 <= u
                          ? u - 97 + 10
                          : 65 <= u
                            ? u - 65 + 10
                            : 48 <= (p = u) && p <= 57
                              ? u - 48
                              : 1 / 0) >= e
                    )
                      break;
                    ++this.state.pos, (i = i * e + d);
                  }
                  var p;
                  return this.state.pos === n ||
                    (null != t && this.state.pos - n !== t)
                    ? null
                    : i;
                }),
                (t.readRadixNumber = function(e) {
                  var t = this.state.pos,
                    n = !1;
                  this.state.pos += 2;
                  var a = this.readInt(e);
                  if (
                    (null == a &&
                      this.raise(
                        this.state.start + 2,
                        "Expected number in radix " + e
                      ),
                    this.hasPlugin("bigInt") &&
                      110 === this.input.charCodeAt(this.state.pos) &&
                      (++this.state.pos, (n = !0)),
                    v(this.input.codePointAt(this.state.pos)) &&
                      this.raise(
                        this.state.pos,
                        "Identifier directly after number"
                      ),
                    n)
                  ) {
                    var r = this.input
                      .slice(t, this.state.pos)
                      .replace(/[_n]/g, "");
                    this.finishToken(x.bigint, r);
                  } else this.finishToken(x.num, a);
                }),
                (t.readNumber = function(e) {
                  var t = this.state.pos,
                    n = 48 === this.input.charCodeAt(t),
                    a = !1,
                    r = !1;
                  e ||
                    null !== this.readInt(10) ||
                    this.raise(t, "Invalid number"),
                    n && this.state.pos == t + 1 && (n = !1);
                  var i = this.input.charCodeAt(this.state.pos);
                  46 !== i ||
                    n ||
                    (++this.state.pos,
                    this.readInt(10),
                    (a = !0),
                    (i = this.input.charCodeAt(this.state.pos))),
                    (69 !== i && 101 !== i) ||
                      n ||
                      ((43 !== (i = this.input.charCodeAt(++this.state.pos)) &&
                        45 !== i) ||
                        ++this.state.pos,
                      null === this.readInt(10) &&
                        this.raise(t, "Invalid number"),
                      (a = !0),
                      (i = this.input.charCodeAt(this.state.pos))),
                    this.hasPlugin("bigInt") &&
                      110 === i &&
                      ((a || n) && this.raise(t, "Invalid BigIntLiteral"),
                      ++this.state.pos,
                      (r = !0)),
                    v(this.input.codePointAt(this.state.pos)) &&
                      this.raise(
                        this.state.pos,
                        "Identifier directly after number"
                      );
                  var o,
                    s = this.input
                      .slice(t, this.state.pos)
                      .replace(/[_n]/g, "");
                  r
                    ? this.finishToken(x.bigint, s)
                    : (a
                        ? (o = parseFloat(s))
                        : n && 1 !== s.length
                          ? this.state.strict
                            ? this.raise(t, "Invalid number")
                            : (o = /[89]/.test(s)
                                ? parseInt(s, 10)
                                : parseInt(s, 8))
                          : (o = parseInt(s, 10)),
                      this.finishToken(x.num, o));
                }),
                (t.readCodePoint = function(e) {
                  var t;
                  if (123 === this.input.charCodeAt(this.state.pos)) {
                    var n = ++this.state.pos;
                    if (
                      ((t = this.readHexChar(
                        this.input.indexOf("}", this.state.pos) -
                          this.state.pos,
                        e
                      )),
                      ++this.state.pos,
                      null === t)
                    )
                      --this.state.invalidTemplateEscapePosition;
                    else if (1114111 < t) {
                      if (!e)
                        return (
                          (this.state.invalidTemplateEscapePosition = n - 2),
                          null
                        );
                      this.raise(n, "Code point out of bounds");
                    }
                  } else t = this.readHexChar(4, e);
                  return t;
                }),
                (t.readString = function(e) {
                  for (
                    var t = "",
                      n = ++this.state.pos,
                      a = this.hasPlugin("jsonStrings");
                    ;

                  ) {
                    this.state.pos >= this.input.length &&
                      this.raise(
                        this.state.start,
                        "Unterminated string constant"
                      );
                    var r = this.input.charCodeAt(this.state.pos);
                    if (r === e) break;
                    92 === r
                      ? ((t += this.input.slice(n, this.state.pos)),
                        (t += this.readEscapedChar(!1)),
                        (n = this.state.pos))
                      : (!a || (8232 !== r && 8233 !== r)) && D(r)
                        ? this.raise(
                            this.state.start,
                            "Unterminated string constant"
                          )
                        : ++this.state.pos;
                  }
                  (t += this.input.slice(n, this.state.pos++)),
                    this.finishToken(x.string, t);
                }),
                (t.readTmplToken = function() {
                  for (var e = "", t = this.state.pos, n = !1; ; ) {
                    this.state.pos >= this.input.length &&
                      this.raise(this.state.start, "Unterminated template");
                    var a = this.input.charCodeAt(this.state.pos);
                    if (
                      96 === a ||
                      (36 === a &&
                        123 === this.input.charCodeAt(this.state.pos + 1))
                    )
                      return this.state.pos === this.state.start &&
                        this.match(x.template)
                        ? 36 === a
                          ? ((this.state.pos += 2),
                            void this.finishToken(x.dollarBraceL))
                          : (++this.state.pos,
                            void this.finishToken(x.backQuote))
                        : ((e += this.input.slice(t, this.state.pos)),
                          void this.finishToken(x.template, n ? null : e));
                    if (92 === a) {
                      e += this.input.slice(t, this.state.pos);
                      var r = this.readEscapedChar(!0);
                      null === r ? (n = !0) : (e += r), (t = this.state.pos);
                    } else if (D(a)) {
                      switch (
                        ((e += this.input.slice(t, this.state.pos)),
                        ++this.state.pos,
                        a)
                      ) {
                        case 13:
                          10 === this.input.charCodeAt(this.state.pos) &&
                            ++this.state.pos;
                        case 10:
                          e += "\n";
                          break;
                        default:
                          e += String.fromCharCode(a);
                      }
                      ++this.state.curLine,
                        (this.state.lineStart = this.state.pos),
                        (t = this.state.pos);
                    } else ++this.state.pos;
                  }
                }),
                (t.readEscapedChar = function(e) {
                  var t = !e,
                    n = this.input.charCodeAt(++this.state.pos);
                  switch ((++this.state.pos, n)) {
                    case 110:
                      return "\n";
                    case 114:
                      return "\r";
                    case 120:
                      var a = this.readHexChar(2, t);
                      return null === a ? null : String.fromCharCode(a);
                    case 117:
                      var r = this.readCodePoint(t);
                      return null === r ? null : String.fromCodePoint(r);
                    case 116:
                      return "\t";
                    case 98:
                      return "\b";
                    case 118:
                      return "\v";
                    case 102:
                      return "\f";
                    case 13:
                      10 === this.input.charCodeAt(this.state.pos) &&
                        ++this.state.pos;
                    case 10:
                      return (
                        (this.state.lineStart = this.state.pos),
                        ++this.state.curLine,
                        ""
                      );
                    default:
                      if (48 <= n && n <= 55) {
                        var i = this.state.pos - 1,
                          o = this.input
                            .substr(this.state.pos - 1, 3)
                            .match(/^[0-7]+/)[0],
                          s = parseInt(o, 8);
                        if (
                          (255 < s &&
                            ((o = o.slice(0, -1)), (s = parseInt(o, 8))),
                          0 < s)
                        ) {
                          if (e)
                            return (
                              (this.state.invalidTemplateEscapePosition = i),
                              null
                            );
                          this.state.strict
                            ? this.raise(i, "Octal literal in strict mode")
                            : this.state.containsOctal ||
                              ((this.state.containsOctal = !0),
                              (this.state.octalPosition = i));
                        }
                        return (
                          (this.state.pos += o.length - 1),
                          String.fromCharCode(s)
                        );
                      }
                      return String.fromCharCode(n);
                  }
                }),
                (t.readHexChar = function(e, t) {
                  var n = this.state.pos,
                    a = this.readInt(16, e);
                  return (
                    null === a &&
                      (t
                        ? this.raise(n, "Bad character escape sequence")
                        : ((this.state.pos = n - 1),
                          (this.state.invalidTemplateEscapePosition = n - 1))),
                    a
                  );
                }),
                (t.readWord1 = function() {
                  for (
                    var e = "",
                      t = !(this.state.containsEsc = !1),
                      n = this.state.pos;
                    this.state.pos < this.input.length;

                  ) {
                    var a = this.input.codePointAt(this.state.pos);
                    if (b(a)) this.state.pos += a <= 65535 ? 1 : 2;
                    else if (this.state.isIterator && 64 === a)
                      this.state.pos += 1;
                    else {
                      if (92 !== a) break;
                      (this.state.containsEsc = !0),
                        (e += this.input.slice(n, this.state.pos));
                      var r = this.state.pos;
                      117 !== this.input.charCodeAt(++this.state.pos) &&
                        this.raise(
                          this.state.pos,
                          "Expecting Unicode escape sequence \\uXXXX"
                        ),
                        ++this.state.pos;
                      var i = this.readCodePoint(!0);
                      (t ? v : b)(i, !0) ||
                        this.raise(r, "Invalid Unicode escape"),
                        (e += String.fromCodePoint(i)),
                        (n = this.state.pos);
                    }
                    t = !1;
                  }
                  return e + this.input.slice(n, this.state.pos);
                }),
                (t.isIterator = function(e) {
                  return "@@iterator" === e || "@@asyncIterator" === e;
                }),
                (t.readWord = function() {
                  var e = this.readWord1(),
                    t = x.name;
                  this.isKeyword(e) &&
                    (this.state.containsEsc &&
                      this.raise(
                        this.state.pos,
                        "Escape sequence in keyword " + e
                      ),
                    (t = s[e])),
                    !this.state.isIterator ||
                      (this.isIterator(e) && this.state.inType) ||
                      this.raise(this.state.pos, "Invalid identifier " + e),
                    this.finishToken(t, e);
                }),
                (t.braceIsBlock = function(e) {
                  if (e === x.colon) {
                    var t = this.curContext();
                    if (t === k.braceStatement || t === k.braceExpression)
                      return !t.isExpr;
                  }
                  return e === x._return
                    ? C.test(
                        this.input.slice(
                          this.state.lastTokEnd,
                          this.state.start
                        )
                      )
                    : e === x._else ||
                        e === x.semi ||
                        e === x.eof ||
                        e === x.parenR ||
                        (e === x.braceL
                          ? this.curContext() === k.braceStatement
                          : e === x.relational || !this.state.exprAllowed);
                }),
                (t.updateContext = function(e) {
                  var t,
                    n = this.state.type;
                  !n.keyword || (e !== x.dot && e !== x.questionDot)
                    ? (t = n.updateContext)
                      ? t.call(this, e)
                      : (this.state.exprAllowed = n.beforeExpr)
                    : (this.state.exprAllowed = !1);
                }),
                e
              );
            })(W)
          ),
          Y = ["leadingComments", "trailingComments", "innerComments"],
          J = (function() {
            function e(e, t, n) {
              (this.type = ""),
                (this.start = t),
                (this.end = 0),
                (this.loc = new U(n)),
                e && e.options.ranges && (this.range = [t, 0]),
                e && e.filename && (this.loc.filename = e.filename);
            }
            return (
              (e.prototype.__clone = function() {
                var t = this,
                  n = new e();
                return (
                  Object.keys(this).forEach(function(e) {
                    Y.indexOf(e) < 0 && (n[e] = t[e]);
                  }),
                  n
                );
              }),
              e
            );
          })(),
          X = [],
          z = { kind: "loop" },
          $ = { kind: "switch" },
          Q = (function(a) {
            function e(e, t) {
              var n;
              return (
                (e = (function(e) {
                  var t = {};
                  for (var n in B) t[n] = e && null != e[n] ? e[n] : B[n];
                  return t;
                })(e)),
                ((n = a.call(this, e, t) || this).options = e),
                (n.inModule = "module" === n.options.sourceType),
                (n.input = t),
                (n.plugins = (function(e) {
                  for (var t = Object.create(null), n = 0; n < e.length; n++) {
                    var a = e[n],
                      r = Array.isArray(a) ? a : [a, {}],
                      i = r[0],
                      o = r[1],
                      s = void 0 === o ? {} : o;
                    t[i] || (t[i] = s || {});
                  }
                  return t;
                })(n.options.plugins)),
                (n.filename = e.sourceFilename),
                n
              );
            }
            return (
              r(e, a),
              (e.prototype.parse = function() {
                var e = this.startNode(),
                  t = this.startNode();
                return this.nextToken(), this.parseTopLevel(e, t);
              }),
              e
            );
          })(
            (function(e) {
              function t() {
                return e.apply(this, arguments) || this;
              }
              r(t, e);
              var n = t.prototype;
              return (
                (n.parseTopLevel = function(e, t) {
                  return (
                    (t.sourceType = this.options.sourceType),
                    (t.interpreter = this.parseInterpreterDirective()),
                    this.parseBlockBody(t, !0, !0, x.eof),
                    (e.program = this.finishNode(t, "Program")),
                    (e.comments = this.state.comments),
                    this.options.tokens && (e.tokens = this.state.tokens),
                    this.finishNode(e, "File")
                  );
                }),
                (n.stmtToDirective = function(e) {
                  var t = e.expression,
                    n = this.startNodeAt(t.start, t.loc.start),
                    a = this.startNodeAt(e.start, e.loc.start),
                    r = this.input.slice(t.start, t.end),
                    i = (n.value = r.slice(1, -1));
                  return (
                    this.addExtra(n, "raw", r),
                    this.addExtra(n, "rawValue", i),
                    (a.value = this.finishNodeAt(
                      n,
                      "DirectiveLiteral",
                      t.end,
                      t.loc.end
                    )),
                    this.finishNodeAt(a, "Directive", e.end, e.loc.end)
                  );
                }),
                (n.parseInterpreterDirective = function() {
                  if (!this.match(x.interpreterDirective)) return null;
                  var e = this.startNode();
                  return (
                    (e.value = this.state.value),
                    this.next(),
                    this.finishNode(e, "InterpreterDirective")
                  );
                }),
                (n.parseStatement = function(e, t) {
                  return (
                    this.match(x.at) && this.parseDecorators(!0),
                    this.parseStatementContent(e, t)
                  );
                }),
                (n.parseStatementContent = function(e, t) {
                  var n = this.state.type,
                    a = this.startNode();
                  switch (n) {
                    case x._break:
                    case x._continue:
                      return this.parseBreakContinueStatement(a, n.keyword);
                    case x._debugger:
                      return this.parseDebuggerStatement(a);
                    case x._do:
                      return this.parseDoStatement(a);
                    case x._for:
                      return this.parseForStatement(a);
                    case x._function:
                      if (this.lookahead().type === x.dot) break;
                      return (
                        e || this.unexpected(), this.parseFunctionStatement(a)
                      );
                    case x._class:
                      return e || this.unexpected(), this.parseClass(a, !0);
                    case x._if:
                      return this.parseIfStatement(a);
                    case x._return:
                      return this.parseReturnStatement(a);
                    case x._switch:
                      return this.parseSwitchStatement(a);
                    case x._throw:
                      return this.parseThrowStatement(a);
                    case x._try:
                      return this.parseTryStatement(a);
                    case x._let:
                    case x._const:
                      e || this.unexpected();
                    case x._var:
                      return this.parseVarStatement(a, n);
                    case x._while:
                      return this.parseWhileStatement(a);
                    case x._with:
                      return this.parseWithStatement(a);
                    case x.braceL:
                      return this.parseBlock();
                    case x.semi:
                      return this.parseEmptyStatement(a);
                    case x._export:
                    case x._import:
                      var r,
                        i = this.lookahead();
                      if (i.type === x.parenL || i.type === x.dot) break;
                      return (
                        this.options.allowImportExportEverywhere ||
                          t ||
                          this.raise(
                            this.state.start,
                            "'import' and 'export' may only appear at the top level"
                          ),
                        this.next(),
                        n == x._import
                          ? "ImportDeclaration" !==
                              (r = this.parseImport(a)).type ||
                            (r.importKind && "value" !== r.importKind) ||
                            (this.sawUnambiguousESM = !0)
                          : (("ExportNamedDeclaration" !==
                              (r = this.parseExport(a)).type ||
                              (r.exportKind && "value" !== r.exportKind)) &&
                              ("ExportAllDeclaration" !== r.type ||
                                (r.exportKind && "value" !== r.exportKind)) &&
                              "ExportDefaultDeclaration" !== r.type) ||
                            (this.sawUnambiguousESM = !0),
                        this.assertModuleNodeAllowed(a),
                        r
                      );
                    case x.name:
                      if (this.isContextual("async")) {
                        var o = this.state.clone();
                        if (
                          (this.next(),
                          this.match(x._function) && !this.canInsertSemicolon())
                        )
                          return (
                            this.expect(x._function),
                            this.parseFunction(a, !0, !1, !0)
                          );
                        this.state = o;
                      }
                  }
                  var s = this.state.value,
                    d = this.parseExpression();
                  return n === x.name &&
                    "Identifier" === d.type &&
                    this.eat(x.colon)
                    ? this.parseLabeledStatement(a, s, d)
                    : this.parseExpressionStatement(a, d);
                }),
                (n.assertModuleNodeAllowed = function(e) {
                  this.options.allowImportExportEverywhere ||
                    this.inModule ||
                    this.raise(
                      e.start,
                      "'import' and 'export' may appear only with 'sourceType: \"module\"'",
                      { code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" }
                    );
                }),
                (n.takeDecorators = function(e) {
                  var t = this.state.decoratorStack[
                    this.state.decoratorStack.length - 1
                  ];
                  t.length &&
                    ((e.decorators = t),
                    this.resetStartLocationFromNode(e, t[0]),
                    (this.state.decoratorStack[
                      this.state.decoratorStack.length - 1
                    ] = []));
                }),
                (n.canHaveLeadingDecorator = function() {
                  return this.match(x._class);
                }),
                (n.parseDecorators = function(e) {
                  for (
                    var t = this.state.decoratorStack[
                      this.state.decoratorStack.length - 1
                    ];
                    this.match(x.at);

                  ) {
                    var n = this.parseDecorator();
                    t.push(n);
                  }
                  this.match(x._export)
                    ? (e || this.unexpected(),
                      this.hasPlugin("decorators") &&
                        !this.getPluginOption(
                          "decorators",
                          "decoratorsBeforeExport"
                        ) &&
                        this.raise(
                          this.state.start,
                          "Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead."
                        ))
                    : this.canHaveLeadingDecorator() ||
                      this.raise(
                        this.state.start,
                        "Leading decorators must be attached to a class declaration"
                      );
                }),
                (n.parseDecorator = function() {
                  this.expectOnePlugin(["decorators-legacy", "decorators"]);
                  var e = this.startNode();
                  if ((this.next(), this.hasPlugin("decorators"))) {
                    this.state.decoratorStack.push([]);
                    var t,
                      n = this.state.start,
                      a = this.state.startLoc;
                    if (this.eat(x.parenL))
                      (t = this.parseExpression()), this.expect(x.parenR);
                    else
                      for (t = this.parseIdentifier(!1); this.eat(x.dot); ) {
                        var r = this.startNodeAt(n, a);
                        (r.object = t),
                          (r.property = this.parseIdentifier(!0)),
                          (r.computed = !1),
                          (t = this.finishNode(r, "MemberExpression"));
                      }
                    if (this.eat(x.parenL)) {
                      var i = this.startNodeAt(n, a);
                      (i.callee = t),
                        (i.arguments = this.parseCallExpressionArguments(
                          x.parenR,
                          !1
                        )),
                        this.toReferencedList(i.arguments),
                        (t = this.finishNode(i, "CallExpression"));
                    }
                    (e.expression = t), this.state.decoratorStack.pop();
                  } else e.expression = this.parseMaybeAssign();
                  return this.finishNode(e, "Decorator");
                }),
                (n.parseBreakContinueStatement = function(e, t) {
                  var n,
                    a = "break" === t;
                  for (
                    this.next(),
                      this.isLineTerminator()
                        ? (e.label = null)
                        : this.match(x.name)
                          ? ((e.label = this.parseIdentifier()),
                            this.semicolon())
                          : this.unexpected(),
                      n = 0;
                    n < this.state.labels.length;
                    ++n
                  ) {
                    var r = this.state.labels[n];
                    if (null == e.label || r.name === e.label.name) {
                      if (null != r.kind && (a || "loop" === r.kind)) break;
                      if (e.label && a) break;
                    }
                  }
                  return (
                    n === this.state.labels.length &&
                      this.raise(e.start, "Unsyntactic " + t),
                    this.finishNode(
                      e,
                      a ? "BreakStatement" : "ContinueStatement"
                    )
                  );
                }),
                (n.parseDebuggerStatement = function(e) {
                  return (
                    this.next(),
                    this.semicolon(),
                    this.finishNode(e, "DebuggerStatement")
                  );
                }),
                (n.parseDoStatement = function(e) {
                  return (
                    this.next(),
                    this.state.labels.push(z),
                    (e.body = this.parseStatement(!1)),
                    this.state.labels.pop(),
                    this.expect(x._while),
                    (e.test = this.parseParenExpression()),
                    this.eat(x.semi),
                    this.finishNode(e, "DoWhileStatement")
                  );
                }),
                (n.parseForStatement = function(e) {
                  this.next(), this.state.labels.push(z);
                  var t = !1;
                  if (
                    (this.state.inAsync &&
                      this.isContextual("await") &&
                      (this.expectPlugin("asyncGenerators"),
                      (t = !0),
                      this.next()),
                    this.expect(x.parenL),
                    this.match(x.semi))
                  )
                    return t && this.unexpected(), this.parseFor(e, null);
                  if (
                    this.match(x._var) ||
                    this.match(x._let) ||
                    this.match(x._const)
                  ) {
                    var n = this.startNode(),
                      a = this.state.type;
                    if (
                      (this.next(),
                      this.parseVar(n, !0, a),
                      this.finishNode(n, "VariableDeclaration"),
                      (this.match(x._in) || this.isContextual("of")) &&
                        1 === n.declarations.length)
                    ) {
                      var r = n.declarations[0],
                        i =
                          a === x._var &&
                          r.init &&
                          "ObjectPattern" != r.id.type &&
                          "ArrayPattern" != r.id.type &&
                          !this.isContextual("of");
                      if (this.state.strict && i)
                        this.raise(
                          this.state.start,
                          "for-in initializer in strict mode"
                        );
                      else if (i || !r.init) return this.parseForIn(e, n, t);
                    }
                    return t && this.unexpected(), this.parseFor(e, n);
                  }
                  var o = { start: 0 },
                    s = this.parseExpression(!0, o);
                  if (this.match(x._in) || this.isContextual("of")) {
                    var d = this.isContextual("of")
                      ? "for-of statement"
                      : "for-in statement";
                    return (
                      this.toAssignable(s, void 0, d),
                      this.checkLVal(s, void 0, void 0, d),
                      this.parseForIn(e, s, t)
                    );
                  }
                  return (
                    o.start && this.unexpected(o.start),
                    t && this.unexpected(),
                    this.parseFor(e, s)
                  );
                }),
                (n.parseFunctionStatement = function(e) {
                  return this.next(), this.parseFunction(e, !0);
                }),
                (n.parseIfStatement = function(e) {
                  return (
                    this.next(),
                    (e.test = this.parseParenExpression()),
                    (e.consequent = this.parseStatement(!1)),
                    (e.alternate = this.eat(x._else)
                      ? this.parseStatement(!1)
                      : null),
                    this.finishNode(e, "IfStatement")
                  );
                }),
                (n.parseReturnStatement = function(e) {
                  return (
                    this.state.inFunction ||
                      this.options.allowReturnOutsideFunction ||
                      this.raise(
                        this.state.start,
                        "'return' outside of function"
                      ),
                    this.next(),
                    this.isLineTerminator()
                      ? (e.argument = null)
                      : ((e.argument = this.parseExpression()),
                        this.semicolon()),
                    this.finishNode(e, "ReturnStatement")
                  );
                }),
                (n.parseSwitchStatement = function(e) {
                  this.next(), (e.discriminant = this.parseParenExpression());
                  var t,
                    n,
                    a = (e.cases = []);
                  for (
                    this.expect(x.braceL), this.state.labels.push($);
                    !this.match(x.braceR);

                  )
                    if (this.match(x._case) || this.match(x._default)) {
                      var r = this.match(x._case);
                      t && this.finishNode(t, "SwitchCase"),
                        a.push((t = this.startNode())),
                        (t.consequent = []),
                        this.next(),
                        (t.test = r
                          ? this.parseExpression()
                          : (n &&
                              this.raise(
                                this.state.lastTokStart,
                                "Multiple default clauses"
                              ),
                            (n = !0),
                            null)),
                        this.expect(x.colon);
                    } else
                      t
                        ? t.consequent.push(this.parseStatement(!0))
                        : this.unexpected();
                  return (
                    t && this.finishNode(t, "SwitchCase"),
                    this.next(),
                    this.state.labels.pop(),
                    this.finishNode(e, "SwitchStatement")
                  );
                }),
                (n.parseThrowStatement = function(e) {
                  return (
                    this.next(),
                    C.test(
                      this.input.slice(this.state.lastTokEnd, this.state.start)
                    ) &&
                      this.raise(
                        this.state.lastTokEnd,
                        "Illegal newline after throw"
                      ),
                    (e.argument = this.parseExpression()),
                    this.semicolon(),
                    this.finishNode(e, "ThrowStatement")
                  );
                }),
                (n.parseTryStatement = function(e) {
                  if (
                    (this.next(),
                    (e.block = this.parseBlock()),
                    (e.handler = null),
                    this.match(x._catch))
                  ) {
                    var t = this.startNode();
                    if ((this.next(), this.match(x.parenL))) {
                      this.expect(x.parenL),
                        (t.param = this.parseBindingAtom());
                      var n = Object.create(null);
                      this.checkLVal(t.param, !0, n, "catch clause"),
                        this.expect(x.parenR);
                    } else
                      this.expectPlugin("optionalCatchBinding"),
                        (t.param = null);
                    (t.body = this.parseBlock()),
                      (e.handler = this.finishNode(t, "CatchClause"));
                  }
                  return (
                    (e.guardedHandlers = X),
                    (e.finalizer = this.eat(x._finally)
                      ? this.parseBlock()
                      : null),
                    e.handler ||
                      e.finalizer ||
                      this.raise(e.start, "Missing catch or finally clause"),
                    this.finishNode(e, "TryStatement")
                  );
                }),
                (n.parseVarStatement = function(e, t) {
                  return (
                    this.next(),
                    this.parseVar(e, !1, t),
                    this.semicolon(),
                    this.finishNode(e, "VariableDeclaration")
                  );
                }),
                (n.parseWhileStatement = function(e) {
                  return (
                    this.next(),
                    (e.test = this.parseParenExpression()),
                    this.state.labels.push(z),
                    (e.body = this.parseStatement(!1)),
                    this.state.labels.pop(),
                    this.finishNode(e, "WhileStatement")
                  );
                }),
                (n.parseWithStatement = function(e) {
                  return (
                    this.state.strict &&
                      this.raise(this.state.start, "'with' in strict mode"),
                    this.next(),
                    (e.object = this.parseParenExpression()),
                    (e.body = this.parseStatement(!1)),
                    this.finishNode(e, "WithStatement")
                  );
                }),
                (n.parseEmptyStatement = function(e) {
                  return this.next(), this.finishNode(e, "EmptyStatement");
                }),
                (n.parseLabeledStatement = function(e, t, n) {
                  for (var a = 0, r = this.state.labels; a < r.length; a++)
                    r[a].name === t &&
                      this.raise(
                        n.start,
                        "Label '" + t + "' is already declared"
                      );
                  for (
                    var i = this.state.type.isLoop
                        ? "loop"
                        : this.match(x._switch)
                          ? "switch"
                          : null,
                      o = this.state.labels.length - 1;
                    0 <= o;
                    o--
                  ) {
                    var s = this.state.labels[o];
                    if (s.statementStart !== e.start) break;
                    (s.statementStart = this.state.start), (s.kind = i);
                  }
                  return (
                    this.state.labels.push({
                      name: t,
                      kind: i,
                      statementStart: this.state.start,
                    }),
                    (e.body = this.parseStatement(!0)),
                    ("ClassDeclaration" == e.body.type ||
                      ("VariableDeclaration" == e.body.type &&
                        "var" !== e.body.kind) ||
                      ("FunctionDeclaration" == e.body.type &&
                        (this.state.strict ||
                          e.body.generator ||
                          e.body.async))) &&
                      this.raise(e.body.start, "Invalid labeled declaration"),
                    this.state.labels.pop(),
                    (e.label = n),
                    this.finishNode(e, "LabeledStatement")
                  );
                }),
                (n.parseExpressionStatement = function(e, t) {
                  return (
                    (e.expression = t),
                    this.semicolon(),
                    this.finishNode(e, "ExpressionStatement")
                  );
                }),
                (n.parseBlock = function(e) {
                  var t = this.startNode();
                  return (
                    this.expect(x.braceL),
                    this.parseBlockBody(t, e, !1, x.braceR),
                    this.finishNode(t, "BlockStatement")
                  );
                }),
                (n.isValidDirective = function(e) {
                  return (
                    "ExpressionStatement" === e.type &&
                    "StringLiteral" === e.expression.type &&
                    !e.expression.extra.parenthesized
                  );
                }),
                (n.parseBlockBody = function(e, t, n, a) {
                  var r = (e.body = []),
                    i = (e.directives = []);
                  this.parseBlockOrModuleBlockBody(r, t ? i : void 0, n, a);
                }),
                (n.parseBlockOrModuleBlockBody = function(e, t, n, a) {
                  for (var r, i, o = !1; !this.eat(a); ) {
                    o ||
                      !this.state.containsOctal ||
                      i ||
                      (i = this.state.octalPosition);
                    var s = this.parseStatement(!0, n);
                    if (t && !o && this.isValidDirective(s)) {
                      var d = this.stmtToDirective(s);
                      t.push(d),
                        void 0 === r &&
                          "use strict" === d.value.value &&
                          ((r = this.state.strict),
                          this.setStrict(!0),
                          i && this.raise(i, "Octal literal in strict mode"));
                    } else (o = !0), e.push(s);
                  }
                  !1 === r && this.setStrict(!1);
                }),
                (n.parseFor = function(e, t) {
                  return (
                    (e.init = t),
                    this.expect(x.semi),
                    (e.test = this.match(x.semi)
                      ? null
                      : this.parseExpression()),
                    this.expect(x.semi),
                    (e.update = this.match(x.parenR)
                      ? null
                      : this.parseExpression()),
                    this.expect(x.parenR),
                    (e.body = this.parseStatement(!1)),
                    this.state.labels.pop(),
                    this.finishNode(e, "ForStatement")
                  );
                }),
                (n.parseForIn = function(e, t, n) {
                  var a = this.match(x._in)
                    ? "ForInStatement"
                    : "ForOfStatement";
                  return (
                    n ? this.eatContextual("of") : this.next(),
                    "ForOfStatement" === a && (e.await = !!n),
                    (e.left = t),
                    (e.right = this.parseExpression()),
                    this.expect(x.parenR),
                    (e.body = this.parseStatement(!1)),
                    this.state.labels.pop(),
                    this.finishNode(e, a)
                  );
                }),
                (n.parseVar = function(e, t, n) {
                  var a = (e.declarations = []);
                  for (e.kind = n.keyword; ; ) {
                    var r = this.startNode();
                    if (
                      (this.parseVarHead(r),
                      this.eat(x.eq)
                        ? (r.init = this.parseMaybeAssign(t))
                        : (n !== x._const ||
                          this.match(x._in) ||
                          this.isContextual("of")
                            ? "Identifier" === r.id.type ||
                              (t &&
                                (this.match(x._in) ||
                                  this.isContextual("of"))) ||
                              this.raise(
                                this.state.lastTokEnd,
                                "Complex binding patterns require an initialization value"
                              )
                            : this.hasPlugin("typescript") || this.unexpected(),
                          (r.init = null)),
                      a.push(this.finishNode(r, "VariableDeclarator")),
                      !this.eat(x.comma))
                    )
                      break;
                  }
                  return e;
                }),
                (n.parseVarHead = function(e) {
                  (e.id = this.parseBindingAtom()),
                    this.checkLVal(e.id, !0, void 0, "variable declaration");
                }),
                (n.parseFunction = function(e, t, n, a, r) {
                  var i = this.state.inFunction,
                    o = this.state.inMethod,
                    s = this.state.inGenerator,
                    d = this.state.inClassProperty;
                  return (
                    (this.state.inFunction = !0),
                    (this.state.inMethod = !1),
                    (this.state.inClassProperty = !1),
                    this.initFunction(e, a),
                    this.match(x.star) &&
                      (e.async && this.expectPlugin("asyncGenerators"),
                      (e.generator = !0),
                      this.next()),
                    !t ||
                      r ||
                      this.match(x.name) ||
                      this.match(x._yield) ||
                      this.unexpected(),
                    t || (this.state.inGenerator = e.generator),
                    (this.match(x.name) || this.match(x._yield)) &&
                      (e.id = this.parseBindingIdentifier()),
                    t && (this.state.inGenerator = e.generator),
                    this.parseFunctionParams(e),
                    this.parseFunctionBodyAndFinish(
                      e,
                      t ? "FunctionDeclaration" : "FunctionExpression",
                      n
                    ),
                    (this.state.inFunction = i),
                    (this.state.inMethod = o),
                    (this.state.inGenerator = s),
                    (this.state.inClassProperty = d),
                    e
                  );
                }),
                (n.parseFunctionParams = function(e, t) {
                  var n = this.state.inParameters;
                  (this.state.inParameters = !0),
                    this.expect(x.parenL),
                    (e.params = this.parseBindingList(x.parenR, !1, t)),
                    (this.state.inParameters = n);
                }),
                (n.parseClass = function(e, t, n) {
                  return (
                    this.next(),
                    this.takeDecorators(e),
                    this.parseClassId(e, t, n),
                    this.parseClassSuper(e),
                    this.parseClassBody(e),
                    this.finishNode(
                      e,
                      t ? "ClassDeclaration" : "ClassExpression"
                    )
                  );
                }),
                (n.isClassProperty = function() {
                  return (
                    this.match(x.eq) ||
                    this.match(x.semi) ||
                    this.match(x.braceR)
                  );
                }),
                (n.isClassMethod = function() {
                  return this.match(x.parenL);
                }),
                (n.isNonstaticConstructor = function(e) {
                  return !(
                    e.computed ||
                    e.static ||
                    ("constructor" !== e.key.name &&
                      "constructor" !== e.key.value)
                  );
                }),
                (n.parseClassBody = function(e) {
                  var t = this.state.strict;
                  (this.state.strict = !0), this.state.classLevel++;
                  var n = { hadConstructor: !1 },
                    a = [],
                    r = this.startNode();
                  for (
                    r.body = [], this.expect(x.braceL);
                    !this.eat(x.braceR);

                  )
                    if (this.eat(x.semi))
                      0 < a.length &&
                        this.raise(
                          this.state.lastTokEnd,
                          "Decorators must not be followed by a semicolon"
                        );
                    else if (this.match(x.at)) a.push(this.parseDecorator());
                    else {
                      var i = this.startNode();
                      a.length &&
                        ((i.decorators = a),
                        this.resetStartLocationFromNode(i, a[0]),
                        (a = [])),
                        this.parseClassMember(r, i, n),
                        "constructor" === i.kind &&
                          i.decorators &&
                          0 < i.decorators.length &&
                          this.raise(
                            i.start,
                            "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?"
                          );
                    }
                  a.length &&
                    this.raise(
                      this.state.start,
                      "You have trailing decorators with no method"
                    ),
                    (e.body = this.finishNode(r, "ClassBody")),
                    this.state.classLevel--,
                    (this.state.strict = t);
                }),
                (n.parseClassMember = function(e, t, n) {
                  var a = !1,
                    r = this.state.containsEsc;
                  if (this.match(x.name) && "static" === this.state.value) {
                    var i = this.parseIdentifier(!0);
                    if (this.isClassMethod()) {
                      var o = t;
                      return (
                        (o.kind = "method"),
                        (o.computed = !1),
                        (o.key = i),
                        (o.static = !1),
                        void this.pushClassMethod(e, o, !1, !1, !1)
                      );
                    }
                    if (this.isClassProperty()) {
                      var s = t;
                      return (
                        (s.computed = !1),
                        (s.key = i),
                        (s.static = !1),
                        void e.body.push(this.parseClassProperty(s))
                      );
                    }
                    if (r) throw this.unexpected();
                    a = !0;
                  }
                  this.parseClassMemberWithIsStatic(e, t, n, a);
                }),
                (n.parseClassMemberWithIsStatic = function(e, t, n, a) {
                  var r = t,
                    i = t,
                    o = t,
                    s = t,
                    d = r,
                    u = r;
                  if (((t.static = a), this.eat(x.star)))
                    return (
                      (d.kind = "method"),
                      this.parseClassPropertyName(d),
                      "PrivateName" === d.key.type
                        ? void this.pushClassPrivateMethod(e, i, !0, !1)
                        : (this.isNonstaticConstructor(r) &&
                            this.raise(
                              r.key.start,
                              "Constructor can't be a generator"
                            ),
                          void this.pushClassMethod(e, r, !0, !1, !1))
                    );
                  var l = this.parseClassPropertyName(t),
                    c = "PrivateName" === l.type,
                    p = "Identifier" === l.type;
                  if (
                    (this.parsePostMemberNameModifiers(u), this.isClassMethod())
                  ) {
                    if (((d.kind = "method"), c))
                      return void this.pushClassPrivateMethod(e, i, !1, !1);
                    var g = this.isNonstaticConstructor(r);
                    g &&
                      ((r.kind = "constructor"),
                      r.decorators &&
                        this.raise(
                          r.start,
                          "You can't attach decorators to a class constructor"
                        ),
                      n.hadConstructor &&
                        !this.hasPlugin("typescript") &&
                        this.raise(
                          l.start,
                          "Duplicate constructor in the same class"
                        ),
                      (n.hadConstructor = !0)),
                      this.pushClassMethod(e, r, !1, !1, g);
                  } else if (this.isClassProperty())
                    c
                      ? this.pushClassPrivateProperty(e, s)
                      : this.pushClassProperty(e, o);
                  else if (
                    p &&
                    "async" === l.name &&
                    !this.isLineTerminator()
                  ) {
                    var f = this.match(x.star);
                    f && (this.expectPlugin("asyncGenerators"), this.next()),
                      (d.kind = "method"),
                      this.parseClassPropertyName(d),
                      "PrivateName" === d.key.type
                        ? this.pushClassPrivateMethod(e, i, f, !0)
                        : (this.isNonstaticConstructor(r) &&
                            this.raise(
                              r.key.start,
                              "Constructor can't be an async function"
                            ),
                          this.pushClassMethod(e, r, f, !0, !1));
                  } else
                    !p ||
                    ("get" !== l.name && "set" !== l.name) ||
                    (this.isLineTerminator() && this.match(x.star))
                      ? this.isLineTerminator()
                        ? c
                          ? this.pushClassPrivateProperty(e, s)
                          : this.pushClassProperty(e, o)
                        : this.unexpected()
                      : ((d.kind = l.name),
                        this.parseClassPropertyName(r),
                        "PrivateName" === d.key.type
                          ? this.pushClassPrivateMethod(e, i, !1, !1)
                          : (this.isNonstaticConstructor(r) &&
                              this.raise(
                                r.key.start,
                                "Constructor can't have get/set modifier"
                              ),
                            this.pushClassMethod(e, r, !1, !1, !1)),
                        this.checkGetterSetterParams(r));
                }),
                (n.parseClassPropertyName = function(e) {
                  var t = this.parsePropertyName(e);
                  return (
                    e.computed ||
                      !e.static ||
                      ("prototype" !== t.name && "prototype" !== t.value) ||
                      this.raise(
                        t.start,
                        "Classes may not have static property named prototype"
                      ),
                    "PrivateName" === t.type &&
                      "constructor" === t.id.name &&
                      this.raise(
                        t.start,
                        "Classes may not have a private field named '#constructor'"
                      ),
                    t
                  );
                }),
                (n.pushClassProperty = function(e, t) {
                  this.isNonstaticConstructor(t) &&
                    this.raise(
                      t.key.start,
                      "Classes may not have a non-static field named 'constructor'"
                    ),
                    e.body.push(this.parseClassProperty(t));
                }),
                (n.pushClassPrivateProperty = function(e, t) {
                  this.expectPlugin("classPrivateProperties", t.key.start),
                    e.body.push(this.parseClassPrivateProperty(t));
                }),
                (n.pushClassMethod = function(e, t, n, a, r) {
                  e.body.push(this.parseMethod(t, n, a, r, "ClassMethod"));
                }),
                (n.pushClassPrivateMethod = function(e, t, n, a) {
                  this.expectPlugin("classPrivateMethods", t.key.start),
                    e.body.push(
                      this.parseMethod(t, n, a, !1, "ClassPrivateMethod")
                    );
                }),
                (n.parsePostMemberNameModifiers = function(e) {}),
                (n.parseAccessModifier = function() {}),
                (n.parseClassPrivateProperty = function(e) {
                  var t = this.state.inMethod;
                  return (
                    (this.state.inMethod = !1),
                    (this.state.inClassProperty = !0),
                    (e.value = this.eat(x.eq) ? this.parseMaybeAssign() : null),
                    this.semicolon(),
                    (this.state.inClassProperty = !1),
                    (this.state.inMethod = t),
                    this.finishNode(e, "ClassPrivateProperty")
                  );
                }),
                (n.parseClassProperty = function(e) {
                  e.typeAnnotation || this.expectPlugin("classProperties");
                  var t = this.state.inMethod;
                  return (
                    (this.state.inMethod = !1),
                    (this.state.inClassProperty = !0),
                    this.match(x.eq)
                      ? (this.expectPlugin("classProperties"),
                        this.next(),
                        (e.value = this.parseMaybeAssign()))
                      : (e.value = null),
                    this.semicolon(),
                    (this.state.inClassProperty = !1),
                    (this.state.inMethod = t),
                    this.finishNode(e, "ClassProperty")
                  );
                }),
                (n.parseClassId = function(e, t, n) {
                  this.match(x.name)
                    ? (e.id = this.parseIdentifier())
                    : n || !t
                      ? (e.id = null)
                      : this.unexpected(null, "A class name is required");
                }),
                (n.parseClassSuper = function(e) {
                  e.superClass = this.eat(x._extends)
                    ? this.parseExprSubscripts()
                    : null;
                }),
                (n.parseExport = function(e) {
                  if (this.shouldParseExportStar()) {
                    if (
                      (this.parseExportStar(e),
                      "ExportAllDeclaration" === e.type)
                    )
                      return e;
                  } else if (this.isExportDefaultSpecifier()) {
                    this.expectPlugin("exportDefaultFrom");
                    var t = this.startNode();
                    t.exported = this.parseIdentifier(!0);
                    var n = [this.finishNode(t, "ExportDefaultSpecifier")];
                    if (
                      ((e.specifiers = n),
                      this.match(x.comma) && this.lookahead().type === x.star)
                    ) {
                      this.expect(x.comma);
                      var a = this.startNode();
                      this.expect(x.star),
                        this.expectContextual("as"),
                        (a.exported = this.parseIdentifier()),
                        n.push(this.finishNode(a, "ExportNamespaceSpecifier"));
                    } else this.parseExportSpecifiersMaybe(e);
                    this.parseExportFrom(e, !0);
                  } else {
                    if (this.eat(x._default))
                      return (
                        (e.declaration = this.parseExportDefaultExpression()),
                        this.checkExport(e, !0, !0),
                        this.finishNode(e, "ExportDefaultDeclaration")
                      );
                    if (this.shouldParseExportDeclaration()) {
                      if (this.isContextual("async")) {
                        var r = this.lookahead();
                        r.type !== x._function &&
                          this.unexpected(
                            r.start,
                            'Unexpected token, expected "function"'
                          );
                      }
                      (e.specifiers = []),
                        (e.source = null),
                        (e.declaration = this.parseExportDeclaration(e));
                    } else
                      (e.declaration = null),
                        (e.specifiers = this.parseExportSpecifiers()),
                        this.parseExportFrom(e);
                  }
                  return (
                    this.checkExport(e, !0),
                    this.finishNode(e, "ExportNamedDeclaration")
                  );
                }),
                (n.parseExportDefaultExpression = function() {
                  var e = this.startNode();
                  if (this.eat(x._function))
                    return this.parseFunction(e, !0, !1, !1, !0);
                  if (
                    this.isContextual("async") &&
                    this.lookahead().type === x._function
                  )
                    return (
                      this.eatContextual("async"),
                      this.eat(x._function),
                      this.parseFunction(e, !0, !1, !0, !0)
                    );
                  if (this.match(x._class)) return this.parseClass(e, !0, !0);
                  if (this.match(x.at))
                    return (
                      this.hasPlugin("decorators") &&
                        this.getPluginOption(
                          "decorators",
                          "decoratorsBeforeExport"
                        ) &&
                        this.unexpected(
                          this.state.start,
                          "Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax"
                        ),
                      this.parseDecorators(!1),
                      this.parseClass(e, !0, !0)
                    );
                  if (
                    this.match(x._let) ||
                    this.match(x._const) ||
                    this.match(x._var)
                  )
                    return this.raise(
                      this.state.start,
                      "Only expressions, functions or classes are allowed as the `default` export."
                    );
                  var t = this.parseMaybeAssign();
                  return this.semicolon(), t;
                }),
                (n.parseExportDeclaration = function(e) {
                  return this.parseStatement(!0);
                }),
                (n.isExportDefaultSpecifier = function() {
                  if (this.match(x.name)) return "async" !== this.state.value;
                  if (!this.match(x._default)) return !1;
                  var e = this.lookahead();
                  return (
                    e.type === x.comma ||
                    (e.type === x.name && "from" === e.value)
                  );
                }),
                (n.parseExportSpecifiersMaybe = function(e) {
                  this.eat(x.comma) &&
                    (e.specifiers = e.specifiers.concat(
                      this.parseExportSpecifiers()
                    ));
                }),
                (n.parseExportFrom = function(e, t) {
                  this.eatContextual("from")
                    ? ((e.source = this.match(x.string)
                        ? this.parseExprAtom()
                        : this.unexpected()),
                      this.checkExport(e))
                    : t
                      ? this.unexpected()
                      : (e.source = null),
                    this.semicolon();
                }),
                (n.shouldParseExportStar = function() {
                  return this.match(x.star);
                }),
                (n.parseExportStar = function(e) {
                  this.expect(x.star),
                    this.isContextual("as")
                      ? this.parseExportNamespace(e)
                      : (this.parseExportFrom(e, !0),
                        this.finishNode(e, "ExportAllDeclaration"));
                }),
                (n.parseExportNamespace = function(e) {
                  this.expectPlugin("exportNamespaceFrom");
                  var t = this.startNodeAt(
                    this.state.lastTokStart,
                    this.state.lastTokStartLoc
                  );
                  this.next(),
                    (t.exported = this.parseIdentifier(!0)),
                    (e.specifiers = [
                      this.finishNode(t, "ExportNamespaceSpecifier"),
                    ]),
                    this.parseExportSpecifiersMaybe(e),
                    this.parseExportFrom(e, !0);
                }),
                (n.shouldParseExportDeclaration = function() {
                  if (
                    this.match(x.at) &&
                    (this.expectOnePlugin(["decorators", "decorators-legacy"]),
                    this.hasPlugin("decorators"))
                  ) {
                    if (
                      !this.getPluginOption(
                        "decorators",
                        "decoratorsBeforeExport"
                      )
                    )
                      return !0;
                    this.unexpected(
                      this.state.start,
                      "Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax"
                    );
                  }
                  return (
                    "var" === this.state.type.keyword ||
                    "const" === this.state.type.keyword ||
                    "let" === this.state.type.keyword ||
                    "function" === this.state.type.keyword ||
                    "class" === this.state.type.keyword ||
                    this.isContextual("async")
                  );
                }),
                (n.checkExport = function(e, t, n) {
                  if (t)
                    if (n) this.checkDuplicateExports(e, "default");
                    else if (e.specifiers && e.specifiers.length)
                      for (var a = 0, r = e.specifiers; a < r.length; a++) {
                        var i = r[a];
                        this.checkDuplicateExports(i, i.exported.name);
                      }
                    else if (e.declaration)
                      if (
                        "FunctionDeclaration" === e.declaration.type ||
                        "ClassDeclaration" === e.declaration.type
                      ) {
                        var o = e.declaration.id;
                        if (!o) throw new Error("Assertion failure");
                        this.checkDuplicateExports(e, o.name);
                      } else if ("VariableDeclaration" === e.declaration.type)
                        for (
                          var s = 0, d = e.declaration.declarations;
                          s < d.length;
                          s++
                        ) {
                          var u = d[s];
                          this.checkDeclaration(u.id);
                        }
                  if (
                    this.state.decoratorStack[
                      this.state.decoratorStack.length - 1
                    ].length
                  ) {
                    var l =
                      e.declaration &&
                      ("ClassDeclaration" === e.declaration.type ||
                        "ClassExpression" === e.declaration.type);
                    if (!e.declaration || !l)
                      throw this.raise(
                        e.start,
                        "You can only use decorators on an export when exporting a class"
                      );
                    this.takeDecorators(e.declaration);
                  }
                }),
                (n.checkDeclaration = function(e) {
                  if ("ObjectPattern" === e.type)
                    for (var t = 0, n = e.properties; t < n.length; t++) {
                      var a = n[t];
                      this.checkDeclaration(a);
                    }
                  else if ("ArrayPattern" === e.type)
                    for (var r = 0, i = e.elements; r < i.length; r++) {
                      var o = i[r];
                      o && this.checkDeclaration(o);
                    }
                  else
                    "ObjectProperty" === e.type
                      ? this.checkDeclaration(e.value)
                      : "RestElement" === e.type
                        ? this.checkDeclaration(e.argument)
                        : "Identifier" === e.type &&
                          this.checkDuplicateExports(e, e.name);
                }),
                (n.checkDuplicateExports = function(e, t) {
                  -1 < this.state.exportedIdentifiers.indexOf(t) &&
                    this.raiseDuplicateExportError(e, t),
                    this.state.exportedIdentifiers.push(t);
                }),
                (n.raiseDuplicateExportError = function(e, t) {
                  throw this.raise(
                    e.start,
                    "default" === t
                      ? "Only one default export allowed per module."
                      : "`" +
                        t +
                        "` has already been exported. Exported identifiers must be unique."
                  );
                }),
                (n.parseExportSpecifiers = function() {
                  var e,
                    t = [],
                    n = !0;
                  for (this.expect(x.braceL); !this.eat(x.braceR); ) {
                    if (n) n = !1;
                    else if ((this.expect(x.comma), this.eat(x.braceR))) break;
                    var a = this.match(x._default);
                    a && !e && (e = !0);
                    var r = this.startNode();
                    (r.local = this.parseIdentifier(a)),
                      (r.exported = this.eatContextual("as")
                        ? this.parseIdentifier(!0)
                        : r.local.__clone()),
                      t.push(this.finishNode(r, "ExportSpecifier"));
                  }
                  return (
                    e && !this.isContextual("from") && this.unexpected(), t
                  );
                }),
                (n.parseImport = function(e) {
                  return (
                    this.match(x.string)
                      ? ((e.specifiers = []), (e.source = this.parseExprAtom()))
                      : ((e.specifiers = []),
                        this.parseImportSpecifiers(e),
                        this.expectContextual("from"),
                        (e.source = this.match(x.string)
                          ? this.parseExprAtom()
                          : this.unexpected())),
                    this.semicolon(),
                    this.finishNode(e, "ImportDeclaration")
                  );
                }),
                (n.shouldParseDefaultImport = function(e) {
                  return this.match(x.name);
                }),
                (n.parseImportSpecifierLocal = function(e, t, n, a) {
                  (t.local = this.parseIdentifier()),
                    this.checkLVal(t.local, !0, void 0, a),
                    e.specifiers.push(this.finishNode(t, n));
                }),
                (n.parseImportSpecifiers = function(e) {
                  var t = !0;
                  if (
                    !this.shouldParseDefaultImport(e) ||
                    (this.parseImportSpecifierLocal(
                      e,
                      this.startNode(),
                      "ImportDefaultSpecifier",
                      "default import specifier"
                    ),
                    this.eat(x.comma))
                  ) {
                    if (this.match(x.star)) {
                      var n = this.startNode();
                      return (
                        this.next(),
                        this.expectContextual("as"),
                        void this.parseImportSpecifierLocal(
                          e,
                          n,
                          "ImportNamespaceSpecifier",
                          "import namespace specifier"
                        )
                      );
                    }
                    for (this.expect(x.braceL); !this.eat(x.braceR); ) {
                      if (t) t = !1;
                      else if (
                        (this.eat(x.colon) &&
                          this.unexpected(
                            null,
                            "ES2015 named imports do not destructure. Use another statement for destructuring after the import."
                          ),
                        this.expect(x.comma),
                        this.eat(x.braceR))
                      )
                        break;
                      this.parseImportSpecifier(e);
                    }
                  }
                }),
                (n.parseImportSpecifier = function(e) {
                  var t = this.startNode();
                  (t.imported = this.parseIdentifier(!0)),
                    this.eatContextual("as")
                      ? (t.local = this.parseIdentifier())
                      : (this.checkReservedWord(
                          t.imported.name,
                          t.start,
                          !0,
                          !0
                        ),
                        (t.local = t.imported.__clone())),
                    this.checkLVal(t.local, !0, void 0, "import specifier"),
                    e.specifiers.push(this.finishNode(t, "ImportSpecifier"));
                }),
                t
              );
            })(
              (function(e) {
                function t() {
                  return e.apply(this, arguments) || this;
                }
                r(t, e);
                var n = t.prototype;
                return (
                  (n.checkPropClash = function(e, t) {
                    if (!e.computed && !e.kind) {
                      var n = e.key;
                      "__proto__" ===
                        ("Identifier" === n.type ? n.name : String(n.value)) &&
                        (t.proto &&
                          this.raise(
                            n.start,
                            "Redefinition of __proto__ property"
                          ),
                        (t.proto = !0));
                    }
                  }),
                  (n.getExpression = function() {
                    this.nextToken();
                    var e = this.parseExpression();
                    return (
                      this.match(x.eof) || this.unexpected(),
                      (e.comments = this.state.comments),
                      e
                    );
                  }),
                  (n.parseExpression = function(e, t) {
                    var n = this.state.start,
                      a = this.state.startLoc,
                      r = this.parseMaybeAssign(e, t);
                    if (this.match(x.comma)) {
                      var i = this.startNodeAt(n, a);
                      for (i.expressions = [r]; this.eat(x.comma); )
                        i.expressions.push(this.parseMaybeAssign(e, t));
                      return (
                        this.toReferencedList(i.expressions),
                        this.finishNode(i, "SequenceExpression")
                      );
                    }
                    return r;
                  }),
                  (n.parseMaybeAssign = function(e, t, n, a) {
                    var r,
                      i = this.state.start,
                      o = this.state.startLoc;
                    if (this.match(x._yield) && this.state.inGenerator) {
                      var s = this.parseYield();
                      return n && (s = n.call(this, s, i, o)), s;
                    }
                    (r = !t && ((t = { start: 0 }), !0)),
                      (this.match(x.parenL) ||
                        this.match(x.name) ||
                        this.match(x._yield)) &&
                        (this.state.potentialArrowAt = this.state.start);
                    var d = this.parseMaybeConditional(e, t, a);
                    if (
                      (n && (d = n.call(this, d, i, o)),
                      this.state.type.isAssign)
                    ) {
                      var u,
                        l = this.startNodeAt(i, o),
                        c = this.state.value;
                      return (
                        "??=" === (l.operator = c) &&
                          (this.expectPlugin("nullishCoalescingOperator"),
                          this.expectPlugin("logicalAssignment")),
                        ("||=" !== c && "&&=" !== c) ||
                          this.expectPlugin("logicalAssignment"),
                        (l.left = this.match(x.eq)
                          ? this.toAssignable(
                              d,
                              void 0,
                              "assignment expression"
                            )
                          : d),
                        (t.start = 0),
                        this.checkLVal(
                          d,
                          void 0,
                          void 0,
                          "assignment expression"
                        ),
                        d.extra &&
                          d.extra.parenthesized &&
                          ("ObjectPattern" === d.type
                            ? (u = "`({a}) = 0` use `({a} = 0)`")
                            : "ArrayPattern" === d.type &&
                              (u = "`([a]) = 0` use `([a] = 0)`"),
                          u &&
                            this.raise(
                              d.start,
                              "You're trying to assign to a parenthesized expression, eg. instead of " +
                                u
                            )),
                        this.next(),
                        (l.right = this.parseMaybeAssign(e)),
                        this.finishNode(l, "AssignmentExpression")
                      );
                    }
                    return r && t.start && this.unexpected(t.start), d;
                  }),
                  (n.parseMaybeConditional = function(e, t, n) {
                    var a = this.state.start,
                      r = this.state.startLoc,
                      i = this.state.potentialArrowAt,
                      o = this.parseExprOps(e, t);
                    return "ArrowFunctionExpression" === o.type && o.start === i
                      ? o
                      : t && t.start
                        ? o
                        : this.parseConditional(o, e, a, r, n);
                  }),
                  (n.parseConditional = function(e, t, n, a, r) {
                    if (this.eat(x.question)) {
                      var i = this.startNodeAt(n, a);
                      return (
                        (i.test = e),
                        (i.consequent = this.parseMaybeAssign()),
                        this.expect(x.colon),
                        (i.alternate = this.parseMaybeAssign(t)),
                        this.finishNode(i, "ConditionalExpression")
                      );
                    }
                    return e;
                  }),
                  (n.parseExprOps = function(e, t) {
                    var n = this.state.start,
                      a = this.state.startLoc,
                      r = this.state.potentialArrowAt,
                      i = this.parseMaybeUnary(t);
                    return "ArrowFunctionExpression" === i.type && i.start === r
                      ? i
                      : t && t.start
                        ? i
                        : this.parseExprOp(i, n, a, -1, e);
                  }),
                  (n.parseExprOp = function(e, t, n, a, r) {
                    var i = this.state.type.binop;
                    if (null == i || (r && this.match(x._in)) || !(a < i))
                      return e;
                    var o = this.startNodeAt(t, n),
                      s = this.state.value;
                    (o.left = e),
                      "**" !== (o.operator = s) ||
                        "UnaryExpression" !== e.type ||
                        (e.extra && e.extra.parenthesized) ||
                        this.raise(
                          e.argument.start,
                          "Illegal expression. Wrap left hand side or entire exponentiation in parentheses."
                        );
                    var d = this.state.type;
                    d === x.nullishCoalescing
                      ? this.expectPlugin("nullishCoalescingOperator")
                      : d === x.pipeline &&
                        this.expectPlugin("pipelineOperator"),
                      this.next();
                    var u = this.state.start,
                      l = this.state.startLoc;
                    if (
                      d === x.pipeline &&
                      this.match(x.name) &&
                      "await" === this.state.value &&
                      this.state.inAsync
                    )
                      throw this.raise(
                        this.state.start,
                        'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal'
                      );
                    return (
                      (o.right = this.parseExprOp(
                        this.parseMaybeUnary(),
                        u,
                        l,
                        d.rightAssociative ? i - 1 : i,
                        r
                      )),
                      this.finishNode(
                        o,
                        d === x.logicalOR ||
                        d === x.logicalAND ||
                        d === x.nullishCoalescing
                          ? "LogicalExpression"
                          : "BinaryExpression"
                      ),
                      this.parseExprOp(o, t, n, a, r)
                    );
                  }),
                  (n.parseMaybeUnary = function(e) {
                    if (this.state.type.prefix) {
                      var t = this.startNode(),
                        n = this.match(x.incDec);
                      if (
                        ((t.operator = this.state.value),
                        (t.prefix = !0),
                        "throw" === t.operator &&
                          this.expectPlugin("throwExpressions"),
                        this.next(),
                        (t.argument = this.parseMaybeUnary()),
                        e && e.start && this.unexpected(e.start),
                        n)
                      )
                        this.checkLVal(
                          t.argument,
                          void 0,
                          void 0,
                          "prefix operation"
                        );
                      else if (this.state.strict && "delete" === t.operator) {
                        var a = t.argument;
                        "Identifier" === a.type
                          ? this.raise(
                              t.start,
                              "Deleting local variable in strict mode"
                            )
                          : "MemberExpression" === a.type &&
                            "PrivateName" === a.property.type &&
                            this.raise(
                              t.start,
                              "Deleting a private field is not allowed"
                            );
                      }
                      return this.finishNode(
                        t,
                        n ? "UpdateExpression" : "UnaryExpression"
                      );
                    }
                    var r = this.state.start,
                      i = this.state.startLoc,
                      o = this.parseExprSubscripts(e);
                    if (e && e.start) return o;
                    for (
                      ;
                      this.state.type.postfix && !this.canInsertSemicolon();

                    ) {
                      var s = this.startNodeAt(r, i);
                      (s.operator = this.state.value),
                        (s.prefix = !1),
                        (s.argument = o),
                        this.checkLVal(o, void 0, void 0, "postfix operation"),
                        this.next(),
                        (o = this.finishNode(s, "UpdateExpression"));
                    }
                    return o;
                  }),
                  (n.parseExprSubscripts = function(e) {
                    var t = this.state.start,
                      n = this.state.startLoc,
                      a = this.state.potentialArrowAt,
                      r = this.parseExprAtom(e);
                    return "ArrowFunctionExpression" === r.type && r.start === a
                      ? r
                      : e && e.start
                        ? r
                        : this.parseSubscripts(r, t, n);
                  }),
                  (n.parseSubscripts = function(e, t, n, a) {
                    for (
                      var r = { optionalChainMember: !1, stop: !1 };
                      (e = this.parseSubscript(e, t, n, a, r)), !r.stop;

                    );
                    return e;
                  }),
                  (n.parseSubscript = function(e, t, n, a, r) {
                    if (!a && this.eat(x.doubleColon)) {
                      var i = this.startNodeAt(t, n);
                      return (
                        (i.object = e),
                        (i.callee = this.parseNoCallExpr()),
                        (r.stop = !0),
                        this.parseSubscripts(
                          this.finishNode(i, "BindExpression"),
                          t,
                          n,
                          a
                        )
                      );
                    }
                    if (this.match(x.questionDot)) {
                      if (
                        (this.expectPlugin("optionalChaining"),
                        (r.optionalChainMember = !0),
                        a && this.lookahead().type == x.parenL)
                      )
                        return (r.stop = !0), e;
                      this.next();
                      var o = this.startNodeAt(t, n);
                      if (this.eat(x.bracketL))
                        return (
                          (o.object = e),
                          (o.property = this.parseExpression()),
                          (o.computed = !0),
                          (o.optional = !0),
                          this.expect(x.bracketR),
                          this.finishNode(o, "OptionalMemberExpression")
                        );
                      if (this.eat(x.parenL)) {
                        var s = this.atPossibleAsync(e);
                        return (
                          (o.callee = e),
                          (o.arguments = this.parseCallExpressionArguments(
                            x.parenR,
                            s
                          )),
                          (o.optional = !0),
                          this.finishNode(o, "OptionalCallExpression")
                        );
                      }
                      return (
                        (o.object = e),
                        (o.property = this.parseIdentifier(!0)),
                        (o.computed = !1),
                        (o.optional = !0),
                        this.finishNode(o, "OptionalMemberExpression")
                      );
                    }
                    if (this.eat(x.dot)) {
                      var d = this.startNodeAt(t, n);
                      return (
                        (d.object = e),
                        (d.property = this.parseMaybePrivateName()),
                        (d.computed = !1),
                        r.optionalChainMember
                          ? ((d.optional = !1),
                            this.finishNode(d, "OptionalMemberExpression"))
                          : this.finishNode(d, "MemberExpression")
                      );
                    }
                    if (this.eat(x.bracketL)) {
                      var u = this.startNodeAt(t, n);
                      return (
                        (u.object = e),
                        (u.property = this.parseExpression()),
                        (u.computed = !0),
                        this.expect(x.bracketR),
                        r.optionalChainMember
                          ? ((u.optional = !1),
                            this.finishNode(u, "OptionalMemberExpression"))
                          : this.finishNode(u, "MemberExpression")
                      );
                    }
                    if (a || !this.match(x.parenL))
                      return this.match(x.backQuote)
                        ? this.parseTaggedTemplateExpression(t, n, e, r)
                        : ((r.stop = !0), e);
                    var l = this.atPossibleAsync(e);
                    this.next();
                    var c = this.startNodeAt(t, n);
                    c.callee = e;
                    var p = { start: -1 };
                    return (
                      (c.arguments = this.parseCallExpressionArguments(
                        x.parenR,
                        l,
                        p
                      )),
                      r.optionalChainMember
                        ? this.finishOptionalCallExpression(c)
                        : this.finishCallExpression(c),
                      l && this.shouldParseAsyncArrow()
                        ? ((r.stop = !0),
                          -1 < p.start &&
                            this.raise(
                              p.start,
                              "A trailing comma is not permitted after the rest element"
                            ),
                          this.parseAsyncArrowFromCallExpression(
                            this.startNodeAt(t, n),
                            c
                          ))
                        : (this.toReferencedList(c.arguments), c)
                    );
                  }),
                  (n.parseTaggedTemplateExpression = function(e, t, n, a, r) {
                    var i = this.startNodeAt(e, t);
                    return (
                      (i.tag = n),
                      (i.quasi = this.parseTemplate(!0)),
                      r && (i.typeParameters = r),
                      a.optionalChainMember &&
                        this.raise(
                          e,
                          "Tagged Template Literals are not allowed in optionalChain"
                        ),
                      this.finishNode(i, "TaggedTemplateExpression")
                    );
                  }),
                  (n.atPossibleAsync = function(e) {
                    return (
                      !this.state.containsEsc &&
                      this.state.potentialArrowAt === e.start &&
                      "Identifier" === e.type &&
                      "async" === e.name &&
                      !this.canInsertSemicolon()
                    );
                  }),
                  (n.finishCallExpression = function(e) {
                    if ("Import" === e.callee.type) {
                      1 !== e.arguments.length &&
                        this.raise(
                          e.start,
                          "import() requires exactly one argument"
                        );
                      var t = e.arguments[0];
                      t &&
                        "SpreadElement" === t.type &&
                        this.raise(t.start, "... is not allowed in import()");
                    }
                    return this.finishNode(e, "CallExpression");
                  }),
                  (n.finishOptionalCallExpression = function(e) {
                    if ("Import" === e.callee.type) {
                      1 !== e.arguments.length &&
                        this.raise(
                          e.start,
                          "import() requires exactly one argument"
                        );
                      var t = e.arguments[0];
                      t &&
                        "SpreadElement" === t.type &&
                        this.raise(t.start, "... is not allowed in import()");
                    }
                    return this.finishNode(e, "OptionalCallExpression");
                  }),
                  (n.parseCallExpressionArguments = function(e, t, n) {
                    for (var a, r = [], i = !0; !this.eat(e); ) {
                      if (i) i = !1;
                      else if ((this.expect(x.comma), this.eat(e))) break;
                      this.match(x.parenL) && !a && (a = this.state.start),
                        r.push(
                          this.parseExprListItem(
                            !1,
                            t ? { start: 0 } : void 0,
                            t ? { start: 0 } : void 0,
                            t ? n : void 0
                          )
                        );
                    }
                    return (
                      t &&
                        a &&
                        this.shouldParseAsyncArrow() &&
                        this.unexpected(),
                      r
                    );
                  }),
                  (n.shouldParseAsyncArrow = function() {
                    return this.match(x.arrow);
                  }),
                  (n.parseAsyncArrowFromCallExpression = function(e, t) {
                    var n = this.state.yieldInPossibleArrowParameters;
                    return (
                      (this.state.yieldInPossibleArrowParameters = null),
                      this.expect(x.arrow),
                      this.parseArrowExpression(e, t.arguments, !0),
                      (this.state.yieldInPossibleArrowParameters = n),
                      e
                    );
                  }),
                  (n.parseNoCallExpr = function() {
                    var e = this.state.start,
                      t = this.state.startLoc;
                    return this.parseSubscripts(this.parseExprAtom(), e, t, !0);
                  }),
                  (n.parseExprAtom = function(e) {
                    var t,
                      n = this.state.potentialArrowAt === this.state.start;
                    switch (this.state.type) {
                      case x._super:
                        return (
                          this.state.inMethod ||
                            this.state.inClassProperty ||
                            this.options.allowSuperOutsideMethod ||
                            this.raise(
                              this.state.start,
                              "super is only allowed in object methods and classes"
                            ),
                          (t = this.startNode()),
                          this.next(),
                          this.match(x.parenL) ||
                            this.match(x.bracketL) ||
                            this.match(x.dot) ||
                            this.unexpected(),
                          this.match(x.parenL) &&
                            "constructor" !== this.state.inMethod &&
                            !this.options.allowSuperOutsideMethod &&
                            this.raise(
                              t.start,
                              "super() is only valid inside a class constructor. Make sure the method name is spelled exactly as 'constructor'."
                            ),
                          this.finishNode(t, "Super")
                        );
                      case x._import:
                        return this.lookahead().type === x.dot
                          ? this.parseImportMetaProperty()
                          : (this.expectPlugin("dynamicImport"),
                            (t = this.startNode()),
                            this.next(),
                            this.match(x.parenL) ||
                              this.unexpected(null, x.parenL),
                            this.finishNode(t, "Import"));
                      case x._this:
                        return (
                          (t = this.startNode()),
                          this.next(),
                          this.finishNode(t, "ThisExpression")
                        );
                      case x._yield:
                        this.state.inGenerator && this.unexpected();
                      case x.name:
                        t = this.startNode();
                        var a =
                            "await" === this.state.value &&
                            (this.state.inAsync ||
                              (!this.state.inFunction &&
                                this.options.allowAwaitOutsideFunction)),
                          r = this.state.containsEsc,
                          i = this.shouldAllowYieldIdentifier(),
                          o = this.parseIdentifier(a || i);
                        if ("await" === o.name) {
                          if (
                            this.state.inAsync ||
                            this.inModule ||
                            (!this.state.inFunction &&
                              this.options.allowAwaitOutsideFunction)
                          )
                            return this.parseAwait(t);
                        } else {
                          if (
                            !r &&
                            "async" === o.name &&
                            this.match(x._function) &&
                            !this.canInsertSemicolon()
                          )
                            return (
                              this.next(), this.parseFunction(t, !1, !1, !0)
                            );
                          if (n && "async" === o.name && this.match(x.name)) {
                            var s = this.state.yieldInPossibleArrowParameters;
                            this.state.yieldInPossibleArrowParameters = null;
                            var d = [this.parseIdentifier()];
                            return (
                              this.expect(x.arrow),
                              this.parseArrowExpression(t, d, !0),
                              (this.state.yieldInPossibleArrowParameters = s),
                              t
                            );
                          }
                        }
                        if (
                          n &&
                          !this.canInsertSemicolon() &&
                          this.eat(x.arrow)
                        ) {
                          var u = this.state.yieldInPossibleArrowParameters;
                          return (
                            (this.state.yieldInPossibleArrowParameters = null),
                            this.parseArrowExpression(t, [o]),
                            (this.state.yieldInPossibleArrowParameters = u),
                            t
                          );
                        }
                        return o;
                      case x._do:
                        this.expectPlugin("doExpressions");
                        var l = this.startNode();
                        this.next();
                        var c = this.state.inFunction,
                          p = this.state.labels;
                        return (
                          (this.state.labels = []),
                          (this.state.inFunction = !1),
                          (l.body = this.parseBlock(!1)),
                          (this.state.inFunction = c),
                          (this.state.labels = p),
                          this.finishNode(l, "DoExpression")
                        );
                      case x.regexp:
                        var g = this.state.value;
                        return (
                          ((t = this.parseLiteral(
                            g.value,
                            "RegExpLiteral"
                          )).pattern = g.pattern),
                          (t.flags = g.flags),
                          t
                        );
                      case x.num:
                        return this.parseLiteral(
                          this.state.value,
                          "NumericLiteral"
                        );
                      case x.bigint:
                        return this.parseLiteral(
                          this.state.value,
                          "BigIntLiteral"
                        );
                      case x.string:
                        return this.parseLiteral(
                          this.state.value,
                          "StringLiteral"
                        );
                      case x._null:
                        return (
                          (t = this.startNode()),
                          this.next(),
                          this.finishNode(t, "NullLiteral")
                        );
                      case x._true:
                      case x._false:
                        return this.parseBooleanLiteral();
                      case x.parenL:
                        return this.parseParenAndDistinguishExpression(n);
                      case x.bracketL:
                        return (
                          (t = this.startNode()),
                          this.next(),
                          (t.elements = this.parseExprList(x.bracketR, !0, e)),
                          this.toReferencedList(t.elements),
                          this.finishNode(t, "ArrayExpression")
                        );
                      case x.braceL:
                        return this.parseObj(!1, e);
                      case x._function:
                        return this.parseFunctionExpression();
                      case x.at:
                        this.parseDecorators();
                      case x._class:
                        return (
                          (t = this.startNode()),
                          this.takeDecorators(t),
                          this.parseClass(t, !1)
                        );
                      case x._new:
                        return this.parseNew();
                      case x.backQuote:
                        return this.parseTemplate(!1);
                      case x.doubleColon:
                        (t = this.startNode()), this.next(), (t.object = null);
                        var f = (t.callee = this.parseNoCallExpr());
                        if ("MemberExpression" === f.type)
                          return this.finishNode(t, "BindExpression");
                        throw this.raise(
                          f.start,
                          "Binding should be performed on object property."
                        );
                      default:
                        throw this.unexpected();
                    }
                  }),
                  (n.parseBooleanLiteral = function() {
                    var e = this.startNode();
                    return (
                      (e.value = this.match(x._true)),
                      this.next(),
                      this.finishNode(e, "BooleanLiteral")
                    );
                  }),
                  (n.parseMaybePrivateName = function() {
                    if (this.match(x.hash)) {
                      this.expectOnePlugin([
                        "classPrivateProperties",
                        "classPrivateMethods",
                      ]);
                      var e = this.startNode();
                      return (
                        this.next(),
                        (e.id = this.parseIdentifier(!0)),
                        this.finishNode(e, "PrivateName")
                      );
                    }
                    return this.parseIdentifier(!0);
                  }),
                  (n.parseFunctionExpression = function() {
                    var e = this.startNode(),
                      t = this.parseIdentifier(!0);
                    return this.state.inGenerator && this.eat(x.dot)
                      ? this.parseMetaProperty(e, t, "sent")
                      : this.parseFunction(e, !1);
                  }),
                  (n.parseMetaProperty = function(e, t, n) {
                    "function" === (e.meta = t).name &&
                      "sent" === n &&
                      (this.isContextual(n)
                        ? this.expectPlugin("functionSent")
                        : this.hasPlugin("functionSent") || this.unexpected());
                    var a = this.state.containsEsc;
                    return (
                      (e.property = this.parseIdentifier(!0)),
                      (e.property.name !== n || a) &&
                        this.raise(
                          e.property.start,
                          "The only valid meta property for " +
                            t.name +
                            " is " +
                            t.name +
                            "." +
                            n
                        ),
                      this.finishNode(e, "MetaProperty")
                    );
                  }),
                  (n.parseImportMetaProperty = function() {
                    var e = this.startNode(),
                      t = this.parseIdentifier(!0);
                    return (
                      this.expect(x.dot),
                      "import" === t.name &&
                        (this.isContextual("meta")
                          ? this.expectPlugin("importMeta")
                          : this.hasPlugin("importMeta") ||
                            this.raise(
                              t.start,
                              "Dynamic imports require a parameter: import('a.js')"
                            )),
                      this.inModule ||
                        this.raise(
                          t.start,
                          "import.meta may appear only with 'sourceType: \"module\"'",
                          { code: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" }
                        ),
                      (this.sawUnambiguousESM = !0),
                      this.parseMetaProperty(e, t, "meta")
                    );
                  }),
                  (n.parseLiteral = function(e, t, n, a) {
                    (n = n || this.state.start), (a = a || this.state.startLoc);
                    var r = this.startNodeAt(n, a);
                    return (
                      this.addExtra(r, "rawValue", e),
                      this.addExtra(
                        r,
                        "raw",
                        this.input.slice(n, this.state.end)
                      ),
                      (r.value = e),
                      this.next(),
                      this.finishNode(r, t)
                    );
                  }),
                  (n.parseParenExpression = function() {
                    this.expect(x.parenL);
                    var e = this.parseExpression();
                    return this.expect(x.parenR), e;
                  }),
                  (n.parseParenAndDistinguishExpression = function(e) {
                    var t,
                      n = this.state.start,
                      a = this.state.startLoc;
                    this.expect(x.parenL);
                    var r = this.state.maybeInArrowParameters,
                      i = this.state.yieldInPossibleArrowParameters;
                    (this.state.maybeInArrowParameters = !0),
                      (this.state.yieldInPossibleArrowParameters = null);
                    for (
                      var o,
                        s,
                        d = this.state.start,
                        u = this.state.startLoc,
                        l = [],
                        c = { start: 0 },
                        p = { start: 0 },
                        g = !0;
                      !this.match(x.parenR);

                    ) {
                      if (g) g = !1;
                      else if (
                        (this.expect(x.comma, p.start || null),
                        this.match(x.parenR))
                      ) {
                        s = this.state.start;
                        break;
                      }
                      if (this.match(x.ellipsis)) {
                        var f = this.state.start,
                          h = this.state.startLoc;
                        (o = this.state.start),
                          l.push(this.parseParenItem(this.parseRest(), f, h)),
                          this.match(x.comma) &&
                            this.lookahead().type === x.parenR &&
                            this.raise(
                              this.state.start,
                              "A trailing comma is not permitted after the rest element"
                            );
                        break;
                      }
                      l.push(
                        this.parseMaybeAssign(!1, c, this.parseParenItem, p)
                      );
                    }
                    var R = this.state.start,
                      y = this.state.startLoc;
                    this.expect(x.parenR),
                      (this.state.maybeInArrowParameters = r);
                    var m = this.startNodeAt(n, a);
                    if (
                      e &&
                      this.shouldParseArrow() &&
                      (m = this.parseArrow(m))
                    ) {
                      for (var v = 0; v < l.length; v++) {
                        var b = l[v];
                        b.extra &&
                          b.extra.parenthesized &&
                          this.unexpected(b.extra.parenStart);
                      }
                      return (
                        this.parseArrowExpression(m, l),
                        (this.state.yieldInPossibleArrowParameters = i),
                        m
                      );
                    }
                    return (
                      (this.state.yieldInPossibleArrowParameters = i),
                      l.length || this.unexpected(this.state.lastTokStart),
                      s && this.unexpected(s),
                      o && this.unexpected(o),
                      c.start && this.unexpected(c.start),
                      p.start && this.unexpected(p.start),
                      1 < l.length
                        ? (((t = this.startNodeAt(d, u)).expressions = l),
                          this.toReferencedList(t.expressions),
                          this.finishNodeAt(t, "SequenceExpression", R, y))
                        : (t = l[0]),
                      this.addExtra(t, "parenthesized", !0),
                      this.addExtra(t, "parenStart", n),
                      t
                    );
                  }),
                  (n.shouldParseArrow = function() {
                    return !this.canInsertSemicolon();
                  }),
                  (n.parseArrow = function(e) {
                    if (this.eat(x.arrow)) return e;
                  }),
                  (n.parseParenItem = function(e, t, n) {
                    return e;
                  }),
                  (n.parseNew = function() {
                    var e = this.startNode(),
                      t = this.parseIdentifier(!0);
                    if (this.eat(x.dot)) {
                      var n = this.parseMetaProperty(e, t, "target");
                      if (
                        !this.state.inFunction &&
                        !this.state.inClassProperty
                      ) {
                        var a = "new.target can only be used in functions";
                        this.hasPlugin("classProperties") &&
                          (a += " or class properties"),
                          this.raise(n.start, a);
                      }
                      return n;
                    }
                    return (
                      (e.callee = this.parseNoCallExpr()),
                      ("OptionalMemberExpression" !== e.callee.type &&
                        "OptionalCallExpression" !== e.callee.type) ||
                        this.raise(
                          this.state.lastTokEnd,
                          "constructors in/after an Optional Chain are not allowed"
                        ),
                      this.eat(x.questionDot) &&
                        this.raise(
                          this.state.start,
                          "constructors in/after an Optional Chain are not allowed"
                        ),
                      this.parseNewArguments(e),
                      this.finishNode(e, "NewExpression")
                    );
                  }),
                  (n.parseNewArguments = function(e) {
                    if (this.eat(x.parenL)) {
                      var t = this.parseExprList(x.parenR);
                      this.toReferencedList(t), (e.arguments = t);
                    } else e.arguments = [];
                  }),
                  (n.parseTemplateElement = function(e) {
                    var t = this.startNode();
                    return (
                      null === this.state.value &&
                        (e
                          ? (this.state.invalidTemplateEscapePosition = null)
                          : this.raise(
                              this.state.invalidTemplateEscapePosition || 0,
                              "Invalid escape sequence in template"
                            )),
                      (t.value = {
                        raw: this.input
                          .slice(this.state.start, this.state.end)
                          .replace(/\r\n?/g, "\n"),
                        cooked: this.state.value,
                      }),
                      this.next(),
                      (t.tail = this.match(x.backQuote)),
                      this.finishNode(t, "TemplateElement")
                    );
                  }),
                  (n.parseTemplate = function(e) {
                    var t = this.startNode();
                    this.next(), (t.expressions = []);
                    var n = this.parseTemplateElement(e);
                    for (t.quasis = [n]; !n.tail; )
                      this.expect(x.dollarBraceL),
                        t.expressions.push(this.parseExpression()),
                        this.expect(x.braceR),
                        t.quasis.push((n = this.parseTemplateElement(e)));
                    return this.next(), this.finishNode(t, "TemplateLiteral");
                  }),
                  (n.parseObj = function(e, t) {
                    var n = [],
                      a = Object.create(null),
                      r = !0,
                      i = this.startNode();
                    (i.properties = []), this.next();
                    for (var o = null; !this.eat(x.braceR); ) {
                      if (r) r = !1;
                      else if ((this.expect(x.comma), this.eat(x.braceR)))
                        break;
                      if (this.match(x.at))
                        if (this.hasPlugin("decorators"))
                          this.raise(
                            this.state.start,
                            "Stage 2 decorators disallow object literal property decorators"
                          );
                        else
                          for (; this.match(x.at); )
                            n.push(this.parseDecorator());
                      var s = this.startNode(),
                        d = !1,
                        u = !1,
                        l = void 0,
                        c = void 0;
                      if (
                        (n.length && ((s.decorators = n), (n = [])),
                        this.match(x.ellipsis))
                      ) {
                        if (
                          (this.expectPlugin("objectRestSpread"),
                          (s = this.parseSpread(e ? { start: 0 } : void 0)),
                          e && this.toAssignable(s, !0, "object pattern"),
                          i.properties.push(s),
                          !e)
                        )
                          continue;
                        var p = this.state.start;
                        if (null !== o)
                          this.unexpected(
                            o,
                            "Cannot have multiple rest elements when destructuring"
                          );
                        else {
                          if (this.eat(x.braceR)) break;
                          if (
                            !this.match(x.comma) ||
                            this.lookahead().type !== x.braceR
                          ) {
                            o = p;
                            continue;
                          }
                          this.unexpected(
                            p,
                            "A trailing comma is not permitted after the rest element"
                          );
                        }
                      }
                      (s.method = !1),
                        (e || t) &&
                          ((l = this.state.start), (c = this.state.startLoc)),
                        e || (d = this.eat(x.star));
                      var g = this.state.containsEsc;
                      if (!e && this.isContextual("async")) {
                        d && this.unexpected();
                        var f = this.parseIdentifier();
                        this.match(x.colon) ||
                        this.match(x.parenL) ||
                        this.match(x.braceR) ||
                        this.match(x.eq) ||
                        this.match(x.comma)
                          ? ((s.key = f), (s.computed = !1))
                          : ((u = !0),
                            this.match(x.star) &&
                              (this.expectPlugin("asyncGenerators"),
                              this.next(),
                              (d = !0)),
                            this.parsePropertyName(s));
                      } else this.parsePropertyName(s);
                      this.parseObjPropValue(s, l, c, d, u, e, t, g),
                        this.checkPropClash(s, a),
                        s.shorthand && this.addExtra(s, "shorthand", !0),
                        i.properties.push(s);
                    }
                    return (
                      null !== o &&
                        this.unexpected(
                          o,
                          "The rest element has to be the last element when destructuring"
                        ),
                      n.length &&
                        this.raise(
                          this.state.start,
                          "You have trailing decorators with no property"
                        ),
                      this.finishNode(
                        i,
                        e ? "ObjectPattern" : "ObjectExpression"
                      )
                    );
                  }),
                  (n.isGetterOrSetterMethod = function(e, t) {
                    return (
                      !t &&
                      !e.computed &&
                      "Identifier" === e.key.type &&
                      ("get" === e.key.name || "set" === e.key.name) &&
                      (this.match(x.string) ||
                        this.match(x.num) ||
                        this.match(x.bracketL) ||
                        this.match(x.name) ||
                        !!this.state.type.keyword)
                    );
                  }),
                  (n.checkGetterSetterParams = function(e) {
                    var t = "get" === e.kind ? 0 : 1,
                      n = e.start;
                    e.params.length !== t &&
                      ("get" === e.kind
                        ? this.raise(
                            n,
                            "getter must not have any formal parameters"
                          )
                        : this.raise(
                            n,
                            "setter must have exactly one formal parameter"
                          )),
                      "set" === e.kind &&
                        "RestElement" === e.params[0].type &&
                        this.raise(
                          n,
                          "setter function argument must not be a rest parameter"
                        );
                  }),
                  (n.parseObjectMethod = function(e, t, n, a, r) {
                    return n || t || this.match(x.parenL)
                      ? (a && this.unexpected(),
                        (e.kind = "method"),
                        (e.method = !0),
                        this.parseMethod(e, t, n, !1, "ObjectMethod"))
                      : !r && this.isGetterOrSetterMethod(e, a)
                        ? ((t || n) && this.unexpected(),
                          (e.kind = e.key.name),
                          this.parsePropertyName(e),
                          this.parseMethod(e, !1, !1, !1, "ObjectMethod"),
                          this.checkGetterSetterParams(e),
                          e)
                        : void 0;
                  }),
                  (n.parseObjectProperty = function(e, t, n, a, r) {
                    return (
                      (e.shorthand = !1),
                      this.eat(x.colon)
                        ? ((e.value = a
                            ? this.parseMaybeDefault(
                                this.state.start,
                                this.state.startLoc
                              )
                            : this.parseMaybeAssign(!1, r)),
                          this.finishNode(e, "ObjectProperty"))
                        : e.computed || "Identifier" !== e.key.type
                          ? void 0
                          : (this.checkReservedWord(
                              e.key.name,
                              e.key.start,
                              !0,
                              !0
                            ),
                            a
                              ? (e.value = this.parseMaybeDefault(
                                  t,
                                  n,
                                  e.key.__clone()
                                ))
                              : this.match(x.eq) && r
                                ? (r.start || (r.start = this.state.start),
                                  (e.value = this.parseMaybeDefault(
                                    t,
                                    n,
                                    e.key.__clone()
                                  )))
                                : (e.value = e.key.__clone()),
                            (e.shorthand = !0),
                            this.finishNode(e, "ObjectProperty"))
                    );
                  }),
                  (n.parseObjPropValue = function(e, t, n, a, r, i, o, s) {
                    var d =
                      this.parseObjectMethod(e, a, r, i, s) ||
                      this.parseObjectProperty(e, t, n, i, o);
                    return d || this.unexpected(), d;
                  }),
                  (n.parsePropertyName = function(e) {
                    if (this.eat(x.bracketL))
                      (e.computed = !0),
                        (e.key = this.parseMaybeAssign()),
                        this.expect(x.bracketR);
                    else {
                      var t = this.state.inPropertyName;
                      (this.state.inPropertyName = !0),
                        (e.key =
                          this.match(x.num) || this.match(x.string)
                            ? this.parseExprAtom()
                            : this.parseMaybePrivateName()),
                        "PrivateName" !== e.key.type && (e.computed = !1),
                        (this.state.inPropertyName = t);
                    }
                    return e.key;
                  }),
                  (n.initFunction = function(e, t) {
                    (e.id = null), (e.generator = !1), (e.async = !!t);
                  }),
                  (n.parseMethod = function(e, t, n, a, r) {
                    var i = this.state.inFunction,
                      o = this.state.inMethod,
                      s = this.state.inGenerator;
                    (this.state.inFunction = !0),
                      (this.state.inMethod = e.kind || !0),
                      (this.state.inGenerator = t),
                      this.initFunction(e, n),
                      (e.generator = !!t);
                    var d = a;
                    return (
                      this.parseFunctionParams(e, d),
                      this.parseFunctionBodyAndFinish(e, r),
                      (this.state.inFunction = i),
                      (this.state.inMethod = o),
                      (this.state.inGenerator = s),
                      e
                    );
                  }),
                  (n.parseArrowExpression = function(e, t, n) {
                    this.state.yieldInPossibleArrowParameters &&
                      this.raise(
                        this.state.yieldInPossibleArrowParameters.start,
                        "yield is not allowed in the parameters of an arrow function inside a generator"
                      );
                    var a = this.state.inFunction;
                    (this.state.inFunction = !0),
                      this.initFunction(e, n),
                      t && this.setArrowFunctionParameters(e, t);
                    var r = this.state.inGenerator,
                      i = this.state.maybeInArrowParameters;
                    return (
                      (this.state.inGenerator = !1),
                      (this.state.maybeInArrowParameters = !1),
                      this.parseFunctionBody(e, !0),
                      (this.state.inGenerator = r),
                      (this.state.inFunction = a),
                      (this.state.maybeInArrowParameters = i),
                      this.finishNode(e, "ArrowFunctionExpression")
                    );
                  }),
                  (n.setArrowFunctionParameters = function(e, t) {
                    e.params = this.toAssignableList(
                      t,
                      !0,
                      "arrow function parameters"
                    );
                  }),
                  (n.isStrictBody = function(e) {
                    if (
                      "BlockStatement" === e.body.type &&
                      e.body.directives.length
                    )
                      for (var t = 0, n = e.body.directives; t < n.length; t++)
                        if ("use strict" === n[t].value.value) return !0;
                    return !1;
                  }),
                  (n.parseFunctionBodyAndFinish = function(e, t, n) {
                    this.parseFunctionBody(e, n), this.finishNode(e, t);
                  }),
                  (n.parseFunctionBody = function(e, t) {
                    var n = t && !this.match(x.braceL),
                      a = this.state.inParameters,
                      r = this.state.inAsync;
                    if (
                      ((this.state.inParameters = !1),
                      (this.state.inAsync = e.async),
                      n)
                    )
                      e.body = this.parseMaybeAssign();
                    else {
                      var i = this.state.inGenerator,
                        o = this.state.inFunction,
                        s = this.state.labels;
                      (this.state.inGenerator = e.generator),
                        (this.state.inFunction = !0),
                        (this.state.labels = []),
                        (e.body = this.parseBlock(!0)),
                        (this.state.inFunction = o),
                        (this.state.inGenerator = i),
                        (this.state.labels = s);
                    }
                    (this.state.inAsync = r),
                      this.checkFunctionNameAndParams(e, t),
                      (this.state.inParameters = a);
                  }),
                  (n.checkFunctionNameAndParams = function(e, t) {
                    var n = this.isStrictBody(e),
                      a = this.state.strict || n || t,
                      r = this.state.strict;
                    if ((n && (this.state.strict = n), a)) {
                      var i = Object.create(null);
                      e.id && this.checkLVal(e.id, !0, void 0, "function name");
                      for (var o = 0, s = e.params; o < s.length; o++) {
                        var d = s[o];
                        n &&
                          "Identifier" !== d.type &&
                          this.raise(
                            d.start,
                            "Non-simple parameter in strict mode"
                          ),
                          this.checkLVal(d, !0, i, "function parameter list");
                      }
                    }
                    this.state.strict = r;
                  }),
                  (n.parseExprList = function(e, t, n) {
                    for (var a = [], r = !0; !this.eat(e); ) {
                      if (r) r = !1;
                      else if ((this.expect(x.comma), this.eat(e))) break;
                      a.push(this.parseExprListItem(t, n));
                    }
                    return a;
                  }),
                  (n.parseExprListItem = function(e, t, n, a) {
                    var r;
                    if (e && this.match(x.comma)) r = null;
                    else if (this.match(x.ellipsis)) {
                      var i = this.state.start,
                        o = this.state.startLoc;
                      (r = this.parseParenItem(this.parseSpread(t, n), i, o)),
                        a &&
                          this.match(x.comma) &&
                          (a.start = this.state.start);
                    } else
                      r = this.parseMaybeAssign(!1, t, this.parseParenItem, n);
                    return r;
                  }),
                  (n.parseIdentifier = function(e) {
                    var t = this.startNode(),
                      n = this.parseIdentifierName(t.start, e);
                    return (
                      (t.name = n),
                      (t.loc.identifierName = n),
                      this.finishNode(t, "Identifier")
                    );
                  }),
                  (n.parseIdentifierName = function(e, t) {
                    var n;
                    if (
                      (t ||
                        this.checkReservedWord(
                          this.state.value,
                          this.state.start,
                          !!this.state.type.keyword,
                          !1
                        ),
                      this.match(x.name))
                    )
                      n = this.state.value;
                    else {
                      if (!this.state.type.keyword) throw this.unexpected();
                      n = this.state.type.keyword;
                    }
                    return (
                      !t &&
                        "await" === n &&
                        this.state.inAsync &&
                        this.raise(
                          e,
                          "invalid use of await inside of an async function"
                        ),
                      this.next(),
                      n
                    );
                  }),
                  (n.checkReservedWord = function(e, t, n, a) {
                    this.state.strict &&
                      (l.strict(e) || (a && l.strictBind(e))) &&
                      this.raise(t, e + " is a reserved word in strict mode"),
                      this.state.inGenerator &&
                        "yield" === e &&
                        this.raise(
                          t,
                          "yield is a reserved word inside generator functions"
                        ),
                      this.state.inClassProperty &&
                        "arguments" === e &&
                        this.raise(
                          t,
                          "'arguments' is not allowed in class field initializer"
                        ),
                      (this.isReservedWord(e) || (n && this.isKeyword(e))) &&
                        this.raise(t, e + " is a reserved word");
                  }),
                  (n.parseAwait = function(e) {
                    return (
                      this.state.inAsync ||
                        (!this.state.inFunction &&
                          this.options.allowAwaitOutsideFunction) ||
                        this.unexpected(),
                      this.match(x.star) &&
                        this.raise(
                          e.start,
                          "await* has been removed from the async functions proposal. Use Promise.all() instead."
                        ),
                      (e.argument = this.parseMaybeUnary()),
                      this.finishNode(e, "AwaitExpression")
                    );
                  }),
                  (n.parseYield = function() {
                    var e = this.startNode();
                    return (
                      this.state.inParameters &&
                        this.raise(
                          e.start,
                          "yield is not allowed in generator parameters"
                        ),
                      this.state.maybeInArrowParameters &&
                        !this.state.yieldInPossibleArrowParameters &&
                        (this.state.yieldInPossibleArrowParameters = e),
                      this.next(),
                      this.match(x.semi) ||
                      this.canInsertSemicolon() ||
                      (!this.match(x.star) && !this.state.type.startsExpr)
                        ? ((e.delegate = !1), (e.argument = null))
                        : ((e.delegate = this.eat(x.star)),
                          (e.argument = this.parseMaybeAssign())),
                      this.finishNode(e, "YieldExpression")
                    );
                  }),
                  t
                );
              })(
                (function(e) {
                  function t() {
                    return e.apply(this, arguments) || this;
                  }
                  r(t, e);
                  var n = t.prototype;
                  return (
                    (n.toAssignable = function(e, t, n) {
                      if (e)
                        switch (e.type) {
                          case "Identifier":
                          case "ObjectPattern":
                          case "ArrayPattern":
                          case "AssignmentPattern":
                            break;
                          case "ObjectExpression":
                            e.type = "ObjectPattern";
                            for (var a = 0; a < e.properties.length; a++) {
                              var r = e.properties[a],
                                i = a === e.properties.length - 1;
                              this.toAssignableObjectExpressionProp(r, t, i);
                            }
                            break;
                          case "ObjectProperty":
                            this.toAssignable(e.value, t, n);
                            break;
                          case "SpreadElement":
                            this.checkToRestConversion(e),
                              (e.type = "RestElement");
                            var o = e.argument;
                            this.toAssignable(o, t, n);
                            break;
                          case "ArrayExpression":
                            (e.type = "ArrayPattern"),
                              this.toAssignableList(e.elements, t, n);
                            break;
                          case "AssignmentExpression":
                            "=" === e.operator
                              ? ((e.type = "AssignmentPattern"),
                                delete e.operator)
                              : this.raise(
                                  e.left.end,
                                  "Only '=' operator can be used for specifying default value."
                                );
                            break;
                          case "MemberExpression":
                            if (!t) break;
                          default:
                            var s =
                              "Invalid left-hand side" +
                              (n ? " in " + n : "expression");
                            this.raise(e.start, s);
                        }
                      return e;
                    }),
                    (n.toAssignableObjectExpressionProp = function(e, t, n) {
                      if ("ObjectMethod" === e.type) {
                        var a =
                          "get" === e.kind || "set" === e.kind
                            ? "Object pattern can't contain getter or setter"
                            : "Object pattern can't contain methods";
                        this.raise(e.key.start, a);
                      } else
                        "SpreadElement" !== e.type || n
                          ? this.toAssignable(
                              e,
                              t,
                              "object destructuring pattern"
                            )
                          : this.raise(
                              e.start,
                              "The rest element has to be the last element when destructuring"
                            );
                    }),
                    (n.toAssignableList = function(e, t, n) {
                      var a = e.length;
                      if (a) {
                        var r = e[a - 1];
                        if (r && "RestElement" === r.type) --a;
                        else if (r && "SpreadElement" === r.type) {
                          r.type = "RestElement";
                          var i = r.argument;
                          this.toAssignable(i, t, n),
                            -1 ===
                              [
                                "Identifier",
                                "MemberExpression",
                                "ArrayPattern",
                                "ObjectPattern",
                              ].indexOf(i.type) && this.unexpected(i.start),
                            --a;
                        }
                      }
                      for (var o = 0; o < a; o++) {
                        var s = e[o];
                        s &&
                          "SpreadElement" === s.type &&
                          this.raise(
                            s.start,
                            "The rest element has to be the last element when destructuring"
                          ),
                          s && this.toAssignable(s, t, n);
                      }
                      return e;
                    }),
                    (n.toReferencedList = function(e) {
                      return e;
                    }),
                    (n.parseSpread = function(e, t) {
                      var n = this.startNode();
                      return (
                        this.next(),
                        (n.argument = this.parseMaybeAssign(!1, e, void 0, t)),
                        this.finishNode(n, "SpreadElement")
                      );
                    }),
                    (n.parseRest = function() {
                      var e = this.startNode();
                      return (
                        this.next(),
                        (e.argument = this.parseBindingAtom()),
                        this.finishNode(e, "RestElement")
                      );
                    }),
                    (n.shouldAllowYieldIdentifier = function() {
                      return (
                        this.match(x._yield) &&
                        !this.state.strict &&
                        !this.state.inGenerator
                      );
                    }),
                    (n.parseBindingIdentifier = function() {
                      return this.parseIdentifier(
                        this.shouldAllowYieldIdentifier()
                      );
                    }),
                    (n.parseBindingAtom = function() {
                      switch (this.state.type) {
                        case x._yield:
                        case x.name:
                          return this.parseBindingIdentifier();
                        case x.bracketL:
                          var e = this.startNode();
                          return (
                            this.next(),
                            (e.elements = this.parseBindingList(
                              x.bracketR,
                              !0
                            )),
                            this.finishNode(e, "ArrayPattern")
                          );
                        case x.braceL:
                          return this.parseObj(!0);
                        default:
                          throw this.unexpected();
                      }
                    }),
                    (n.parseBindingList = function(e, t, n) {
                      for (var a = [], r = !0; !this.eat(e); )
                        if (
                          (r ? (r = !1) : this.expect(x.comma),
                          t && this.match(x.comma))
                        )
                          a.push(null);
                        else {
                          if (this.eat(e)) break;
                          if (this.match(x.ellipsis)) {
                            a.push(
                              this.parseAssignableListItemTypes(
                                this.parseRest()
                              )
                            ),
                              this.expect(e);
                            break;
                          }
                          var i = [];
                          for (
                            this.match(x.at) &&
                            this.hasPlugin("decorators") &&
                            this.raise(
                              this.state.start,
                              "Stage 2 decorators cannot be used to decorate parameters"
                            );
                            this.match(x.at);

                          )
                            i.push(this.parseDecorator());
                          a.push(this.parseAssignableListItem(n, i));
                        }
                      return a;
                    }),
                    (n.parseAssignableListItem = function(e, t) {
                      var n = this.parseMaybeDefault();
                      this.parseAssignableListItemTypes(n);
                      var a = this.parseMaybeDefault(n.start, n.loc.start, n);
                      return t.length && (n.decorators = t), a;
                    }),
                    (n.parseAssignableListItemTypes = function(e) {
                      return e;
                    }),
                    (n.parseMaybeDefault = function(e, t, n) {
                      if (
                        ((t = t || this.state.startLoc),
                        (e = e || this.state.start),
                        (n = n || this.parseBindingAtom()),
                        !this.eat(x.eq))
                      )
                        return n;
                      var a = this.startNodeAt(e, t);
                      return (
                        (a.left = n),
                        (a.right = this.parseMaybeAssign()),
                        this.finishNode(a, "AssignmentPattern")
                      );
                    }),
                    (n.checkLVal = function(e, t, n, a) {
                      switch (e.type) {
                        case "Identifier":
                          if (
                            (this.checkReservedWord(e.name, e.start, !1, !0), n)
                          ) {
                            var r = "_" + e.name;
                            n[r]
                              ? this.raise(
                                  e.start,
                                  "Argument name clash in strict mode"
                                )
                              : (n[r] = !0);
                          }
                          break;
                        case "MemberExpression":
                          t && this.raise(e.start, "Binding member expression");
                          break;
                        case "ObjectPattern":
                          for (var i = 0, o = e.properties; i < o.length; i++) {
                            var s = o[i];
                            "ObjectProperty" === s.type && (s = s.value),
                              this.checkLVal(
                                s,
                                t,
                                n,
                                "object destructuring pattern"
                              );
                          }
                          break;
                        case "ArrayPattern":
                          for (var d = 0, u = e.elements; d < u.length; d++) {
                            var l = u[d];
                            l &&
                              this.checkLVal(
                                l,
                                t,
                                n,
                                "array destructuring pattern"
                              );
                          }
                          break;
                        case "AssignmentPattern":
                          this.checkLVal(e.left, t, n, "assignment pattern");
                          break;
                        case "RestElement":
                          this.checkLVal(e.argument, t, n, "rest element");
                          break;
                        default:
                          var c =
                            (t ? "Binding invalid" : "Invalid") +
                            " left-hand side" +
                            (a ? " in " + a : "expression");
                          this.raise(e.start, c);
                      }
                    }),
                    (n.checkToRestConversion = function(e) {
                      -1 ===
                        ["Identifier", "MemberExpression"].indexOf(
                          e.argument.type
                        ) &&
                        this.raise(
                          e.argument.start,
                          "Invalid rest operator's argument"
                        );
                    }),
                    t
                  );
                })(
                  (function(e) {
                    function t() {
                      return e.apply(this, arguments) || this;
                    }
                    r(t, e);
                    var n = t.prototype;
                    return (
                      (n.startNode = function() {
                        return new J(
                          this,
                          this.state.start,
                          this.state.startLoc
                        );
                      }),
                      (n.startNodeAt = function(e, t) {
                        return new J(this, e, t);
                      }),
                      (n.startNodeAtNode = function(e) {
                        return this.startNodeAt(e.start, e.loc.start);
                      }),
                      (n.finishNode = function(e, t) {
                        return this.finishNodeAt(
                          e,
                          t,
                          this.state.lastTokEnd,
                          this.state.lastTokEndLoc
                        );
                      }),
                      (n.finishNodeAt = function(e, t, n, a) {
                        return (
                          (e.type = t),
                          (e.end = n),
                          (e.loc.end = a),
                          this.options.ranges && (e.range[1] = n),
                          this.processComment(e),
                          e
                        );
                      }),
                      (n.resetStartLocationFromNode = function(e, t) {
                        (e.start = t.start),
                          (e.loc.start = t.loc.start),
                          this.options.ranges && (e.range[0] = t.range[0]);
                      }),
                      t
                    );
                  })(q)
                )
              )
            )
          );
        function Z(e) {
          if (null == e) throw new Error("Unexpected " + e + " value.");
          return e;
        }
        function ee(e) {
          if (!e) throw new Error("Assert fail");
        }
        function te(e, t) {
          return e.some(function(e) {
            return Array.isArray(e) ? e[0] === t : e === t;
          });
        }
        function ne(e, t, n) {
          var a = e.find(function(e) {
            return Array.isArray(e) ? e[0] === t : e === t;
          });
          return a && Array.isArray(a) ? a[1][n] : null;
        }
        var ae = ["minimal"],
          re = ["estree", "jsx", "flow", "typescript"],
          ie = {
            estree: function(e) {
              return (function(o) {
                function e() {
                  return o.apply(this, arguments) || this;
                }
                r(e, o);
                var t = e.prototype;
                return (
                  (t.estreeParseRegExpLiteral = function(e) {
                    var t = e.pattern,
                      n = e.flags,
                      a = null;
                    try {
                      a = new RegExp(t, n);
                    } catch (e) {}
                    var r = this.estreeParseLiteral(a);
                    return (r.regex = { pattern: t, flags: n }), r;
                  }),
                  (t.estreeParseLiteral = function(e) {
                    return this.parseLiteral(e, "Literal");
                  }),
                  (t.directiveToStmt = function(e) {
                    var t = e.value,
                      n = this.startNodeAt(e.start, e.loc.start),
                      a = this.startNodeAt(t.start, t.loc.start);
                    return (
                      (a.value = t.value),
                      (a.raw = t.extra.raw),
                      (n.expression = this.finishNodeAt(
                        a,
                        "Literal",
                        t.end,
                        t.loc.end
                      )),
                      (n.directive = t.extra.raw.slice(1, -1)),
                      this.finishNodeAt(
                        n,
                        "ExpressionStatement",
                        e.end,
                        e.loc.end
                      )
                    );
                  }),
                  (t.initFunction = function(e, t) {
                    o.prototype.initFunction.call(this, e, t),
                      (e.expression = !1);
                  }),
                  (t.checkDeclaration = function(e) {
                    d(e)
                      ? this.checkDeclaration(e.value)
                      : o.prototype.checkDeclaration.call(this, e);
                  }),
                  (t.checkGetterSetterParams = function(e) {
                    var t = e,
                      n = "get" === t.kind ? 0 : 1,
                      a = t.start;
                    t.value.params.length !== n &&
                      ("get" === t.kind
                        ? this.raise(
                            a,
                            "getter must not have any formal parameters"
                          )
                        : this.raise(
                            a,
                            "setter must have exactly one formal parameter"
                          )),
                      "set" === t.kind &&
                        "RestElement" === t.value.params[0].type &&
                        this.raise(
                          a,
                          "setter function argument must not be a rest parameter"
                        );
                  }),
                  (t.checkLVal = function(e, t, n, a) {
                    var r = this;
                    switch (e.type) {
                      case "ObjectPattern":
                        e.properties.forEach(function(e) {
                          r.checkLVal(
                            "Property" === e.type ? e.value : e,
                            t,
                            n,
                            "object destructuring pattern"
                          );
                        });
                        break;
                      default:
                        o.prototype.checkLVal.call(this, e, t, n, a);
                    }
                  }),
                  (t.checkPropClash = function(e, t) {
                    if (!e.computed && d(e)) {
                      var n = e.key;
                      "__proto__" ===
                        ("Identifier" === n.type ? n.name : String(n.value)) &&
                        (t.proto &&
                          this.raise(
                            n.start,
                            "Redefinition of __proto__ property"
                          ),
                        (t.proto = !0));
                    }
                  }),
                  (t.isStrictBody = function(e) {
                    if (
                      "BlockStatement" === e.body.type &&
                      0 < e.body.body.length
                    )
                      for (var t = 0, n = e.body.body; t < n.length; t++) {
                        var a = n[t];
                        if (
                          "ExpressionStatement" !== a.type ||
                          "Literal" !== a.expression.type
                        )
                          break;
                        if ("use strict" === a.expression.value) return !0;
                      }
                    return !1;
                  }),
                  (t.isValidDirective = function(e) {
                    return !(
                      "ExpressionStatement" !== e.type ||
                      "Literal" !== e.expression.type ||
                      "string" != typeof e.expression.value ||
                      (e.expression.extra && e.expression.extra.parenthesized)
                    );
                  }),
                  (t.stmtToDirective = function(e) {
                    var t = o.prototype.stmtToDirective.call(this, e),
                      n = e.expression.value;
                    return (t.value.value = n), t;
                  }),
                  (t.parseBlockBody = function(e, t, n, a) {
                    var r = this;
                    o.prototype.parseBlockBody.call(this, e, t, n, a);
                    var i = e.directives.map(function(e) {
                      return r.directiveToStmt(e);
                    });
                    (e.body = i.concat(e.body)), delete e.directives;
                  }),
                  (t.pushClassMethod = function(e, t, n, a, r) {
                    this.parseMethod(t, n, a, r, "MethodDefinition"),
                      t.typeParameters &&
                        ((t.value.typeParameters = t.typeParameters),
                        delete t.typeParameters),
                      e.body.push(t);
                  }),
                  (t.parseExprAtom = function(e) {
                    switch (this.state.type) {
                      case x.regexp:
                        return this.estreeParseRegExpLiteral(this.state.value);
                      case x.num:
                      case x.string:
                        return this.estreeParseLiteral(this.state.value);
                      case x._null:
                        return this.estreeParseLiteral(null);
                      case x._true:
                        return this.estreeParseLiteral(!0);
                      case x._false:
                        return this.estreeParseLiteral(!1);
                      default:
                        return o.prototype.parseExprAtom.call(this, e);
                    }
                  }),
                  (t.parseLiteral = function(e, t, n, a) {
                    var r = o.prototype.parseLiteral.call(this, e, t, n, a);
                    return (r.raw = r.extra.raw), delete r.extra, r;
                  }),
                  (t.parseFunctionBody = function(e, t) {
                    o.prototype.parseFunctionBody.call(this, e, t),
                      (e.expression = "BlockStatement" !== e.body.type);
                  }),
                  (t.parseMethod = function(e, t, n, a, r) {
                    var i = this.startNode();
                    return (
                      (i.kind = e.kind),
                      delete (i = o.prototype.parseMethod.call(
                        this,
                        i,
                        t,
                        n,
                        a,
                        "FunctionExpression"
                      )).kind,
                      (e.value = i),
                      this.finishNode(e, r)
                    );
                  }),
                  (t.parseObjectMethod = function(e, t, n, a, r) {
                    var i = o.prototype.parseObjectMethod.call(
                      this,
                      e,
                      t,
                      n,
                      a,
                      r
                    );
                    return (
                      i &&
                        ((i.type = "Property"),
                        "method" === i.kind && (i.kind = "init"),
                        (i.shorthand = !1)),
                      i
                    );
                  }),
                  (t.parseObjectProperty = function(e, t, n, a, r) {
                    var i = o.prototype.parseObjectProperty.call(
                      this,
                      e,
                      t,
                      n,
                      a,
                      r
                    );
                    return i && ((i.kind = "init"), (i.type = "Property")), i;
                  }),
                  (t.toAssignable = function(e, t, n) {
                    return d(e)
                      ? (this.toAssignable(e.value, t, n), e)
                      : o.prototype.toAssignable.call(this, e, t, n);
                  }),
                  (t.toAssignableObjectExpressionProp = function(e, t, n) {
                    "get" === e.kind || "set" === e.kind
                      ? this.raise(
                          e.key.start,
                          "Object pattern can't contain getter or setter"
                        )
                      : e.method
                        ? this.raise(
                            e.key.start,
                            "Object pattern can't contain methods"
                          )
                        : o.prototype.toAssignableObjectExpressionProp.call(
                            this,
                            e,
                            t,
                            n
                          );
                  }),
                  e
                );
              })(e);
            },
            jsx: function(e) {
              return (function(n) {
                function e() {
                  return n.apply(this, arguments) || this;
                }
                r(e, n);
                var t = e.prototype;
                return (
                  (t.jsxReadToken = function() {
                    for (var e = "", t = this.state.pos; ; ) {
                      this.state.pos >= this.input.length &&
                        this.raise(
                          this.state.start,
                          "Unterminated JSX contents"
                        );
                      var n = this.input.charCodeAt(this.state.pos);
                      switch (n) {
                        case 60:
                        case 123:
                          return this.state.pos === this.state.start
                            ? 60 === n && this.state.exprAllowed
                              ? (++this.state.pos,
                                this.finishToken(x.jsxTagStart))
                              : this.getTokenFromCode(n)
                            : ((e += this.input.slice(t, this.state.pos)),
                              this.finishToken(x.jsxText, e));
                        case 38:
                          (e += this.input.slice(t, this.state.pos)),
                            (e += this.jsxReadEntity()),
                            (t = this.state.pos);
                          break;
                        default:
                          D(n)
                            ? ((e += this.input.slice(t, this.state.pos)),
                              (e += this.jsxReadNewLine(!0)),
                              (t = this.state.pos))
                            : ++this.state.pos;
                      }
                    }
                  }),
                  (t.jsxReadNewLine = function(e) {
                    var t,
                      n = this.input.charCodeAt(this.state.pos);
                    return (
                      ++this.state.pos,
                      (t =
                        13 === n && 10 === this.input.charCodeAt(this.state.pos)
                          ? (++this.state.pos, e ? "\n" : "\r\n")
                          : String.fromCharCode(n)),
                      ++this.state.curLine,
                      (this.state.lineStart = this.state.pos),
                      t
                    );
                  }),
                  (t.jsxReadString = function(e) {
                    for (var t = "", n = ++this.state.pos; ; ) {
                      this.state.pos >= this.input.length &&
                        this.raise(
                          this.state.start,
                          "Unterminated string constant"
                        );
                      var a = this.input.charCodeAt(this.state.pos);
                      if (a === e) break;
                      38 === a
                        ? ((t += this.input.slice(n, this.state.pos)),
                          (t += this.jsxReadEntity()),
                          (n = this.state.pos))
                        : D(a)
                          ? ((t += this.input.slice(n, this.state.pos)),
                            (t += this.jsxReadNewLine(!1)),
                            (n = this.state.pos))
                          : ++this.state.pos;
                    }
                    return (
                      (t += this.input.slice(n, this.state.pos++)),
                      this.finishToken(x.string, t)
                    );
                  }),
                  (t.jsxReadEntity = function() {
                    for (
                      var e,
                        t = "",
                        n = 0,
                        a = this.input[this.state.pos],
                        r = ++this.state.pos;
                      this.state.pos < this.input.length && n++ < 10;

                    ) {
                      if (";" === (a = this.input[this.state.pos++])) {
                        "#" === t[0]
                          ? "x" === t[1]
                            ? ((t = t.substr(2)),
                              j.test(t) &&
                                (e = String.fromCodePoint(parseInt(t, 16))))
                            : ((t = t.substr(1)),
                              M.test(t) &&
                                (e = String.fromCodePoint(parseInt(t, 10))))
                          : (e = E[t]);
                        break;
                      }
                      t += a;
                    }
                    return e || ((this.state.pos = r), "&");
                  }),
                  (t.jsxReadWord = function() {
                    for (
                      var e, t = this.state.pos;
                      b((e = this.input.charCodeAt(++this.state.pos))) ||
                      45 === e;

                    );
                    return this.finishToken(
                      x.jsxName,
                      this.input.slice(t, this.state.pos)
                    );
                  }),
                  (t.jsxParseIdentifier = function() {
                    var e = this.startNode();
                    return (
                      this.match(x.jsxName)
                        ? (e.name = this.state.value)
                        : this.state.type.keyword
                          ? (e.name = this.state.type.keyword)
                          : this.unexpected(),
                      this.next(),
                      this.finishNode(e, "JSXIdentifier")
                    );
                  }),
                  (t.jsxParseNamespacedName = function() {
                    var e = this.state.start,
                      t = this.state.startLoc,
                      n = this.jsxParseIdentifier();
                    if (!this.eat(x.colon)) return n;
                    var a = this.startNodeAt(e, t);
                    return (
                      (a.namespace = n),
                      (a.name = this.jsxParseIdentifier()),
                      this.finishNode(a, "JSXNamespacedName")
                    );
                  }),
                  (t.jsxParseElementName = function() {
                    for (
                      var e = this.state.start,
                        t = this.state.startLoc,
                        n = this.jsxParseNamespacedName();
                      this.eat(x.dot);

                    ) {
                      var a = this.startNodeAt(e, t);
                      (a.object = n),
                        (a.property = this.jsxParseIdentifier()),
                        (n = this.finishNode(a, "JSXMemberExpression"));
                    }
                    return n;
                  }),
                  (t.jsxParseAttributeValue = function() {
                    var e;
                    switch (this.state.type) {
                      case x.braceL:
                        if (
                          "JSXEmptyExpression" ===
                          (e = this.jsxParseExpressionContainer()).expression
                            .type
                        )
                          throw this.raise(
                            e.start,
                            "JSX attributes must only be assigned a non-empty expression"
                          );
                        return e;
                      case x.jsxTagStart:
                      case x.string:
                        return this.parseExprAtom();
                      default:
                        throw this.raise(
                          this.state.start,
                          "JSX value should be either an expression or a quoted JSX text"
                        );
                    }
                  }),
                  (t.jsxParseEmptyExpression = function() {
                    var e = this.startNodeAt(
                      this.state.lastTokEnd,
                      this.state.lastTokEndLoc
                    );
                    return this.finishNodeAt(
                      e,
                      "JSXEmptyExpression",
                      this.state.start,
                      this.state.startLoc
                    );
                  }),
                  (t.jsxParseSpreadChild = function() {
                    var e = this.startNode();
                    return (
                      this.expect(x.braceL),
                      this.expect(x.ellipsis),
                      (e.expression = this.parseExpression()),
                      this.expect(x.braceR),
                      this.finishNode(e, "JSXSpreadChild")
                    );
                  }),
                  (t.jsxParseExpressionContainer = function() {
                    var e = this.startNode();
                    return (
                      this.next(),
                      this.match(x.braceR)
                        ? (e.expression = this.jsxParseEmptyExpression())
                        : (e.expression = this.parseExpression()),
                      this.expect(x.braceR),
                      this.finishNode(e, "JSXExpressionContainer")
                    );
                  }),
                  (t.jsxParseAttribute = function() {
                    var e = this.startNode();
                    return this.eat(x.braceL)
                      ? (this.expect(x.ellipsis),
                        (e.argument = this.parseMaybeAssign()),
                        this.expect(x.braceR),
                        this.finishNode(e, "JSXSpreadAttribute"))
                      : ((e.name = this.jsxParseNamespacedName()),
                        (e.value = this.eat(x.eq)
                          ? this.jsxParseAttributeValue()
                          : null),
                        this.finishNode(e, "JSXAttribute"));
                  }),
                  (t.jsxParseOpeningElementAt = function(e, t) {
                    var n = this.startNodeAt(e, t);
                    return this.match(x.jsxTagEnd)
                      ? (this.expect(x.jsxTagEnd),
                        this.finishNode(n, "JSXOpeningFragment"))
                      : ((n.name = this.jsxParseElementName()),
                        this.jsxParseOpeningElementAfterName(n));
                  }),
                  (t.jsxParseOpeningElementAfterName = function(e) {
                    for (
                      var t = [];
                      !this.match(x.slash) && !this.match(x.jsxTagEnd);

                    )
                      t.push(this.jsxParseAttribute());
                    return (
                      (e.attributes = t),
                      (e.selfClosing = this.eat(x.slash)),
                      this.expect(x.jsxTagEnd),
                      this.finishNode(e, "JSXOpeningElement")
                    );
                  }),
                  (t.jsxParseClosingElementAt = function(e, t) {
                    var n = this.startNodeAt(e, t);
                    return this.match(x.jsxTagEnd)
                      ? (this.expect(x.jsxTagEnd),
                        this.finishNode(n, "JSXClosingFragment"))
                      : ((n.name = this.jsxParseElementName()),
                        this.expect(x.jsxTagEnd),
                        this.finishNode(n, "JSXClosingElement"));
                  }),
                  (t.jsxParseElementAt = function(e, t) {
                    var n = this.startNodeAt(e, t),
                      a = [],
                      r = this.jsxParseOpeningElementAt(e, t),
                      i = null;
                    if (!r.selfClosing) {
                      e: for (;;)
                        switch (this.state.type) {
                          case x.jsxTagStart:
                            if (
                              ((e = this.state.start),
                              (t = this.state.startLoc),
                              this.next(),
                              this.eat(x.slash))
                            ) {
                              i = this.jsxParseClosingElementAt(e, t);
                              break e;
                            }
                            a.push(this.jsxParseElementAt(e, t));
                            break;
                          case x.jsxText:
                            a.push(this.parseExprAtom());
                            break;
                          case x.braceL:
                            this.lookahead().type === x.ellipsis
                              ? a.push(this.jsxParseSpreadChild())
                              : a.push(this.jsxParseExpressionContainer());
                            break;
                          default:
                            throw this.unexpected();
                        }
                      I(r) && !I(i)
                        ? this.raise(
                            i.start,
                            "Expected corresponding JSX closing tag for <>"
                          )
                        : !I(r) && I(i)
                          ? this.raise(
                              i.start,
                              "Expected corresponding JSX closing tag for <" +
                                N(r.name) +
                                ">"
                            )
                          : I(r) ||
                            I(i) ||
                            (N(i.name) !== N(r.name) &&
                              this.raise(
                                i.start,
                                "Expected corresponding JSX closing tag for <" +
                                  N(r.name) +
                                  ">"
                              ));
                    }
                    return (
                      I(r)
                        ? ((n.openingFragment = r), (n.closingFragment = i))
                        : ((n.openingElement = r), (n.closingElement = i)),
                      (n.children = a),
                      this.match(x.relational) &&
                        "<" === this.state.value &&
                        this.raise(
                          this.state.start,
                          "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"
                        ),
                      I(r)
                        ? this.finishNode(n, "JSXFragment")
                        : this.finishNode(n, "JSXElement")
                    );
                  }),
                  (t.jsxParseElement = function() {
                    var e = this.state.start,
                      t = this.state.startLoc;
                    return this.next(), this.jsxParseElementAt(e, t);
                  }),
                  (t.parseExprAtom = function(e) {
                    return this.match(x.jsxText)
                      ? this.parseLiteral(this.state.value, "JSXText")
                      : this.match(x.jsxTagStart)
                        ? this.jsxParseElement()
                        : n.prototype.parseExprAtom.call(this, e);
                  }),
                  (t.readToken = function(e) {
                    if (this.state.inPropertyName)
                      return n.prototype.readToken.call(this, e);
                    var t = this.curContext();
                    if (t === k.j_expr) return this.jsxReadToken();
                    if (t === k.j_oTag || t === k.j_cTag) {
                      if (v(e)) return this.jsxReadWord();
                      if (62 === e)
                        return ++this.state.pos, this.finishToken(x.jsxTagEnd);
                      if ((34 === e || 39 === e) && t === k.j_oTag)
                        return this.jsxReadString(e);
                    }
                    return 60 === e && this.state.exprAllowed
                      ? (++this.state.pos, this.finishToken(x.jsxTagStart))
                      : n.prototype.readToken.call(this, e);
                  }),
                  (t.updateContext = function(e) {
                    if (this.match(x.braceL)) {
                      var t = this.curContext();
                      t === k.j_oTag
                        ? this.state.context.push(k.braceExpression)
                        : t === k.j_expr
                          ? this.state.context.push(k.templateQuasi)
                          : n.prototype.updateContext.call(this, e),
                        (this.state.exprAllowed = !0);
                    } else {
                      if (!this.match(x.slash) || e !== x.jsxTagStart)
                        return n.prototype.updateContext.call(this, e);
                      (this.state.context.length -= 2),
                        this.state.context.push(k.j_cTag),
                        (this.state.exprAllowed = !1);
                    }
                  }),
                  e
                );
              })(e);
            },
            flow: function(e) {
              return (function(E) {
                function e(e, t) {
                  var n;
                  return (
                    ((n = E.call(this, e, t) || this).flowPragma = void 0), n
                  );
                }
                r(e, E);
                var t = e.prototype;
                return (
                  (t.shouldParseTypes = function() {
                    return (
                      this.getPluginOption("flow", "all") ||
                      "flow" === this.flowPragma
                    );
                  }),
                  (t.addComment = function(e) {
                    if (void 0 === this.flowPragma) {
                      var t = P.exec(e.value);
                      if (t)
                        if ("flow" === t[1]) this.flowPragma = "flow";
                        else {
                          if ("noflow" !== t[1])
                            throw new Error("Unexpected flow pragma");
                          this.flowPragma = "noflow";
                        }
                      else this.flowPragma = null;
                    }
                    return E.prototype.addComment.call(this, e);
                  }),
                  (t.flowParseTypeInitialiser = function(e) {
                    var t = this.state.inType;
                    (this.state.inType = !0), this.expect(e || x.colon);
                    var n = this.flowParseType();
                    return (this.state.inType = t), n;
                  }),
                  (t.flowParsePredicate = function() {
                    var e = this.startNode(),
                      t = this.state.startLoc,
                      n = this.state.start;
                    this.expect(x.modulo);
                    var a = this.state.startLoc;
                    return (
                      this.expectContextual("checks"),
                      (t.line === a.line && t.column === a.column - 1) ||
                        this.raise(
                          n,
                          "Spaces between ´%´ and ´checks´ are not allowed here."
                        ),
                      this.eat(x.parenL)
                        ? ((e.value = this.parseExpression()),
                          this.expect(x.parenR),
                          this.finishNode(e, "DeclaredPredicate"))
                        : this.finishNode(e, "InferredPredicate")
                    );
                  }),
                  (t.flowParseTypeAndPredicateInitialiser = function() {
                    var e = this.state.inType;
                    (this.state.inType = !0), this.expect(x.colon);
                    var t = null,
                      n = null;
                    return (
                      this.match(x.modulo)
                        ? ((this.state.inType = e),
                          (n = this.flowParsePredicate()))
                        : ((t = this.flowParseType()),
                          (this.state.inType = e),
                          this.match(x.modulo) &&
                            (n = this.flowParsePredicate())),
                      [t, n]
                    );
                  }),
                  (t.flowParseDeclareClass = function(e) {
                    return (
                      this.next(),
                      this.flowParseInterfaceish(e, !0),
                      this.finishNode(e, "DeclareClass")
                    );
                  }),
                  (t.flowParseDeclareFunction = function(e) {
                    this.next();
                    var t = (e.id = this.parseIdentifier()),
                      n = this.startNode(),
                      a = this.startNode();
                    this.isRelational("<")
                      ? (n.typeParameters = this.flowParseTypeParameterDeclaration())
                      : (n.typeParameters = null),
                      this.expect(x.parenL);
                    var r = this.flowParseFunctionTypeParams();
                    (n.params = r.params),
                      (n.rest = r.rest),
                      this.expect(x.parenR);
                    var i = this.flowParseTypeAndPredicateInitialiser();
                    return (
                      (n.returnType = i[0]),
                      (e.predicate = i[1]),
                      (a.typeAnnotation = this.finishNode(
                        n,
                        "FunctionTypeAnnotation"
                      )),
                      (t.typeAnnotation = this.finishNode(a, "TypeAnnotation")),
                      this.finishNode(t, t.type),
                      this.semicolon(),
                      this.finishNode(e, "DeclareFunction")
                    );
                  }),
                  (t.flowParseDeclare = function(e, t) {
                    if (this.match(x._class))
                      return this.flowParseDeclareClass(e);
                    if (this.match(x._function))
                      return this.flowParseDeclareFunction(e);
                    if (this.match(x._var))
                      return this.flowParseDeclareVariable(e);
                    if (this.isContextual("module"))
                      return this.lookahead().type === x.dot
                        ? this.flowParseDeclareModuleExports(e)
                        : (t &&
                            this.unexpected(
                              null,
                              "`declare module` cannot be used inside another `declare module`"
                            ),
                          this.flowParseDeclareModule(e));
                    if (this.isContextual("type"))
                      return this.flowParseDeclareTypeAlias(e);
                    if (this.isContextual("opaque"))
                      return this.flowParseDeclareOpaqueType(e);
                    if (this.isContextual("interface"))
                      return this.flowParseDeclareInterface(e);
                    if (this.match(x._export))
                      return this.flowParseDeclareExportDeclaration(e, t);
                    throw this.unexpected();
                  }),
                  (t.flowParseDeclareVariable = function(e) {
                    return (
                      this.next(),
                      (e.id = this.flowParseTypeAnnotatableIdentifier(!0)),
                      this.semicolon(),
                      this.finishNode(e, "DeclareVariable")
                    );
                  }),
                  (t.flowParseDeclareModule = function(e) {
                    var n = this;
                    this.next(),
                      this.match(x.string)
                        ? (e.id = this.parseExprAtom())
                        : (e.id = this.parseIdentifier());
                    var t = (e.body = this.startNode()),
                      a = (t.body = []);
                    for (this.expect(x.braceL); !this.match(x.braceR); ) {
                      var r = this.startNode();
                      if (this.match(x._import)) {
                        var i = this.lookahead();
                        "type" !== i.value &&
                          "typeof" !== i.value &&
                          this.unexpected(
                            null,
                            "Imports within a `declare module` body must always be `import type` or `import typeof`"
                          ),
                          this.next(),
                          this.parseImport(r);
                      } else
                        this.expectContextual(
                          "declare",
                          "Only declares and type imports are allowed inside declare module"
                        ),
                          (r = this.flowParseDeclare(r, !0));
                      a.push(r);
                    }
                    this.expect(x.braceR), this.finishNode(t, "BlockStatement");
                    var o = null,
                      s = !1,
                      d =
                        "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module";
                    return (
                      a.forEach(function(e) {
                        var t;
                        "DeclareExportAllDeclaration" === (t = e).type ||
                        ("DeclareExportDeclaration" === t.type &&
                          (!t.declaration ||
                            ("TypeAlias" !== t.declaration.type &&
                              "InterfaceDeclaration" !== t.declaration.type)))
                          ? ("CommonJS" === o && n.unexpected(e.start, d),
                            (o = "ES"))
                          : "DeclareModuleExports" === e.type &&
                            (s &&
                              n.unexpected(
                                e.start,
                                "Duplicate `declare module.exports` statement"
                              ),
                            "ES" === o && n.unexpected(e.start, d),
                            (o = "CommonJS"),
                            (s = !0));
                      }),
                      (e.kind = o || "CommonJS"),
                      this.finishNode(e, "DeclareModule")
                    );
                  }),
                  (t.flowParseDeclareExportDeclaration = function(e, t) {
                    if ((this.expect(x._export), this.eat(x._default)))
                      return (
                        this.match(x._function) || this.match(x._class)
                          ? (e.declaration = this.flowParseDeclare(
                              this.startNode()
                            ))
                          : ((e.declaration = this.flowParseType()),
                            this.semicolon()),
                        (e.default = !0),
                        this.finishNode(e, "DeclareExportDeclaration")
                      );
                    if (
                      this.match(x._const) ||
                      this.match(x._let) ||
                      ((this.isContextual("type") ||
                        this.isContextual("interface")) &&
                        !t)
                    ) {
                      var n = this.state.value,
                        a = T[n];
                      this.unexpected(
                        this.state.start,
                        "`declare export " +
                          n +
                          "` is not supported. Use `" +
                          a +
                          "` instead"
                      );
                    }
                    if (
                      this.match(x._var) ||
                      this.match(x._function) ||
                      this.match(x._class) ||
                      this.isContextual("opaque")
                    )
                      return (
                        (e.declaration = this.flowParseDeclare(
                          this.startNode()
                        )),
                        (e.default = !1),
                        this.finishNode(e, "DeclareExportDeclaration")
                      );
                    if (
                      this.match(x.star) ||
                      this.match(x.braceL) ||
                      this.isContextual("interface") ||
                      this.isContextual("type") ||
                      this.isContextual("opaque")
                    )
                      return (
                        "ExportNamedDeclaration" ===
                          (e = this.parseExport(e)).type &&
                          ((e.type = "ExportDeclaration"),
                          (e.default = !1),
                          delete e.exportKind),
                        (e.type = "Declare" + e.type),
                        e
                      );
                    throw this.unexpected();
                  }),
                  (t.flowParseDeclareModuleExports = function(e) {
                    return (
                      this.expectContextual("module"),
                      this.expect(x.dot),
                      this.expectContextual("exports"),
                      (e.typeAnnotation = this.flowParseTypeAnnotation()),
                      this.semicolon(),
                      this.finishNode(e, "DeclareModuleExports")
                    );
                  }),
                  (t.flowParseDeclareTypeAlias = function(e) {
                    return (
                      this.next(),
                      this.flowParseTypeAlias(e),
                      this.finishNode(e, "DeclareTypeAlias")
                    );
                  }),
                  (t.flowParseDeclareOpaqueType = function(e) {
                    return (
                      this.next(),
                      this.flowParseOpaqueType(e, !0),
                      this.finishNode(e, "DeclareOpaqueType")
                    );
                  }),
                  (t.flowParseDeclareInterface = function(e) {
                    return (
                      this.next(),
                      this.flowParseInterfaceish(e),
                      this.finishNode(e, "DeclareInterface")
                    );
                  }),
                  (t.flowParseInterfaceish = function(e, t) {
                    if (
                      (void 0 === t && (t = !1),
                      (e.id = this.flowParseRestrictedIdentifier(!t)),
                      this.isRelational("<")
                        ? (e.typeParameters = this.flowParseTypeParameterDeclaration())
                        : (e.typeParameters = null),
                      (e.extends = []),
                      (e.implements = []),
                      (e.mixins = []),
                      this.eat(x._extends))
                    )
                      for (
                        ;
                        e.extends.push(this.flowParseInterfaceExtends()),
                          !t && this.eat(x.comma);

                      );
                    if (this.isContextual("mixins"))
                      for (
                        this.next();
                        e.mixins.push(this.flowParseInterfaceExtends()),
                          this.eat(x.comma);

                      );
                    if (this.isContextual("implements"))
                      for (
                        this.next();
                        e.implements.push(this.flowParseInterfaceExtends()),
                          this.eat(x.comma);

                      );
                    e.body = this.flowParseObjectType(t, !1, !1, t);
                  }),
                  (t.flowParseInterfaceExtends = function() {
                    var e = this.startNode();
                    return (
                      (e.id = this.flowParseQualifiedTypeIdentifier()),
                      this.isRelational("<")
                        ? (e.typeParameters = this.flowParseTypeParameterInstantiation())
                        : (e.typeParameters = null),
                      this.finishNode(e, "InterfaceExtends")
                    );
                  }),
                  (t.flowParseInterface = function(e) {
                    return (
                      this.flowParseInterfaceish(e),
                      this.finishNode(e, "InterfaceDeclaration")
                    );
                  }),
                  (t.checkReservedType = function(e, t) {
                    -1 < A.indexOf(e) &&
                      this.raise(t, "Cannot overwrite primitive type " + e);
                  }),
                  (t.flowParseRestrictedIdentifier = function(e) {
                    return (
                      this.checkReservedType(
                        this.state.value,
                        this.state.start
                      ),
                      this.parseIdentifier(e)
                    );
                  }),
                  (t.flowParseTypeAlias = function(e) {
                    return (
                      (e.id = this.flowParseRestrictedIdentifier()),
                      this.isRelational("<")
                        ? (e.typeParameters = this.flowParseTypeParameterDeclaration())
                        : (e.typeParameters = null),
                      (e.right = this.flowParseTypeInitialiser(x.eq)),
                      this.semicolon(),
                      this.finishNode(e, "TypeAlias")
                    );
                  }),
                  (t.flowParseOpaqueType = function(e, t) {
                    return (
                      this.expectContextual("type"),
                      (e.id = this.flowParseRestrictedIdentifier(!0)),
                      this.isRelational("<")
                        ? (e.typeParameters = this.flowParseTypeParameterDeclaration())
                        : (e.typeParameters = null),
                      (e.supertype = null),
                      this.match(x.colon) &&
                        (e.supertype = this.flowParseTypeInitialiser(x.colon)),
                      (e.impltype = null),
                      t || (e.impltype = this.flowParseTypeInitialiser(x.eq)),
                      this.semicolon(),
                      this.finishNode(e, "OpaqueType")
                    );
                  }),
                  (t.flowParseTypeParameter = function(e, t) {
                    if (
                      (void 0 === e && (e = !0),
                      void 0 === t && (t = !1),
                      !e && t)
                    )
                      throw new Error(
                        "Cannot disallow a default value (`allowDefault`) while also requiring it (`requireDefault`)."
                      );
                    var n = this.state.start,
                      a = this.startNode(),
                      r = this.flowParseVariance(),
                      i = this.flowParseTypeAnnotatableIdentifier();
                    return (
                      (a.name = i.name),
                      (a.variance = r),
                      (a.bound = i.typeAnnotation),
                      this.match(x.eq)
                        ? e
                          ? (this.eat(x.eq), (a.default = this.flowParseType()))
                          : this.unexpected()
                        : t &&
                          this.unexpected(
                            n,
                            "Type parameter declaration needs a default, since a preceding type parameter declaration has a default."
                          ),
                      this.finishNode(a, "TypeParameter")
                    );
                  }),
                  (t.flowParseTypeParameterDeclaration = function(e) {
                    void 0 === e && (e = !0);
                    var t = this.state.inType,
                      n = this.startNode();
                    (n.params = []),
                      (this.state.inType = !0),
                      this.isRelational("<") || this.match(x.jsxTagStart)
                        ? this.next()
                        : this.unexpected();
                    var a = !1;
                    do {
                      var r = this.flowParseTypeParameter(e, a);
                      n.params.push(r),
                        r.default && (a = !0),
                        this.isRelational(">") || this.expect(x.comma);
                    } while (!this.isRelational(">"));
                    return (
                      this.expectRelational(">"),
                      (this.state.inType = t),
                      this.finishNode(n, "TypeParameterDeclaration")
                    );
                  }),
                  (t.flowParseTypeParameterInstantiation = function() {
                    var e = this.startNode(),
                      t = this.state.inType;
                    for (
                      e.params = [],
                        this.state.inType = !0,
                        this.expectRelational("<");
                      !this.isRelational(">");

                    )
                      e.params.push(this.flowParseType()),
                        this.isRelational(">") || this.expect(x.comma);
                    return (
                      this.expectRelational(">"),
                      (this.state.inType = t),
                      this.finishNode(e, "TypeParameterInstantiation")
                    );
                  }),
                  (t.flowParseInterfaceType = function() {
                    var e = this.startNode();
                    if (
                      (this.expectContextual("interface"),
                      (e.extends = []),
                      this.eat(x._extends))
                    )
                      for (
                        ;
                        e.extends.push(this.flowParseInterfaceExtends()),
                          this.eat(x.comma);

                      );
                    return (
                      (e.body = this.flowParseObjectType(!1, !1, !1, !1)),
                      this.finishNode(e, "InterfaceTypeAnnotation")
                    );
                  }),
                  (t.flowParseObjectPropertyKey = function() {
                    return this.match(x.num) || this.match(x.string)
                      ? this.parseExprAtom()
                      : this.parseIdentifier(!0);
                  }),
                  (t.flowParseObjectTypeIndexer = function(e, t, n) {
                    return (
                      (e.static = t),
                      this.lookahead().type === x.colon
                        ? ((e.id = this.flowParseObjectPropertyKey()),
                          (e.key = this.flowParseTypeInitialiser()))
                        : ((e.id = null), (e.key = this.flowParseType())),
                      this.expect(x.bracketR),
                      (e.value = this.flowParseTypeInitialiser()),
                      (e.variance = n),
                      this.finishNode(e, "ObjectTypeIndexer")
                    );
                  }),
                  (t.flowParseObjectTypeInternalSlot = function(e, t) {
                    return (
                      (e.static = t),
                      (e.id = this.flowParseObjectPropertyKey()),
                      this.expect(x.bracketR),
                      this.expect(x.bracketR),
                      this.isRelational("<") || this.match(x.parenL)
                        ? ((e.method = !0),
                          (e.optional = !1),
                          (e.value = this.flowParseObjectTypeMethodish(
                            this.startNodeAt(e.start, e.loc.start)
                          )))
                        : ((e.method = !1),
                          this.eat(x.question) && (e.optional = !0),
                          (e.value = this.flowParseTypeInitialiser())),
                      this.finishNode(e, "ObjectTypeInternalSlot")
                    );
                  }),
                  (t.flowParseObjectTypeMethodish = function(e) {
                    for (
                      e.params = [],
                        e.rest = null,
                        e.typeParameters = null,
                        this.isRelational("<") &&
                          (e.typeParameters = this.flowParseTypeParameterDeclaration(
                            !1
                          )),
                        this.expect(x.parenL);
                      !this.match(x.parenR) && !this.match(x.ellipsis);

                    )
                      e.params.push(this.flowParseFunctionTypeParam()),
                        this.match(x.parenR) || this.expect(x.comma);
                    return (
                      this.eat(x.ellipsis) &&
                        (e.rest = this.flowParseFunctionTypeParam()),
                      this.expect(x.parenR),
                      (e.returnType = this.flowParseTypeInitialiser()),
                      this.finishNode(e, "FunctionTypeAnnotation")
                    );
                  }),
                  (t.flowParseObjectTypeCallProperty = function(e, t) {
                    var n = this.startNode();
                    return (
                      (e.static = t),
                      (e.value = this.flowParseObjectTypeMethodish(n)),
                      this.finishNode(e, "ObjectTypeCallProperty")
                    );
                  }),
                  (t.flowParseObjectType = function(e, t, n, a) {
                    var r = this.state.inType;
                    this.state.inType = !0;
                    var i,
                      o,
                      s = this.startNode();
                    for (
                      s.callProperties = [],
                        s.properties = [],
                        s.indexers = [],
                        s.internalSlots = [],
                        o =
                          t && this.match(x.braceBarL)
                            ? (this.expect(x.braceBarL), (i = x.braceBarR), !0)
                            : (this.expect(x.braceL), (i = x.braceR), !1),
                        s.exact = o;
                      !this.match(i);

                    ) {
                      var d = !1,
                        u = null,
                        l = this.startNode();
                      if (a && this.isContextual("proto")) {
                        var c = this.lookahead();
                        c.type !== x.colon &&
                          c.type !== x.question &&
                          (this.next(), (u = this.state.start), (e = !1));
                      }
                      if (e && this.isContextual("static")) {
                        var p = this.lookahead();
                        p.type !== x.colon &&
                          p.type !== x.question &&
                          (this.next(), (d = !0));
                      }
                      var g = this.flowParseVariance();
                      if (this.eat(x.bracketL))
                        null != u && this.unexpected(u),
                          this.eat(x.bracketL)
                            ? (g && this.unexpected(g.start),
                              s.internalSlots.push(
                                this.flowParseObjectTypeInternalSlot(l, d)
                              ))
                            : s.indexers.push(
                                this.flowParseObjectTypeIndexer(l, d, g)
                              );
                      else if (this.match(x.parenL) || this.isRelational("<"))
                        null != u && this.unexpected(u),
                          g && this.unexpected(g.start),
                          s.callProperties.push(
                            this.flowParseObjectTypeCallProperty(l, d)
                          );
                      else {
                        var f = "init";
                        if (
                          this.isContextual("get") ||
                          this.isContextual("set")
                        ) {
                          var h = this.lookahead();
                          (h.type !== x.name &&
                            h.type !== x.string &&
                            h.type !== x.num) ||
                            ((f = this.state.value), this.next());
                        }
                        s.properties.push(
                          this.flowParseObjectTypeProperty(l, d, u, g, f, n)
                        );
                      }
                      this.flowObjectTypeSemicolon();
                    }
                    this.expect(i);
                    var R = this.finishNode(s, "ObjectTypeAnnotation");
                    return (this.state.inType = r), R;
                  }),
                  (t.flowParseObjectTypeProperty = function(e, t, n, a, r, i) {
                    if (this.match(x.ellipsis))
                      return (
                        i ||
                          this.unexpected(
                            null,
                            "Spread operator cannot appear in class or interface definitions"
                          ),
                        null != n && this.unexpected(n),
                        a &&
                          this.unexpected(
                            a.start,
                            "Spread properties cannot have variance"
                          ),
                        this.expect(x.ellipsis),
                        (e.argument = this.flowParseType()),
                        this.finishNode(e, "ObjectTypeSpreadProperty")
                      );
                    (e.key = this.flowParseObjectPropertyKey()),
                      (e.static = t),
                      (e.proto = null != n),
                      (e.kind = r);
                    var o = !1;
                    return (
                      this.isRelational("<") || this.match(x.parenL)
                        ? ((e.method = !0),
                          null != n && this.unexpected(n),
                          a && this.unexpected(a.start),
                          (e.value = this.flowParseObjectTypeMethodish(
                            this.startNodeAt(e.start, e.loc.start)
                          )),
                          ("get" !== r && "set" !== r) ||
                            this.flowCheckGetterSetterParams(e))
                        : ("init" !== r && this.unexpected(),
                          (e.method = !1),
                          this.eat(x.question) && (o = !0),
                          (e.value = this.flowParseTypeInitialiser()),
                          (e.variance = a)),
                      (e.optional = o),
                      this.finishNode(e, "ObjectTypeProperty")
                    );
                  }),
                  (t.flowCheckGetterSetterParams = function(e) {
                    var t = "get" === e.kind ? 0 : 1,
                      n = e.start;
                    e.value.params.length + (e.value.rest ? 1 : 0) !== t &&
                      ("get" === e.kind
                        ? this.raise(
                            n,
                            "getter must not have any formal parameters"
                          )
                        : this.raise(
                            n,
                            "setter must have exactly one formal parameter"
                          )),
                      "set" === e.kind &&
                        e.value.rest &&
                        this.raise(
                          n,
                          "setter function argument must not be a rest parameter"
                        );
                  }),
                  (t.flowObjectTypeSemicolon = function() {
                    this.eat(x.semi) ||
                      this.eat(x.comma) ||
                      this.match(x.braceR) ||
                      this.match(x.braceBarR) ||
                      this.unexpected();
                  }),
                  (t.flowParseQualifiedTypeIdentifier = function(e, t, n) {
                    (e = e || this.state.start), (t = t || this.state.startLoc);
                    for (
                      var a = n || this.parseIdentifier();
                      this.eat(x.dot);

                    ) {
                      var r = this.startNodeAt(e, t);
                      (r.qualification = a),
                        (r.id = this.parseIdentifier()),
                        (a = this.finishNode(r, "QualifiedTypeIdentifier"));
                    }
                    return a;
                  }),
                  (t.flowParseGenericType = function(e, t, n) {
                    var a = this.startNodeAt(e, t);
                    return (
                      (a.typeParameters = null),
                      (a.id = this.flowParseQualifiedTypeIdentifier(e, t, n)),
                      this.isRelational("<") &&
                        (a.typeParameters = this.flowParseTypeParameterInstantiation()),
                      this.finishNode(a, "GenericTypeAnnotation")
                    );
                  }),
                  (t.flowParseTypeofType = function() {
                    var e = this.startNode();
                    return (
                      this.expect(x._typeof),
                      (e.argument = this.flowParsePrimaryType()),
                      this.finishNode(e, "TypeofTypeAnnotation")
                    );
                  }),
                  (t.flowParseTupleType = function() {
                    var e = this.startNode();
                    for (
                      e.types = [], this.expect(x.bracketL);
                      this.state.pos < this.input.length &&
                      !this.match(x.bracketR) &&
                      (e.types.push(this.flowParseType()),
                      !this.match(x.bracketR));

                    )
                      this.expect(x.comma);
                    return (
                      this.expect(x.bracketR),
                      this.finishNode(e, "TupleTypeAnnotation")
                    );
                  }),
                  (t.flowParseFunctionTypeParam = function() {
                    var e = null,
                      t = !1,
                      n = null,
                      a = this.startNode(),
                      r = this.lookahead();
                    return (
                      (n =
                        r.type === x.colon || r.type === x.question
                          ? ((e = this.parseIdentifier()),
                            this.eat(x.question) && (t = !0),
                            this.flowParseTypeInitialiser())
                          : this.flowParseType()),
                      (a.name = e),
                      (a.optional = t),
                      (a.typeAnnotation = n),
                      this.finishNode(a, "FunctionTypeParam")
                    );
                  }),
                  (t.reinterpretTypeAsFunctionTypeParam = function(e) {
                    var t = this.startNodeAt(e.start, e.loc.start);
                    return (
                      (t.name = null),
                      (t.optional = !1),
                      (t.typeAnnotation = e),
                      this.finishNode(t, "FunctionTypeParam")
                    );
                  }),
                  (t.flowParseFunctionTypeParams = function(e) {
                    void 0 === e && (e = []);
                    for (
                      var t = null;
                      !this.match(x.parenR) && !this.match(x.ellipsis);

                    )
                      e.push(this.flowParseFunctionTypeParam()),
                        this.match(x.parenR) || this.expect(x.comma);
                    return (
                      this.eat(x.ellipsis) &&
                        (t = this.flowParseFunctionTypeParam()),
                      { params: e, rest: t }
                    );
                  }),
                  (t.flowIdentToTypeAnnotation = function(e, t, n, a) {
                    switch (a.name) {
                      case "any":
                        return this.finishNode(n, "AnyTypeAnnotation");
                      case "void":
                        return this.finishNode(n, "VoidTypeAnnotation");
                      case "bool":
                      case "boolean":
                        return this.finishNode(n, "BooleanTypeAnnotation");
                      case "mixed":
                        return this.finishNode(n, "MixedTypeAnnotation");
                      case "empty":
                        return this.finishNode(n, "EmptyTypeAnnotation");
                      case "number":
                        return this.finishNode(n, "NumberTypeAnnotation");
                      case "string":
                        return this.finishNode(n, "StringTypeAnnotation");
                      default:
                        return this.flowParseGenericType(e, t, a);
                    }
                  }),
                  (t.flowParsePrimaryType = function() {
                    var e,
                      t,
                      n = this.state.start,
                      a = this.state.startLoc,
                      r = this.startNode(),
                      i = !1,
                      o = this.state.noAnonFunctionType;
                    switch (this.state.type) {
                      case x.name:
                        return this.isContextual("interface")
                          ? this.flowParseInterfaceType()
                          : this.flowIdentToTypeAnnotation(
                              n,
                              a,
                              r,
                              this.parseIdentifier()
                            );
                      case x.braceL:
                        return this.flowParseObjectType(!1, !1, !0, !1);
                      case x.braceBarL:
                        return this.flowParseObjectType(!1, !0, !0, !1);
                      case x.bracketL:
                        return this.flowParseTupleType();
                      case x.relational:
                        if ("<" === this.state.value)
                          return (
                            (r.typeParameters = this.flowParseTypeParameterDeclaration(
                              !1
                            )),
                            this.expect(x.parenL),
                            (e = this.flowParseFunctionTypeParams()),
                            (r.params = e.params),
                            (r.rest = e.rest),
                            this.expect(x.parenR),
                            this.expect(x.arrow),
                            (r.returnType = this.flowParseType()),
                            this.finishNode(r, "FunctionTypeAnnotation")
                          );
                        break;
                      case x.parenL:
                        if (
                          (this.next(),
                          !this.match(x.parenR) && !this.match(x.ellipsis))
                        )
                          if (this.match(x.name)) {
                            var s = this.lookahead().type;
                            i = s !== x.question && s !== x.colon;
                          } else i = !0;
                        if (i) {
                          if (
                            ((this.state.noAnonFunctionType = !1),
                            (t = this.flowParseType()),
                            (this.state.noAnonFunctionType = o),
                            this.state.noAnonFunctionType ||
                              !(
                                this.match(x.comma) ||
                                (this.match(x.parenR) &&
                                  this.lookahead().type === x.arrow)
                              ))
                          )
                            return this.expect(x.parenR), t;
                          this.eat(x.comma);
                        }
                        return (
                          (e = t
                            ? this.flowParseFunctionTypeParams([
                                this.reinterpretTypeAsFunctionTypeParam(t),
                              ])
                            : this.flowParseFunctionTypeParams()),
                          (r.params = e.params),
                          (r.rest = e.rest),
                          this.expect(x.parenR),
                          this.expect(x.arrow),
                          (r.returnType = this.flowParseType()),
                          (r.typeParameters = null),
                          this.finishNode(r, "FunctionTypeAnnotation")
                        );
                      case x.string:
                        return this.parseLiteral(
                          this.state.value,
                          "StringLiteralTypeAnnotation"
                        );
                      case x._true:
                      case x._false:
                        return (
                          (r.value = this.match(x._true)),
                          this.next(),
                          this.finishNode(r, "BooleanLiteralTypeAnnotation")
                        );
                      case x.plusMin:
                        if ("-" === this.state.value)
                          return (
                            this.next(),
                            this.match(x.num) ||
                              this.unexpected(
                                null,
                                'Unexpected token, expected "number"'
                              ),
                            this.parseLiteral(
                              -this.state.value,
                              "NumberLiteralTypeAnnotation",
                              r.start,
                              r.loc.start
                            )
                          );
                        this.unexpected();
                      case x.num:
                        return this.parseLiteral(
                          this.state.value,
                          "NumberLiteralTypeAnnotation"
                        );
                      case x._null:
                        return (
                          this.next(),
                          this.finishNode(r, "NullLiteralTypeAnnotation")
                        );
                      case x._this:
                        return (
                          this.next(), this.finishNode(r, "ThisTypeAnnotation")
                        );
                      case x.star:
                        return (
                          this.next(),
                          this.finishNode(r, "ExistsTypeAnnotation")
                        );
                      default:
                        if ("typeof" === this.state.type.keyword)
                          return this.flowParseTypeofType();
                    }
                    throw this.unexpected();
                  }),
                  (t.flowParsePostfixType = function() {
                    for (
                      var e = this.state.start,
                        t = this.state.startLoc,
                        n = this.flowParsePrimaryType();
                      !this.canInsertSemicolon() && this.match(x.bracketL);

                    ) {
                      var a = this.startNodeAt(e, t);
                      (a.elementType = n),
                        this.expect(x.bracketL),
                        this.expect(x.bracketR),
                        (n = this.finishNode(a, "ArrayTypeAnnotation"));
                    }
                    return n;
                  }),
                  (t.flowParsePrefixType = function() {
                    var e = this.startNode();
                    return this.eat(x.question)
                      ? ((e.typeAnnotation = this.flowParsePrefixType()),
                        this.finishNode(e, "NullableTypeAnnotation"))
                      : this.flowParsePostfixType();
                  }),
                  (t.flowParseAnonFunctionWithoutParens = function() {
                    var e = this.flowParsePrefixType();
                    if (this.state.noAnonFunctionType || !this.eat(x.arrow))
                      return e;
                    var t = this.startNodeAt(e.start, e.loc.start);
                    return (
                      (t.params = [this.reinterpretTypeAsFunctionTypeParam(e)]),
                      (t.rest = null),
                      (t.returnType = this.flowParseType()),
                      (t.typeParameters = null),
                      this.finishNode(t, "FunctionTypeAnnotation")
                    );
                  }),
                  (t.flowParseIntersectionType = function() {
                    var e = this.startNode();
                    this.eat(x.bitwiseAND);
                    var t = this.flowParseAnonFunctionWithoutParens();
                    for (e.types = [t]; this.eat(x.bitwiseAND); )
                      e.types.push(this.flowParseAnonFunctionWithoutParens());
                    return 1 === e.types.length
                      ? t
                      : this.finishNode(e, "IntersectionTypeAnnotation");
                  }),
                  (t.flowParseUnionType = function() {
                    var e = this.startNode();
                    this.eat(x.bitwiseOR);
                    var t = this.flowParseIntersectionType();
                    for (e.types = [t]; this.eat(x.bitwiseOR); )
                      e.types.push(this.flowParseIntersectionType());
                    return 1 === e.types.length
                      ? t
                      : this.finishNode(e, "UnionTypeAnnotation");
                  }),
                  (t.flowParseType = function() {
                    var e = this.state.inType;
                    this.state.inType = !0;
                    var t = this.flowParseUnionType();
                    return (
                      (this.state.inType = e),
                      (this.state.exprAllowed =
                        this.state.exprAllowed ||
                        this.state.noAnonFunctionType),
                      t
                    );
                  }),
                  (t.flowParseTypeAnnotation = function() {
                    var e = this.startNode();
                    return (
                      (e.typeAnnotation = this.flowParseTypeInitialiser()),
                      this.finishNode(e, "TypeAnnotation")
                    );
                  }),
                  (t.flowParseTypeAnnotatableIdentifier = function(e) {
                    var t = e
                      ? this.parseIdentifier()
                      : this.flowParseRestrictedIdentifier();
                    return (
                      this.match(x.colon) &&
                        ((t.typeAnnotation = this.flowParseTypeAnnotation()),
                        this.finishNode(t, t.type)),
                      t
                    );
                  }),
                  (t.typeCastToParameter = function(e) {
                    return (
                      (e.expression.typeAnnotation = e.typeAnnotation),
                      this.finishNodeAt(
                        e.expression,
                        e.expression.type,
                        e.typeAnnotation.end,
                        e.typeAnnotation.loc.end
                      )
                    );
                  }),
                  (t.flowParseVariance = function() {
                    var e = null;
                    return (
                      this.match(x.plusMin) &&
                        ((e = this.startNode()),
                        "+" === this.state.value
                          ? (e.kind = "plus")
                          : (e.kind = "minus"),
                        this.next(),
                        this.finishNode(e, "Variance")),
                      e
                    );
                  }),
                  (t.parseFunctionBody = function(e, t) {
                    var n = this;
                    return t
                      ? this.forwardNoArrowParamsConversionAt(e, function() {
                          return E.prototype.parseFunctionBody.call(n, e, !0);
                        })
                      : E.prototype.parseFunctionBody.call(this, e, !1);
                  }),
                  (t.parseFunctionBodyAndFinish = function(e, t, n) {
                    if (!n && this.match(x.colon)) {
                      var a = this.startNode(),
                        r = this.flowParseTypeAndPredicateInitialiser();
                      (a.typeAnnotation = r[0]),
                        (e.predicate = r[1]),
                        (e.returnType = a.typeAnnotation
                          ? this.finishNode(a, "TypeAnnotation")
                          : null);
                    }
                    E.prototype.parseFunctionBodyAndFinish.call(this, e, t, n);
                  }),
                  (t.parseStatement = function(e, t) {
                    if (
                      this.state.strict &&
                      this.match(x.name) &&
                      "interface" === this.state.value
                    ) {
                      var n = this.startNode();
                      return this.next(), this.flowParseInterface(n);
                    }
                    var a = E.prototype.parseStatement.call(this, e, t);
                    return (
                      void 0 !== this.flowPragma ||
                        this.isValidDirective(a) ||
                        (this.flowPragma = null),
                      a
                    );
                  }),
                  (t.parseExpressionStatement = function(e, t) {
                    if ("Identifier" === t.type)
                      if ("declare" === t.name) {
                        if (
                          this.match(x._class) ||
                          this.match(x.name) ||
                          this.match(x._function) ||
                          this.match(x._var) ||
                          this.match(x._export)
                        )
                          return this.flowParseDeclare(e);
                      } else if (this.match(x.name)) {
                        if ("interface" === t.name)
                          return this.flowParseInterface(e);
                        if ("type" === t.name)
                          return this.flowParseTypeAlias(e);
                        if ("opaque" === t.name)
                          return this.flowParseOpaqueType(e, !1);
                      }
                    return E.prototype.parseExpressionStatement.call(
                      this,
                      e,
                      t
                    );
                  }),
                  (t.shouldParseExportDeclaration = function() {
                    return (
                      this.isContextual("type") ||
                      this.isContextual("interface") ||
                      this.isContextual("opaque") ||
                      E.prototype.shouldParseExportDeclaration.call(this)
                    );
                  }),
                  (t.isExportDefaultSpecifier = function() {
                    return (
                      (!this.match(x.name) ||
                        ("type" !== this.state.value &&
                          "interface" !== this.state.value &&
                          "opaque" != this.state.value)) &&
                      E.prototype.isExportDefaultSpecifier.call(this)
                    );
                  }),
                  (t.parseConditional = function(t, e, n, a, r) {
                    var i = this;
                    if (!this.match(x.question)) return t;
                    if (r) {
                      var o = this.state.clone();
                      try {
                        return E.prototype.parseConditional.call(
                          this,
                          t,
                          e,
                          n,
                          a
                        );
                      } catch (e) {
                        if (e instanceof SyntaxError)
                          return (
                            (this.state = o),
                            (r.start = e.pos || this.state.start),
                            t
                          );
                        throw e;
                      }
                    }
                    this.expect(x.question);
                    var s = this.state.clone(),
                      d = this.state.noArrowAt,
                      u = this.startNodeAt(n, a),
                      l = this.tryParseConditionalConsequent(),
                      c = l.consequent,
                      p = l.failed,
                      g = this.getArrowLikeExpressions(c),
                      f = g[0],
                      h = g[1];
                    if (p || 0 < h.length) {
                      var R = d.concat();
                      if (0 < h.length) {
                        (this.state = s), (this.state.noArrowAt = R);
                        for (var y = 0; y < h.length; y++) R.push(h[y].start);
                        var m = this.tryParseConditionalConsequent();
                        (c = m.consequent), (p = m.failed);
                        var v = this.getArrowLikeExpressions(c);
                        (f = v[0]), (h = v[1]);
                      }
                      if (
                        (p &&
                          1 < f.length &&
                          this.raise(
                            s.start,
                            "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate."
                          ),
                        p && 1 === f.length)
                      ) {
                        (this.state = s),
                          (this.state.noArrowAt = R.concat(f[0].start));
                        var b = this.tryParseConditionalConsequent();
                        (c = b.consequent), (p = b.failed);
                      }
                      this.getArrowLikeExpressions(c, !0);
                    }
                    return (
                      (this.state.noArrowAt = d),
                      this.expect(x.colon),
                      (u.test = t),
                      (u.consequent = c),
                      (u.alternate = this.forwardNoArrowParamsConversionAt(
                        u,
                        function() {
                          return i.parseMaybeAssign(e, void 0, void 0, void 0);
                        }
                      )),
                      this.finishNode(u, "ConditionalExpression")
                    );
                  }),
                  (t.tryParseConditionalConsequent = function() {
                    this.state.noArrowParamsConversionAt.push(this.state.start);
                    var e = this.parseMaybeAssign(),
                      t = !this.match(x.colon);
                    return (
                      this.state.noArrowParamsConversionAt.pop(),
                      { consequent: e, failed: t }
                    );
                  }),
                  (t.getArrowLikeExpressions = function(e, t) {
                    for (var n = this, a = [e], r = []; 0 !== a.length; ) {
                      var i = a.pop();
                      "ArrowFunctionExpression" === i.type
                        ? (i.typeParameters || !i.returnType
                            ? (this.toAssignableList(
                                i.params,
                                !0,
                                "arrow function parameters"
                              ),
                              E.prototype.checkFunctionNameAndParams.call(
                                this,
                                i,
                                !0
                              ))
                            : r.push(i),
                          a.push(i.body))
                        : "ConditionalExpression" === i.type &&
                          (a.push(i.consequent), a.push(i.alternate));
                    }
                    if (t) {
                      for (var o = 0; o < r.length; o++)
                        this.toAssignableList(
                          e.params,
                          !0,
                          "arrow function parameters"
                        );
                      return [r, []];
                    }
                    return (function(e, t) {
                      for (var n = [], a = [], r = 0; r < e.length; r++)
                        (t(e[r]) ? n : a).push(e[r]);
                      return [n, a];
                    })(r, function(e) {
                      try {
                        return (
                          n.toAssignableList(
                            e.params,
                            !0,
                            "arrow function parameters"
                          ),
                          !0
                        );
                      } catch (e) {
                        return !1;
                      }
                    });
                  }),
                  (t.forwardNoArrowParamsConversionAt = function(e, t) {
                    var n;
                    return (
                      -1 !==
                      this.state.noArrowParamsConversionAt.indexOf(e.start)
                        ? (this.state.noArrowParamsConversionAt.push(
                            this.state.start
                          ),
                          (n = t()),
                          this.state.noArrowParamsConversionAt.pop())
                        : (n = t()),
                      n
                    );
                  }),
                  (t.parseParenItem = function(e, t, n) {
                    if (
                      ((e = E.prototype.parseParenItem.call(this, e, t, n)),
                      this.eat(x.question) && (e.optional = !0),
                      this.match(x.colon))
                    ) {
                      var a = this.startNodeAt(t, n);
                      return (
                        (a.expression = e),
                        (a.typeAnnotation = this.flowParseTypeAnnotation()),
                        this.finishNode(a, "TypeCastExpression")
                      );
                    }
                    return e;
                  }),
                  (t.assertModuleNodeAllowed = function(e) {
                    ("ImportDeclaration" === e.type &&
                      ("type" === e.importKind || "typeof" === e.importKind)) ||
                      ("ExportNamedDeclaration" === e.type &&
                        "type" === e.exportKind) ||
                      ("ExportAllDeclaration" === e.type &&
                        "type" === e.exportKind) ||
                      E.prototype.assertModuleNodeAllowed.call(this, e);
                  }),
                  (t.parseExport = function(e) {
                    return (
                      ("ExportNamedDeclaration" !==
                        (e = E.prototype.parseExport.call(this, e)).type &&
                        "ExportAllDeclaration" !== e.type) ||
                        (e.exportKind = e.exportKind || "value"),
                      e
                    );
                  }),
                  (t.parseExportDeclaration = function(e) {
                    if (this.isContextual("type")) {
                      e.exportKind = "type";
                      var t = this.startNode();
                      return (
                        this.next(),
                        this.match(x.braceL)
                          ? ((e.specifiers = this.parseExportSpecifiers()),
                            this.parseExportFrom(e),
                            null)
                          : this.flowParseTypeAlias(t)
                      );
                    }
                    if (this.isContextual("opaque")) {
                      e.exportKind = "type";
                      var n = this.startNode();
                      return this.next(), this.flowParseOpaqueType(n, !1);
                    }
                    if (this.isContextual("interface")) {
                      e.exportKind = "type";
                      var a = this.startNode();
                      return this.next(), this.flowParseInterface(a);
                    }
                    return E.prototype.parseExportDeclaration.call(this, e);
                  }),
                  (t.shouldParseExportStar = function() {
                    return (
                      E.prototype.shouldParseExportStar.call(this) ||
                      (this.isContextual("type") &&
                        this.lookahead().type === x.star)
                    );
                  }),
                  (t.parseExportStar = function(e) {
                    return (
                      this.eatContextual("type") && (e.exportKind = "type"),
                      E.prototype.parseExportStar.call(this, e)
                    );
                  }),
                  (t.parseExportNamespace = function(e) {
                    return (
                      "type" === e.exportKind && this.unexpected(),
                      E.prototype.parseExportNamespace.call(this, e)
                    );
                  }),
                  (t.parseClassId = function(e, t, n) {
                    E.prototype.parseClassId.call(this, e, t, n),
                      this.isRelational("<") &&
                        (e.typeParameters = this.flowParseTypeParameterDeclaration());
                  }),
                  (t.isKeyword = function(e) {
                    return (
                      (!this.state.inType || "void" !== e) &&
                      E.prototype.isKeyword.call(this, e)
                    );
                  }),
                  (t.readToken = function(e) {
                    var t = this.input.charCodeAt(this.state.pos + 1);
                    return !this.state.inType || (62 !== e && 60 !== e)
                      ? this.options.jisonVariables || 64 !== e || 64 !== t
                        ? E.prototype.readToken.call(this, e)
                        : ((this.state.isIterator = !0),
                          E.prototype.readWord.call(this))
                      : this.finishOp(x.relational, 1);
                  }),
                  (t.toAssignable = function(e, t, n) {
                    return "TypeCastExpression" === e.type
                      ? E.prototype.toAssignable.call(
                          this,
                          this.typeCastToParameter(e),
                          t,
                          n
                        )
                      : E.prototype.toAssignable.call(this, e, t, n);
                  }),
                  (t.toAssignableList = function(e, t, n) {
                    for (var a = 0; a < e.length; a++) {
                      var r = e[a];
                      r &&
                        "TypeCastExpression" === r.type &&
                        (e[a] = this.typeCastToParameter(r));
                    }
                    return E.prototype.toAssignableList.call(this, e, t, n);
                  }),
                  (t.toReferencedList = function(e) {
                    for (var t = 0; t < e.length; t++) {
                      var n = e[t];
                      n &&
                        n._exprListItem &&
                        "TypeCastExpression" === n.type &&
                        this.raise(n.start, "Unexpected type cast");
                    }
                    return e;
                  }),
                  (t.parseExprListItem = function(e, t, n) {
                    var a = this.startNode(),
                      r = E.prototype.parseExprListItem.call(this, e, t, n);
                    return this.match(x.colon)
                      ? ((a._exprListItem = !0),
                        (a.expression = r),
                        (a.typeAnnotation = this.flowParseTypeAnnotation()),
                        this.finishNode(a, "TypeCastExpression"))
                      : r;
                  }),
                  (t.checkLVal = function(e, t, n, a) {
                    if ("TypeCastExpression" !== e.type)
                      return E.prototype.checkLVal.call(this, e, t, n, a);
                  }),
                  (t.parseClassProperty = function(e) {
                    return (
                      this.match(x.colon) &&
                        (e.typeAnnotation = this.flowParseTypeAnnotation()),
                      E.prototype.parseClassProperty.call(this, e)
                    );
                  }),
                  (t.parseClassPrivateProperty = function(e) {
                    return (
                      this.match(x.colon) &&
                        (e.typeAnnotation = this.flowParseTypeAnnotation()),
                      E.prototype.parseClassPrivateProperty.call(this, e)
                    );
                  }),
                  (t.isClassMethod = function() {
                    return (
                      this.isRelational("<") ||
                      E.prototype.isClassMethod.call(this)
                    );
                  }),
                  (t.isClassProperty = function() {
                    return (
                      this.match(x.colon) ||
                      E.prototype.isClassProperty.call(this)
                    );
                  }),
                  (t.isNonstaticConstructor = function(e) {
                    return (
                      !this.match(x.colon) &&
                      E.prototype.isNonstaticConstructor.call(this, e)
                    );
                  }),
                  (t.pushClassMethod = function(e, t, n, a, r) {
                    t.variance && this.unexpected(t.variance.start),
                      delete t.variance,
                      this.isRelational("<") &&
                        (t.typeParameters = this.flowParseTypeParameterDeclaration(
                          !1
                        )),
                      E.prototype.pushClassMethod.call(this, e, t, n, a, r);
                  }),
                  (t.pushClassPrivateMethod = function(e, t, n, a) {
                    t.variance && this.unexpected(t.variance.start),
                      delete t.variance,
                      this.isRelational("<") &&
                        (t.typeParameters = this.flowParseTypeParameterDeclaration()),
                      E.prototype.pushClassPrivateMethod.call(this, e, t, n, a);
                  }),
                  (t.parseClassSuper = function(e) {
                    if (
                      (E.prototype.parseClassSuper.call(this, e),
                      e.superClass &&
                        this.isRelational("<") &&
                        (e.superTypeParameters = this.flowParseTypeParameterInstantiation()),
                      this.isContextual("implements"))
                    ) {
                      this.next();
                      var t = (e.implements = []);
                      do {
                        var n = this.startNode();
                        (n.id = this.flowParseRestrictedIdentifier(!0)),
                          this.isRelational("<")
                            ? (n.typeParameters = this.flowParseTypeParameterInstantiation())
                            : (n.typeParameters = null),
                          t.push(this.finishNode(n, "ClassImplements"));
                      } while (this.eat(x.comma));
                    }
                  }),
                  (t.parsePropertyName = function(e) {
                    var t = this.flowParseVariance(),
                      n = E.prototype.parsePropertyName.call(this, e);
                    return (e.variance = t), n;
                  }),
                  (t.parseObjPropValue = function(e, t, n, a, r, i, o, s) {
                    var d;
                    e.variance && this.unexpected(e.variance.start),
                      delete e.variance,
                      this.isRelational("<") &&
                        ((d = this.flowParseTypeParameterDeclaration(!1)),
                        this.match(x.parenL) || this.unexpected()),
                      E.prototype.parseObjPropValue.call(
                        this,
                        e,
                        t,
                        n,
                        a,
                        r,
                        i,
                        o,
                        s
                      ),
                      d && ((e.value || e).typeParameters = d);
                  }),
                  (t.parseAssignableListItemTypes = function(e) {
                    if (this.eat(x.question)) {
                      if ("Identifier" !== e.type)
                        throw this.raise(
                          e.start,
                          "A binding pattern parameter cannot be optional in an implementation signature."
                        );
                      e.optional = !0;
                    }
                    return (
                      this.match(x.colon) &&
                        (e.typeAnnotation = this.flowParseTypeAnnotation()),
                      this.finishNode(e, e.type),
                      e
                    );
                  }),
                  (t.parseMaybeDefault = function(e, t, n) {
                    var a = E.prototype.parseMaybeDefault.call(this, e, t, n);
                    return (
                      "AssignmentPattern" === a.type &&
                        a.typeAnnotation &&
                        a.right.start < a.typeAnnotation.start &&
                        this.raise(
                          a.typeAnnotation.start,
                          "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"
                        ),
                      a
                    );
                  }),
                  (t.shouldParseDefaultImport = function(e) {
                    return S(e)
                      ? _(this.state)
                      : E.prototype.shouldParseDefaultImport.call(this, e);
                  }),
                  (t.parseImportSpecifierLocal = function(e, t, n, a) {
                    (t.local = S(e)
                      ? this.flowParseRestrictedIdentifier(!0)
                      : this.parseIdentifier()),
                      this.checkLVal(t.local, !0, void 0, a),
                      e.specifiers.push(this.finishNode(t, n));
                  }),
                  (t.parseImportSpecifiers = function(e) {
                    e.importKind = "value";
                    var t = null;
                    if (
                      (this.match(x._typeof)
                        ? (t = "typeof")
                        : this.isContextual("type") && (t = "type"),
                      t)
                    ) {
                      var n = this.lookahead();
                      "type" === t &&
                        n.type === x.star &&
                        this.unexpected(n.start),
                        (_(n) || n.type === x.braceL || n.type === x.star) &&
                          (this.next(), (e.importKind = t));
                    }
                    E.prototype.parseImportSpecifiers.call(this, e);
                  }),
                  (t.parseImportSpecifier = function(e) {
                    var t = this.startNode(),
                      n = this.state.start,
                      a = this.parseIdentifier(!0),
                      r = null;
                    "type" === a.name
                      ? (r = "type")
                      : "typeof" === a.name && (r = "typeof");
                    var i = !1;
                    if (
                      this.isContextual("as") &&
                      !this.isLookaheadContextual("as")
                    ) {
                      var o = this.parseIdentifier(!0);
                      null === r ||
                      this.match(x.name) ||
                      this.state.type.keyword
                        ? ((t.imported = a),
                          (t.importKind = null),
                          (t.local = this.parseIdentifier()))
                        : ((t.imported = o),
                          (t.importKind = r),
                          (t.local = o.__clone()));
                    } else
                      null !== r &&
                      (this.match(x.name) || this.state.type.keyword)
                        ? ((t.imported = this.parseIdentifier(!0)),
                          (t.importKind = r),
                          this.eatContextual("as")
                            ? (t.local = this.parseIdentifier())
                            : ((i = !0), (t.local = t.imported.__clone())))
                        : ((i = !0),
                          (t.imported = a),
                          (t.importKind = null),
                          (t.local = t.imported.__clone()));
                    var s = S(e),
                      d = S(t);
                    s &&
                      d &&
                      this.raise(
                        n,
                        "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements"
                      ),
                      (s || d) &&
                        this.checkReservedType(t.local.name, t.local.start),
                      !i ||
                        s ||
                        d ||
                        this.checkReservedWord(t.local.name, t.start, !0, !0),
                      this.checkLVal(t.local, !0, void 0, "import specifier"),
                      e.specifiers.push(this.finishNode(t, "ImportSpecifier"));
                  }),
                  (t.parseFunctionParams = function(e) {
                    var t = e.kind;
                    "get" !== t &&
                      "set" !== t &&
                      this.isRelational("<") &&
                      (e.typeParameters = this.flowParseTypeParameterDeclaration(
                        !1
                      )),
                      E.prototype.parseFunctionParams.call(this, e);
                  }),
                  (t.parseVarHead = function(e) {
                    E.prototype.parseVarHead.call(this, e),
                      this.match(x.colon) &&
                        ((e.id.typeAnnotation = this.flowParseTypeAnnotation()),
                        this.finishNode(e.id, e.id.type));
                  }),
                  (t.parseAsyncArrowFromCallExpression = function(e, t) {
                    if (this.match(x.colon)) {
                      var n = this.state.noAnonFunctionType;
                      (this.state.noAnonFunctionType = !0),
                        (e.returnType = this.flowParseTypeAnnotation()),
                        (this.state.noAnonFunctionType = n);
                    }
                    return E.prototype.parseAsyncArrowFromCallExpression.call(
                      this,
                      e,
                      t
                    );
                  }),
                  (t.shouldParseAsyncArrow = function() {
                    return (
                      this.match(x.colon) ||
                      E.prototype.shouldParseAsyncArrow.call(this)
                    );
                  }),
                  (t.parseMaybeAssign = function(e, t, n, a) {
                    var r = this,
                      i = null;
                    if (x.jsxTagStart && this.match(x.jsxTagStart)) {
                      var o = this.state.clone();
                      try {
                        return E.prototype.parseMaybeAssign.call(
                          this,
                          e,
                          t,
                          n,
                          a
                        );
                      } catch (e) {
                        if (!(e instanceof SyntaxError)) throw e;
                        (this.state = o),
                          (this.state.context.length -= 2),
                          (i = e);
                      }
                    }
                    if (null != i || this.isRelational("<")) {
                      var s, d;
                      try {
                        (d = this.flowParseTypeParameterDeclaration()),
                          ((s = this.forwardNoArrowParamsConversionAt(
                            d,
                            function() {
                              return E.prototype.parseMaybeAssign.call(
                                r,
                                e,
                                t,
                                n,
                                a
                              );
                            }
                          )).typeParameters = d),
                          this.resetStartLocationFromNode(s, d);
                      } catch (e) {
                        throw i || e;
                      }
                      if ("ArrowFunctionExpression" === s.type) return s;
                      if (null != i) throw i;
                      this.raise(
                        d.start,
                        "Expected an arrow function after this type parameter declaration"
                      );
                    }
                    return E.prototype.parseMaybeAssign.call(this, e, t, n, a);
                  }),
                  (t.parseArrow = function(e) {
                    if (this.match(x.colon)) {
                      var t = this.state.clone();
                      try {
                        var n = this.state.noAnonFunctionType;
                        this.state.noAnonFunctionType = !0;
                        var a = this.startNode(),
                          r = this.flowParseTypeAndPredicateInitialiser();
                        (a.typeAnnotation = r[0]),
                          (e.predicate = r[1]),
                          (this.state.noAnonFunctionType = n),
                          this.canInsertSemicolon() && this.unexpected(),
                          this.match(x.arrow) || this.unexpected(),
                          (e.returnType = a.typeAnnotation
                            ? this.finishNode(a, "TypeAnnotation")
                            : null);
                      } catch (e) {
                        if (!(e instanceof SyntaxError)) throw e;
                        this.state = t;
                      }
                    }
                    return E.prototype.parseArrow.call(this, e);
                  }),
                  (t.shouldParseArrow = function() {
                    return (
                      this.match(x.colon) ||
                      E.prototype.shouldParseArrow.call(this)
                    );
                  }),
                  (t.setArrowFunctionParameters = function(e, t) {
                    -1 !== this.state.noArrowParamsConversionAt.indexOf(e.start)
                      ? (e.params = t)
                      : E.prototype.setArrowFunctionParameters.call(this, e, t);
                  }),
                  (t.checkFunctionNameAndParams = function(e, t) {
                    if (
                      !t ||
                      -1 ===
                        this.state.noArrowParamsConversionAt.indexOf(e.start)
                    )
                      return E.prototype.checkFunctionNameAndParams.call(
                        this,
                        e,
                        t
                      );
                  }),
                  (t.parseParenAndDistinguishExpression = function(e) {
                    return E.prototype.parseParenAndDistinguishExpression.call(
                      this,
                      e && -1 === this.state.noArrowAt.indexOf(this.state.start)
                    );
                  }),
                  (t.parseSubscripts = function(e, t, n, a) {
                    if (
                      "Identifier" === e.type &&
                      "async" === e.name &&
                      -1 !== this.state.noArrowAt.indexOf(t)
                    ) {
                      this.next();
                      var r = this.startNodeAt(t, n);
                      (r.callee = e),
                        (r.arguments = this.parseCallExpressionArguments(
                          x.parenR,
                          !1
                        )),
                        (e = this.finishNode(r, "CallExpression"));
                    } else if (
                      "Identifier" === e.type &&
                      "async" === e.name &&
                      this.isRelational("<")
                    ) {
                      var i,
                        o = this.state.clone();
                      try {
                        var s = this.parseAsyncArrowWithTypeParameters(t, n);
                        if (s) return s;
                      } catch (e) {
                        i = e;
                      }
                      this.state = o;
                      try {
                        return E.prototype.parseSubscripts.call(
                          this,
                          e,
                          t,
                          n,
                          a
                        );
                      } catch (e) {
                        throw i || e;
                      }
                    }
                    return E.prototype.parseSubscripts.call(this, e, t, n, a);
                  }),
                  (t.parseSubscript = function(e, t, n, a, r) {
                    if (
                      this.match(x.questionDot) &&
                      this.isLookaheadRelational("<")
                    ) {
                      if (
                        (this.expectPlugin("optionalChaining"),
                        (r.optionalChainMember = !0),
                        a)
                      )
                        return (r.stop = !0), e;
                      this.next();
                      var i = this.startNodeAt(t, n);
                      return (
                        (i.callee = e),
                        (i.typeArguments = this.flowParseTypeParameterInstantiation()),
                        this.expect(x.parenL),
                        (i.arguments = this.parseCallExpressionArguments(
                          x.parenR,
                          !1
                        )),
                        (i.optional = !0),
                        this.finishNode(i, "OptionalCallExpression")
                      );
                    }
                    if (
                      !a &&
                      this.shouldParseTypes() &&
                      this.isRelational("<")
                    ) {
                      var o = this.startNodeAt(t, n);
                      o.callee = e;
                      var s = this.state.clone();
                      try {
                        return (
                          (o.typeArguments = this.flowParseTypeParameterInstantiation()),
                          this.expect(x.parenL),
                          (o.arguments = this.parseCallExpressionArguments(
                            x.parenR,
                            !1
                          )),
                          r.optionalChainMember
                            ? ((o.optional = !1),
                              this.finishNode(o, "OptionalCallExpression"))
                            : this.finishNode(o, "CallExpression")
                        );
                      } catch (e) {
                        if (!(e instanceof SyntaxError)) throw e;
                        this.state = s;
                      }
                    }
                    return E.prototype.parseSubscript.call(this, e, t, n, a, r);
                  }),
                  (t.parseNewArguments = function(e) {
                    var t = null;
                    if (this.shouldParseTypes() && this.isRelational("<")) {
                      var n = this.state.clone();
                      try {
                        t = this.flowParseTypeParameterInstantiation();
                      } catch (e) {
                        if (!(e instanceof SyntaxError)) throw e;
                        this.state = n;
                      }
                    }
                    (e.typeArguments = t),
                      E.prototype.parseNewArguments.call(this, e);
                  }),
                  (t.parseAsyncArrowWithTypeParameters = function(e, t) {
                    var n = this.startNodeAt(e, t);
                    if ((this.parseFunctionParams(n), this.parseArrow(n)))
                      return this.parseArrowExpression(n, void 0, !0);
                  }),
                  (t.readToken_mult_modulo = function(e) {
                    var t = this.input.charCodeAt(this.state.pos + 1);
                    if (42 === e && 47 === t && this.state.hasFlowComment)
                      return (
                        (this.state.hasFlowComment = !1),
                        (this.state.pos += 2),
                        void this.nextToken()
                      );
                    E.prototype.readToken_mult_modulo.call(this, e);
                  }),
                  (t.skipBlockComment = function() {
                    return this.hasPlugin("flow") &&
                      this.hasPlugin("flowComments") &&
                      this.skipFlowComment()
                      ? (this.hasFlowCommentCompletion(),
                        (this.state.pos += this.skipFlowComment()),
                        void (this.state.hasFlowComment = !0))
                      : this.hasPlugin("flow") && this.state.hasFlowComment
                        ? (-1 ===
                            (e = this.input.indexOf(
                              "*-/",
                              (this.state.pos += 2)
                            )) &&
                            this.raise(
                              this.state.pos - 2,
                              "Unterminated comment"
                            ),
                          void (this.state.pos = e + 3))
                        : void E.prototype.skipBlockComment.call(this);
                    var e;
                  }),
                  (t.skipFlowComment = function() {
                    var e = this.input.charCodeAt(this.state.pos + 2),
                      t = this.input.charCodeAt(this.state.pos + 3);
                    return 58 === e && 58 === t
                      ? 4
                      : "flow-include" ===
                        this.input.slice(this.state.pos + 2, 14)
                        ? 14
                        : 58 === e && 58 !== t && 2;
                  }),
                  (t.hasFlowCommentCompletion = function() {
                    -1 === this.input.indexOf("*/", this.state.pos) &&
                      this.raise(this.state.pos, "Unterminated comment");
                  }),
                  e
                );
              })(e);
            },
            typescript: function(e) {
              return (function(p) {
                function e() {
                  return p.apply(this, arguments) || this;
                }
                r(e, p);
                var t = e.prototype;
                return (
                  (t.tsIsIdentifier = function() {
                    return this.match(x.name);
                  }),
                  (t.tsNextTokenCanFollowModifier = function() {
                    return (
                      this.next(),
                      !(
                        this.hasPrecedingLineBreak() ||
                        this.match(x.parenL) ||
                        this.match(x.parenR) ||
                        this.match(x.colon) ||
                        this.match(x.eq) ||
                        this.match(x.question)
                      )
                    );
                  }),
                  (t.tsParseModifier = function(e) {
                    if (this.match(x.name)) {
                      var t = this.state.value;
                      return -1 !== e.indexOf(t) &&
                        this.tsTryParse(
                          this.tsNextTokenCanFollowModifier.bind(this)
                        )
                        ? t
                        : void 0;
                    }
                  }),
                  (t.tsIsListTerminator = function(e) {
                    switch (e) {
                      case "EnumMembers":
                      case "TypeMembers":
                        return this.match(x.braceR);
                      case "HeritageClauseElement":
                        return this.match(x.braceL);
                      case "TupleElementTypes":
                        return this.match(x.bracketR);
                      case "TypeParametersOrArguments":
                        return this.isRelational(">");
                    }
                    throw new Error("Unreachable");
                  }),
                  (t.tsParseList = function(e, t) {
                    for (var n = []; !this.tsIsListTerminator(e); ) n.push(t());
                    return n;
                  }),
                  (t.tsParseDelimitedList = function(e, t) {
                    return Z(this.tsParseDelimitedListWorker(e, t, !0));
                  }),
                  (t.tsTryParseDelimitedList = function(e, t) {
                    return this.tsParseDelimitedListWorker(e, t, !1);
                  }),
                  (t.tsParseDelimitedListWorker = function(e, t, n) {
                    for (var a = []; !this.tsIsListTerminator(e); ) {
                      var r = t();
                      if (null == r) return;
                      if ((a.push(r), !this.eat(x.comma))) {
                        if (this.tsIsListTerminator(e)) break;
                        return void (n && this.expect(x.comma));
                      }
                    }
                    return a;
                  }),
                  (t.tsParseBracketedList = function(e, t, n, a) {
                    a ||
                      (n
                        ? this.expect(x.bracketL)
                        : this.expectRelational("<"));
                    var r = this.tsParseDelimitedList(e, t);
                    return (
                      n ? this.expect(x.bracketR) : this.expectRelational(">"),
                      r
                    );
                  }),
                  (t.tsParseEntityName = function(e) {
                    for (var t = this.parseIdentifier(); this.eat(x.dot); ) {
                      var n = this.startNodeAtNode(t);
                      (n.left = t),
                        (n.right = this.parseIdentifier(e)),
                        (t = this.finishNode(n, "TSQualifiedName"));
                    }
                    return t;
                  }),
                  (t.tsParseTypeReference = function() {
                    var e = this.startNode();
                    return (
                      (e.typeName = this.tsParseEntityName(!1)),
                      !this.hasPrecedingLineBreak() &&
                        this.isRelational("<") &&
                        (e.typeParameters = this.tsParseTypeArguments()),
                      this.finishNode(e, "TSTypeReference")
                    );
                  }),
                  (t.tsParseThisTypePredicate = function(e) {
                    this.next();
                    var t = this.startNode();
                    return (
                      (t.parameterName = e),
                      (t.typeAnnotation = this.tsParseTypeAnnotation(!1)),
                      this.finishNode(t, "TSTypePredicate")
                    );
                  }),
                  (t.tsParseThisTypeNode = function() {
                    var e = this.startNode();
                    return this.next(), this.finishNode(e, "TSThisType");
                  }),
                  (t.tsParseTypeQuery = function() {
                    var e = this.startNode();
                    return (
                      this.expect(x._typeof),
                      (e.exprName = this.tsParseEntityName(!0)),
                      this.finishNode(e, "TSTypeQuery")
                    );
                  }),
                  (t.tsParseTypeParameter = function() {
                    var e = this.startNode();
                    return (
                      (e.name = this.parseIdentifierName(e.start)),
                      (e.constraint = this.tsEatThenParseType(x._extends)),
                      (e.default = this.tsEatThenParseType(x.eq)),
                      this.finishNode(e, "TSTypeParameter")
                    );
                  }),
                  (t.tsTryParseTypeParameters = function() {
                    if (this.isRelational("<"))
                      return this.tsParseTypeParameters();
                  }),
                  (t.tsParseTypeParameters = function() {
                    var e = this.startNode();
                    return (
                      this.isRelational("<") || this.match(x.jsxTagStart)
                        ? this.next()
                        : this.unexpected(),
                      (e.params = this.tsParseBracketedList(
                        "TypeParametersOrArguments",
                        this.tsParseTypeParameter.bind(this),
                        !1,
                        !0
                      )),
                      this.finishNode(e, "TSTypeParameterDeclaration")
                    );
                  }),
                  (t.tsFillSignature = function(e, t) {
                    var n = e === x.arrow;
                    (t.typeParameters = this.tsTryParseTypeParameters()),
                      this.expect(x.parenL),
                      (t.parameters = this.tsParseBindingListForSignature()),
                      n
                        ? (t.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(
                            e
                          ))
                        : this.match(e) &&
                          (t.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(
                            e
                          ));
                  }),
                  (t.tsParseBindingListForSignature = function() {
                    var t = this;
                    return this.parseBindingList(x.parenR).map(function(e) {
                      if ("Identifier" !== e.type && "RestElement" !== e.type)
                        throw t.unexpected(
                          e.start,
                          "Name in a signature must be an Identifier."
                        );
                      return e;
                    });
                  }),
                  (t.tsParseTypeMemberSemicolon = function() {
                    this.eat(x.comma) || this.semicolon();
                  }),
                  (t.tsParseSignatureMember = function(e) {
                    var t = this.startNode();
                    return (
                      "TSConstructSignatureDeclaration" === e &&
                        this.expect(x._new),
                      this.tsFillSignature(x.colon, t),
                      this.tsParseTypeMemberSemicolon(),
                      this.finishNode(t, e)
                    );
                  }),
                  (t.tsIsUnambiguouslyIndexSignature = function() {
                    return this.next(), this.eat(x.name) && this.match(x.colon);
                  }),
                  (t.tsTryParseIndexSignature = function(e) {
                    if (
                      this.match(x.bracketL) &&
                      this.tsLookAhead(
                        this.tsIsUnambiguouslyIndexSignature.bind(this)
                      )
                    ) {
                      this.expect(x.bracketL);
                      var t = this.parseIdentifier();
                      this.expect(x.colon),
                        (t.typeAnnotation = this.tsParseTypeAnnotation(!1)),
                        this.expect(x.bracketR),
                        (e.parameters = [t]);
                      var n = this.tsTryParseTypeAnnotation();
                      return (
                        n && (e.typeAnnotation = n),
                        this.tsParseTypeMemberSemicolon(),
                        this.finishNode(e, "TSIndexSignature")
                      );
                    }
                  }),
                  (t.tsParsePropertyOrMethodSignature = function(e, t) {
                    this.parsePropertyName(e),
                      this.eat(x.question) && (e.optional = !0);
                    var n = e;
                    if (
                      t ||
                      (!this.match(x.parenL) && !this.isRelational("<"))
                    ) {
                      var a = n;
                      t && (a.readonly = !0);
                      var r = this.tsTryParseTypeAnnotation();
                      return (
                        r && (a.typeAnnotation = r),
                        this.tsParseTypeMemberSemicolon(),
                        this.finishNode(a, "TSPropertySignature")
                      );
                    }
                    var i = n;
                    return (
                      this.tsFillSignature(x.colon, i),
                      this.tsParseTypeMemberSemicolon(),
                      this.finishNode(i, "TSMethodSignature")
                    );
                  }),
                  (t.tsParseTypeMember = function() {
                    if (this.match(x.parenL) || this.isRelational("<"))
                      return this.tsParseSignatureMember(
                        "TSCallSignatureDeclaration"
                      );
                    if (
                      this.match(x._new) &&
                      this.tsLookAhead(
                        this.tsIsStartOfConstructSignature.bind(this)
                      )
                    )
                      return this.tsParseSignatureMember(
                        "TSConstructSignatureDeclaration"
                      );
                    var e = this.startNode(),
                      t = !!this.tsParseModifier(["readonly"]),
                      n = this.tsTryParseIndexSignature(e);
                    return n
                      ? (t && (e.readonly = !0), n)
                      : this.tsParsePropertyOrMethodSignature(e, t);
                  }),
                  (t.tsIsStartOfConstructSignature = function() {
                    return (
                      this.next(),
                      this.match(x.parenL) || this.isRelational("<")
                    );
                  }),
                  (t.tsParseTypeLiteral = function() {
                    var e = this.startNode();
                    return (
                      (e.members = this.tsParseObjectTypeMembers()),
                      this.finishNode(e, "TSTypeLiteral")
                    );
                  }),
                  (t.tsParseObjectTypeMembers = function() {
                    this.expect(x.braceL);
                    var e = this.tsParseList(
                      "TypeMembers",
                      this.tsParseTypeMember.bind(this)
                    );
                    return this.expect(x.braceR), e;
                  }),
                  (t.tsIsStartOfMappedType = function() {
                    return (
                      this.next(),
                      this.eat(x.plusMin)
                        ? this.isContextual("readonly")
                        : (this.isContextual("readonly") && this.next(),
                          !!this.match(x.bracketL) &&
                            (this.next(),
                            !!this.tsIsIdentifier() &&
                              (this.next(), this.match(x._in))))
                    );
                  }),
                  (t.tsParseMappedTypeParameter = function() {
                    var e = this.startNode();
                    return (
                      (e.name = this.parseIdentifierName(e.start)),
                      (e.constraint = this.tsExpectThenParseType(x._in)),
                      this.finishNode(e, "TSTypeParameter")
                    );
                  }),
                  (t.tsParseMappedType = function() {
                    var e = this.startNode();
                    return (
                      this.expect(x.braceL),
                      this.match(x.plusMin)
                        ? ((e.readonly = this.state.value),
                          this.next(),
                          this.expectContextual("readonly"))
                        : this.eatContextual("readonly") && (e.readonly = !0),
                      this.expect(x.bracketL),
                      (e.typeParameter = this.tsParseMappedTypeParameter()),
                      this.expect(x.bracketR),
                      this.match(x.plusMin)
                        ? ((e.optional = this.state.value),
                          this.next(),
                          this.expect(x.question))
                        : this.eat(x.question) && (e.optional = !0),
                      (e.typeAnnotation = this.tsTryParseType()),
                      this.semicolon(),
                      this.expect(x.braceR),
                      this.finishNode(e, "TSMappedType")
                    );
                  }),
                  (t.tsParseTupleType = function() {
                    var e = this.startNode();
                    return (
                      (e.elementTypes = this.tsParseBracketedList(
                        "TupleElementTypes",
                        this.tsParseType.bind(this),
                        !0,
                        !1
                      )),
                      this.finishNode(e, "TSTupleType")
                    );
                  }),
                  (t.tsParseParenthesizedType = function() {
                    var e = this.startNode();
                    return (
                      this.expect(x.parenL),
                      (e.typeAnnotation = this.tsParseType()),
                      this.expect(x.parenR),
                      this.finishNode(e, "TSParenthesizedType")
                    );
                  }),
                  (t.tsParseFunctionOrConstructorType = function(e) {
                    var t = this.startNode();
                    return (
                      "TSConstructorType" === e && this.expect(x._new),
                      this.tsFillSignature(x.arrow, t),
                      this.finishNode(t, e)
                    );
                  }),
                  (t.tsParseLiteralTypeNode = function() {
                    var e = this,
                      t = this.startNode();
                    return (
                      (t.literal = (function() {
                        switch (e.state.type) {
                          case x.num:
                            return e.parseLiteral(
                              e.state.value,
                              "NumericLiteral"
                            );
                          case x.string:
                            return e.parseLiteral(
                              e.state.value,
                              "StringLiteral"
                            );
                          case x._true:
                          case x._false:
                            return e.parseBooleanLiteral();
                          default:
                            throw e.unexpected();
                        }
                      })()),
                      this.finishNode(t, "TSLiteralType")
                    );
                  }),
                  (t.tsParseNonArrayType = function() {
                    switch (this.state.type) {
                      case x.name:
                      case x._void:
                      case x._null:
                        var e = this.match(x._void)
                          ? "TSVoidKeyword"
                          : this.match(x._null)
                            ? "TSNullKeyword"
                            : (function(e) {
                                switch (e) {
                                  case "any":
                                    return "TSAnyKeyword";
                                  case "boolean":
                                    return "TSBooleanKeyword";
                                  case "never":
                                    return "TSNeverKeyword";
                                  case "number":
                                    return "TSNumberKeyword";
                                  case "object":
                                    return "TSObjectKeyword";
                                  case "string":
                                    return "TSStringKeyword";
                                  case "symbol":
                                    return "TSSymbolKeyword";
                                  case "undefined":
                                    return "TSUndefinedKeyword";
                                  default:
                                    return;
                                }
                              })(this.state.value);
                        if (void 0 === e || this.lookahead().type === x.dot)
                          return this.tsParseTypeReference();
                        var t = this.startNode();
                        return this.next(), this.finishNode(t, e);
                      case x.string:
                      case x.num:
                      case x._true:
                      case x._false:
                        return this.tsParseLiteralTypeNode();
                      case x.plusMin:
                        if ("-" !== this.state.value) break;
                        var n = this.startNode();
                        if ((this.next(), !this.match(x.num)))
                          throw this.unexpected();
                        return (
                          (n.literal = this.parseLiteral(
                            -this.state.value,
                            "NumericLiteral",
                            n.start,
                            n.loc.start
                          )),
                          this.finishNode(n, "TSLiteralType")
                        );
                      case x._this:
                        var a = this.tsParseThisTypeNode();
                        return this.isContextual("is") &&
                          !this.hasPrecedingLineBreak()
                          ? this.tsParseThisTypePredicate(a)
                          : a;
                      case x._typeof:
                        return this.tsParseTypeQuery();
                      case x.braceL:
                        return this.tsLookAhead(
                          this.tsIsStartOfMappedType.bind(this)
                        )
                          ? this.tsParseMappedType()
                          : this.tsParseTypeLiteral();
                      case x.bracketL:
                        return this.tsParseTupleType();
                      case x.parenL:
                        return this.tsParseParenthesizedType();
                    }
                    throw this.unexpected();
                  }),
                  (t.tsParseArrayTypeOrHigher = function() {
                    for (
                      var e = this.tsParseNonArrayType();
                      !this.hasPrecedingLineBreak() && this.eat(x.bracketL);

                    )
                      if (this.match(x.bracketR)) {
                        var t = this.startNodeAtNode(e);
                        (t.elementType = e),
                          this.expect(x.bracketR),
                          (e = this.finishNode(t, "TSArrayType"));
                      } else {
                        var n = this.startNodeAtNode(e);
                        (n.objectType = e),
                          (n.indexType = this.tsParseType()),
                          this.expect(x.bracketR),
                          (e = this.finishNode(n, "TSIndexedAccessType"));
                      }
                    return e;
                  }),
                  (t.tsParseTypeOperator = function(e) {
                    var t = this.startNode();
                    return (
                      this.expectContextual(e),
                      (t.operator = e),
                      (t.typeAnnotation = this.tsParseTypeOperatorOrHigher()),
                      this.finishNode(t, "TSTypeOperator")
                    );
                  }),
                  (t.tsParseInferType = function() {
                    var e = this.startNode();
                    this.expectContextual("infer");
                    var t = this.startNode();
                    return (
                      (t.name = this.parseIdentifierName(t.start)),
                      (e.typeParameter = this.finishNode(t, "TSTypeParameter")),
                      this.finishNode(e, "TSInferType")
                    );
                  }),
                  (t.tsParseTypeOperatorOrHigher = function() {
                    var t = this,
                      e = ["keyof", "unique"].find(function(e) {
                        return t.isContextual(e);
                      });
                    return e
                      ? this.tsParseTypeOperator(e)
                      : this.isContextual("infer")
                        ? this.tsParseInferType()
                        : this.tsParseArrayTypeOrHigher();
                  }),
                  (t.tsParseUnionOrIntersectionType = function(e, t, n) {
                    this.eat(n);
                    var a = t();
                    if (this.match(n)) {
                      for (var r = [a]; this.eat(n); ) r.push(t());
                      var i = this.startNodeAtNode(a);
                      (i.types = r), (a = this.finishNode(i, e));
                    }
                    return a;
                  }),
                  (t.tsParseIntersectionTypeOrHigher = function() {
                    return this.tsParseUnionOrIntersectionType(
                      "TSIntersectionType",
                      this.tsParseTypeOperatorOrHigher.bind(this),
                      x.bitwiseAND
                    );
                  }),
                  (t.tsParseUnionTypeOrHigher = function() {
                    return this.tsParseUnionOrIntersectionType(
                      "TSUnionType",
                      this.tsParseIntersectionTypeOrHigher.bind(this),
                      x.bitwiseOR
                    );
                  }),
                  (t.tsIsStartOfFunctionType = function() {
                    return (
                      !!this.isRelational("<") ||
                      (this.match(x.parenL) &&
                        this.tsLookAhead(
                          this.tsIsUnambiguouslyStartOfFunctionType.bind(this)
                        ))
                    );
                  }),
                  (t.tsSkipParameterStart = function() {
                    return !(
                      (!this.match(x.name) && !this.match(x._this)) ||
                      (this.next(), 0)
                    );
                  }),
                  (t.tsIsUnambiguouslyStartOfFunctionType = function() {
                    if (
                      (this.next(),
                      this.match(x.parenR) || this.match(x.ellipsis))
                    )
                      return !0;
                    if (this.tsSkipParameterStart()) {
                      if (
                        this.match(x.colon) ||
                        this.match(x.comma) ||
                        this.match(x.question) ||
                        this.match(x.eq)
                      )
                        return !0;
                      if (
                        this.match(x.parenR) &&
                        (this.next(), this.match(x.arrow))
                      )
                        return !0;
                    }
                    return !1;
                  }),
                  (t.tsParseTypeOrTypePredicateAnnotation = function(r) {
                    var i = this;
                    return this.tsInType(function() {
                      var e = i.startNode();
                      i.expect(r);
                      var t =
                        i.tsIsIdentifier() &&
                        i.tsTryParse(i.tsParseTypePredicatePrefix.bind(i));
                      if (!t) return i.tsParseTypeAnnotation(!1, e);
                      var n = i.tsParseTypeAnnotation(!1),
                        a = i.startNodeAtNode(t);
                      return (
                        (a.parameterName = t),
                        (a.typeAnnotation = n),
                        (e.typeAnnotation = i.finishNode(a, "TSTypePredicate")),
                        i.finishNode(e, "TSTypeAnnotation")
                      );
                    });
                  }),
                  (t.tsTryParseTypeOrTypePredicateAnnotation = function() {
                    return this.match(x.colon)
                      ? this.tsParseTypeOrTypePredicateAnnotation(x.colon)
                      : void 0;
                  }),
                  (t.tsTryParseTypeAnnotation = function() {
                    return this.match(x.colon)
                      ? this.tsParseTypeAnnotation()
                      : void 0;
                  }),
                  (t.tsTryParseType = function() {
                    return this.tsEatThenParseType(x.colon);
                  }),
                  (t.tsParseTypePredicatePrefix = function() {
                    var e = this.parseIdentifier();
                    if (
                      this.isContextual("is") &&
                      !this.hasPrecedingLineBreak()
                    )
                      return this.next(), e;
                  }),
                  (t.tsParseTypeAnnotation = function(e, t) {
                    var n = this;
                    return (
                      void 0 === e && (e = !0),
                      void 0 === t && (t = this.startNode()),
                      this.tsInType(function() {
                        e && n.expect(x.colon),
                          (t.typeAnnotation = n.tsParseType());
                      }),
                      this.finishNode(t, "TSTypeAnnotation")
                    );
                  }),
                  (t.tsParseType = function() {
                    ee(this.state.inType);
                    var e = this.tsParseNonConditionalType();
                    if (this.hasPrecedingLineBreak() || !this.eat(x._extends))
                      return e;
                    var t = this.startNodeAtNode(e);
                    return (
                      (t.checkType = e),
                      (t.extendsType = this.tsParseNonConditionalType()),
                      this.expect(x.question),
                      (t.trueType = this.tsParseType()),
                      this.expect(x.colon),
                      (t.falseType = this.tsParseType()),
                      this.finishNode(t, "TSConditionalType")
                    );
                  }),
                  (t.tsParseNonConditionalType = function() {
                    return this.tsIsStartOfFunctionType()
                      ? this.tsParseFunctionOrConstructorType("TSFunctionType")
                      : this.match(x._new)
                        ? this.tsParseFunctionOrConstructorType(
                            "TSConstructorType"
                          )
                        : this.tsParseUnionTypeOrHigher();
                  }),
                  (t.tsParseTypeAssertion = function() {
                    var e = this,
                      t = this.startNode();
                    return (
                      (t.typeAnnotation = this.tsInType(function() {
                        return e.tsParseType();
                      })),
                      this.expectRelational(">"),
                      (t.expression = this.parseMaybeUnary()),
                      this.finishNode(t, "TSTypeAssertion")
                    );
                  }),
                  (t.tsParseHeritageClause = function() {
                    return this.tsParseDelimitedList(
                      "HeritageClauseElement",
                      this.tsParseExpressionWithTypeArguments.bind(this)
                    );
                  }),
                  (t.tsParseExpressionWithTypeArguments = function() {
                    var e = this.startNode();
                    return (
                      (e.expression = this.tsParseEntityName(!1)),
                      this.isRelational("<") &&
                        (e.typeParameters = this.tsParseTypeArguments()),
                      this.finishNode(e, "TSExpressionWithTypeArguments")
                    );
                  }),
                  (t.tsParseInterfaceDeclaration = function(e) {
                    (e.id = this.parseIdentifier()),
                      (e.typeParameters = this.tsTryParseTypeParameters()),
                      this.eat(x._extends) &&
                        (e.extends = this.tsParseHeritageClause());
                    var t = this.startNode();
                    return (
                      (t.body = this.tsParseObjectTypeMembers()),
                      (e.body = this.finishNode(t, "TSInterfaceBody")),
                      this.finishNode(e, "TSInterfaceDeclaration")
                    );
                  }),
                  (t.tsParseTypeAliasDeclaration = function(e) {
                    return (
                      (e.id = this.parseIdentifier()),
                      (e.typeParameters = this.tsTryParseTypeParameters()),
                      (e.typeAnnotation = this.tsExpectThenParseType(x.eq)),
                      this.semicolon(),
                      this.finishNode(e, "TSTypeAliasDeclaration")
                    );
                  }),
                  (t.tsInNoContext = function(e) {
                    var t = this.state.context;
                    this.state.context = [t[0]];
                    try {
                      return e();
                    } finally {
                      this.state.context = t;
                    }
                  }),
                  (t.tsInType = function(e) {
                    var t = this.state.inType;
                    this.state.inType = !0;
                    try {
                      return e();
                    } finally {
                      this.state.inType = t;
                    }
                  }),
                  (t.tsEatThenParseType = function(e) {
                    return this.match(e) ? this.tsNextThenParseType() : void 0;
                  }),
                  (t.tsExpectThenParseType = function(e) {
                    var t = this;
                    return this.tsDoThenParseType(function() {
                      return t.expect(e);
                    });
                  }),
                  (t.tsNextThenParseType = function() {
                    var e = this;
                    return this.tsDoThenParseType(function() {
                      return e.next();
                    });
                  }),
                  (t.tsDoThenParseType = function(e) {
                    var t = this;
                    return this.tsInType(function() {
                      return e(), t.tsParseType();
                    });
                  }),
                  (t.tsParseEnumMember = function() {
                    var e = this.startNode();
                    return (
                      (e.id = this.match(x.string)
                        ? this.parseLiteral(this.state.value, "StringLiteral")
                        : this.parseIdentifier(!0)),
                      this.eat(x.eq) &&
                        (e.initializer = this.parseMaybeAssign()),
                      this.finishNode(e, "TSEnumMember")
                    );
                  }),
                  (t.tsParseEnumDeclaration = function(e, t) {
                    return (
                      t && (e.const = !0),
                      (e.id = this.parseIdentifier()),
                      this.expect(x.braceL),
                      (e.members = this.tsParseDelimitedList(
                        "EnumMembers",
                        this.tsParseEnumMember.bind(this)
                      )),
                      this.expect(x.braceR),
                      this.finishNode(e, "TSEnumDeclaration")
                    );
                  }),
                  (t.tsParseModuleBlock = function() {
                    var e = this.startNode();
                    return (
                      this.expect(x.braceL),
                      this.parseBlockOrModuleBlockBody(
                        (e.body = []),
                        void 0,
                        !0,
                        x.braceR
                      ),
                      this.finishNode(e, "TSModuleBlock")
                    );
                  }),
                  (t.tsParseModuleOrNamespaceDeclaration = function(e) {
                    if (((e.id = this.parseIdentifier()), this.eat(x.dot))) {
                      var t = this.startNode();
                      this.tsParseModuleOrNamespaceDeclaration(t), (e.body = t);
                    } else e.body = this.tsParseModuleBlock();
                    return this.finishNode(e, "TSModuleDeclaration");
                  }),
                  (t.tsParseAmbientExternalModuleDeclaration = function(e) {
                    return (
                      this.isContextual("global")
                        ? ((e.global = !0), (e.id = this.parseIdentifier()))
                        : this.match(x.string)
                          ? (e.id = this.parseExprAtom())
                          : this.unexpected(),
                      this.match(x.braceL)
                        ? (e.body = this.tsParseModuleBlock())
                        : this.semicolon(),
                      this.finishNode(e, "TSModuleDeclaration")
                    );
                  }),
                  (t.tsParseImportEqualsDeclaration = function(e, t) {
                    return (
                      (e.isExport = t || !1),
                      (e.id = this.parseIdentifier()),
                      this.expect(x.eq),
                      (e.moduleReference = this.tsParseModuleReference()),
                      this.semicolon(),
                      this.finishNode(e, "TSImportEqualsDeclaration")
                    );
                  }),
                  (t.tsIsExternalModuleReference = function() {
                    return (
                      this.isContextual("require") &&
                      this.lookahead().type === x.parenL
                    );
                  }),
                  (t.tsParseModuleReference = function() {
                    return this.tsIsExternalModuleReference()
                      ? this.tsParseExternalModuleReference()
                      : this.tsParseEntityName(!1);
                  }),
                  (t.tsParseExternalModuleReference = function() {
                    var e = this.startNode();
                    if (
                      (this.expectContextual("require"),
                      this.expect(x.parenL),
                      !this.match(x.string))
                    )
                      throw this.unexpected();
                    return (
                      (e.expression = this.parseLiteral(
                        this.state.value,
                        "StringLiteral"
                      )),
                      this.expect(x.parenR),
                      this.finishNode(e, "TSExternalModuleReference")
                    );
                  }),
                  (t.tsLookAhead = function(e) {
                    var t = this.state.clone(),
                      n = e();
                    return (this.state = t), n;
                  }),
                  (t.tsTryParseAndCatch = function(e) {
                    var t = this.state.clone();
                    try {
                      return e();
                    } catch (e) {
                      if (e instanceof SyntaxError)
                        return void (this.state = t);
                      throw e;
                    }
                  }),
                  (t.tsTryParse = function(e) {
                    var t = this.state.clone(),
                      n = e();
                    return void 0 !== n && !1 !== n ? n : void (this.state = t);
                  }),
                  (t.nodeWithSamePosition = function(e, t) {
                    var n = this.startNodeAtNode(e);
                    return (
                      (n.type = t),
                      (n.end = e.end),
                      (n.loc.end = e.loc.end),
                      e.leadingComments &&
                        (n.leadingComments = e.leadingComments),
                      e.trailingComments &&
                        (n.trailingComments = e.trailingComments),
                      e.innerComments && (n.innerComments = e.innerComments),
                      n
                    );
                  }),
                  (t.tsTryParseDeclare = function(e) {
                    switch (this.state.type) {
                      case x._function:
                        return this.next(), this.parseFunction(e, !0);
                      case x._class:
                        return this.parseClass(e, !0, !1);
                      case x._const:
                        if (
                          this.match(x._const) &&
                          this.isLookaheadContextual("enum")
                        )
                          return (
                            this.expect(x._const),
                            this.expectContextual("enum"),
                            this.tsParseEnumDeclaration(e, !0)
                          );
                      case x._var:
                      case x._let:
                        return this.parseVarStatement(e, this.state.type);
                      case x.name:
                        var t = this.state.value;
                        return "global" === t
                          ? this.tsParseAmbientExternalModuleDeclaration(e)
                          : this.tsParseDeclaration(e, t, !0);
                    }
                  }),
                  (t.tsTryParseExportDeclaration = function() {
                    return this.tsParseDeclaration(
                      this.startNode(),
                      this.state.value,
                      !0
                    );
                  }),
                  (t.tsParseExpressionStatement = function(e, t) {
                    switch (t.name) {
                      case "declare":
                        var n = this.tsTryParseDeclare(e);
                        if (n) return (n.declare = !0), n;
                        break;
                      case "global":
                        if (this.match(x.braceL)) {
                          var a = e;
                          return (
                            (a.global = !0),
                            (a.id = t),
                            (a.body = this.tsParseModuleBlock()),
                            this.finishNode(a, "TSModuleDeclaration")
                          );
                        }
                        break;
                      default:
                        return this.tsParseDeclaration(e, t.name, !1);
                    }
                  }),
                  (t.tsParseDeclaration = function(e, t, n) {
                    switch (t) {
                      case "abstract":
                        if (n || this.match(x._class)) {
                          var a = e;
                          return (
                            (a.abstract = !0),
                            n && this.next(),
                            this.parseClass(a, !0, !1)
                          );
                        }
                        break;
                      case "enum":
                        if (n || this.match(x.name))
                          return (
                            n && this.next(), this.tsParseEnumDeclaration(e, !1)
                          );
                        break;
                      case "interface":
                        if (n || this.match(x.name))
                          return (
                            n && this.next(),
                            this.tsParseInterfaceDeclaration(e)
                          );
                        break;
                      case "module":
                        if ((n && this.next(), this.match(x.string)))
                          return this.tsParseAmbientExternalModuleDeclaration(
                            e
                          );
                        if (n || this.match(x.name))
                          return this.tsParseModuleOrNamespaceDeclaration(e);
                        break;
                      case "namespace":
                        if (n || this.match(x.name))
                          return (
                            n && this.next(),
                            this.tsParseModuleOrNamespaceDeclaration(e)
                          );
                        break;
                      case "type":
                        if (n || this.match(x.name))
                          return (
                            n && this.next(),
                            this.tsParseTypeAliasDeclaration(e)
                          );
                    }
                  }),
                  (t.tsTryParseGenericAsyncArrowFunction = function(t, n) {
                    var a = this,
                      e = this.tsTryParseAndCatch(function() {
                        var e = a.startNodeAt(t, n);
                        return (
                          (e.typeParameters = a.tsParseTypeParameters()),
                          p.prototype.parseFunctionParams.call(a, e),
                          (e.returnType = a.tsTryParseTypeOrTypePredicateAnnotation()),
                          a.expect(x.arrow),
                          e
                        );
                      });
                    if (e)
                      return (
                        (e.id = null),
                        (e.generator = !1),
                        (e.expression = !0),
                        (e.async = !0),
                        this.parseFunctionBody(e, !0),
                        this.finishNode(e, "ArrowFunctionExpression")
                      );
                  }),
                  (t.tsParseTypeArguments = function() {
                    var e = this,
                      t = this.startNode();
                    return (
                      (t.params = this.tsInType(function() {
                        return e.tsInNoContext(function() {
                          return (
                            e.expectRelational("<"),
                            e.tsParseDelimitedList(
                              "TypeParametersOrArguments",
                              e.tsParseType.bind(e)
                            )
                          );
                        });
                      })),
                      (this.state.exprAllowed = !1),
                      this.expectRelational(">"),
                      this.finishNode(t, "TSTypeParameterInstantiation")
                    );
                  }),
                  (t.tsIsDeclarationStart = function() {
                    if (this.match(x.name))
                      switch (this.state.value) {
                        case "abstract":
                        case "declare":
                        case "enum":
                        case "interface":
                        case "module":
                        case "namespace":
                        case "type":
                          return !0;
                      }
                    return !1;
                  }),
                  (t.isExportDefaultSpecifier = function() {
                    return (
                      !this.tsIsDeclarationStart() &&
                      p.prototype.isExportDefaultSpecifier.call(this)
                    );
                  }),
                  (t.parseAssignableListItem = function(e, t) {
                    var n,
                      a = !1;
                    e &&
                      ((n = this.parseAccessModifier()),
                      (a = !!this.tsParseModifier(["readonly"])));
                    var r = this.parseMaybeDefault();
                    this.parseAssignableListItemTypes(r);
                    var i = this.parseMaybeDefault(r.start, r.loc.start, r);
                    if (n || a) {
                      var o = this.startNodeAtNode(i);
                      if (
                        (t.length && (o.decorators = t),
                        n && (o.accessibility = n),
                        a && (o.readonly = a),
                        "Identifier" !== i.type &&
                          "AssignmentPattern" !== i.type)
                      )
                        throw this.raise(
                          o.start,
                          "A parameter property may not be declared using a binding pattern."
                        );
                      return (
                        (o.parameter = i),
                        this.finishNode(o, "TSParameterProperty")
                      );
                    }
                    return t.length && (r.decorators = t), i;
                  }),
                  (t.parseFunctionBodyAndFinish = function(e, t, n) {
                    !n &&
                      this.match(x.colon) &&
                      (e.returnType = this.tsParseTypeOrTypePredicateAnnotation(
                        x.colon
                      ));
                    var a =
                      "FunctionDeclaration" === t
                        ? "TSDeclareFunction"
                        : "ClassMethod" === t
                          ? "TSDeclareMethod"
                          : void 0;
                    a && !this.match(x.braceL) && this.isLineTerminator()
                      ? this.finishNode(e, a)
                      : p.prototype.parseFunctionBodyAndFinish.call(
                          this,
                          e,
                          t,
                          n
                        );
                  }),
                  (t.parseSubscript = function(a, r, i, o, s) {
                    var d = this;
                    if (this.hasPrecedingLineBreak() || !this.match(x.bang))
                      return (
                        this.tsTryParseAndCatch(function() {
                          if (d.isRelational("<")) {
                            if (!o && d.atPossibleAsync(a)) {
                              var e = d.tsTryParseGenericAsyncArrowFunction(
                                r,
                                i
                              );
                              if (e) return e;
                            }
                            var t = d.startNodeAt(r, i);
                            t.callee = a;
                            var n = d.tsParseTypeArguments();
                            if (n) {
                              if (!o && d.eat(x.parenL))
                                return (
                                  (t.arguments = d.parseCallExpressionArguments(
                                    x.parenR,
                                    !1
                                  )),
                                  (t.typeParameters = n),
                                  d.finishCallExpression(t)
                                );
                              if (d.match(x.backQuote))
                                return d.parseTaggedTemplateExpression(
                                  r,
                                  i,
                                  a,
                                  s,
                                  n
                                );
                            }
                          }
                          d.unexpected();
                        }) ||
                        p.prototype.parseSubscript.call(this, a, r, i, o, s)
                      );
                    (this.state.exprAllowed = !1), this.next();
                    var e = this.startNodeAt(r, i);
                    return (
                      (e.expression = a),
                      this.finishNode(e, "TSNonNullExpression")
                    );
                  }),
                  (t.parseNewArguments = function(e) {
                    var t = this;
                    if (this.isRelational("<")) {
                      var n = this.tsTryParseAndCatch(function() {
                        var e = t.tsParseTypeArguments();
                        return t.match(x.parenL) || t.unexpected(), e;
                      });
                      n && (e.typeParameters = n);
                    }
                    p.prototype.parseNewArguments.call(this, e);
                  }),
                  (t.parseExprOp = function(e, t, n, a, r) {
                    if (
                      Z(x._in.binop) > a &&
                      !this.hasPrecedingLineBreak() &&
                      this.isContextual("as")
                    ) {
                      var i = this.startNodeAt(t, n);
                      return (
                        (i.expression = e),
                        (i.typeAnnotation = this.tsNextThenParseType()),
                        this.finishNode(i, "TSAsExpression"),
                        this.parseExprOp(i, t, n, a, r)
                      );
                    }
                    return p.prototype.parseExprOp.call(this, e, t, n, a, r);
                  }),
                  (t.checkReservedWord = function(e, t, n, a) {}),
                  (t.checkDuplicateExports = function() {}),
                  (t.parseImport = function(e) {
                    return this.match(x.name) && this.lookahead().type === x.eq
                      ? this.tsParseImportEqualsDeclaration(e)
                      : p.prototype.parseImport.call(this, e);
                  }),
                  (t.parseExport = function(e) {
                    if (this.match(x._import))
                      return (
                        this.expect(x._import),
                        this.tsParseImportEqualsDeclaration(e, !0)
                      );
                    if (this.eat(x.eq)) {
                      var t = e;
                      return (
                        (t.expression = this.parseExpression()),
                        this.semicolon(),
                        this.finishNode(t, "TSExportAssignment")
                      );
                    }
                    if (this.eatContextual("as")) {
                      var n = e;
                      return (
                        this.expectContextual("namespace"),
                        (n.id = this.parseIdentifier()),
                        this.semicolon(),
                        this.finishNode(n, "TSNamespaceExportDeclaration")
                      );
                    }
                    return p.prototype.parseExport.call(this, e);
                  }),
                  (t.isAbstractClass = function() {
                    return (
                      this.isContextual("abstract") &&
                      this.lookahead().type === x._class
                    );
                  }),
                  (t.parseExportDefaultExpression = function() {
                    if (this.isAbstractClass()) {
                      var e = this.startNode();
                      return (
                        this.next(),
                        this.parseClass(e, !0, !0),
                        (e.abstract = !0),
                        e
                      );
                    }
                    if ("interface" === this.state.value) {
                      var t = this.tsParseDeclaration(
                        this.startNode(),
                        this.state.value,
                        !0
                      );
                      if (t) return t;
                    }
                    return p.prototype.parseExportDefaultExpression.call(this);
                  }),
                  (t.parseStatementContent = function(e, t) {
                    if (this.state.type === x._const) {
                      var n = this.lookahead();
                      if (n.type === x.name && "enum" === n.value) {
                        var a = this.startNode();
                        return (
                          this.expect(x._const),
                          this.expectContextual("enum"),
                          this.tsParseEnumDeclaration(a, !0)
                        );
                      }
                    }
                    return p.prototype.parseStatementContent.call(this, e, t);
                  }),
                  (t.parseAccessModifier = function() {
                    return this.tsParseModifier([
                      "public",
                      "protected",
                      "private",
                    ]);
                  }),
                  (t.parseClassMember = function(e, t, n) {
                    var a = this.parseAccessModifier();
                    a && (t.accessibility = a),
                      p.prototype.parseClassMember.call(this, e, t, n);
                  }),
                  (t.parseClassMemberWithIsStatic = function(e, t, n, a) {
                    var r = t,
                      i = t,
                      o = t,
                      s = !1,
                      d = !1;
                    switch (this.tsParseModifier(["abstract", "readonly"])) {
                      case "readonly":
                        (d = !0), (s = !!this.tsParseModifier(["abstract"]));
                        break;
                      case "abstract":
                        (s = !0), (d = !!this.tsParseModifier(["readonly"]));
                    }
                    if (
                      (s && (r.abstract = !0),
                      d && (o.readonly = !0),
                      !s && !a && !r.accessibility)
                    ) {
                      var u = this.tsTryParseIndexSignature(t);
                      if (u) return void e.body.push(u);
                    }
                    if (d)
                      return (
                        (r.static = a),
                        this.parseClassPropertyName(i),
                        this.parsePostMemberNameModifiers(r),
                        void this.pushClassProperty(e, i)
                      );
                    p.prototype.parseClassMemberWithIsStatic.call(
                      this,
                      e,
                      t,
                      n,
                      a
                    );
                  }),
                  (t.parsePostMemberNameModifiers = function(e) {
                    this.eat(x.question) && (e.optional = !0);
                  }),
                  (t.parseExpressionStatement = function(e, t) {
                    return (
                      ("Identifier" === t.type
                        ? this.tsParseExpressionStatement(e, t)
                        : void 0) ||
                      p.prototype.parseExpressionStatement.call(this, e, t)
                    );
                  }),
                  (t.shouldParseExportDeclaration = function() {
                    return (
                      !!this.tsIsDeclarationStart() ||
                      p.prototype.shouldParseExportDeclaration.call(this)
                    );
                  }),
                  (t.parseConditional = function(t, e, n, a, r) {
                    if (!r || !this.match(x.question))
                      return p.prototype.parseConditional.call(
                        this,
                        t,
                        e,
                        n,
                        a,
                        r
                      );
                    var i = this.state.clone();
                    try {
                      return p.prototype.parseConditional.call(
                        this,
                        t,
                        e,
                        n,
                        a
                      );
                    } catch (e) {
                      if (!(e instanceof SyntaxError)) throw e;
                      return (
                        (this.state = i),
                        (r.start = e.pos || this.state.start),
                        t
                      );
                    }
                  }),
                  (t.parseParenItem = function(e, t, n) {
                    if (
                      ((e = p.prototype.parseParenItem.call(this, e, t, n)),
                      this.eat(x.question) && (e.optional = !0),
                      this.match(x.colon))
                    ) {
                      var a = this.startNodeAt(t, n);
                      return (
                        (a.expression = e),
                        (a.typeAnnotation = this.tsParseTypeAnnotation()),
                        this.finishNode(a, "TSTypeCastExpression")
                      );
                    }
                    return e;
                  }),
                  (t.parseExportDeclaration = function(e) {
                    var t,
                      n = this.eatContextual("declare");
                    return (
                      this.match(x.name) &&
                        (t = this.tsTryParseExportDeclaration()),
                      t ||
                        (t = p.prototype.parseExportDeclaration.call(this, e)),
                      t && n && (t.declare = !0),
                      t
                    );
                  }),
                  (t.parseClassId = function(e, t, n) {
                    if ((t && !n) || !this.isContextual("implements")) {
                      p.prototype.parseClassId.apply(this, arguments);
                      var a = this.tsTryParseTypeParameters();
                      a && (e.typeParameters = a);
                    }
                  }),
                  (t.parseClassProperty = function(e) {
                    !e.optional && this.eat(x.bang) && (e.definite = !0);
                    var t = this.tsTryParseTypeAnnotation();
                    return (
                      t && (e.typeAnnotation = t),
                      p.prototype.parseClassProperty.call(this, e)
                    );
                  }),
                  (t.pushClassMethod = function(e, t, n, a, r) {
                    var i = this.tsTryParseTypeParameters();
                    i && (t.typeParameters = i),
                      p.prototype.pushClassMethod.call(this, e, t, n, a, r);
                  }),
                  (t.pushClassPrivateMethod = function(e, t, n, a) {
                    var r = this.tsTryParseTypeParameters();
                    r && (t.typeParameters = r),
                      p.prototype.pushClassPrivateMethod.call(this, e, t, n, a);
                  }),
                  (t.parseClassSuper = function(e) {
                    p.prototype.parseClassSuper.call(this, e),
                      e.superClass &&
                        this.isRelational("<") &&
                        (e.superTypeParameters = this.tsParseTypeArguments()),
                      this.eatContextual("implements") &&
                        (e.implements = this.tsParseHeritageClause());
                  }),
                  (t.parseObjPropValue = function(e) {
                    var t;
                    if (this.isRelational("<")) throw new Error("TODO");
                    for (
                      var n = arguments.length,
                        a = new Array(1 < n ? n - 1 : 0),
                        r = 1;
                      r < n;
                      r++
                    )
                      a[r - 1] = arguments[r];
                    (t = p.prototype.parseObjPropValue).call.apply(
                      t,
                      [this, e].concat(a)
                    );
                  }),
                  (t.parseFunctionParams = function(e, t) {
                    var n = this.tsTryParseTypeParameters();
                    n && (e.typeParameters = n),
                      p.prototype.parseFunctionParams.call(this, e, t);
                  }),
                  (t.parseVarHead = function(e) {
                    p.prototype.parseVarHead.call(this, e),
                      "Identifier" === e.id.type &&
                        this.eat(x.bang) &&
                        (e.definite = !0);
                    var t = this.tsTryParseTypeAnnotation();
                    t &&
                      ((e.id.typeAnnotation = t),
                      this.finishNode(e.id, e.id.type));
                  }),
                  (t.parseAsyncArrowFromCallExpression = function(e, t) {
                    return (
                      this.match(x.colon) &&
                        (e.returnType = this.tsParseTypeAnnotation()),
                      p.prototype.parseAsyncArrowFromCallExpression.call(
                        this,
                        e,
                        t
                      )
                    );
                  }),
                  (t.parseMaybeAssign = function() {
                    for (
                      var t,
                        e,
                        n,
                        a,
                        r = arguments.length,
                        i = new Array(r),
                        o = 0;
                      o < r;
                      o++
                    )
                      i[o] = arguments[o];
                    if (this.match(x.jsxTagStart)) {
                      ee(this.curContext() === k.j_oTag),
                        ee(
                          this.state.context[this.state.context.length - 2] ===
                            k.j_expr
                        );
                      var s = this.state.clone();
                      try {
                        var d;
                        return (d = p.prototype.parseMaybeAssign).call.apply(
                          d,
                          [this].concat(i)
                        );
                      } catch (e) {
                        if (!(e instanceof SyntaxError)) throw e;
                        (this.state = s),
                          ee(this.curContext() === k.j_oTag),
                          this.state.context.pop(),
                          ee(this.curContext() === k.j_expr),
                          this.state.context.pop(),
                          (t = e);
                      }
                    }
                    if (void 0 === t && !this.isRelational("<"))
                      return (e = p.prototype.parseMaybeAssign).call.apply(
                        e,
                        [this].concat(i)
                      );
                    var u = this.state.clone();
                    try {
                      var l;
                      (a = this.tsParseTypeParameters()),
                        "ArrowFunctionExpression" !==
                          (n = (l = p.prototype.parseMaybeAssign).call.apply(
                            l,
                            [this].concat(i)
                          )).type && this.unexpected();
                    } catch (e) {
                      var c;
                      if (!(e instanceof SyntaxError)) throw e;
                      if (t) throw t;
                      return (
                        ee(!this.hasPlugin("jsx")),
                        (this.state = u),
                        (c = p.prototype.parseMaybeAssign).call.apply(
                          c,
                          [this].concat(i)
                        )
                      );
                    }
                    return (
                      a &&
                        0 !== a.params.length &&
                        this.resetStartLocationFromNode(n, a.params[0]),
                      (n.typeParameters = a),
                      n
                    );
                  }),
                  (t.parseMaybeUnary = function(e) {
                    return !this.hasPlugin("jsx") && this.eatRelational("<")
                      ? this.tsParseTypeAssertion()
                      : p.prototype.parseMaybeUnary.call(this, e);
                  }),
                  (t.parseArrow = function(e) {
                    if (this.match(x.colon)) {
                      var t = this.state.clone();
                      try {
                        var n = this.tsParseTypeOrTypePredicateAnnotation(
                          x.colon
                        );
                        this.canInsertSemicolon() && this.unexpected(),
                          this.match(x.arrow) || this.unexpected(),
                          (e.returnType = n);
                      } catch (e) {
                        if (!(e instanceof SyntaxError)) throw e;
                        this.state = t;
                      }
                    }
                    return p.prototype.parseArrow.call(this, e);
                  }),
                  (t.parseAssignableListItemTypes = function(e) {
                    if (this.eat(x.question)) {
                      if ("Identifier" !== e.type)
                        throw this.raise(
                          e.start,
                          "A binding pattern parameter cannot be optional in an implementation signature."
                        );
                      e.optional = !0;
                    }
                    var t = this.tsTryParseTypeAnnotation();
                    return (
                      t && (e.typeAnnotation = t), this.finishNode(e, e.type)
                    );
                  }),
                  (t.toAssignable = function(e, t, n) {
                    switch (e.type) {
                      case "TSTypeCastExpression":
                        return p.prototype.toAssignable.call(
                          this,
                          this.typeCastToParameter(e),
                          t,
                          n
                        );
                      case "TSParameterProperty":
                        return p.prototype.toAssignable.call(this, e, t, n);
                      case "TSAsExpression":
                      case "TSNonNullExpression":
                      case "TSTypeAssertion":
                        return (
                          (e.expression = this.toAssignable(
                            e.expression,
                            t,
                            n
                          )),
                          e
                        );
                      default:
                        return p.prototype.toAssignable.call(this, e, t, n);
                    }
                  }),
                  (t.checkLVal = function(e, t, n, a) {
                    switch (e.type) {
                      case "TSTypeCastExpression":
                        return;
                      case "TSParameterProperty":
                        return void this.checkLVal(
                          e.parameter,
                          t,
                          n,
                          "parameter property"
                        );
                      case "TSAsExpression":
                      case "TSNonNullExpression":
                      case "TSTypeAssertion":
                        return void this.checkLVal(e.expression, t, n, a);
                      default:
                        return void p.prototype.checkLVal.call(
                          this,
                          e,
                          t,
                          n,
                          a
                        );
                    }
                  }),
                  (t.parseBindingAtom = function() {
                    switch (this.state.type) {
                      case x._this:
                        return this.parseIdentifier(!0);
                      default:
                        return p.prototype.parseBindingAtom.call(this);
                    }
                  }),
                  (t.isClassMethod = function() {
                    return (
                      this.isRelational("<") ||
                      p.prototype.isClassMethod.call(this)
                    );
                  }),
                  (t.isClassProperty = function() {
                    return (
                      this.match(x.bang) ||
                      this.match(x.colon) ||
                      p.prototype.isClassProperty.call(this)
                    );
                  }),
                  (t.parseMaybeDefault = function() {
                    for (
                      var e, t = arguments.length, n = new Array(t), a = 0;
                      a < t;
                      a++
                    )
                      n[a] = arguments[a];
                    var r = (e = p.prototype.parseMaybeDefault).call.apply(
                      e,
                      [this].concat(n)
                    );
                    return (
                      "AssignmentPattern" === r.type &&
                        r.typeAnnotation &&
                        r.right.start < r.typeAnnotation.start &&
                        this.raise(
                          r.typeAnnotation.start,
                          "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"
                        ),
                      r
                    );
                  }),
                  (t.readToken = function(e) {
                    return !this.state.inType || (62 !== e && 60 !== e)
                      ? p.prototype.readToken.call(this, e)
                      : this.finishOp(x.relational, 1);
                  }),
                  (t.toAssignableList = function(e, t, n) {
                    for (var a = 0; a < e.length; a++) {
                      var r = e[a];
                      r &&
                        "TSTypeCastExpression" === r.type &&
                        (e[a] = this.typeCastToParameter(r));
                    }
                    return p.prototype.toAssignableList.call(this, e, t, n);
                  }),
                  (t.typeCastToParameter = function(e) {
                    return (
                      (e.expression.typeAnnotation = e.typeAnnotation),
                      this.finishNodeAt(
                        e.expression,
                        e.expression.type,
                        e.typeAnnotation.end,
                        e.typeAnnotation.loc.end
                      )
                    );
                  }),
                  (t.toReferencedList = function(e) {
                    for (var t = 0; t < e.length; t++) {
                      var n = e[t];
                      n &&
                        n._exprListItem &&
                        "TsTypeCastExpression" === n.type &&
                        this.raise(
                          n.start,
                          "Did not expect a type annotation here."
                        );
                    }
                    return e;
                  }),
                  (t.shouldParseArrow = function() {
                    return (
                      this.match(x.colon) ||
                      p.prototype.shouldParseArrow.call(this)
                    );
                  }),
                  (t.shouldParseAsyncArrow = function() {
                    return (
                      this.match(x.colon) ||
                      p.prototype.shouldParseAsyncArrow.call(this)
                    );
                  }),
                  (t.canHaveLeadingDecorator = function() {
                    return (
                      p.prototype.canHaveLeadingDecorator.call(this) ||
                      this.isAbstractClass()
                    );
                  }),
                  (t.jsxParseOpeningElementAfterName = function(e) {
                    var t = this,
                      n = this.tsTryParseAndCatch(function() {
                        return t.tsParseTypeArguments();
                      });
                    return (
                      n && (e.typeParameters = n),
                      p.prototype.jsxParseOpeningElementAfterName.call(this, e)
                    );
                  }),
                  e
                );
              })(e);
            },
          };
        function oe(e, t) {
          var n = Q;
          return (
            e &&
              e.plugins &&
              ((function(e) {
                if (te(e, "decorators")) {
                  if (te(e, "decorators-legacy"))
                    throw new Error(
                      "Cannot use the decorators and decorators-legacy plugin together"
                    );
                  var t = ne(e, "decorators", "decoratorsBeforeExport");
                  if (null == t)
                    throw new Error(
                      "The 'decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean. If you are migrating from Babylon/Babel 6 or want to use the old decorators proposal, you should use the 'decorators-legacy' plugin instead of 'decorators'."
                    );
                  if ("boolean" != typeof t)
                    throw new Error(
                      "'decoratorsBeforeExport' must be a boolean."
                    );
                }
                if (te(e, "flow") && te(e, "typescript"))
                  throw new Error(
                    "Cannot combine flow and typescript plugins."
                  );
                if (
                  te(e, "pipelineOperator") &&
                  !ae.includes(ne(e, "pipelineOperator", "proposal"))
                )
                  throw new Error(
                    "'pipelineOperator' requires 'proposal' option whose value should be one of: " +
                      ae.join(", ")
                  );
              })(e.plugins),
              (n = (function(t) {
                var e = re.filter(function(e) {
                    return te(t, e);
                  }),
                  n = e.join("/"),
                  a = se[n];
                if (!a) {
                  a = Q;
                  for (var r = 0; r < e.length; r++) {
                    var i = e[r];
                    a = ie[i](a);
                  }
                  se[n] = a;
                }
                return a;
              })(e.plugins))),
            new n(e, t)
          );
        }
        var se = {};
        (t.parse = function(e, t) {
          if (!t || "unambiguous" !== t.sourceType) return oe(t, e).parse();
          t = Object.assign({}, t);
          try {
            t.sourceType = "module";
            var n = oe(t, e),
              a = n.parse();
            return n.sawUnambiguousESM || (a.program.sourceType = "script"), a;
          } catch (n) {
            try {
              return (t.sourceType = "script"), oe(t, e).parse();
            } catch (e) {}
            throw n;
          }
        }),
          (t.parseExpression = function(e, t) {
            var n = oe(t, e);
            return (
              n.options.strictMode && (n.state.strict = !0), n.getExpression()
            );
          }),
          (t.tokTypes = x);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.merge = function(e, t) {
            var n = t.placeholderWhitelist,
              a = void 0 === n ? e.placeholderWhitelist : n,
              r = t.placeholderPattern,
              i = void 0 === r ? e.placeholderPattern : r,
              o = t.preserveComments,
              s = void 0 === o ? e.preserveComments : o;
            return {
              parser: Object.assign({}, e.parser, t.parser),
              placeholderWhitelist: a,
              placeholderPattern: i,
              preserveComments: s,
            };
          }),
          (t.validate = function(e) {
            if (null != e && "object" != typeof e)
              throw new Error("Unknown template options.");
            var t = e || {},
              n = t.placeholderWhitelist,
              a = t.placeholderPattern,
              r = t.preserveComments,
              i = (function(e, t) {
                if (null == e) return {};
                var n,
                  a,
                  r = {},
                  i = Object.keys(e);
                for (a = 0; a < i.length; a++)
                  (n = i[a]), 0 <= t.indexOf(n) || (r[n] = e[n]);
                return r;
              })(t, [
                "placeholderWhitelist",
                "placeholderPattern",
                "preserveComments",
              ]);
            if (null != n && !(n instanceof Set))
              throw new Error(
                "'.placeholderWhitelist' must be a Set, null, or undefined"
              );
            if (null != a && !(a instanceof RegExp) && !1 !== a)
              throw new Error(
                "'.placeholderPattern' must be a RegExp, false, null, or undefined"
              );
            if (null != r && "boolean" != typeof r)
              throw new Error(
                "'.preserveComments' must be a boolean, null, or undefined"
              );
            return {
              parser: i,
              placeholderWhitelist: n || void 0,
              placeholderPattern: null == a ? void 0 : a,
              preserveComments: null != r && r,
            };
          }),
          (t.normalizeReplacements = function(e) {
            if (Array.isArray(e))
              return e.reduce(function(e, t, n) {
                return (e["$" + n] = t), e;
              }, {});
            if ("object" == typeof e || null == e) return e || void 0;
            throw new Error(
              "Template replacements must be an array, object, null, or undefined"
            );
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.findPackageData = function(e) {
            return { filepath: e, directories: [], pkg: null, isPackage: !1 };
          }),
          (t.findRelativeConfig = function(e, t, n) {
            return { pkg: null, config: null, ignore: null };
          }),
          (t.findRootConfig = function(e, t, n) {
            return null;
          }),
          (t.loadConfig = function(e, t, n, a) {
            throw new Error(
              "Cannot load " + e + " relative to " + t + " in a browser"
            );
          }),
          (t.resolvePlugin = function(e, t) {
            return null;
          }),
          (t.resolvePreset = function(e, t) {
            return null;
          }),
          (t.loadPlugin = function(e, t) {
            throw new Error(
              "Cannot load plugin " + e + " relative to " + t + " in a browser"
            );
          }),
          (t.loadPreset = function(e, t) {
            throw new Error(
              "Cannot load preset " + e + " relative to " + t + " in a browser"
            );
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0),
          (t.default = function(e, t, n) {
            (this.key = e.name || n),
              (this.manipulateOptions = e.manipulateOptions),
              (this.post = e.post),
              (this.pre = e.pre),
              (this.visitor = e.visitor || {}),
              (this.parserOverride = e.parserOverride),
              (this.generatorOverride = e.generatorOverride),
              (this.options = t);
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.validate = function(e, t) {
            return f({ type: "root", source: e }, t);
          }),
          a(n(90));
        var o = a(n(459)),
          g = n(202);
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var i = {
            cwd: g.assertString,
            root: g.assertString,
            configFile: g.assertConfigFileSearch,
            caller: g.assertCallerMetadata,
            filename: g.assertString,
            filenameRelative: g.assertString,
            code: g.assertBoolean,
            ast: g.assertBoolean,
            envName: g.assertString,
          },
          s = { babelrc: g.assertBoolean, babelrcRoots: g.assertBabelrcSearch },
          d = {
            extends: g.assertString,
            ignore: g.assertIgnoreList,
            only: g.assertIgnoreList,
          },
          u = {
            inputSourceMap: g.assertInputSourceMap,
            presets: g.assertPluginList,
            plugins: g.assertPluginList,
            passPerPreset: g.assertBoolean,
            env: function(e, t) {
              if ("env" === e.parent.type)
                throw new Error(
                  (0, g.msg)(e) + " is not allowed inside of another .env block"
                );
              var n = e.parent,
                a = (0, g.assertObject)(e, t);
              if (a)
                for (var r = Object.keys(a), i = 0; i < r.length; i++) {
                  var o = r[i],
                    s = (0, g.assertObject)((0, g.access)(e, o), a[o]);
                  if (s) f({ type: "env", name: o, parent: n }, s);
                }
              return a;
            },
            overrides: function(e, t) {
              if ("env" === e.parent.type)
                throw new Error(
                  (0, g.msg)(e) + " is not allowed inside an .env block"
                );
              if ("overrides" === e.parent.type)
                throw new Error(
                  (0, g.msg)(e) + " is not allowed inside an .overrides block"
                );
              var n = e.parent,
                a = (0, g.assertArray)(e, t);
              if (a) {
                var r = a.entries(),
                  i = Array.isArray(r),
                  o = 0;
                for (r = i ? r : r[Symbol.iterator](); ; ) {
                  var s;
                  if (i) {
                    if (o >= r.length) break;
                    s = r[o++];
                  } else {
                    if ((o = r.next()).done) break;
                    s = o.value;
                  }
                  var d = s,
                    u = d[0],
                    l = d[1],
                    c = (0, g.access)(e, u),
                    p = (0, g.assertObject)(c, l);
                  if (!p) throw new Error((0, g.msg)(c) + " must be an object");
                  f({ type: "overrides", index: u, parent: n }, p);
                }
              }
              return a;
            },
            test: g.assertConfigApplicableTest,
            include: g.assertConfigApplicableTest,
            exclude: g.assertConfigApplicableTest,
            retainLines: g.assertBoolean,
            comments: g.assertBoolean,
            shouldPrintComment: g.assertFunction,
            compact: g.assertCompact,
            minified: g.assertBoolean,
            auxiliaryCommentBefore: g.assertString,
            auxiliaryCommentAfter: g.assertString,
            sourceType: g.assertSourceType,
            wrapPluginVisitorMethod: g.assertFunction,
            highlightCode: g.assertBoolean,
            sourceMaps: g.assertSourceMaps,
            sourceMap: g.assertSourceMaps,
            sourceFileName: g.assertString,
            sourceRoot: g.assertString,
            getModuleId: g.assertFunction,
            moduleRoot: g.assertString,
            moduleIds: g.assertBoolean,
            moduleId: g.assertString,
            parserOpts: g.assertObject,
            generatorOpts: g.assertObject,
          };
        function f(n, a) {
          var r = (function e(t) {
            return "root" === t.type ? t.source : e(t.parent);
          })(n);
          return (
            (function(e) {
              if (l(e, "sourceMap") && l(e, "sourceMaps"))
                throw new Error(
                  ".sourceMap is an alias for .sourceMaps, cannot use both"
                );
            })(a),
            Object.keys(a).forEach(function(e) {
              var t = { type: "option", name: e, parent: n };
              if ("preset" === r && d[e])
                throw new Error(
                  (0, g.msg)(t) + " is not allowed in preset options"
                );
              if ("arguments" !== r && i[e])
                throw new Error(
                  (0, g.msg)(t) +
                    " is only allowed in root programmatic options"
                );
              if ("arguments" !== r && "configfile" !== r && s[e]) {
                if ("babelrcfile" === r || "extendsfile" === r)
                  throw new Error(
                    (0, g.msg)(t) +
                      ' is not allowed in .babelrc or "extends"ed files, only in root programmatic options, or babel.config.js/config file options'
                  );
                throw new Error(
                  (0, g.msg)(t) +
                    " is only allowed in root programmatic options, or babel.config.js/config file options"
                );
              }
              (u[e] ||
                d[e] ||
                s[e] ||
                i[e] ||
                function(e) {
                  var t = e.name;
                  if (o.default[t]) {
                    var n = o.default[t],
                      a = n.message,
                      r = n.version;
                    throw new ReferenceError(
                      "Using removed Babel " +
                        (void 0 === r ? 5 : r) +
                        " option: " +
                        (0, g.msg)(e) +
                        " - " +
                        a
                    );
                  }
                  var i =
                    "Unknown option: " +
                    (0, g.msg)(e) +
                    ". Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.";
                  throw new ReferenceError(i);
                })(t, a[e]);
            }),
            a
          );
        }
        function l(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }
      },
      function(e, t, n) {
        var a = n(9),
          r = n(38),
          i = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
          o = /^\w*$/;
        e.exports = function(e, t) {
          if (a(e)) return !1;
          var n = typeof e;
          return (
            !(
              "number" != n &&
              "symbol" != n &&
              "boolean" != n &&
              null != e &&
              !r(e)
            ) ||
            o.test(e) ||
            !i.test(e) ||
            (null != t && e in Object(t))
          );
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.all;
          if ("boolean" != typeof n && void 0 !== n)
            throw new Error(".all must be a boolean, or undefined");
          return {
            manipulateOptions: function(e, t) {
              t.plugins.some(function(e) {
                return "typescript" === (Array.isArray(e) ? e[0] : e);
              }) || t.plugins.push(["flow", { all: n }]);
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t = e.node || e;
            i(t) || a().addComment(t, "leading", r);
          });
        var r = "#__PURE__",
          i = function(e) {
            var t = e.leadingComments;
            return (
              !!t &&
              t.some(function(e) {
                return /[@#]__PURE__/.test(e.value);
              })
            );
          };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.addDefault = function(e, t, n) {
            return new r.default(e).addDefault(t, n);
          }),
          (t.addNamed = function(e, t, n, a) {
            return new r.default(e).addNamed(t, n, a);
          }),
          (t.addNamespace = function(e, t, n) {
            return new r.default(e).addNamespace(t, n);
          }),
          (t.addSideEffect = function(e, t, n) {
            return new r.default(e).addSideEffect(t, n);
          }),
          Object.defineProperty(t, "ImportInjector", {
            enumerable: !0,
            get: function() {
              return r.default;
            },
          }),
          Object.defineProperty(t, "isModule", {
            enumerable: !0,
            get: function() {
              return a.default;
            },
          });
        var r = i(n(516)),
          a = i(n(235));
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = s(n(10));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = s(n(236));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = s(n(97));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function d(e, t, n) {
          e = o().cloneNode(e);
          var a = t ? e : o().memberExpression(e, o().identifier("prototype"));
          return o().callExpression(n.addHelper("getPrototypeOf"), [a]);
        }
        function u(e) {
          if (e.node.computed) {
            var t = o().VISITOR_KEYS[e.type],
              n = Array.isArray(t),
              a = 0;
            for (t = n ? t : t[Symbol.iterator](); ; ) {
              var r;
              if (n) {
                if (a >= t.length) break;
                r = t[a++];
              } else {
                if ((a = t.next()).done) break;
                r = a.value;
              }
              var i = r;
              "key" !== i && e.skipKey(i);
            }
          } else e.skip();
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = t.environmentVisitor = void 0);
        var l = {
          Function: function(e) {
            e.isMethod() || e.isArrowFunctionExpression() || e.skip();
          },
          Method: function(e) {
            u(e);
          },
          "ClassProperty|ClassPrivateProperty": function(e) {
            e.node.static || u(e);
          },
        };
        t.environmentVisitor = l;
        var c = a().default.visitors.merge([
            l,
            {
              Super: function(e, t) {
                var n = e.node,
                  a = e.parentPath;
                a.isMemberExpression({ object: n }) && t.handle(a);
              },
            },
          ]),
          p = {
            memoise: function(e, t) {
              var n = e.scope,
                a = e.node,
                r = a.computed,
                i = a.property;
              if (r) {
                var o = n.maybeGenerateMemoised(i);
                o && this.memoiser.set(i, o, t);
              }
            },
            prop: function(e) {
              var t = e.node,
                n = t.computed,
                a = t.property;
              return this.memoiser.has(a)
                ? o().cloneNode(this.memoiser.get(a))
                : n
                  ? o().cloneNode(a)
                  : o().stringLiteral(a.name);
            },
            get: function(e) {
              return o().callExpression(this.file.addHelper("get"), [
                d(this.getObjectRef(), this.isStatic, this.file),
                this.prop(e),
                o().thisExpression(),
              ]);
            },
            set: function(e, t) {
              return o().callExpression(this.file.addHelper("set"), [
                d(this.getObjectRef(), this.isStatic, this.file),
                this.prop(e),
                t,
                o().thisExpression(),
                o().booleanLiteral(e.isInStrictMode()),
              ]);
            },
            call: function(e, t) {
              return (0, i().default)(this.get(e), o().thisExpression(), t);
            },
          },
          g = Object.assign({}, p, {
            prop: function(e) {
              var t = e.node.property;
              return this.memoiser.has(t)
                ? o().cloneNode(this.memoiser.get(t))
                : o().cloneNode(t);
            },
            get: function(e) {
              var t,
                n = this.isStatic,
                a = this.superRef,
                r = e.node.computed,
                i = this.prop(e);
              return (
                (t = n
                  ? a
                    ? o().cloneNode(a)
                    : o().memberExpression(
                        o().identifier("Function"),
                        o().identifier("prototype")
                      )
                  : a
                    ? o().memberExpression(
                        o().cloneNode(a),
                        o().identifier("prototype")
                      )
                    : o().memberExpression(
                        o().identifier("Object"),
                        o().identifier("prototype")
                      )),
                o().memberExpression(t, i, r)
              );
            },
            set: function(e, t) {
              var n = e.node.computed,
                a = this.prop(e);
              return o().assignmentExpression(
                "=",
                o().memberExpression(o().thisExpression(), a, n),
                t
              );
            },
          }),
          f = (function() {
            function e(e) {
              var t = e.methodPath;
              (this.methodPath = t),
                (this.isStatic =
                  t.isClassMethod({ static: !0 }) || t.isObjectMethod()),
                (this.file = e.file),
                (this.superRef = e.superRef),
                (this.isLoose = e.isLoose),
                (this.opts = e);
            }
            var t = e.prototype;
            return (
              (t.getObjectRef = function() {
                return o().cloneNode(
                  this.opts.objectRef || this.opts.getObjectRef()
                );
              }),
              (t.replace = function() {
                var e = this.isLoose ? g : p;
                (0, r().default)(
                  this.methodPath,
                  c,
                  Object.assign(
                    {
                      file: this.file,
                      isStatic: this.isStatic,
                      getObjectRef: this.getObjectRef.bind(this),
                      superRef: this.superRef,
                    },
                    e
                  )
                );
              }),
              e
            );
          })();
        t.default = f;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            return 1 === n.length &&
              a().isSpreadElement(n[0]) &&
              a().isIdentifier(n[0].argument, { name: "arguments" })
              ? a().callExpression(
                  a().memberExpression(e, a().identifier("apply")),
                  [t, n[0].argument]
                )
              : a().callExpression(
                  a().memberExpression(e, a().identifier("call")),
                  [t].concat(n)
                );
          });
      },
      function(e, t, a) {
        "use strict";
        var d = a(532).generate,
          u = a(533).parse,
          p = a(0),
          s = a(534),
          l = a(537),
          n = a(539),
          r = a(540),
          g = p().addRange(0, 1114111),
          f = p().addRange(0, 65535),
          h = g.clone().remove(10, 13, 8232, 8233),
          R = h.clone().intersection(f),
          y = function(e, t, n) {
            return t
              ? n
                ? r.UNICODE_IGNORE_CASE.get(e)
                : r.UNICODE.get(e)
              : r.REGULAR.get(e);
          },
          c = function(t, n) {
            var e = n ? t + "/" + n : "Binary_Property/" + t;
            try {
              return a(541)("./" + e + ".js");
            } catch (e) {
              throw new Error(
                "Failed to recognize value `" +
                  n +
                  "` for property `" +
                  t +
                  "`."
              );
            }
          },
          m = function(e, t) {
            var n,
              a = e.split("="),
              r = a[0];
            if (1 == a.length)
              n = (function(e) {
                try {
                  var t = l("General_Category", e);
                  return c("General_Category", t);
                } catch (e) {}
                var n = s(e);
                return c(n);
              })(r);
            else {
              var i = s(r),
                o = l(i, a[1]);
              n = c(i, o);
            }
            return t ? g.clone().remove(n) : n.clone();
          };
        p.prototype.iuAddRange = function(e, t) {
          do {
            var n = b(e);
            n && this.add(n);
          } while (++e <= t);
          return this;
        };
        var v = function(e, t) {
            var n = u(t, x.useUnicodeFlag ? "u" : "");
            switch (n.type) {
              case "characterClass":
              case "group":
              case "value":
                break;
              default:
                n = i(n, t);
            }
            Object.assign(e, n);
          },
          i = function(e, t) {
            return {
              type: "group",
              behavior: "ignore",
              body: [e],
              raw: "(?:" + t + ")",
            };
          },
          b = function(e) {
            return n.get(e) || !1;
          },
          E = function(e, t) {
            delete e.name, (e.matchIndex = t);
          },
          x = { ignoreCase: !1, unicode: !1, dotAll: !1, useUnicodeFlag: !1 };
        e.exports = function(e, t, n) {
          var a = {
            unicodePropertyEscape: n && n.unicodePropertyEscape,
            namedGroups: n && n.namedGroup,
          };
          (x.ignoreCase = t && t.includes("i")),
            (x.unicode = t && t.includes("u"));
          var r = n && n.dotAllFlag;
          (x.dotAll = r && t && t.includes("s")),
            (x.useUnicodeFlag = n && n.useUnicodeFlag);
          var i = { hasUnicodeFlag: x.useUnicodeFlag, bmpOnly: !x.unicode },
            o = {
              onNamedGroup: n && n.onNamedGroup,
              lastIndex: 0,
              names: Object.create(null),
              unmatchedReferences: Object.create(null),
            },
            s = u(e, t, a);
          return (
            (function t(e, n, a) {
              switch (e.type) {
                case "dot":
                  v(
                    e,
                    ((c = x.unicode),
                    x.dotAll ? (c ? g : f) : c ? h : R).toString(n)
                  );
                  break;
                case "characterClass":
                  e = (function(e, t) {
                    var n = p(),
                      a = e.body,
                      r = Array.isArray(a),
                      i = 0;
                    for (a = r ? a : a[Symbol.iterator](); ; ) {
                      var o;
                      if (r) {
                        if (i >= a.length) break;
                        o = a[i++];
                      } else {
                        if ((i = a.next()).done) break;
                        o = i.value;
                      }
                      var s = o;
                      switch (s.type) {
                        case "value":
                          if (
                            (n.add(s.codePoint),
                            x.ignoreCase && x.unicode && !x.useUnicodeFlag)
                          ) {
                            var d = b(s.codePoint);
                            d && n.add(d);
                          }
                          break;
                        case "characterClassRange":
                          var u = s.min.codePoint,
                            l = s.max.codePoint;
                          n.addRange(u, l),
                            x.ignoreCase &&
                              x.unicode &&
                              !x.useUnicodeFlag &&
                              n.iuAddRange(u, l);
                          break;
                        case "characterClassEscape":
                          n.add(y(s.value, x.unicode, x.ignoreCase));
                          break;
                        case "unicodePropertyEscape":
                          n.add(m(s.value, s.negative));
                          break;
                        default:
                          throw new Error("Unknown term type: " + s.type);
                      }
                    }
                    return (
                      e.negative && (n = (x.unicode ? g : f).clone().remove(n)),
                      v(e, n.toString(t)),
                      e
                    );
                  })(e, n);
                  break;
                case "unicodePropertyEscape":
                  v(e, m(e.value, e.negative).toString(n));
                  break;
                case "characterClassEscape":
                  v(e, y(e.value, x.unicode, x.ignoreCase).toString(n));
                  break;
                case "group":
                  if ((a.lastIndex++, e.name)) {
                    var r = e.name.value;
                    if (a.names[r])
                      throw new Error(
                        "Multiple groups with the same name (" +
                          r +
                          ") are not allowed."
                      );
                    var i = a.lastIndex;
                    delete e.name,
                      (a.names[r] = i),
                      a.onNamedGroup && a.onNamedGroup.call(null, r, i),
                      a.unmatchedReferences[r] &&
                        (a.unmatchedReferences[r].forEach(function(e) {
                          E(e, i);
                        }),
                        delete a.unmatchedReferences[r]);
                  }
                case "alternative":
                case "disjunction":
                case "quantifier":
                  e.body = e.body.map(function(e) {
                    return t(e, n, a);
                  });
                  break;
                case "value":
                  var o = e.codePoint,
                    s = p(o);
                  if (x.ignoreCase && x.unicode && !x.useUnicodeFlag) {
                    var d = b(o);
                    d && s.add(d);
                  }
                  v(e, s.toString(n));
                  break;
                case "reference":
                  if (e.name) {
                    var u = e.name.value,
                      l = a.names[u];
                    if (l) {
                      E(e, l);
                      break;
                    }
                    a.unmatchedReferences[u] || (a.unmatchedReferences[u] = []),
                      a.unmatchedReferences[u].push(e);
                  }
                  break;
                case "anchor":
                case "empty":
                case "group":
                  break;
                default:
                  throw new Error("Unknown term type: " + e.type);
              }
              var c;
              return e;
            })(s, i, o),
            (function(e) {
              var t = Object.keys(e.unmatchedReferences);
              if (0 < t.length) throw new Error("Unknown group names: " + t);
            })(o),
            d(s)
          );
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function i() {
          var e = r()(["EXPORTS.NAME = VALUE"]);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function O() {
          var e = r()([
            "\n    var STORAGE, SET = false;\n    Object.defineProperty(EXPORTS, NAME, {\n      get: function(){\n        if (SET === false) {\n          throw new Error(GET_ERROR);\n        }\n        return STORAGE;\n      },\n      set: function(SETTER_PARAM){\n        if (SET) {\n          throw new Error(SET_ERROR);\n        }\n        SET = true;\n        STORAGE = SETTER_PARAM;\n      },\n      enumerable: true,\n    });\n  ",
          ]);
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        function m() {
          var e = r()([
            "\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          ",
          ]);
          return (
            (m = function() {
              return e;
            }),
            e
          );
        }
        function v() {
          var e = r()([
            '\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === "default" || key === "__esModule") return;\n          VERIFY_NAME_LIST;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    ',
          ]);
          return (
            (v = function() {
              return e;
            }),
            e
          );
        }
        function b() {
          var e = r()([
            '\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === "default" || key === "__esModule") return;\n          VERIFY_NAME_LIST;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ',
          ]);
          return (
            (b = function() {
              return e;
            }),
            e
          );
        }
        function R() {
          var e = r()([
            '\n        Object.defineProperty(EXPORTS, "__esModule", {\n          value: true,\n        });\n      ',
          ]);
          return (
            (R = function() {
              return e;
            }),
            e
          );
        }
        function y() {
          var e = r()(["\n        EXPORTS.__esModule = true;\n      "]);
          return (
            (y = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = r()([
            '\n      Object.defineProperty(EXPORTS, "EXPORT_NAME", {\n        enumerable: true,\n        get: function() {\n          return NAMESPACE.IMPORT_NAME;\n        },\n      });\n    ',
          ]);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = r()(["EXPORTS.EXPORT_NAME = NAMESPACE.IMPORT_NAME;"]);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function E() {
          var e = r()(["EXPORTS.NAME = NAMESPACE;"]);
          return (
            (E = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = r()([
            '\n            Object.defineProperty(EXPORTS, "NAME", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ',
          ]);
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        function A() {
          var e = r()(["var NAME = SOURCE;"]);
          return (
            (A = function() {
              return e;
            }),
            e
          );
        }
        function S() {
          var e = u(n(15));
          return (
            (S = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e = d(n(4));
          return (
            (F = function() {
              return e;
            }),
            e
          );
        }
        function k() {
          var e = u(n(24));
          return (
            (k = function() {
              return e;
            }),
            e
          );
        }
        function j() {
          var e = u(n(934));
          return (
            (j = function() {
              return e;
            }),
            e
          );
        }
        function _() {
          var e = n(95);
          return (
            (_ = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.rewriteModuleStatementsAndPrepareHeader = function(e, t) {
            var n = t.exportName,
              a = t.strict,
              r = t.allowTopLevelThis,
              i = t.strictMode,
              o = t.loose,
              s = t.noInterop,
              d = t.lazy,
              u = t.throwOnUninitializedRead,
              l = t.esNamespaceOnly;
            (0, S().default)(
              (0, _().isModule)(e),
              "Cannot process module statements in a script"
            ),
              (e.node.sourceType = "script");
            var c = (0, C.default)(e, n, {
              noInterop: s,
              loose: o,
              lazy: d,
              esNamespaceOnly: l,
            });
            (r || (0, T.default)(e), (0, P.default)(e, c), !1 !== i) &&
              (e.node.directives.some(function(e) {
                return "use strict" === e.value.value;
              }) ||
                e.unshiftContainer(
                  "directives",
                  F().directive(F().directiveLiteral("use strict"))
                ));
            var p,
              g,
              f = [];
            (0, C.hasExports)(c) &&
              !a &&
              f.push(
                ((p = c),
                void 0 === (g = o) && (g = !1),
                (g ? k().default.statement(y()) : k().default.statement(R()))({
                  EXPORTS: p.exportName,
                }))
              );
            var h = (function(e, t) {
              var n = Object.create(null),
                a = t.local.values(),
                r = Array.isArray(a),
                i = 0;
              for (a = r ? a : a[Symbol.iterator](); ; ) {
                var o;
                if (r) {
                  if (i >= a.length) break;
                  o = a[i++];
                } else {
                  if ((i = a.next()).done) break;
                  o = i.value;
                }
                var s = o.names,
                  d = Array.isArray(s),
                  u = 0;
                for (s = d ? s : s[Symbol.iterator](); ; ) {
                  var l;
                  if (d) {
                    if (u >= s.length) break;
                    l = s[u++];
                  } else {
                    if ((u = s.next()).done) break;
                    l = u.value;
                  }
                  n[l] = !0;
                }
              }
              var c = !1,
                p = t.source.values(),
                g = Array.isArray(p),
                f = 0;
              for (p = g ? p : p[Symbol.iterator](); ; ) {
                var h;
                if (g) {
                  if (f >= p.length) break;
                  h = p[f++];
                } else {
                  if ((f = p.next()).done) break;
                  h = f.value;
                }
                var R = h,
                  y = R.reexports.keys(),
                  m = Array.isArray(y),
                  v = 0;
                for (y = m ? y : y[Symbol.iterator](); ; ) {
                  var b;
                  if (m) {
                    if (v >= y.length) break;
                    b = y[v++];
                  } else {
                    if ((v = y.next()).done) break;
                    b = v.value;
                  }
                  n[b] = !0;
                }
                var E = R.reexportNamespace,
                  x = Array.isArray(E),
                  A = 0;
                for (E = x ? E : E[Symbol.iterator](); ; ) {
                  var S;
                  if (x) {
                    if (A >= E.length) break;
                    S = E[A++];
                  } else {
                    if ((A = E.next()).done) break;
                    S = A.value;
                  }
                  n[S] = !0;
                }
                c = c || R.reexportAll;
              }
              if (!c || 0 === Object.keys(n).length) return null;
              var _ = e.scope.generateUidIdentifier("exportNames");
              return (
                delete n.default,
                {
                  name: _.name,
                  statement: F().variableDeclaration("var", [
                    F().variableDeclarator(_, F().valueToNode(n)),
                  ]),
                }
              );
            })(e, c);
            return (
              h && ((c.exportNameListName = h.name), f.push(h.statement)),
              f.push.apply(
                f,
                (function(t, n, e, a) {
                  void 0 === e && (e = !1), void 0 === a && (a = !1);
                  var r = [],
                    i = [],
                    o = n.local,
                    s = Array.isArray(o),
                    d = 0;
                  for (o = s ? o : o[Symbol.iterator](); ; ) {
                    var u;
                    if (s) {
                      if (d >= o.length) break;
                      u = o[d++];
                    } else {
                      if ((d = o.next()).done) break;
                      u = d.value;
                    }
                    var l = u,
                      c = l[0];
                    "import" === (R = l[1]).kind ||
                      ("hoisted" === R.kind
                        ? r.push(I(n, R.names, F().identifier(c)))
                        : i.push.apply(i, R.names));
                  }
                  var p = n.source.values(),
                    g = Array.isArray(p),
                    f = 0;
                  for (p = g ? p : p[Symbol.iterator](); ; ) {
                    var h;
                    if (g) {
                      if (f >= p.length) break;
                      h = p[f++];
                    } else {
                      if ((f = p.next()).done) break;
                      h = f.value;
                    }
                    var R = h;
                    e || r.push.apply(r, M(n, R, e));
                    var y = R.reexportNamespace,
                      m = Array.isArray(y),
                      v = 0;
                    for (y = m ? y : y[Symbol.iterator](); ; ) {
                      var b;
                      if (m) {
                        if (v >= y.length) break;
                        b = y[v++];
                      } else {
                        if ((v = y.next()).done) break;
                        b = v.value;
                      }
                      var E = b;
                      i.push(E);
                    }
                  }
                  if (a)
                    for (
                      var x = t.scope.generateUidIdentifier("v"), A = 0;
                      A < i.length;
                      A++
                    ) {
                      var S = i[A];
                      r.push.apply(
                        r,
                        ((_ = n),
                        (T = S),
                        (P = x),
                        (C = t.scope),
                        void 0,
                        (w = C.generateUidIdentifier(T + "_storage")),
                        (D = C.generateUidIdentifier(T + "_set")),
                        k().default.statements(O())({
                          STORAGE: w,
                          SET: D,
                          SETTER_PARAM: P,
                          EXPORTS: _.exportName,
                          NAME: F().stringLiteral(T),
                          GET_ERROR: F().stringLiteral(
                            "Cannot access uninitialized export " + T
                          ),
                          SET_ERROR: F().stringLiteral(
                            "Cannot reassign exported value " + T
                          ),
                        }))
                      );
                    }
                  else
                    r.push.apply(
                      r,
                      (0, j().default)(i, 100).map(function(e) {
                        return I(n, e, t.scope.buildUndefinedNode());
                      })
                    );
                  var _, T, P, C, w, D;
                  return r;
                })(e, c, o, u)
              ),
              { meta: c, headers: f }
            );
          }),
          (exports.ensureStatementsHoisted = function(e) {
            e.forEach(function(e) {
              e._blockHoist = 3;
            });
          }),
          (exports.wrapInterop = function(e, t, n) {
            if ("none" === n) return null;
            var a;
            if ("default" === n) a = "interopRequireDefault";
            else {
              if ("namespace" !== n) throw new Error("Unknown interop: " + n);
              a = "interopRequireWildcard";
            }
            return F().callExpression(e.hub.addHelper(a), [t]);
          }),
          (exports.buildNamespaceInitStatements = function(e, t, n) {
            void 0 === n && (n = !1);
            var a,
              r,
              i = [],
              o = F().identifier(t.name);
            t.lazy && (o = F().callExpression(o, []));
            var s = t.importsNamespace,
              d = Array.isArray(s),
              u = 0;
            for (s = d ? s : s[Symbol.iterator](); ; ) {
              var l;
              if (d) {
                if (u >= s.length) break;
                l = s[u++];
              } else {
                if ((u = s.next()).done) break;
                l = u.value;
              }
              var c = l;
              c !== t.name &&
                i.push(
                  k().default.statement(A())({
                    NAME: c,
                    SOURCE: F().cloneNode(o),
                  })
                );
            }
            n && i.push.apply(i, M(e, t, n));
            var p = t.reexportNamespace,
              g = Array.isArray(p),
              f = 0;
            for (p = g ? p : p[Symbol.iterator](); ; ) {
              var h;
              if (g) {
                if (f >= p.length) break;
                h = p[f++];
              } else {
                if ((f = p.next()).done) break;
                h = f.value;
              }
              var R = h;
              i.push(
                (t.lazy
                  ? k().default.statement(x())
                  : k().default.statement(E()))({
                  EXPORTS: e.exportName,
                  NAME: R,
                  NAMESPACE: F().cloneNode(o),
                })
              );
            }
            if (t.reexportAll) {
              var y = ((a = e),
              (r = F().cloneNode(o)),
              (n ? k().default.statement(b()) : k().default.statement(v()))({
                NAMESPACE: r,
                EXPORTS: a.exportName,
                VERIFY_NAME_LIST: a.exportNameListName
                  ? k().default(m())({ EXPORTS_LIST: a.exportNameListName })
                  : null,
              }));
              (y.loc = t.reexportAll.loc), i.push(y);
            }
            return i;
          }),
          Object.defineProperty(exports, "isModule", {
            enumerable: !0,
            get: function() {
              return _().isModule;
            },
          }),
          Object.defineProperty(exports, "hasExports", {
            enumerable: !0,
            get: function() {
              return C.hasExports;
            },
          }),
          Object.defineProperty(exports, "isSideEffectImport", {
            enumerable: !0,
            get: function() {
              return C.isSideEffectImport;
            },
          });
        var T = u(n(936)),
          P = u(n(937)),
          C = d(n(938));
        function d(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function u(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var M = function(a, e, t) {
          var r = e.lazy
              ? F().callExpression(F().identifier(e.name), [])
              : F().identifier(e.name),
            i = t ? k().default.statement(s()) : k().default(o());
          return Array.from(e.reexports, function(e) {
            var t = e[0],
              n = e[1];
            return i({
              EXPORTS: a.exportName,
              EXPORT_NAME: t,
              NAMESPACE: F().cloneNode(r),
              IMPORT_NAME: n,
            });
          });
        };
        function I(n, e, t) {
          return F().expressionStatement(
            e.reduce(function(e, t) {
              return k().default.expression(
                i()
              )({ EXPORTS: n.exportName, NAME: t, VALUE: e });
            }, t)
          );
        }
      },
      function(e, t, n) {
        "use strict";
        function c() {
          var e,
            t = (e = n(75)) && e.__esModule ? e : { default: e };
          return (
            (c = function() {
              return t;
            }),
            t
          );
        }
        function p() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(d) {
            var e = {
              JSXNamespacedName: function(e) {
                if (d.throwIfNamespace)
                  throw e.buildCodeFrameError(
                    "Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can turn on the 'throwIfNamespace' flag to bypass this warning."
                  );
              },
            };
            return (
              (e.JSXElement = {
                exit: function(e, t) {
                  var n = (function(e, t) {
                    if (!d.filter || d.filter(e.node, t)) {
                      var n = e.get("openingElement");
                      n.parent.children = p().react.buildChildren(n.parent);
                      var a,
                        r = (function e(t, n) {
                          if (p().isJSXIdentifier(t)) {
                            if ("this" === t.name && p().isReferenced(t, n))
                              return p().thisExpression();
                            if (
                              !c().default.keyword.isIdentifierNameES6(t.name)
                            )
                              return p().stringLiteral(t.name);
                            t.type = "Identifier";
                          } else {
                            if (p().isJSXMemberExpression(t))
                              return p().memberExpression(
                                e(t.object, t),
                                e(t.property, t)
                              );
                            if (p().isJSXNamespacedName(t))
                              return p().stringLiteral(
                                t.namespace.name + ":" + t.name.name
                              );
                          }
                          return t;
                        })(n.node.name, n.node),
                        i = [];
                      p().isIdentifier(r)
                        ? (a = r.name)
                        : p().isLiteral(r) && (a = r.value);
                      var o = { tagExpr: r, tagName: a, args: i };
                      d.pre && d.pre(o, t);
                      var s = n.node.attributes;
                      return (
                        (s = s.length
                          ? (function(e, t) {
                              var n,
                                a,
                                r,
                                i = [],
                                o = [],
                                s = t.opts.useBuiltIns || !1;
                              if ("boolean" != typeof s)
                                throw new Error(
                                  "transform-react-jsx currently only accepts a boolean option for useBuiltIns (defaults to false)"
                                );
                              for (; e.length; ) {
                                var d = e.shift();
                                p().isJSXSpreadAttribute(d)
                                  ? ((i = l(i, o)), o.push(d.argument))
                                  : i.push(
                                      ((r = void 0),
                                      (n =
                                        (a = d).value ||
                                        p().booleanLiteral(!0)),
                                      (r = p().isJSXExpressionContainer(n)
                                        ? n.expression
                                        : n),
                                      p().isStringLiteral(r) &&
                                        !p().isJSXExpressionContainer(
                                          a.value
                                        ) &&
                                        ((r.value = r.value.replace(
                                          /\n\s+/g,
                                          " "
                                        )),
                                        r.extra &&
                                          r.extra.raw &&
                                          delete r.extra.raw),
                                      p().isJSXNamespacedName(a.name)
                                        ? (a.name = p().stringLiteral(
                                            a.name.namespace.name +
                                              ":" +
                                              a.name.name.name
                                          ))
                                        : c().default.keyword.isIdentifierNameES6(
                                            a.name.name
                                          )
                                          ? (a.name.type = "Identifier")
                                          : (a.name = p().stringLiteral(
                                              a.name.name
                                            )),
                                      p().inherits(
                                        p().objectProperty(a.name, r),
                                        a
                                      ))
                                    );
                              }
                              if ((l(i, o), 1 === o.length)) e = o[0];
                              else {
                                p().isObjectExpression(o[0]) ||
                                  o.unshift(p().objectExpression([]));
                                var u = s
                                  ? p().memberExpression(
                                      p().identifier("Object"),
                                      p().identifier("assign")
                                    )
                                  : t.addHelper("extends");
                                e = p().callExpression(u, o);
                              }
                              return e;
                            })(s, t)
                          : p().nullLiteral()),
                        i.push.apply(i, [s].concat(e.node.children)),
                        d.post && d.post(o, t),
                        o.call || p().callExpression(o.callee, i)
                      );
                    }
                  })(e, t);
                  n && e.replaceWith(p().inherits(n, e.node));
                },
              }),
              (e.JSXFragment = {
                exit: function(e, t) {
                  if (d.compat)
                    throw e.buildCodeFrameError(
                      "Fragment tags are only supported in React 16 and up."
                    );
                  var n = (function(e, t) {
                    if (!d.filter || d.filter(e.node, t)) {
                      var n = e.get("openingElement");
                      n.parent.children = p().react.buildChildren(n.parent);
                      var a = [],
                        r = {
                          tagExpr: t.get("jsxFragIdentifier")(),
                          tagName: null,
                          args: a,
                        };
                      return (
                        d.pre && d.pre(r, t),
                        a.push.apply(
                          a,
                          [p().nullLiteral()].concat(e.node.children)
                        ),
                        d.post && d.post(r, t),
                        t.set("usedFragment", !0),
                        r.call || p().callExpression(r.callee, a)
                      );
                    }
                  })(e, t);
                  n && e.replaceWith(p().inherits(n, e.node));
                },
              }),
              e
            );
            function l(e, t) {
              return e.length ? (t.push(p().objectExpression(e)), []) : e;
            }
          });
      },
      function(d, e, u) {
        (function(e) {
          var s =
            (e.versions && e.versions.node && e.versions.node.split(".")) || [];
          function a(e) {
            for (
              var t = e.split(" "),
                n = 1 < t.length ? t[0] : "=",
                a = (1 < t.length ? t[1] : t[0]).split("."),
                r = 0;
              r < 3;
              ++r
            ) {
              var i = Number(s[r] || 0),
                o = Number(a[r] || 0);
              if (i !== o) return "<" === n ? i < o : ">=" === n && o <= i;
            }
            return ">=" === n;
          }
          function n(e) {
            var t = e.split(/ ?&& ?/);
            if (0 === t.length) return !1;
            for (var n = 0; n < t.length; ++n) if (!a(t[n])) return !1;
            return !0;
          }
          function t(e) {
            if ("boolean" == typeof e) return e;
            if (e && "object" == typeof e) {
              for (var t = 0; t < e.length; ++t) if (n(e[t])) return !0;
              return !1;
            }
            return n(e);
          }
          var r = u(968),
            i = {};
          for (var o in r)
            Object.prototype.hasOwnProperty.call(r, o) && (i[o] = t(r[o]));
          d.exports = i;
        }.call(this, u(7)));
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var o = n(131),
          a = n(121),
          s = n.n(a),
          r = n(119),
          d = n.n(r),
          i = n(111),
          u = n.n(i),
          l = n(112),
          c = n.n(l),
          p = n(114),
          g = n.n(p),
          f = n(126),
          h = n.n(f),
          R = n(128),
          y = n.n(R),
          m = n(117),
          v = n.n(m),
          b = n(115),
          E = n.n(b),
          x = n(118),
          A = n.n(x),
          S = n(130),
          _ = n.n(S),
          T = n(133),
          P = n.n(T),
          C = n(129),
          w = n.n(C),
          D = n(127),
          O = n.n(D),
          F = n(116),
          k = n.n(F),
          j = n(113),
          M = n.n(j),
          I = n(132),
          N = n.n(I),
          B = n(123),
          L = n(124),
          U = n.n(L),
          V = n(122),
          W = n.n(V),
          G = n(125),
          K = n.n(G),
          H = n(120),
          q = n.n(H),
          Y = n(135),
          J = n.n(Y);
        t.default = function(e, t) {
          var n = !1,
            a = "commonjs",
            r = !1;
          void 0 !== t &&
            (void 0 !== t.loose && (n = t.loose),
            void 0 !== t.modules && (a = t.modules),
            void 0 !== t.spec && (r = t.spec));
          var i = { loose: n };
          return {
            plugins: [
              [o.default, { loose: n, spec: r }],
              s.a,
              d.a,
              [u.a, { spec: r }],
              c.a,
              [g.a, i],
              h.a,
              y.a,
              v.a,
              [E.a, i],
              [A.a, i],
              _.a,
              P.a,
              [w.a, i],
              [O.a, i],
              [k.a, i],
              M.a,
              N.a,
              q.a,
              ("commonjs" === a || "cjs" === a) && [B.default, i],
              "systemjs" === a && [U.a, i],
              "amd" === a && [W.a, i],
              "umd" === a && [K.a, i],
              [J.a, { async: !1, asyncGenerators: !1 }],
            ].filter(Boolean),
          };
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("dynamicImport");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("importMeta");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function g() {
          var e = r()([
            "\n        Object.defineProperty(OBJ, KEY, {\n          value: VALUE,\n          enumerable: false,\n          configurable: false,\n          writable: true\n        });\n      ",
          ]);
          return (
            (g = function() {
              return e;
            }),
            e
          );
        }
        function f() {
          var e = r()(["const PRIVATE_CLASS_ID = Object.create(null);"]);
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        function h() {
          var e = r()([
            "\n      Object.defineProperty(REF, PROP, {\n        // configurable is false by default\n        // enumerable is false by default\n        writable: true,\n        value: VALUE\n      });\n    ",
          ]);
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        function R() {
          var e = r()(["var PROP = HELPER(NAME);"]);
          return (
            (R = function() {
              return e;
            }),
            e
          );
        }
        function y() {
          var e = r()([
            "\n        MAP.set(REF, {\n          // configurable is always false for private elements\n          // enumerable is always false for private elements\n          writable: true,\n          value: VALUE\n        });\n      ",
          ]);
          return (
            (y = function() {
              return e;
            }),
            e
          );
        }
        function m() {
          var e = r()(["var MAP = new WeakMap();"]);
          return (
            (m = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = r()(["BASE(RECEIVER, CLASS).PRIVATE_ID"]);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = r()(["BASE(REF, PROP)[PROP]"]);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = n(2);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function X() {
          var e = d(n(23));
          return (
            (X = function() {
              return e;
            }),
            e
          );
        }
        function v() {
          var e = d(n(220));
          return (
            (v = function() {
              return e;
            }),
            e
          );
        }
        function z() {
          var e = n(3);
          return (
            (z = function() {
              return e;
            }),
            e
          );
        }
        function b() {
          var e = n(96);
          return (
            (b = function() {
              return e;
            }),
            e
          );
        }
        function E() {
          var e = d(n(236));
          return (
            (E = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = d(n(97));
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        function d(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = void 0);
        var u = (0, s().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.loose,
            G = z().traverse.visitors.merge([
              {
                Super: function(e) {
                  var t = e.node,
                    n = e.parentPath;
                  n.isCallExpression({ callee: t }) && this.push(n);
                },
              },
              b().environmentVisitor,
            ]),
            K = {
              "TSTypeAnnotation|TypeAnnotation": function(e) {
                e.skip();
              },
              ReferencedIdentifier: function(e) {
                this.scope.hasOwnBinding(e.node.name) &&
                  (this.scope.rename(e.node.name), e.skip());
              },
            },
            H = z().traverse.visitors.merge([
              {
                ReferencedIdentifier: function(e) {
                  if (
                    this.classBinding &&
                    this.classBinding === e.scope.getBinding(e.node.name)
                  ) {
                    var t = this.file.addHelper("classNameTDZError"),
                      n = z().types.callExpression(t, [
                        z().types.stringLiteral(e.node.name),
                      ]);
                    e.replaceWith(z().types.sequenceExpression([n, e.node])),
                      e.skip();
                  }
                },
              },
              b().environmentVisitor,
            ]),
            c = {
              PrivateName: function(e) {
                var t = this.name,
                  n = e.node,
                  a = e.parentPath;
                a.isMemberExpression({ property: n }) &&
                  n.id.name === t &&
                  this.handle(a);
              },
              Class: function(e) {
                var t = this.name,
                  n = e.get("body.body"),
                  a = Array.isArray(n),
                  r = 0;
                for (n = a ? n : n[Symbol.iterator](); ; ) {
                  var i;
                  if (a) {
                    if (r >= n.length) break;
                    i = n[r++];
                  } else {
                    if ((r = n.next()).done) break;
                    i = r.value;
                  }
                  var o = i;
                  if (o.isClassPrivateProperty() && o.node.key.id.name === t) {
                    e.traverse(s, this), e.skip();
                    break;
                  }
                }
              },
            },
            s = z().traverse.visitors.merge([
              { PrivateName: c.PrivateName },
              b().environmentVisitor,
            ]),
            d = {
              memoise: function(e, t) {
                var n = e.scope,
                  a = e.node.object,
                  r = n.maybeGenerateMemoised(a);
                r && this.memoiser.set(a, r, t);
              },
              receiver: function(e) {
                var t = e.node.object;
                return this.memoiser.has(t)
                  ? z().types.cloneNode(this.memoiser.get(t))
                  : z().types.cloneNode(t);
              },
              get: function(e) {
                var t = this.map,
                  n = this.file;
                return z().types.callExpression(
                  n.addHelper("classPrivateFieldGet"),
                  [this.receiver(e), z().types.cloneNode(t)]
                );
              },
              set: function(e, t) {
                var n = this.map,
                  a = this.file;
                return z().types.callExpression(
                  a.addHelper("classPrivateFieldSet"),
                  [this.receiver(e), z().types.cloneNode(n), t]
                );
              },
              call: function(e, t) {
                return (
                  this.memoise(e, 1),
                  (0, x().default)(this.get(e), this.receiver(e), t)
                );
              },
            },
            u = {
              handle: function(e) {
                var t = this.prop,
                  n = this.file,
                  a = e.node.object;
                e.replaceWith(
                  z().template.expression(o())({
                    BASE: n.addHelper("classPrivateFieldLooseBase"),
                    REF: a,
                    PROP: t,
                  })
                );
              },
            },
            p = Object.assign({}, d, {
              get: function(e) {
                var t = this.file,
                  n = this.name,
                  a = this.privateClassId,
                  r = this.classRef;
                return z().types.callExpression(
                  t.addHelper("classStaticPrivateFieldSpecGet"),
                  [this.receiver(e), r, a, z().types.stringLiteral(n)]
                );
              },
              set: function(e, t) {
                var n = this.file,
                  a = this.name,
                  r = this.privateClassId,
                  i = this.classRef;
                return z().types.callExpression(
                  n.addHelper("classStaticPrivateFieldSpecSet"),
                  [this.receiver(e), i, r, z().types.stringLiteral(a), t]
                );
              },
              call: function(e, t) {
                return (
                  this.memoise(e, 1),
                  (0, x().default)(this.get(e), this.receiver(e), t)
                );
              },
            }),
            l = {
              handle: function(e) {
                var t = this.file,
                  n = this.privateId,
                  a = this.classRef;
                e.replaceWith(
                  z().template.expression(i())({
                    BASE: t.addHelper("classStaticPrivateFieldLooseBase"),
                    RECEIVER: e.node.object,
                    CLASS: a,
                    PRIVATE_ID: n,
                  })
                );
              },
            },
            q = n
              ? function(e, t) {
                  var n = t.scope,
                    a = t.node,
                    r = a.key,
                    i = a.value,
                    o = a.computed;
                  return z().types.expressionStatement(
                    z().types.assignmentExpression(
                      "=",
                      z().types.memberExpression(
                        e,
                        r,
                        o || z().types.isLiteral(r)
                      ),
                      i || n.buildUndefinedNode()
                    )
                  );
                }
              : function(e, t, n) {
                  var a = t.scope,
                    r = t.node,
                    i = r.key,
                    o = r.value,
                    s = r.computed;
                  return z().types.expressionStatement(
                    z().types.callExpression(n.addHelper("defineProperty"), [
                      e,
                      s || z().types.isLiteral(i)
                        ? i
                        : z().types.stringLiteral(i.name),
                      o || a.buildUndefinedNode(),
                    ])
                  );
                },
            Y = n
              ? function(e, t, n, a) {
                  var r = t.parentPath,
                    i = t.scope,
                    o = t.node.key.id.name,
                    s = i.generateUidIdentifier(o);
                  return (
                    r.traverse(
                      c,
                      Object.assign({ name: o, prop: s, file: a }, u)
                    ),
                    n.push(
                      z().template.statement(R())({
                        PROP: s,
                        HELPER: a.addHelper("classPrivateFieldLooseKey"),
                        NAME: z().types.stringLiteral(o),
                      })
                    ),
                    function() {
                      return z().template.statement(h())({
                        REF: e,
                        PROP: s,
                        VALUE: t.node.value || i.buildUndefinedNode(),
                      });
                    }
                  );
                }
              : function(e, t, n, a) {
                  var r = t.parentPath,
                    i = t.scope,
                    o = t.node.key.id.name,
                    s = i.generateUidIdentifier(o);
                  return (
                    (0, E().default)(
                      r,
                      c,
                      Object.assign({ name: o, map: s, file: a }, d)
                    ),
                    n.push(z().template.statement(m())({ MAP: s })),
                    function() {
                      return z().template.statement(y())({
                        MAP: s,
                        REF: e,
                        VALUE: t.node.value || i.buildUndefinedNode(),
                      });
                    }
                  );
                },
            J = n
              ? function(e, t, n) {
                  var a = t.scope,
                    r = t.parentPath,
                    i = t.node,
                    o = i.key,
                    s = i.value,
                    d = o.id.name,
                    u = a.generateUidIdentifier(d);
                  return (
                    r.traverse(
                      c,
                      Object.assign(
                        { name: d, privateId: u, classRef: e, file: n },
                        l
                      )
                    ),
                    [
                      [
                        z().template.statement(g())({
                          OBJ: e,
                          KEY: z().types.stringLiteral(u.name),
                          VALUE: s || a.buildUndefinedNode(),
                        }),
                      ],
                    ]
                  );
                }
              : function(e, t, n, a) {
                  var r = t.scope,
                    i = t.parentPath,
                    o = t.node,
                    s = o.key,
                    d = o.value,
                    u = s.id.name,
                    l = [];
                  return (
                    a ||
                      ((a = t.scope.generateUidIdentifier(e.name + "Statics")),
                      l.push(
                        z().template.statement(f())({ PRIVATE_CLASS_ID: a })
                      )),
                    (0, E().default)(
                      i,
                      c,
                      Object.assign(
                        { name: u, privateClassId: a, classRef: e, file: n },
                        p
                      )
                    ),
                    l.push(
                      z().types.expressionStatement(
                        z().types.callExpression(
                          n.addHelper("defineProperty"),
                          [
                            a,
                            z().types.stringLiteral(u),
                            d || r.buildUndefinedNode(),
                          ]
                        )
                      )
                    ),
                    [l, a]
                  );
                };
          return {
            inherits: v().default,
            visitor: {
              Class: function(e, t) {
                var n,
                  a = !!e.node.superClass,
                  r = [],
                  i = [],
                  o = new Set(),
                  s = e.get("body"),
                  d = s.get("body"),
                  u = Array.isArray(d),
                  l = 0;
                for (d = u ? d : d[Symbol.iterator](); ; ) {
                  var c;
                  if (u) {
                    if (l >= d.length) break;
                    c = d[l++];
                  } else {
                    if ((l = d.next()).done) break;
                    c = l.value;
                  }
                  var p = c,
                    g = p.node,
                    f = g.computed,
                    h = g.decorators;
                  if ((f && i.push(p), h && 0 < h.length))
                    throw p.buildCodeFrameError(
                      "Decorators transform is necessary."
                    );
                  if (p.isClassPrivateProperty()) {
                    var R = p.node.key.id.name;
                    if (o.has(R))
                      throw p.buildCodeFrameError("Duplicate private field");
                    o.add(R);
                  }
                  p.isProperty()
                    ? r.push(p)
                    : p.isClassMethod({ kind: "constructor" }) && (n = p);
                }
                if (r.length) {
                  var y;
                  y =
                    e.isClassExpression() || !e.node.id
                      ? ((0, X().default)(e),
                        e.scope.generateUidIdentifier("class"))
                      : e.node.id;
                  for (var m = [], v = [], b = [], E = 0; E < i.length; E++) {
                    var x = i[E];
                    x.traverse(H, {
                      classBinding:
                        e.node.id && e.scope.getBinding(e.node.id.name),
                      file: this.file,
                    });
                    var A = x.node;
                    if (!x.get("key").isConstantExpression()) {
                      var S = e.scope.generateUidIdentifierBasedOnNode(A.key);
                      m.push(
                        z().types.variableDeclaration("var", [
                          z().types.variableDeclarator(S, A.key),
                        ])
                      ),
                        (A.key = z().types.cloneNode(S));
                    }
                  }
                  for (var _ = [], T = [], P = 0; P < r.length; P++) {
                    var C = r[P];
                    if (C.isPrivate() && !C.node.static) {
                      var w = [];
                      T.push(w), _.push(Y(z().types.thisExpression(), C, w, t));
                    }
                  }
                  for (var D, O = 0, F = 0; F < r.length; F++) {
                    var k = r[F];
                    if (k.node.static)
                      if (k.isPrivate()) {
                        var j,
                          M = J(z().types.cloneNode(y), k, t, D);
                        (j = M[0]), (D = M[1]), v.push.apply(v, j);
                      } else v.push(q(z().types.cloneNode(y), k, t));
                    else
                      k.isPrivate()
                        ? (b.push(_[O]()), v.push.apply(v, T[O]), O++)
                        : b.push(q(z().types.thisExpression(), k, t));
                  }
                  if (b.length) {
                    if (!n) {
                      var I = z().types.classMethod(
                        "constructor",
                        z().types.identifier("constructor"),
                        [],
                        z().types.blockStatement([])
                      );
                      a &&
                        ((I.params = [
                          z().types.restElement(z().types.identifier("args")),
                        ]),
                        I.body.body.push(
                          z().types.expressionStatement(
                            z().types.callExpression(z().types.super(), [
                              z().types.spreadElement(
                                z().types.identifier("args")
                              ),
                            ])
                          )
                        )),
                        (n = s.unshiftContainer("body", I)[0]);
                    }
                    for (var N = { scope: n.scope }, B = 0; B < r.length; B++) {
                      var L = r[B];
                      L.node.static || L.traverse(K, N);
                    }
                    if (a) {
                      var U = [];
                      n.traverse(G, U);
                      for (var V = 0; V < U.length; V++) U[V].insertAfter(b);
                    } else n.get("body").unshiftContainer("body", b);
                  }
                  for (var W = 0; W < r.length; W++) r[W].remove();
                  (0 === m.length && 0 === v.length) ||
                    (e.isClassExpression()
                      ? (e.scope.push({ id: y }),
                        e.replaceWith(
                          z().types.assignmentExpression(
                            "=",
                            z().types.cloneNode(y),
                            e.node
                          )
                        ))
                      : e.node.id || (e.node.id = y),
                    e.insertBefore(m),
                    e.insertAfter(v));
                }
              },
              PrivateName: function(e) {
                throw e.buildCodeFrameError('Unknown PrivateName "' + e + '"');
              },
            },
          };
        });
        exports.default = u;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = r(n(221));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = r(n(522)),
          s = r(n(523));
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var d = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.legacy,
            a = void 0 !== n && n,
            r = t.decoratorsBeforeExport;
          if ("boolean" != typeof a)
            throw new Error("'legacy' must be a boolean.");
          if (!0 !== a)
            throw new Error(
              'The new decorators proposal is not supported yet. You must pass the `"legacy": true` option to @gerhobbelt/babel-plugin-proposal-decorators'
            );
          if (void 0 !== r) {
            if (a)
              throw new Error(
                "'decoratorsBeforeExport' can't be used with legacy decorators."
              );
            if ("boolean" != typeof r)
              throw new Error("'decoratorsBeforeExport' must be a boolean.");
          }
          return {
            inherits: i().default,
            manipulateOptions: function(e) {
              e.generatorOpts.decoratorsBeforeExport = r;
            },
            visitor: a ? s.default : o.default,
          };
        });
        t.default = d;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(222)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                DoExpression: {
                  exit: function(e) {
                    var t = e.node.body.body;
                    t.length
                      ? e.replaceExpressionWithStatements(t)
                      : e.replaceWith(e.scope.buildUndefinedNode());
                  },
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(223)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function s() {
          var e = n(3);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                ExportNamedDeclaration: function(e) {
                  var t = e.node,
                    n = e.scope,
                    a = t.specifiers;
                  if (s().types.isExportDefaultSpecifier(a[0])) {
                    var r = a.shift().exported,
                      i = n.generateUidIdentifier(r.name),
                      o = [
                        s().types.importDeclaration(
                          [s().types.importDefaultSpecifier(i)],
                          s().types.cloneNode(t.source)
                        ),
                        s().types.exportNamedDeclaration(null, [
                          s().types.exportSpecifier(s().types.cloneNode(i), r),
                        ]),
                      ];
                    1 <= a.length && o.push(t), e.replaceWithMultiple(o);
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(224)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function d() {
          var e = n(3);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                ExportNamedDeclaration: function(e) {
                  var t = e.node,
                    n = e.scope,
                    a = t.specifiers,
                    r = d().types.isExportDefaultSpecifier(a[0]) ? 1 : 0;
                  if (d().types.isExportNamespaceSpecifier(a[r])) {
                    var i = [];
                    1 === r &&
                      i.push(
                        d().types.exportNamedDeclaration(
                          null,
                          [a.shift()],
                          t.source
                        )
                      );
                    var o = a.shift().exported,
                      s = n.generateUidIdentifier(o.name);
                    i.push(
                      d().types.importDeclaration(
                        [d().types.importNamespaceSpecifier(s)],
                        d().types.cloneNode(t.source)
                      ),
                      d().types.exportNamedDeclaration(null, [
                        d().types.exportSpecifier(d().types.cloneNode(s), o),
                      ])
                    ),
                      1 <= t.specifiers.length && i.push(t),
                      e.replaceWithMultiple(i);
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(230)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function c() {
          var e = n(3);
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                BinaryExpression: function(e) {
                  var t = e.scope,
                    n = e.node,
                    a = n.operator,
                    r = n.left,
                    i = n.right;
                  if ("|>" === a) {
                    var o,
                      s =
                        c().types.isArrowFunctionExpression(i) &&
                        c().types.isExpression(i.body) &&
                        !i.async &&
                        !i.generator;
                    if (s) {
                      var d = i.params;
                      1 === d.length && c().types.isIdentifier(d[0])
                        ? (o = d[0])
                        : 0 < d.length && (s = !1);
                    } else
                      c().types.isIdentifier(i, { name: "eval" }) &&
                        (i = c().types.sequenceExpression([
                          c().types.numericLiteral(0),
                          i,
                        ]));
                    if (!s || o) {
                      var u = t.generateUidIdentifierBasedOnNode(o || r);
                      t.push({ id: u }),
                        o && e.get("right").scope.rename(o.name, u.name);
                      var l = s
                        ? i.body
                        : c().types.callExpression(i, [c().types.cloneNode(u)]);
                      e.replaceWith(
                        c().types.sequenceExpression([
                          c().types.assignmentExpression(
                            "=",
                            c().types.cloneNode(u),
                            r
                          ),
                          l,
                        ])
                      );
                    } else
                      e.replaceWith(c().types.sequenceExpression([r, i.body]));
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.spec;
          return {
            visitor: {
              ArrowFunctionExpression: function(e) {
                e.isArrowFunctionExpression() &&
                  e.arrowFunctionToExpression({
                    allowInsertArrow: !1,
                    specCompliant: !!n,
                  });
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e = n(3);
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          function a(e, t) {
            var n = t.get(e),
              a = Array.isArray(n),
              r = 0;
            for (n = a ? n : n[Symbol.iterator](); ; ) {
              var i;
              if (a) {
                if (r >= n.length) break;
                i = n[r++];
              } else {
                if ((r = n.next()).done) break;
                i = r.value;
              }
              var o = i,
                s = o.node;
              if (o.isFunctionDeclaration()) {
                var d = u().types.variableDeclaration("let", [
                  u().types.variableDeclarator(s.id, u().types.toExpression(s)),
                ]);
                (d._blockHoist = 2), (s.id = null), o.replaceWith(d);
              }
            }
          }
          return (
            e.assertVersion(7),
            {
              visitor: {
                BlockStatement: function(e) {
                  var t = e.node,
                    n = e.parent;
                  u().types.isFunction(n, { body: t }) ||
                    u().types.isExportDeclaration(n) ||
                    a("body", e);
                },
                SwitchCase: function(e) {
                  a("consequent", e);
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = n(524);
        function x() {
          var e = i(n(182));
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        function R() {
          var e = i(n(525));
          return (
            (R = function() {
              return e;
            }),
            e
          );
        }
        function A() {
          var e = n(3);
          return (
            (A = function() {
              return e;
            }),
            e
          );
        }
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var o = new WeakSet(),
          s = (0, a().declare)(function(e, t) {
            e.assertVersion(7);
            var n = t.throwIfClosureRequired,
              i = void 0 !== n && n,
              a = t.tdz,
              o = void 0 !== a && a;
            if ("boolean" != typeof i)
              throw new Error(
                ".throwIfClosureRequired must be a boolean, or undefined"
              );
            if ("boolean" != typeof o)
              throw new Error(
                ".throwIfClosureRequired must be a boolean, or undefined"
              );
            return {
              visitor: {
                VariableDeclaration: function(e) {
                  var t = e.node,
                    n = e.parent,
                    a = e.scope;
                  if (y(t) && (v(e, null, n, a, !0), t._tdzThis)) {
                    for (var r = [t], i = 0; i < t.declarations.length; i++) {
                      var o = t.declarations[i];
                      if (o.init) {
                        var s = A().types.assignmentExpression(
                          "=",
                          o.id,
                          o.init
                        );
                        (s._ignoreBlockScopingTDZ = !0),
                          r.push(A().types.expressionStatement(s));
                      }
                      o.init = this.addHelper("temporalUndefined");
                    }
                    (t._blockHoist = 2),
                      e.isCompletionRecord() &&
                        r.push(
                          A().types.expressionStatement(a.buildUndefinedNode())
                        ),
                      e.replaceWithMultiple(r);
                  }
                },
                Loop: function(e, t) {
                  var n = e.parent,
                    a = e.scope;
                  e.ensureBlock();
                  var r = new h(e, e.get("body"), n, a, i, o, t).run();
                  r && e.replaceWith(r);
                },
                CatchClause: function(e, t) {
                  var n = e.parent,
                    a = e.scope;
                  new h(null, e.get("body"), n, a, i, o, t).run();
                },
                "BlockStatement|SwitchStatement|Program": function(e, t) {
                  var n;
                  (n = e),
                    A().types.isLoop(n.parent) ||
                      A().types.isCatchClause(n.parent) ||
                      new h(null, e, e.parent, e.scope, i, o, t).run();
                },
              },
            };
          });
        t.default = s;
        var u = (0, A().template)(
          '\n  if (typeof RETURN === "object") return RETURN.v;\n'
        );
        function y(e) {
          return !(
            !A().types.isVariableDeclaration(e) ||
            (!e[A().types.BLOCK_SCOPED_SYMBOL] &&
              "let" !== e.kind &&
              "const" !== e.kind)
          );
        }
        function m(e) {
          var t = e.find(function(e) {
            return e.isLoop() || e.isFunction();
          });
          return t && t.isLoop();
        }
        function v(e, t, n, a, r) {
          if (
            (void 0 === r && (r = !1),
            t || (t = e.node),
            m(e) && !A().types.isFor(n))
          )
            for (var i = 0; i < t.declarations.length; i++) {
              var o = t.declarations[i];
              o.init = o.init || a.buildUndefinedNode();
            }
          if (((t[A().types.BLOCK_SCOPED_SYMBOL] = !0), (t.kind = "var"), r)) {
            var s = a.getFunctionParent() || a.getProgramParent(),
              d = e.getBindingIdentifiers();
            for (var u in d) {
              var l = a.getOwnBinding(u);
              l && (l.kind = "var"), a.moveBindingTo(u, s);
            }
          }
        }
        function d(e) {
          return A().types.isVariableDeclaration(e, { kind: "var" }) && !y(e);
        }
        var b = A().traverse.visitors.merge([
            {
              Loop: {
                enter: function(e, t) {
                  t.loopDepth++;
                },
                exit: function(e, t) {
                  t.loopDepth--;
                },
              },
              Function: function(e, t) {
                return 0 < t.loopDepth && e.traverse(l, t), e.skip();
              },
            },
            r.visitor,
          ]),
          l = A().traverse.visitors.merge([
            {
              ReferencedIdentifier: function(e, t) {
                var n = t.letReferences[e.node.name];
                if (n) {
                  var a = e.scope.getBindingIdentifier(e.node.name);
                  (a && a !== n) || (t.closurify = !0);
                }
              },
            },
            r.visitor,
          ]),
          c = {
            enter: function(e, t) {
              var n = e.node;
              if ((e.parent, e.isForStatement())) {
                if (d(n.init)) {
                  var a = t.pushDeclar(n.init);
                  1 === a.length
                    ? (n.init = a[0])
                    : (n.init = A().types.sequenceExpression(a));
                }
              } else if (e.isFor())
                d(n.left) &&
                  (t.pushDeclar(n.left), (n.left = n.left.declarations[0].id));
              else if (d(n))
                e.replaceWithMultiple(
                  t.pushDeclar(n).map(function(e) {
                    return A().types.expressionStatement(e);
                  })
                );
              else if (e.isFunction()) return e.skip();
            },
          },
          p = {
            LabeledStatement: function(e, t) {
              var n = e.node;
              t.innerLabels.push(n.label.name);
            },
          },
          g = {
            enter: function(e, t) {
              if (e.isAssignmentExpression() || e.isUpdateExpression()) {
                var n = e.getBindingIdentifiers();
                for (var a in n)
                  t.outsideReferences[a] === e.scope.getBindingIdentifier(a) &&
                    (t.reassignments[a] = !0);
              } else e.isReturnStatement() && t.returnStatements.push(e);
            },
          },
          f = {
            Loop: function(e, t) {
              var n = t.ignoreLabeless;
              (t.ignoreLabeless = !0),
                e.traverse(f, t),
                (t.ignoreLabeless = n),
                e.skip();
            },
            Function: function(e) {
              e.skip();
            },
            SwitchCase: function(e, t) {
              var n = t.inSwitchCase;
              (t.inSwitchCase = !0),
                e.traverse(f, t),
                (t.inSwitchCase = n),
                e.skip();
            },
            "BreakStatement|ContinueStatement|ReturnStatement": function(e, t) {
              var n,
                a = e.node,
                r = e.parent,
                i = e.scope;
              if (!a[this.LOOP_IGNORE]) {
                var o,
                  s = ((n = a),
                  A().types.isBreakStatement(n)
                    ? "break"
                    : A().types.isContinueStatement(n)
                      ? "continue"
                      : void 0);
                if (s) {
                  if (a.label) {
                    if (0 <= t.innerLabels.indexOf(a.label.name)) return;
                    s = s + "|" + a.label.name;
                  } else {
                    if (t.ignoreLabeless) return;
                    if (
                      A().types.isBreakStatement(a) &&
                      A().types.isSwitchCase(r)
                    )
                      return;
                  }
                  (t.hasBreakContinue = !0),
                    (t.map[s] = a),
                    (o = A().types.stringLiteral(s));
                }
                e.isReturnStatement() &&
                  ((t.hasReturn = !0),
                  (o = A().types.objectExpression([
                    A().types.objectProperty(
                      A().types.identifier("v"),
                      a.argument || i.buildUndefinedNode()
                    ),
                  ]))),
                  o &&
                    (((o = A().types.returnStatement(o))[
                      this.LOOP_IGNORE
                    ] = !0),
                    e.skip(),
                    e.replaceWith(A().types.inherits(o, a)));
              }
            },
          },
          h = (function() {
            function e(e, t, n, a, r, i, o) {
              (this.parent = n),
                (this.scope = a),
                (this.state = o),
                (this.throwIfClosureRequired = r),
                (this.tdzEnabled = i),
                (this.blockPath = t),
                (this.block = t.node),
                (this.outsideLetReferences = Object.create(null)),
                (this.hasLetReferences = !1),
                (this.letReferences = Object.create(null)),
                (this.body = []),
                e &&
                  ((this.loopParent = e.parent),
                  (this.loopLabel =
                    A().types.isLabeledStatement(this.loopParent) &&
                    this.loopParent.label),
                  (this.loopPath = e),
                  (this.loop = e.node));
            }
            var t = e.prototype;
            return (
              (t.run = function() {
                var e = this.block;
                if (!o.has(e)) {
                  o.add(e);
                  var t = this.getLetReferences();
                  if (
                    (this.checkConstants(),
                    A().types.isFunction(this.parent) ||
                      A().types.isProgram(this.block))
                  )
                    this.updateScopeInfo();
                  else if (this.hasLetReferences)
                    return (
                      t ? this.wrapClosure() : this.remap(),
                      this.updateScopeInfo(t),
                      this.loopLabel &&
                      !A().types.isLabeledStatement(this.loopParent)
                        ? A().types.labeledStatement(this.loopLabel, this.loop)
                        : void 0
                    );
                }
              }),
              (t.checkConstants = function() {
                var e = this.scope,
                  t = this.state;
                for (var n in e.bindings) {
                  var a = e.bindings[n];
                  if ("const" === a.kind) {
                    var r = a.constantViolations,
                      i = Array.isArray(r),
                      o = 0;
                    for (r = i ? r : r[Symbol.iterator](); ; ) {
                      var s;
                      if (i) {
                        if (o >= r.length) break;
                        s = r[o++];
                      } else {
                        if ((o = r.next()).done) break;
                        s = o.value;
                      }
                      var d = s,
                        u = t.addHelper("readOnlyError"),
                        l = A().types.callExpression(u, [
                          A().types.stringLiteral(n),
                        ]);
                      d.isAssignmentExpression()
                        ? d
                            .get("right")
                            .replaceWith(
                              A().types.sequenceExpression([
                                l,
                                d.get("right").node,
                              ])
                            )
                        : d.isUpdateExpression()
                          ? d.replaceWith(
                              A().types.sequenceExpression([l, d.node])
                            )
                          : d.isForXStatement() &&
                            (d.ensureBlock(),
                            d.node.body.body.unshift(
                              A().types.expressionStatement(l)
                            ));
                    }
                  }
                }
              }),
              (t.updateScopeInfo = function(e) {
                var t = this.scope,
                  n = t.getFunctionParent() || t.getProgramParent(),
                  a = this.letReferences;
                for (var r in a) {
                  var i = a[r],
                    o = t.getBinding(i.name);
                  o &&
                    (("let" !== o.kind && "const" !== o.kind) ||
                      ((o.kind = "var"),
                      e
                        ? t.removeBinding(i.name)
                        : t.moveBindingTo(i.name, n)));
                }
              }),
              (t.remap = function() {
                var e = this.letReferences,
                  t = this.scope;
                for (var n in e) {
                  var a = e[n];
                  (t.parentHasBinding(n) || t.hasGlobal(n)) &&
                    (t.hasOwnBinding(n) && t.rename(a.name),
                    this.blockPath.scope.hasOwnBinding(n) &&
                      this.blockPath.scope.rename(a.name));
                }
              }),
              (t.wrapClosure = function() {
                if (this.throwIfClosureRequired)
                  throw this.blockPath.buildCodeFrameError(
                    "Compiling let/const in this block would add a closure (throwIfClosureRequired)."
                  );
                var e = this.block,
                  t = this.outsideLetReferences;
                if (this.loop)
                  for (var n in t) {
                    var a = t[n];
                    (this.scope.hasGlobal(a.name) ||
                      this.scope.parentHasBinding(a.name)) &&
                      (delete t[a.name],
                      delete this.letReferences[a.name],
                      this.scope.rename(a.name),
                      (t[(this.letReferences[a.name] = a).name] = a));
                  }
                (this.has = this.checkLoop()), this.hoistVarDeclarations();
                var r = (0, x().default)(t).map(function(e) {
                    return A().types.cloneNode(e);
                  }),
                  i = r.map(function(e) {
                    return A().types.cloneNode(e);
                  }),
                  o = this.blockPath.isSwitchStatement(),
                  s = A().types.functionExpression(
                    null,
                    i,
                    A().types.blockStatement(o ? [e] : e.body)
                  );
                this.addContinuations(s);
                var d,
                  u,
                  l,
                  c = A().types.callExpression(A().types.nullLiteral(), r),
                  p = ".callee";
                if (
                  (A().traverse.hasType(
                    s.body,
                    "YieldExpression",
                    A().types.FUNCTION_TYPES
                  ) &&
                    ((s.generator = !0),
                    (c = A().types.yieldExpression(c, !0)),
                    (p = ".argument" + p)),
                  A().traverse.hasType(
                    s.body,
                    "AwaitExpression",
                    A().types.FUNCTION_TYPES
                  ) &&
                    ((s.async = !0),
                    (c = A().types.awaitExpression(c)),
                    (p = ".argument" + p)),
                  this.has.hasReturn || this.has.hasBreakContinue)
                ) {
                  var g = this.scope.generateUid("ret");
                  this.body.push(
                    A().types.variableDeclaration("var", [
                      A().types.variableDeclarator(A().types.identifier(g), c),
                    ])
                  ),
                    (d = "declarations.0.init" + p),
                    (u = this.body.length - 1),
                    this.buildHas(g);
                } else
                  this.body.push(A().types.expressionStatement(c)),
                    (d = "expression" + p),
                    (u = this.body.length - 1);
                if (o) {
                  var f = this.blockPath,
                    h = f.parentPath,
                    R = f.listKey,
                    y = f.key;
                  this.blockPath.replaceWithMultiple(this.body),
                    (l = h.get(R)[y + u]);
                } else
                  (e.body = this.body), (l = this.blockPath.get("body")[u]);
                var m,
                  v = l.get(d);
                if (this.loop) {
                  var b = this.scope.generateUid("loop"),
                    E = this.loopPath.insertBefore(
                      A().types.variableDeclaration("var", [
                        A().types.variableDeclarator(
                          A().types.identifier(b),
                          s
                        ),
                      ])
                    );
                  v.replaceWith(A().types.identifier(b)),
                    (m = E[0].get("declarations.0.init"));
                } else v.replaceWith(s), (m = v);
                m.unwrapFunctionEnvironment();
              }),
              (t.addContinuations = function(r) {
                var i = this,
                  o = {
                    reassignments: {},
                    returnStatements: [],
                    outsideReferences: this.outsideLetReferences,
                  };
                this.scope.traverse(r, g, o);
                for (
                  var e = function(e) {
                      var t = r.params[e];
                      if (!o.reassignments[t.name]) return "continue";
                      var n = t.name,
                        a = i.scope.generateUid(t.name);
                      (r.params[e] = A().types.identifier(a)),
                        i.scope.rename(n, a, r),
                        o.returnStatements.forEach(function(e) {
                          e.insertBefore(
                            A().types.expressionStatement(
                              A().types.assignmentExpression(
                                "=",
                                A().types.identifier(n),
                                A().types.identifier(a)
                              )
                            )
                          );
                        }),
                        r.body.body.push(
                          A().types.expressionStatement(
                            A().types.assignmentExpression(
                              "=",
                              A().types.identifier(n),
                              A().types.identifier(a)
                            )
                          )
                        );
                    },
                    t = 0;
                  t < r.params.length;
                  t++
                )
                  e(t);
              }),
              (t.getLetReferences = function() {
                var a = this,
                  r = this.block,
                  i = [];
                if (this.loop) {
                  var e = this.loop.left || this.loop.init;
                  y(e) &&
                    (i.push(e),
                    (0, R().default)(
                      this.outsideLetReferences,
                      A().types.getBindingIdentifiers(e)
                    ));
                }
                var t = function e(t, n) {
                  (n = n || t.node),
                    (A().types.isClassDeclaration(n) ||
                      A().types.isFunctionDeclaration(n) ||
                      y(n)) &&
                      (y(n) && v(t, n, r, a.scope),
                      (i = i.concat(n.declarations || n))),
                    A().types.isLabeledStatement(n) && e(t.get("body"), n.body);
                };
                if (r.body)
                  for (
                    var n = this.blockPath.get("body"), o = 0;
                    o < r.body.length;
                    o++
                  )
                    t(n[o]);
                if (r.cases)
                  for (
                    var s = this.blockPath.get("cases"), d = 0;
                    d < r.cases.length;
                    d++
                  )
                    for (
                      var u = r.cases[d].consequent, l = 0;
                      l < u.length;
                      l++
                    ) {
                      var c = u[l];
                      t(s[d], c);
                    }
                for (var p = 0; p < i.length; p++) {
                  var g = i[p],
                    f = A().types.getBindingIdentifiers(g, !1, !0);
                  (0, R().default)(this.letReferences, f),
                    (this.hasLetReferences = !0);
                }
                if (this.hasLetReferences) {
                  var h = {
                    letReferences: this.letReferences,
                    closurify: !1,
                    loopDepth: 0,
                    tdzEnabled: this.tdzEnabled,
                    addHelper: function(e) {
                      return a.addHelper(e);
                    },
                  };
                  return (
                    m(this.blockPath) && h.loopDepth++,
                    this.blockPath.traverse(b, h),
                    h.closurify
                  );
                }
              }),
              (t.checkLoop = function() {
                var e = {
                  hasBreakContinue: !1,
                  ignoreLabeless: !1,
                  inSwitchCase: !1,
                  innerLabels: [],
                  hasReturn: !1,
                  isLoop: !!this.loop,
                  map: {},
                  LOOP_IGNORE: Symbol(),
                };
                return (
                  this.blockPath.traverse(p, e),
                  this.blockPath.traverse(f, e),
                  e
                );
              }),
              (t.hoistVarDeclarations = function() {
                this.blockPath.traverse(c, this);
              }),
              (t.pushDeclar = function(e) {
                var t = [],
                  n = A().types.getBindingIdentifiers(e);
                for (var a in n) t.push(A().types.variableDeclarator(n[a]));
                this.body.push(A().types.variableDeclaration(e.kind, t));
                for (var r = [], i = 0; i < e.declarations.length; i++) {
                  var o = e.declarations[i];
                  if (o.init) {
                    var s = A().types.assignmentExpression(
                      "=",
                      A().types.cloneNode(o.id),
                      A().types.cloneNode(o.init)
                    );
                    r.push(A().types.inherits(s, o));
                  }
                }
                return r;
              }),
              (t.buildHas = function(e) {
                var t,
                  n = this.body,
                  a = this.has,
                  r = [];
                if (
                  (a.hasReturn && (t = u({ RETURN: A().types.identifier(e) })),
                  a.hasBreakContinue)
                ) {
                  for (var i in a.map)
                    r.push(
                      A().types.switchCase(A().types.stringLiteral(i), [
                        a.map[i],
                      ])
                    );
                  if (
                    (a.hasReturn && r.push(A().types.switchCase(null, [t])),
                    1 === r.length)
                  ) {
                    var o = r[0];
                    n.push(
                      A().types.ifStatement(
                        A().types.binaryExpression(
                          "===",
                          A().types.identifier(e),
                          o.test
                        ),
                        o.consequent[0]
                      )
                    );
                  } else {
                    if (this.loop)
                      for (var s = 0; s < r.length; s++) {
                        var d = r[s].consequent[0];
                        A().types.isBreakStatement(d) &&
                          !d.label &&
                          (this.loopLabel ||
                            (this.loopLabel = this.scope.generateUidIdentifier(
                              "loop"
                            )),
                          (d.label = A().types.cloneNode(this.loopLabel)));
                      }
                    n.push(
                      A().types.switchStatement(A().types.identifier(e), r)
                    );
                  }
                } else a.hasReturn && n.push(t);
              }),
              e
            );
          })();
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = i(n(94));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = i(n(23));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = i(n(84));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e = n(3);
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = i(n(185));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var l = i(n(528));
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var c = function(e) {
            return Object.keys(r().default[e]).filter(function(e) {
              return /^[A-Z]/.test(e);
            });
          },
          p = new Set(c("builtin").concat(c("browser"))),
          g = (0, a().declare)(function(e, t) {
            e.assertVersion(7);
            var r = t.loose,
              i = Symbol();
            return {
              visitor: {
                ExportDefaultDeclaration: function(e) {
                  e.get("declaration").isClassDeclaration() &&
                    (0, d().default)(e);
                },
                ClassDeclaration: function(e) {
                  var t = e.node,
                    n = t.id || e.scope.generateUidIdentifier("class");
                  e.replaceWith(
                    u().types.variableDeclaration("let", [
                      u().types.variableDeclarator(
                        n,
                        u().types.toExpression(t)
                      ),
                    ])
                  );
                },
                ClassExpression: function(e, t) {
                  var n = e.node;
                  if (!n[i]) {
                    var a = (0, s().default)(e);
                    a && a !== n
                      ? e.replaceWith(a)
                      : ((n[i] = !0),
                        e.replaceWith((0, l.default)(e, t.file, p, r)),
                        e.isCallExpression() &&
                          ((0, o().default)(e),
                          e.get("callee").isArrowFunctionExpression() &&
                            e.get("callee").arrowFunctionToExpression()));
                  }
                },
              },
            };
          });
        t.default = g;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function S() {
          var e = n(3);
          return (
            (S = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var A = t.loose
              ? function(e) {
                  var t = e.computedProps,
                    n = Array.isArray(t),
                    a = 0;
                  for (t = n ? t : t[Symbol.iterator](); ; ) {
                    var r;
                    if (n) {
                      if (a >= t.length) break;
                      r = t[a++];
                    } else {
                      if ((a = t.next()).done) break;
                      r = a.value;
                    }
                    var i = r;
                    "get" === i.kind || "set" === i.kind
                      ? g(e, i)
                      : p(S().types.cloneNode(e.objId), i, e.body);
                  }
                }
              : function(e) {
                  var t = e.objId,
                    n = e.body,
                    a = e.computedProps,
                    r = e.state,
                    i = a,
                    o = Array.isArray(i),
                    s = 0;
                  for (i = o ? i : i[Symbol.iterator](); ; ) {
                    var d;
                    if (o) {
                      if (s >= i.length) break;
                      d = i[s++];
                    } else {
                      if ((s = i.next()).done) break;
                      d = s.value;
                    }
                    var u = d,
                      l = S().types.toComputedKey(u);
                    if ("get" === u.kind || "set" === u.kind) g(e, u);
                    else if (
                      S().types.isStringLiteral(l, { value: "__proto__" })
                    )
                      p(t, u, n);
                    else {
                      if (1 === a.length)
                        return S().types.callExpression(
                          r.addHelper("defineProperty"),
                          [e.initPropExpression, l, c(u)]
                        );
                      n.push(
                        S().types.expressionStatement(
                          S().types.callExpression(
                            r.addHelper("defineProperty"),
                            [S().types.cloneNode(t), l, c(u)]
                          )
                        )
                      );
                    }
                  }
                },
            s = (0, S().template)(
              "\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  "
            );
          function c(e) {
            return S().types.isObjectProperty(e)
              ? e.value
              : S().types.isObjectMethod(e)
                ? S().types.functionExpression(
                    null,
                    e.params,
                    e.body,
                    e.generator,
                    e.async
                  )
                : void 0;
          }
          function p(e, t, n) {
            "get" === t.kind && "set" === t.kind
              ? g(e, t)
              : n.push(
                  S().types.expressionStatement(
                    S().types.assignmentExpression(
                      "=",
                      S().types.memberExpression(
                        S().types.cloneNode(e),
                        t.key,
                        t.computed || S().types.isLiteral(t.key)
                      ),
                      c(t)
                    )
                  )
                );
          }
          function g(e, t) {
            var n = e.body,
              a = e.getMutatorId,
              r = e.scope,
              i =
                !t.computed && S().types.isIdentifier(t.key)
                  ? S().types.stringLiteral(t.key.name)
                  : t.key,
              o = r.maybeGenerateMemoised(i);
            o &&
              (n.push(
                S().types.expressionStatement(
                  S().types.assignmentExpression("=", o, i)
                )
              ),
              (i = o)),
              n.push.apply(
                n,
                s({
                  MUTATOR_MAP_REF: a(),
                  KEY: S().types.cloneNode(i),
                  VALUE: c(t),
                  KIND: S().types.identifier(t.kind),
                })
              );
          }
          return {
            visitor: {
              ObjectExpression: {
                exit: function(e, t) {
                  var n = e.node,
                    a = e.parent,
                    r = e.scope,
                    i = !1,
                    o = n.properties,
                    s = Array.isArray(o),
                    d = 0;
                  for (o = s ? o : o[Symbol.iterator](); ; ) {
                    var u;
                    if (s) {
                      if (d >= o.length) break;
                      u = o[d++];
                    } else {
                      if ((d = o.next()).done) break;
                      u = d.value;
                    }
                    if ((i = !0 === u.computed)) break;
                  }
                  if (i) {
                    var l = [],
                      c = [],
                      p = !1,
                      g = n.properties,
                      f = Array.isArray(g),
                      h = 0;
                    for (g = f ? g : g[Symbol.iterator](); ; ) {
                      var R;
                      if (f) {
                        if (h >= g.length) break;
                        R = g[h++];
                      } else {
                        if ((h = g.next()).done) break;
                        R = h.value;
                      }
                      var y = R;
                      y.computed && (p = !0), p ? c.push(y) : l.push(y);
                    }
                    var m,
                      v = r.generateUidIdentifierBasedOnNode(a),
                      b = S().types.objectExpression(l),
                      E = [];
                    E.push(
                      S().types.variableDeclaration("var", [
                        S().types.variableDeclarator(v, b),
                      ])
                    );
                    var x = A({
                      scope: r,
                      objId: v,
                      body: E,
                      computedProps: c,
                      initPropExpression: b,
                      getMutatorId: function() {
                        return (
                          m ||
                            ((m = r.generateUidIdentifier("mutatorMap")),
                            E.push(
                              S().types.variableDeclaration("var", [
                                S().types.variableDeclarator(
                                  m,
                                  S().types.objectExpression([])
                                ),
                              ])
                            )),
                          S().types.cloneNode(m)
                        );
                      },
                      state: t,
                    });
                    m &&
                      E.push(
                        S().types.expressionStatement(
                          S().types.callExpression(
                            t.addHelper("defineEnumerableProperties"),
                            [S().types.cloneNode(v), S().types.cloneNode(m)]
                          )
                        )
                      ),
                      x
                        ? e.replaceWith(x)
                        : (E.push(
                            S().types.expressionStatement(
                              S().types.cloneNode(v)
                            )
                          ),
                          e.replaceWithMultiple(E));
                  }
                },
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function P() {
          var e = n(3);
          return (
            (P = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.loose,
            l = void 0 !== n && n,
            a = t.useBuiltIns,
            c = void 0 !== a && a;
          if ("boolean" != typeof l)
            throw new Error(".loose must be a boolean or undefined");
          var S = l;
          function _(e) {
            var t = e.declarations,
              n = Array.isArray(t),
              a = 0;
            for (t = n ? t : t[Symbol.iterator](); ; ) {
              var r;
              if (n) {
                if (a >= t.length) break;
                r = t[a++];
              } else {
                if ((a = t.next()).done) break;
                r = a.value;
              }
              var i = r;
              if (P().types.isPattern(i.id)) return !0;
            }
            return !1;
          }
          function g(e) {
            var t = e.elements,
              n = Array.isArray(t),
              a = 0;
            for (t = n ? t : t[Symbol.iterator](); ; ) {
              var r;
              if (n) {
                if (a >= t.length) break;
                r = t[a++];
              } else {
                if ((a = t.next()).done) break;
                r = a.value;
              }
              var i = r;
              if (P().types.isRestElement(i)) return !0;
            }
            return !1;
          }
          var f = {
              ReferencedIdentifier: function(e, t) {
                t.bindings[e.node.name] && ((t.deopt = !0), e.stop());
              },
            },
            T = (function() {
              function e(e) {
                (this.blockHoist = e.blockHoist),
                  (this.operator = e.operator),
                  (this.arrays = {}),
                  (this.nodes = e.nodes || []),
                  (this.scope = e.scope),
                  (this.kind = e.kind),
                  (this.arrayOnlySpread = e.arrayOnlySpread),
                  (this.addHelper = e.addHelper);
              }
              var t = e.prototype;
              return (
                (t.buildVariableAssignment = function(e, t) {
                  var n,
                    a = this.operator;
                  return (
                    P().types.isMemberExpression(e) && (a = "="),
                    ((n = a
                      ? P().types.expressionStatement(
                          P().types.assignmentExpression(
                            a,
                            e,
                            P().types.cloneNode(t)
                          )
                        )
                      : P().types.variableDeclaration(this.kind, [
                          P().types.variableDeclarator(
                            e,
                            P().types.cloneNode(t)
                          ),
                        ]))._blockHoist = this.blockHoist),
                    n
                  );
                }),
                (t.buildVariableDeclaration = function(e, t) {
                  var n = P().types.variableDeclaration("var", [
                    P().types.variableDeclarator(
                      P().types.cloneNode(e),
                      P().types.cloneNode(t)
                    ),
                  ]);
                  return (n._blockHoist = this.blockHoist), n;
                }),
                (t.push = function(e, t) {
                  var n = P().types.cloneNode(t);
                  P().types.isObjectPattern(e)
                    ? this.pushObjectPattern(e, n)
                    : P().types.isArrayPattern(e)
                      ? this.pushArrayPattern(e, n)
                      : P().types.isAssignmentPattern(e)
                        ? this.pushAssignmentPattern(e, n)
                        : this.nodes.push(this.buildVariableAssignment(e, n));
                }),
                (t.toArray = function(e, t) {
                  return this.arrayOnlySpread ||
                    (P().types.isIdentifier(e) && this.arrays[e.name])
                    ? e
                    : this.scope.toArray(e, t);
                }),
                (t.pushAssignmentPattern = function(e, t) {
                  var n = e.left,
                    a = e.right,
                    r = this.scope.generateUidIdentifierBasedOnNode(t);
                  this.nodes.push(this.buildVariableDeclaration(r, t));
                  var i,
                    o,
                    s = P().types.conditionalExpression(
                      P().types.binaryExpression(
                        "===",
                        P().types.cloneNode(r),
                        this.scope.buildUndefinedNode()
                      ),
                      a,
                      P().types.cloneNode(r)
                    );
                  P().types.isPattern(n)
                    ? ((o =
                        "const" === this.kind
                          ? ((i = this.scope.generateUidIdentifier(r.name)),
                            this.buildVariableDeclaration(i, s))
                          : ((i = r),
                            P().types.expressionStatement(
                              P().types.assignmentExpression(
                                "=",
                                P().types.cloneNode(r),
                                s
                              )
                            ))),
                      this.nodes.push(o),
                      this.push(n, i))
                    : this.nodes.push(this.buildVariableAssignment(n, s));
                }),
                (t.pushObjectRest = function(e, t, n, a) {
                  for (var r, i = [], o = 0; o < e.properties.length; o++) {
                    var s = e.properties[o];
                    if (a <= o) break;
                    if (!P().types.isRestElement(s)) {
                      var d = s.key;
                      P().types.isIdentifier(d) &&
                        !s.computed &&
                        (d = P().types.stringLiteral(s.key.name)),
                        i.push(P().types.cloneNode(d));
                    }
                  }
                  var u;
                  (r =
                    0 === i.length
                      ? P().types.callExpression(
                          ((u = this),
                          c
                            ? P().types.memberExpression(
                                P().types.identifier("Object"),
                                P().types.identifier("assign")
                              )
                            : u.addHelper("extends")),
                          [
                            P().types.objectExpression([]),
                            P().types.cloneNode(t),
                          ]
                        )
                      : ((i = P().types.arrayExpression(i)),
                        P().types.callExpression(
                          this.addHelper(
                            "objectWithoutProperties" + (l ? "Loose" : "")
                          ),
                          [P().types.cloneNode(t), i]
                        ))),
                    this.nodes.push(
                      this.buildVariableAssignment(n.argument, r)
                    );
                }),
                (t.pushObjectProperty = function(e, t) {
                  P().types.isLiteral(e.key) && (e.computed = !0);
                  var n = e.value,
                    a = P().types.memberExpression(
                      P().types.cloneNode(t),
                      e.key,
                      e.computed
                    );
                  P().types.isPattern(n)
                    ? this.push(n, a)
                    : this.nodes.push(this.buildVariableAssignment(n, a));
                }),
                (t.pushObjectPattern = function(e, t) {
                  if (
                    (e.properties.length ||
                      this.nodes.push(
                        P().types.expressionStatement(
                          P().types.callExpression(
                            this.addHelper("objectDestructuringEmpty"),
                            [t]
                          )
                        )
                      ),
                    1 < e.properties.length && !this.scope.isStatic(t))
                  ) {
                    var n = this.scope.generateUidIdentifierBasedOnNode(t);
                    this.nodes.push(this.buildVariableDeclaration(n, t)),
                      (t = n);
                  }
                  for (var a = 0; a < e.properties.length; a++) {
                    var r = e.properties[a];
                    P().types.isRestElement(r)
                      ? this.pushObjectRest(e, t, r, a)
                      : this.pushObjectProperty(r, t);
                  }
                }),
                (t.canUnpackArrayPattern = function(e, t) {
                  if (!P().types.isArrayExpression(t)) return !1;
                  if (!(e.elements.length > t.elements.length)) {
                    if (e.elements.length < t.elements.length && !g(e))
                      return !1;
                    var n = e.elements,
                      a = Array.isArray(n),
                      r = 0;
                    for (n = a ? n : n[Symbol.iterator](); ; ) {
                      var i;
                      if (a) {
                        if (r >= n.length) break;
                        i = n[r++];
                      } else {
                        if ((r = n.next()).done) break;
                        i = r.value;
                      }
                      var o = i;
                      if (!o) return !1;
                      if (P().types.isMemberExpression(o)) return !1;
                    }
                    var s = t.elements,
                      d = Array.isArray(s),
                      u = 0;
                    for (s = d ? s : s[Symbol.iterator](); ; ) {
                      var l;
                      if (d) {
                        if (u >= s.length) break;
                        l = s[u++];
                      } else {
                        if ((u = s.next()).done) break;
                        l = u.value;
                      }
                      var c = l;
                      if (P().types.isSpreadElement(c)) return !1;
                      if (P().types.isCallExpression(c)) return !1;
                      if (P().types.isMemberExpression(c)) return !1;
                    }
                    var p = {
                      deopt: !1,
                      bindings: P().types.getBindingIdentifiers(e),
                    };
                    return this.scope.traverse(t, f, p), !p.deopt;
                  }
                }),
                (t.pushUnpackedArrayPattern = function(e, t) {
                  for (var n = 0; n < e.elements.length; n++) {
                    var a = e.elements[n];
                    P().types.isRestElement(a)
                      ? this.push(
                          a.argument,
                          P().types.arrayExpression(t.elements.slice(n))
                        )
                      : this.push(a, t.elements[n]);
                  }
                }),
                (t.pushArrayPattern = function(e, t) {
                  if (e.elements) {
                    if (this.canUnpackArrayPattern(e, t))
                      return this.pushUnpackedArrayPattern(e, t);
                    var n = !g(e) && e.elements.length,
                      a = this.toArray(t, n);
                    P().types.isIdentifier(a)
                      ? (t = a)
                      : ((t = this.scope.generateUidIdentifierBasedOnNode(t)),
                        (this.arrays[t.name] = !0),
                        this.nodes.push(this.buildVariableDeclaration(t, a)));
                    for (var r = 0; r < e.elements.length; r++) {
                      var i = e.elements[r];
                      if (i) {
                        var o = void 0;
                        P().types.isRestElement(i)
                          ? ((o = this.toArray(t)),
                            (o = P().types.callExpression(
                              P().types.memberExpression(
                                o,
                                P().types.identifier("slice")
                              ),
                              [P().types.numericLiteral(r)]
                            )),
                            (i = i.argument))
                          : (o = P().types.memberExpression(
                              t,
                              P().types.numericLiteral(r),
                              !0
                            )),
                          this.push(i, o);
                      }
                    }
                  }
                }),
                (t.init = function(e, t) {
                  if (
                    !P().types.isArrayExpression(t) &&
                    !P().types.isMemberExpression(t)
                  ) {
                    var n = this.scope.maybeGenerateMemoised(t, !0);
                    n &&
                      (this.nodes.push(
                        this.buildVariableDeclaration(n, P().types.cloneNode(t))
                      ),
                      (t = n));
                  }
                  return this.push(e, t), this.nodes;
                }),
                e
              );
            })();
          return {
            visitor: {
              ExportNamedDeclaration: function(e) {
                var t = e.get("declaration");
                if (t.isVariableDeclaration() && _(t.node)) {
                  var n = [];
                  for (var a in e.getOuterBindingIdentifiers(e))
                    n.push(
                      P().types.exportSpecifier(
                        P().types.identifier(a),
                        P().types.identifier(a)
                      )
                    );
                  e.replaceWith(t.node),
                    e.insertAfter(P().types.exportNamedDeclaration(null, n));
                }
              },
              ForXStatement: function(e) {
                var t = this,
                  n = e.node,
                  a = e.scope,
                  r = n.left;
                if (P().types.isPattern(r)) {
                  var i = a.generateUidIdentifier("ref");
                  return (
                    (n.left = P().types.variableDeclaration("var", [
                      P().types.variableDeclarator(i),
                    ])),
                    e.ensureBlock(),
                    void n.body.body.unshift(
                      P().types.variableDeclaration("var", [
                        P().types.variableDeclarator(r, i),
                      ])
                    )
                  );
                }
                if (P().types.isVariableDeclaration(r)) {
                  var o = r.declarations[0].id;
                  if (P().types.isPattern(o)) {
                    var s = a.generateUidIdentifier("ref");
                    n.left = P().types.variableDeclaration(r.kind, [
                      P().types.variableDeclarator(s, null),
                    ]);
                    var d = [];
                    new T({
                      kind: r.kind,
                      scope: a,
                      nodes: d,
                      arrayOnlySpread: S,
                      addHelper: function(e) {
                        return t.addHelper(e);
                      },
                    }).init(o, s),
                      e.ensureBlock();
                    var u = n.body;
                    u.body = d.concat(u.body);
                  }
                }
              },
              CatchClause: function(e) {
                var t = this,
                  n = e.node,
                  a = e.scope,
                  r = n.param;
                if (P().types.isPattern(r)) {
                  var i = a.generateUidIdentifier("ref");
                  n.param = i;
                  var o = [];
                  new T({
                    kind: "let",
                    scope: a,
                    nodes: o,
                    arrayOnlySpread: S,
                    addHelper: function(e) {
                      return t.addHelper(e);
                    },
                  }).init(r, i),
                    (n.body.body = o.concat(n.body.body));
                }
              },
              AssignmentExpression: function(e) {
                var t = this,
                  n = e.node,
                  a = e.scope;
                if (P().types.isPattern(n.left)) {
                  var r,
                    i = [],
                    o = new T({
                      operator: n.operator,
                      scope: a,
                      nodes: i,
                      arrayOnlySpread: S,
                      addHelper: function(e) {
                        return t.addHelper(e);
                      },
                    });
                  (!e.isCompletionRecord() &&
                    e.parentPath.isExpressionStatement()) ||
                    ((r = a.generateUidIdentifierBasedOnNode(n.right, "ref")),
                    i.push(
                      P().types.variableDeclaration("var", [
                        P().types.variableDeclarator(r, n.right),
                      ])
                    ),
                    P().types.isArrayExpression(n.right) &&
                      (o.arrays[r.name] = !0)),
                    o.init(n.left, r || n.right),
                    r &&
                      i.push(
                        P().types.expressionStatement(P().types.cloneNode(r))
                      ),
                    e.replaceWithMultiple(i);
                }
              },
              VariableDeclaration: function(e) {
                var t = this,
                  n = e.node,
                  a = e.scope,
                  r = e.parent;
                if (!P().types.isForXStatement(r) && r && e.container && _(n)) {
                  for (
                    var i, o = n.kind, s = [], d = 0;
                    d < n.declarations.length;
                    d++
                  ) {
                    var u = (i = n.declarations[d]).init,
                      l = i.id,
                      c = new T({
                        blockHoist: n._blockHoist,
                        nodes: s,
                        scope: a,
                        kind: n.kind,
                        arrayOnlySpread: S,
                        addHelper: function(e) {
                          return t.addHelper(e);
                        },
                      });
                    P().types.isPattern(l)
                      ? (c.init(l, u),
                        +d != n.declarations.length - 1 &&
                          P().types.inherits(s[s.length - 1], i))
                      : s.push(
                          P().types.inherits(
                            c.buildVariableAssignment(
                              i.id,
                              P().types.cloneNode(i.init)
                            ),
                            i
                          )
                        );
                  }
                  for (var p = null, g = [], f = 0; f < s.length; f++) {
                    var h,
                      R = s[f];
                    null !== p && P().types.isVariableDeclaration(R)
                      ? (h = p.declarations).push.apply(h, R.declarations)
                      : ((R.kind = o),
                        g.push(R),
                        (p = P().types.isVariableDeclaration(R) ? R : null));
                  }
                  for (var y = 0; y < g.length; y++) {
                    var m = g[y];
                    if (m.declarations) {
                      var v = m.declarations,
                        b = Array.isArray(v),
                        E = 0;
                      for (v = b ? v : v[Symbol.iterator](); ; ) {
                        var x;
                        if (b) {
                          if (E >= v.length) break;
                          x = v[E++];
                        } else {
                          if ((E = v.next()).done) break;
                          x = E.value;
                        }
                        var A = x.id.name;
                        a.bindings[A] && (a.bindings[A].kind = m.kind);
                      }
                    }
                  }
                  1 === g.length
                    ? e.replaceWith(g[0])
                    : e.replaceWithMultiple(g);
                }
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function g() {
          var e = n(3);
          return (
            (g = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                ObjectExpression: function(e) {
                  var t,
                    n = e.node.properties.filter(function(e) {
                      return !g().types.isSpreadElement(e) && !e.computed;
                    }),
                    a = Object.create(null),
                    r = Object.create(null),
                    i = Object.create(null),
                    o = n,
                    s = Array.isArray(o),
                    d = 0;
                  for (o = s ? o : o[Symbol.iterator](); ; ) {
                    var u;
                    if (s) {
                      if (d >= o.length) break;
                      u = o[d++];
                    } else {
                      if ((d = o.next()).done) break;
                      u = d.value;
                    }
                    var l = u,
                      c = ((t = l.key),
                      g().types.isIdentifier(t) ? t.name : t.value.toString()),
                      p = !1;
                    switch (l.kind) {
                      case "get":
                        (a[c] || r[c]) && (p = !0), (r[c] = !0);
                        break;
                      case "set":
                        (a[c] || i[c]) && (p = !0), (i[c] = !0);
                        break;
                      default:
                        (a[c] || r[c] || i[c]) && (p = !0), (a[c] = !0);
                    }
                    p &&
                      ((l.computed = !0), (l.key = g().types.stringLiteral(c)));
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function h() {
          var e = n(3);
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.loose,
            a = t.assumeArray;
          if (!0 === n && !0 === a)
            throw new Error(
              "The loose and assumeArray options cannot be used together in @gerhobbelt/babel-plugin-transform-for-of"
            );
          if (a)
            return {
              visitor: {
                ForOfStatement: function(e) {
                  var t = e.scope,
                    n = e.node,
                    a = n.left,
                    r = n.right,
                    i = n.body,
                    o = t.generateUidIdentifier("i"),
                    s = t.maybeGenerateMemoised(r, !0),
                    d = [
                      h().types.variableDeclarator(
                        o,
                        h().types.numericLiteral(0)
                      ),
                    ];
                  s ? d.push(h().types.variableDeclarator(s, r)) : (s = r);
                  var u,
                    l = h().types.memberExpression(
                      h().types.cloneNode(s),
                      h().types.cloneNode(o),
                      !0
                    );
                  h().types.isVariableDeclaration(a)
                    ? ((u = a).declarations[0].init = l)
                    : (u = h().types.expressionStatement(
                        h().types.assignmentExpression("=", a, l)
                      ));
                  var c = h().types.toBlock(i);
                  c.body.unshift(u),
                    e.replaceWith(
                      h().types.forStatement(
                        h().types.variableDeclaration("let", d),
                        h().types.binaryExpression(
                          "<",
                          h().types.cloneNode(o),
                          h().types.memberExpression(
                            h().types.cloneNode(s),
                            h().types.identifier("length")
                          )
                        ),
                        h().types.updateExpression(
                          "++",
                          h().types.cloneNode(o)
                        ),
                        c
                      )
                    );
                },
              },
            };
          var u = n
              ? function(e, t) {
                  var n,
                    a,
                    r,
                    i = e.node,
                    o = e.scope,
                    s = e.parent,
                    d = i.left;
                  if (
                    h().types.isIdentifier(d) ||
                    h().types.isPattern(d) ||
                    h().types.isMemberExpression(d)
                  )
                    (a = d), (r = null);
                  else {
                    if (!h().types.isVariableDeclaration(d))
                      throw t.buildCodeFrameError(
                        d,
                        "Unknown node type " + d.type + " in ForStatement"
                      );
                    (a = o.generateUidIdentifier("ref")),
                      (n = h().types.variableDeclaration(d.kind, [
                        h().types.variableDeclarator(
                          d.declarations[0].id,
                          h().types.identifier(a.name)
                        ),
                      ])),
                      (r = h().types.variableDeclaration("var", [
                        h().types.variableDeclarator(
                          h().types.identifier(a.name)
                        ),
                      ]));
                  }
                  var u,
                    l = o.generateUidIdentifier("iterator"),
                    c = o.generateUidIdentifier("isArray"),
                    p = f({
                      LOOP_OBJECT: l,
                      IS_ARRAY: c,
                      OBJECT: i.right,
                      INDEX: o.generateUidIdentifier("i"),
                      ID: a,
                      INTERMEDIATE: r,
                    }),
                    g = h().types.isLabeledStatement(s);
                  return (
                    g && (u = h().types.labeledStatement(s.label, p)),
                    { replaceParent: g, declar: n, node: u || p, loop: p }
                  );
                }
              : function(e, t) {
                  var n,
                    a = e.node,
                    r = e.scope,
                    i = e.parent,
                    o = a.left,
                    s = r.generateUid("step"),
                    d = h().types.memberExpression(
                      h().types.identifier(s),
                      h().types.identifier("value")
                    );
                  if (
                    h().types.isIdentifier(o) ||
                    h().types.isPattern(o) ||
                    h().types.isMemberExpression(o)
                  )
                    n = h().types.expressionStatement(
                      h().types.assignmentExpression("=", o, d)
                    );
                  else {
                    if (!h().types.isVariableDeclaration(o))
                      throw t.buildCodeFrameError(
                        o,
                        "Unknown node type " + o.type + " in ForStatement"
                      );
                    n = h().types.variableDeclaration(o.kind, [
                      h().types.variableDeclarator(o.declarations[0].id, d),
                    ]);
                  }
                  var u = g({
                      ITERATOR_HAD_ERROR_KEY: r.generateUidIdentifier(
                        "didIteratorError"
                      ),
                      ITERATOR_COMPLETION: r.generateUidIdentifier(
                        "iteratorNormalCompletion"
                      ),
                      ITERATOR_ERROR_KEY: r.generateUidIdentifier(
                        "iteratorError"
                      ),
                      ITERATOR_KEY: r.generateUidIdentifier("iterator"),
                      STEP_KEY: h().types.identifier(s),
                      OBJECT: a.right,
                    }),
                    l = h().types.isLabeledStatement(i),
                    c = u[3].block.body,
                    p = c[0];
                  return (
                    l && (c[0] = h().types.labeledStatement(i.label, p)),
                    { replaceParent: l, declar: n, loop: p, node: u }
                  );
                },
            l = (0, h().template)(
              "\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\n  "
            ),
            f = (0, h().template)(
              "\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      INTERMEDIATE;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  "
            ),
            g = (0, h().template)(
              "\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (\n        var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY;\n        !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done);\n        ITERATOR_COMPLETION = true\n      ) {}\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  "
            );
          function c(e) {
            var t = e.node,
              n = e.scope,
              a = [],
              r = t.right;
            if (!h().types.isIdentifier(r) || !n.hasBinding(r.name)) {
              var i = n.generateUid("arr");
              a.push(
                h().types.variableDeclaration("var", [
                  h().types.variableDeclarator(h().types.identifier(i), r),
                ])
              ),
                (r = h().types.identifier(i));
            }
            var o = n.generateUidIdentifier("i"),
              s = l({ BODY: t.body, KEY: o, ARR: r });
            h().types.inherits(s, t), h().types.ensureBlock(s);
            var d = h().types.memberExpression(
                h().types.cloneNode(r),
                h().types.cloneNode(o),
                !0
              ),
              u = t.left;
            return (
              h().types.isVariableDeclaration(u)
                ? ((u.declarations[0].init = d), s.body.body.unshift(u))
                : s.body.body.unshift(
                    h().types.expressionStatement(
                      h().types.assignmentExpression("=", u, d)
                    )
                  ),
              e.parentPath.isLabeledStatement() &&
                (s = h().types.labeledStatement(e.parentPath.node.label, s)),
              a.push(s),
              a
            );
          }
          return {
            visitor: {
              ForOfStatement: function(e, t) {
                var n,
                  a = e.get("right");
                if (
                  a.isArrayExpression() ||
                  a.isGenericType("Array") ||
                  h().types.isArrayTypeAnnotation(a.getTypeAnnotation())
                )
                  (n = e).parentPath.isLabeledStatement()
                    ? n.parentPath.replaceWithMultiple(c(n))
                    : n.replaceWithMultiple(c(n));
                else {
                  var r = e.node,
                    i = u(e, t),
                    o = i.declar,
                    s = i.loop,
                    d = s.body;
                  e.ensureBlock(),
                    o && d.body.push(o),
                    (d.body = d.body.concat(r.body.body)),
                    h().types.inherits(s, r),
                    h().types.inherits(s.body, r.body),
                    i.replaceParent
                      ? (e.parentPath.replaceWithMultiple(i.node), e.remove())
                      : e.replaceWithMultiple(i.node);
                }
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(23)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                FunctionExpression: {
                  exit: function(e) {
                    if ("value" !== e.key && !e.parentPath.isObjectProperty()) {
                      var t = (0, r().default)(e);
                      t && e.replaceWith(t);
                    }
                  },
                },
                ObjectProperty: function(e) {
                  var t = e.get("value");
                  if (t.isFunction()) {
                    var n = (0, r().default)(t);
                    n && t.replaceWith(n);
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = n(3);
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                BinaryExpression: function(e) {
                  var t = e.node;
                  if ("instanceof" === t.operator) {
                    var n = this.addHelper("instanceof");
                    if (
                      e.findParent(function(e) {
                        return (
                          (e.isVariableDeclarator() && e.node.id === n) ||
                          (e.isFunctionDeclaration() &&
                            e.node.id &&
                            e.node.id.name === n.name)
                        );
                      })
                    )
                      return;
                    e.replaceWith(
                      r().types.callExpression(n, [t.left, t.right])
                    );
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                NumericLiteral: function(e) {
                  var t = e.node;
                  t.extra && /^0[ob]/i.test(t.extra.raw) && (t.extra = void 0);
                },
                StringLiteral: function(e) {
                  var t = e.node;
                  t.extra && /\\[u]/gi.test(t.extra.raw) && (t.extra = void 0);
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function _() {
          var e = n(99);
          return (
            (_ = function() {
              return e;
            }),
            e
          );
        }
        function T() {
          var e = n(3);
          return (
            (T = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var P = (0, T().template)(
            "\n  define(MODULE_NAME, AMD_ARGUMENTS, function(IMPORT_NAMES) {\n  })\n"
          ),
          r = (0, a().declare)(function(e, t) {
            e.assertVersion(7);
            var b = t.loose,
              E = t.allowTopLevelThis,
              x = t.strict,
              A = t.strictMode,
              S = t.noInterop;
            return {
              visitor: {
                Program: {
                  exit: function(e) {
                    if ((0, _().isModule)(e)) {
                      var t = this.getModuleName();
                      t && (t = T().types.stringLiteral(t));
                      var n = (0, _().rewriteModuleStatementsAndPrepareHeader)(
                          e,
                          {
                            loose: b,
                            strict: x,
                            strictMode: A,
                            allowTopLevelThis: E,
                            noInterop: S,
                          }
                        ),
                        a = n.meta,
                        r = n.headers,
                        i = [],
                        o = [];
                      (0, _().hasExports)(a) &&
                        (i.push(T().types.stringLiteral("exports")),
                        o.push(T().types.identifier(a.exportName)));
                      var s = a.source,
                        d = Array.isArray(s),
                        u = 0;
                      for (s = d ? s : s[Symbol.iterator](); ; ) {
                        var l;
                        if (d) {
                          if (u >= s.length) break;
                          l = s[u++];
                        } else {
                          if ((u = s.next()).done) break;
                          l = u.value;
                        }
                        var c = l,
                          p = c[0],
                          g = c[1];
                        if (
                          (i.push(T().types.stringLiteral(p)),
                          o.push(T().types.identifier(g.name)),
                          !(0, _().isSideEffectImport)(g))
                        ) {
                          var f = (0, _().wrapInterop)(
                            e,
                            T().types.identifier(g.name),
                            g.interop
                          );
                          if (f) {
                            var h = T().types.expressionStatement(
                              T().types.assignmentExpression(
                                "=",
                                T().types.identifier(g.name),
                                f
                              )
                            );
                            (h.loc = g.loc), r.push(h);
                          }
                        }
                        r.push.apply(
                          r,
                          (0, _().buildNamespaceInitStatements)(a, g, b)
                        );
                      }
                      (0, _().ensureStatementsHoisted)(r),
                        e.unshiftContainer("body", r);
                      var R = e.node,
                        y = R.body,
                        m = R.directives;
                      (e.node.directives = []), (e.node.body = []);
                      var v = e
                        .pushContainer("body", [
                          P({
                            MODULE_NAME: t,
                            AMD_ARGUMENTS: T().types.arrayExpression(i),
                            IMPORT_NAMES: o,
                          }),
                        ])[0]
                        .get("expression.arguments")
                        .filter(function(e) {
                          return e.isFunctionExpression();
                        })[0]
                        .get("body");
                      v.pushContainer("directives", m),
                        v.pushContainer("body", y);
                    }
                  },
                },
              },
            };
          });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function P() {
          var e = r()([
            "\n                  var ",
            " = ",
            ";\n                ",
          ]);
          return (
            (P = function() {
              return e;
            }),
            e
          );
        }
        function C() {
          var e = r()([
            "\n                  function ",
            "() {\n                    const data = ",
            ";\n                    ",
            " = function(){ return data; };\n                    return data;\n                  }\n                ",
          ]);
          return (
            (C = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = r()([
            '\n    (function(){\n      throw new Error(\n        "The CommonJS \'" + "',
            '" + "\' variable is not available in ES6 modules." +\n        "Consider setting setting sourceType:script or sourceType:unambiguous in your " +\n        "Babel config for this file.");\n    })()\n  ',
          ]);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = n(2);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function w() {
          var e = n(99);
          return (
            (w = function() {
              return e;
            }),
            e
          );
        }
        function D() {
          var e,
            t = (e = n(239)) && e.__esModule ? e : { default: e };
          return (
            (D = function() {
              return t;
            }),
            t
          );
        }
        function O() {
          var e = n(3);
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = void 0);
        var o = (0, i().declare)(function(e, t) {
          e.assertVersion(7);
          var R = t.loose,
            n = t.strictNamespace,
            y = void 0 !== n && n,
            a = t.mjsStrictNamespace,
            m = void 0 === a || a,
            v = t.allowTopLevelThis,
            b = t.strict,
            E = t.strictMode,
            x = t.noInterop,
            r = t.lazy,
            A = void 0 !== r && r,
            i = t.throwOnUninitializedRead,
            S = void 0 !== i && i,
            o = t.allowCommonJSExports,
            _ = void 0 === o || o;
          if (
            !(
              "boolean" == typeof A ||
              "function" == typeof A ||
              (Array.isArray(A) &&
                A.every(function(e) {
                  return "string" == typeof e;
                }))
            )
          )
            throw new Error(
              ".lazy must be a boolean, array of strings, or a function"
            );
          if ("boolean" != typeof y)
            throw new Error(".strictNamespace must be a boolean, or undefined");
          if ("boolean" != typeof m)
            throw new Error(
              ".mjsStrictNamespace must be a boolean, or undefined"
            );
          var u = function(e) {
              return O().template.expression.ast(s(), e);
            },
            T = {
              ReferencedIdentifier: function(e) {
                var t = e.node.name;
                if ("module" === t || "exports" === t) {
                  var n = e.scope.getBinding(t);
                  this.scope.getBinding(t) !== n ||
                    (e.parentPath.isObjectProperty({ value: e.node }) &&
                      e.parentPath.parentPath.isObjectPattern()) ||
                    e.parentPath.isAssignmentExpression({ left: e.node }) ||
                    e.isAssignmentExpression({ left: e.node }) ||
                    e.replaceWith(u(t));
                }
              },
              AssignmentExpression: function(t) {
                var n = this,
                  e = t.get("left");
                if (e.isIdentifier()) {
                  var a = t.node.name;
                  if ("module" !== a && "exports" !== a) return;
                  var r = t.scope.getBinding(a);
                  if (this.scope.getBinding(a) !== r) return;
                  var i = t.get("right");
                  i.replaceWith(O().types.sequenceExpression([i.node, u(a)]));
                } else if (e.isPattern()) {
                  var o = e.getOuterBindingIdentifiers(),
                    s = Object.keys(o).filter(function(e) {
                      return (
                        ("module" === e || "exports" === e) &&
                        n.scope.getBinding(e) === t.scope.getBinding(e)
                      );
                    })[0];
                  if (s) {
                    var d = t.get("right");
                    d.replaceWith(O().types.sequenceExpression([d.node, u(s)]));
                  }
                }
              },
            };
          return {
            visitor: {
              Program: {
                exit: function(e, t) {
                  if ((0, w().isModule)(e)) {
                    e.scope.rename("exports"),
                      e.scope.rename("module"),
                      e.scope.rename("require"),
                      e.scope.rename("__filename"),
                      e.scope.rename("__dirname"),
                      _ ||
                        ((0, D().default)(e, new Set(["module", "exports"])),
                        e.traverse(T, { scope: e.scope }));
                    var n = this.getModuleName();
                    n && (n = O().types.stringLiteral(n));
                    var a = (0, w().rewriteModuleStatementsAndPrepareHeader)(
                        e,
                        {
                          exportName: "exports",
                          loose: R,
                          strict: b,
                          strictMode: E,
                          allowTopLevelThis: v,
                          noInterop: x,
                          lazy: A,
                          throwOnUninitializedRead: S,
                          esNamespaceOnly:
                            "string" == typeof t.filename &&
                            /\.mjs$/.test(t.filename)
                              ? m
                              : y,
                        }
                      ),
                      r = a.meta,
                      i = a.headers,
                      o = r.source,
                      s = Array.isArray(o),
                      d = 0;
                    for (o = s ? o : o[Symbol.iterator](); ; ) {
                      var u;
                      if (s) {
                        if (d >= o.length) break;
                        u = o[d++];
                      } else {
                        if ((d = o.next()).done) break;
                        u = d.value;
                      }
                      var l = u,
                        c = l[0],
                        p = l[1],
                        g = O().types.callExpression(
                          O().types.identifier("require"),
                          [O().types.stringLiteral(c)]
                        ),
                        f = void 0;
                      if ((0, w().isSideEffectImport)(p)) {
                        if (p.lazy) throw new Error("Assertion failure");
                        f = O().types.expressionStatement(g);
                      } else {
                        var h = (0, w().wrapInterop)(e, g, p.interop) || g;
                        f = p.lazy
                          ? O().template.ast(C(), p.name, h, p.name)
                          : O().template.ast(P(), p.name, h);
                      }
                      (f.loc = p.loc),
                        i.push(f),
                        i.push.apply(
                          i,
                          (0, w().buildNamespaceInitStatements)(r, p, R)
                        );
                    }
                    (0, w().ensureStatementsHoisted)(i),
                      e.unshiftContainer("body", i);
                  }
                },
              },
            },
          };
        });
        exports.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function K() {
          var e,
            t = (e = n(240)) && e.__esModule ? e : { default: e };
          return (
            (K = function() {
              return t;
            }),
            t
          );
        }
        function H() {
          var e = n(3);
          return (
            (H = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var q = (0, H().template)(
            '\n  SYSTEM_REGISTER(MODULE_NAME, SOURCES, function (EXPORT_IDENTIFIER, CONTEXT_IDENTIFIER) {\n    "use strict";\n    BEFORE_BODY;\n    return {\n      setters: SETTERS,\n      execute: function () {\n        BODY;\n      }\n    };\n  });\n'
          ),
          f = (0, H().template)(
            '\n  for (var KEY in TARGET) {\n    if (KEY !== "default" && KEY !== "__esModule") EXPORT_OBJ[KEY] = TARGET[KEY];\n  }\n'
          );
        function Y(e, t, n, a, r) {
          var i = [];
          if (1 === n.length)
            i.push(
              H().types.expressionStatement(
                H().types.callExpression(t, [
                  H().types.stringLiteral(n[0]),
                  a[0],
                ])
              )
            );
          else if (r) {
            var o = e.scope.generateUid("exportObj");
            i.push(
              H().types.variableDeclaration("var", [
                H().types.variableDeclarator(
                  H().types.identifier(o),
                  H().types.objectExpression([])
                ),
              ])
            ),
              i.push(
                f({
                  KEY: e.scope.generateUidIdentifier("key"),
                  EXPORT_OBJ: H().types.identifier(o),
                  TARGET: r,
                })
              );
            for (var s = 0; s < n.length; s++) {
              var d = n[s],
                u = a[s];
              i.push(
                H().types.expressionStatement(
                  H().types.assignmentExpression(
                    "=",
                    H().types.memberExpression(
                      H().types.identifier(o),
                      H().types.identifier(d)
                    ),
                    u
                  )
                )
              );
            }
            i.push(
              H().types.expressionStatement(
                H().types.callExpression(t, [H().types.identifier(o)])
              )
            );
          } else {
            for (var l = [], c = 0; c < n.length; c++) {
              var p = n[c],
                g = a[c];
              l.push(H().types.objectProperty(H().types.identifier(p), g));
            }
            i.push(
              H().types.expressionStatement(
                H().types.callExpression(t, [H().types.objectExpression(l)])
              )
            );
          }
          return i;
        }
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.systemGlobal,
            W = void 0 === n ? "System" : n,
            v = Symbol(),
            G = {
              "AssignmentExpression|UpdateExpression": function(e) {
                if (!e.node[v]) {
                  e.node[v] = !0;
                  var t = e.get(
                    e.isAssignmentExpression() ? "left" : "argument"
                  );
                  if (t.isObjectPattern() || t.isArrayPattern()) {
                    var n = [e.node];
                    for (var a in t.getBindingIdentifiers()) {
                      if (this.scope.getBinding(a) !== e.scope.getBinding(a))
                        return;
                      var r = this.exports[a];
                      if (!r) return;
                      var i = r,
                        o = Array.isArray(i),
                        s = 0;
                      for (i = o ? i : i[Symbol.iterator](); ; ) {
                        var d;
                        if (o) {
                          if (s >= i.length) break;
                          d = i[s++];
                        } else {
                          if ((s = i.next()).done) break;
                          d = s.value;
                        }
                        var u = d;
                        n.push(
                          this.buildCall(u, H().types.identifier(a)).expression
                        );
                      }
                    }
                    e.replaceWith(H().types.sequenceExpression(n));
                  } else if (t.isIdentifier()) {
                    var l = t.node.name;
                    if (this.scope.getBinding(l) === e.scope.getBinding(l)) {
                      var c = this.exports[l];
                      if (c) {
                        var p = e.node,
                          g = e.isUpdateExpression({ prefix: !1 });
                        g &&
                          (p = H().types.binaryExpression(
                            p.operator[0],
                            H().types.unaryExpression(
                              "+",
                              H().types.cloneNode(p.argument)
                            ),
                            H().types.numericLiteral(1)
                          ));
                        var f = c,
                          h = Array.isArray(f),
                          R = 0;
                        for (f = h ? f : f[Symbol.iterator](); ; ) {
                          var y;
                          if (h) {
                            if (R >= f.length) break;
                            y = f[R++];
                          } else {
                            if ((R = f.next()).done) break;
                            y = R.value;
                          }
                          var m = y;
                          p = this.buildCall(m, p).expression;
                        }
                        g && (p = H().types.sequenceExpression([p, e.node])),
                          e.replaceWith(p);
                      }
                    }
                  }
                }
              },
            };
          return {
            visitor: {
              CallExpression: function(e, t) {
                "Import" === e.node.callee.type &&
                  e.replaceWith(
                    H().types.callExpression(
                      H().types.memberExpression(
                        H().types.identifier(t.contextIdent),
                        H().types.identifier("import")
                      ),
                      e.node.arguments
                    )
                  );
              },
              MetaProperty: function(e, t) {
                "import" === e.node.meta.name &&
                  "meta" === e.node.property.name &&
                  e.replaceWith(
                    H().types.memberExpression(
                      H().types.identifier(t.contextIdent),
                      H().types.identifier("meta")
                    )
                  );
              },
              ReferencedIdentifier: function(e, t) {
                "__moduleName" != e.node.name ||
                  e.scope.hasBinding("__moduleName") ||
                  e.replaceWith(
                    H().types.memberExpression(
                      H().types.identifier(t.contextIdent),
                      H().types.identifier("id")
                    )
                  );
              },
              Program: {
                enter: function(e, t) {
                  t.contextIdent = e.scope.generateUid("context");
                },
                exit: function(R, e) {
                  var y = R.scope.generateUid("export"),
                    t = e.contextIdent,
                    n = Object.create(null),
                    r = [],
                    a = [],
                    m = [],
                    v = [],
                    i = [],
                    o = [];
                  function s(e, t) {
                    (n[e] = n[e] || []), n[e].push(t);
                  }
                  function d(t, e, n) {
                    var a;
                    r.forEach(function(e) {
                      e.key === t && (a = e);
                    }),
                      a || r.push((a = { key: t, imports: [], exports: [] })),
                      (a[e] = a[e].concat(n));
                  }
                  function u(e, t) {
                    return H().types.expressionStatement(
                      H().types.callExpression(H().types.identifier(y), [
                        H().types.stringLiteral(e),
                        t,
                      ])
                    );
                  }
                  var l = R.get("body"),
                    c = Array.isArray(l),
                    p = 0;
                  for (l = c ? l : l[Symbol.iterator](); ; ) {
                    var g;
                    if (c) {
                      if (p >= l.length) break;
                      g = l[p++];
                    } else {
                      if ((p = l.next()).done) break;
                      g = p.value;
                    }
                    var f = g;
                    if (f.isFunctionDeclaration()) a.push(f.node), o.push(f);
                    else if (f.isImportDeclaration()) {
                      var h = f.node.source.value;
                      for (var b in (d(h, "imports", f.node.specifiers),
                      f.getBindingIdentifiers()))
                        f.scope.removeBinding(b),
                          i.push(H().types.identifier(b));
                      f.remove();
                    } else if (f.isExportAllDeclaration())
                      d(f.node.source.value, "exports", f.node), f.remove();
                    else if (f.isExportDefaultDeclaration()) {
                      var E = f.get("declaration");
                      if (E.isClassDeclaration() || E.isFunctionDeclaration()) {
                        var x = E.node.id,
                          A = [];
                        x
                          ? (A.push(E.node),
                            A.push(u("default", H().types.cloneNode(x))),
                            s(x.name, "default"))
                          : A.push(
                              u("default", H().types.toExpression(E.node))
                            ),
                          E.isClassDeclaration()
                            ? f.replaceWithMultiple(A)
                            : ((a = a.concat(A)), o.push(f));
                      } else f.replaceWith(u("default", E.node));
                    } else if (f.isExportNamedDeclaration()) {
                      var S = f.get("declaration");
                      if (S.node)
                        if ((f.replaceWith(S), f.isFunction())) {
                          var _ = S.node,
                            T = _.id.name;
                          s(T, T),
                            a.push(_),
                            a.push(u(T, H().types.cloneNode(_.id))),
                            o.push(f);
                        } else if (f.isClass()) {
                          var P = S.node.id.name;
                          s(P, P),
                            f.insertAfter([u(P, H().types.identifier(P))]);
                        } else for (var C in S.getBindingIdentifiers()) s(C, C);
                      else {
                        var w = f.node.specifiers;
                        if (w && w.length)
                          if (f.node.source)
                            d(f.node.source.value, "exports", w), f.remove();
                          else {
                            var D = [],
                              O = w,
                              F = Array.isArray(O),
                              k = 0;
                            for (O = F ? O : O[Symbol.iterator](); ; ) {
                              var j;
                              if (F) {
                                if (k >= O.length) break;
                                j = O[k++];
                              } else {
                                if ((k = O.next()).done) break;
                                j = k.value;
                              }
                              var M = j;
                              f.scope.getBinding(M.local.name) ||
                                D.push(u(M.exported.name, M.local)),
                                s(M.local.name, M.exported.name);
                            }
                            f.replaceWithMultiple(D);
                          }
                      }
                    }
                  }
                  r.forEach(function(e) {
                    var t = [],
                      n = R.scope.generateUid(e.key),
                      a = e.imports,
                      r = Array.isArray(a),
                      i = 0;
                    for (a = r ? a : a[Symbol.iterator](); ; ) {
                      var o;
                      if (r) {
                        if (i >= a.length) break;
                        o = a[i++];
                      } else {
                        if ((i = a.next()).done) break;
                        o = i.value;
                      }
                      var s = o;
                      H().types.isImportNamespaceSpecifier(s)
                        ? t.push(
                            H().types.expressionStatement(
                              H().types.assignmentExpression(
                                "=",
                                s.local,
                                H().types.identifier(n)
                              )
                            )
                          )
                        : H().types.isImportDefaultSpecifier(s) &&
                          (s = H().types.importSpecifier(
                            s.local,
                            H().types.identifier("default")
                          )),
                        H().types.isImportSpecifier(s) &&
                          t.push(
                            H().types.expressionStatement(
                              H().types.assignmentExpression(
                                "=",
                                s.local,
                                H().types.memberExpression(
                                  H().types.identifier(n),
                                  s.imported
                                )
                              )
                            )
                          );
                    }
                    if (e.exports.length) {
                      var d = [],
                        u = [],
                        l = !1,
                        c = e.exports,
                        p = Array.isArray(c),
                        g = 0;
                      for (c = p ? c : c[Symbol.iterator](); ; ) {
                        var f;
                        if (p) {
                          if (g >= c.length) break;
                          f = c[g++];
                        } else {
                          if ((g = c.next()).done) break;
                          f = g.value;
                        }
                        var h = f;
                        H().types.isExportAllDeclaration(h)
                          ? (l = !0)
                          : H().types.isExportSpecifier(h) &&
                            (d.push(h.exported.name),
                            u.push(
                              H().types.memberExpression(
                                H().types.identifier(n),
                                h.local
                              )
                            ));
                      }
                      t = t.concat(
                        Y(
                          R,
                          H().types.identifier(y),
                          d,
                          u,
                          l ? H().types.identifier(n) : null
                        )
                      );
                    }
                    v.push(H().types.stringLiteral(e.key)),
                      m.push(
                        H().types.functionExpression(
                          null,
                          [H().types.identifier(n)],
                          H().types.blockStatement(t)
                        )
                      );
                  });
                  var I = this.getModuleName();
                  I && (I = H().types.stringLiteral(I));
                  var N = [];
                  if (
                    ((0, K().default)(
                      R,
                      function(e, t, n) {
                        i.push(e), n || N.push(t);
                      },
                      null
                    ),
                    i.length &&
                      a.unshift(
                        H().types.variableDeclaration(
                          "var",
                          i.map(function(e) {
                            return H().types.variableDeclarator(e);
                          })
                        )
                      ),
                    N.length)
                  ) {
                    for (
                      var B = [], L = R.scope.buildUndefinedNode(), U = 0;
                      U < N.length;
                      U++
                    )
                      B[U] = L;
                    a = a.concat(Y(R, H().types.identifier(y), N, B, null));
                  }
                  R.traverse(G, { exports: n, buildCall: u, scope: R.scope });
                  for (var V = 0; V < o.length; V++) o[V].remove();
                  R.node.body = [
                    q({
                      SYSTEM_REGISTER: H().types.memberExpression(
                        H().types.identifier(W),
                        H().types.identifier("register")
                      ),
                      BEFORE_BODY: a,
                      MODULE_NAME: I,
                      SETTERS: H().types.arrayExpression(m),
                      SOURCES: H().types.arrayExpression(v),
                      BODY: R.node.body,
                      EXPORT_IDENTIFIER: H().types.identifier(y),
                      CONTEXT_IDENTIFIER: H().types.identifier(t),
                    }),
                  ];
                },
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function O() {
          var e = n(6);
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e = n(99);
          return (
            (F = function() {
              return e;
            }),
            e
          );
        }
        function k() {
          var e = n(3);
          return (
            (k = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var j = (0, k().template)(
            "\n  GLOBAL_REFERENCE = GLOBAL_REFERENCE || {}\n"
          ),
          M = (0, k().template)(
            '\n  (function (global, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(MODULE_NAME, AMD_ARGUMENTS, factory);\n    } else if (typeof exports !== "undefined") {\n      factory(COMMONJS_ARGUMENTS);\n    } else {\n      var mod = { exports: {} };\n      factory(BROWSER_ARGUMENTS);\n\n      GLOBAL_TO_ASSIGN;\n    }\n  })(this, function(IMPORT_NAMES) {\n  })\n'
          ),
          r = (0, a().declare)(function(e, t) {
            e.assertVersion(7);
            var A = t.globals,
              S = t.exactGlobals,
              _ = t.loose,
              T = t.allowTopLevelThis,
              P = t.strict,
              C = t.strictMode,
              w = t.noInterop;
            function D(e, t, n) {
              var a;
              if (t) {
                var r = e[n];
                a = r
                  ? r.split(".").reduce(function(e, t) {
                      return k().types.memberExpression(
                        e,
                        k().types.identifier(t)
                      );
                    }, k().types.identifier("global"))
                  : k().types.memberExpression(
                      k().types.identifier("global"),
                      k().types.identifier(k().types.toIdentifier(n))
                    );
              } else {
                var i = (0, O().basename)(n, (0, O().extname)(n)),
                  o = e[i] || i;
                a = k().types.memberExpression(
                  k().types.identifier("global"),
                  k().types.identifier(k().types.toIdentifier(o))
                );
              }
              return a;
            }
            return {
              visitor: {
                Program: {
                  exit: function(e) {
                    if ((0, F().isModule)(e)) {
                      var t = A || {},
                        u = this.getModuleName();
                      u && (u = k().types.stringLiteral(u));
                      var n = (0, F().rewriteModuleStatementsAndPrepareHeader)(
                          e,
                          {
                            loose: _,
                            strict: P,
                            strictMode: C,
                            allowTopLevelThis: T,
                            noInterop: w,
                          }
                        ),
                        a = n.meta,
                        r = n.headers,
                        i = [],
                        o = [],
                        s = [],
                        d = [];
                      (0, F().hasExports)(a) &&
                        (i.push(k().types.stringLiteral("exports")),
                        o.push(k().types.identifier("exports")),
                        s.push(
                          k().types.memberExpression(
                            k().types.identifier("mod"),
                            k().types.identifier("exports")
                          )
                        ),
                        d.push(k().types.identifier(a.exportName)));
                      var l = a.source,
                        c = Array.isArray(l),
                        p = 0;
                      for (l = c ? l : l[Symbol.iterator](); ; ) {
                        var g;
                        if (c) {
                          if (p >= l.length) break;
                          g = l[p++];
                        } else {
                          if ((p = l.next()).done) break;
                          g = p.value;
                        }
                        var f = g,
                          h = f[0],
                          R = f[1];
                        if (
                          (i.push(k().types.stringLiteral(h)),
                          o.push(
                            k().types.callExpression(
                              k().types.identifier("require"),
                              [k().types.stringLiteral(h)]
                            )
                          ),
                          s.push(D(t, S, h)),
                          d.push(k().types.identifier(R.name)),
                          !(0, F().isSideEffectImport)(R))
                        ) {
                          var y = (0, F().wrapInterop)(
                            e,
                            k().types.identifier(R.name),
                            R.interop
                          );
                          if (y) {
                            var m = k().types.expressionStatement(
                              k().types.assignmentExpression(
                                "=",
                                k().types.identifier(R.name),
                                y
                              )
                            );
                            (m.loc = a.loc), r.push(m);
                          }
                        }
                        r.push.apply(
                          r,
                          (0, F().buildNamespaceInitStatements)(a, R, _)
                        );
                      }
                      (0, F().ensureStatementsHoisted)(r),
                        e.unshiftContainer("body", r);
                      var v = e.node,
                        b = v.body,
                        E = v.directives;
                      (e.node.directives = []), (e.node.body = []);
                      var x = e
                        .pushContainer("body", [
                          M({
                            MODULE_NAME: u,
                            AMD_ARGUMENTS: k().types.arrayExpression(i),
                            COMMONJS_ARGUMENTS: o,
                            BROWSER_ARGUMENTS: s,
                            IMPORT_NAMES: d,
                            GLOBAL_TO_ASSIGN: (function(e, t, n, a) {
                              var r = u
                                  ? u.value
                                  : (0, O().basename)(n, (0, O().extname)(n)),
                                i = k().types.memberExpression(
                                  k().types.identifier("global"),
                                  k().types.identifier(
                                    k().types.toIdentifier(r)
                                  )
                                ),
                                o = [];
                              if (t) {
                                var s = e[r];
                                if (s) {
                                  o = [];
                                  var d = s.split(".");
                                  i = d.slice(1).reduce(function(e, t) {
                                    return (
                                      o.push(
                                        j({
                                          GLOBAL_REFERENCE: k().types.cloneNode(
                                            e
                                          ),
                                        })
                                      ),
                                      k().types.memberExpression(
                                        e,
                                        k().types.identifier(t)
                                      )
                                    );
                                  }, k().types.memberExpression(
                                    k().types.identifier("global"),
                                    k().types.identifier(d[0])
                                  ));
                                }
                              }
                              return (
                                o.push(
                                  k().types.expressionStatement(
                                    k().types.assignmentExpression(
                                      "=",
                                      i,
                                      k().types.memberExpression(
                                        k().types.identifier("mod"),
                                        k().types.identifier("exports")
                                      )
                                    )
                                  )
                                ),
                                o
                              );
                            })(t, S, this.filename || "unknown"),
                          }),
                        ])[0]
                        .get("expression.arguments")[1]
                        .get("body");
                      x.pushContainer("directives", E),
                        x.pushContainer("body", b);
                    }
                  },
                },
              },
            };
          });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e,
            t = (e = n(96)) && e.__esModule ? e : { default: e };
          return (
            (o = function() {
              return t;
            }),
            t
          );
        }
        function s() {
          var e = n(3);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                ObjectExpression: function(e, r) {
                  var t,
                    i = function() {
                      return (t = t || e.scope.generateUidIdentifier("obj"));
                    };
                  e.get("properties").forEach(function(e) {
                    var t, n, a;
                    e.isMethod() &&
                      ((t = e),
                      (n = i),
                      (a = r),
                      new (o()).default({
                        getObjectRef: n,
                        methodPath: t,
                        file: a,
                      }).replace());
                  }),
                    t &&
                      (e.scope.push({ id: s().types.cloneNode(t) }),
                      e.replaceWith(
                        s().types.assignmentExpression(
                          "=",
                          s().types.cloneNode(t),
                          e.node
                        )
                      ));
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = o(n(939)),
          i = o(n(941));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var s = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var a = t.loose;
          return {
            visitor: {
              Function: function(e) {
                e.isArrowFunctionExpression() &&
                  e.get("params").some(function(e) {
                    return e.isRestElement() || e.isAssignmentPattern();
                  }) &&
                  e.arrowFunctionToExpression();
                var t = (0, i.default)(e),
                  n = (0, r.default)(e, a);
                (t || n) && e.scope.crawl();
              },
            },
          };
        });
        t.default = s;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = n(3);
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                ObjectMethod: function(e) {
                  var t = e.node;
                  if ("method" === t.kind) {
                    var n = r().types.functionExpression(
                      null,
                      t.params,
                      t.body,
                      t.generator,
                      t.async
                    );
                    (n.returnType = t.returnType),
                      e.replaceWith(
                        r().types.objectProperty(t.key, n, t.computed)
                      );
                  }
                },
                ObjectProperty: function(e) {
                  var t = e.node;
                  t.shorthand && (t.shorthand = !1);
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function f() {
          var e = n(3);
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var c = t.loose;
          function l(e) {
            for (var t = 0; t < e.length; t++)
              if (f().types.isSpreadElement(e[t])) return !0;
            return !1;
          }
          function p(e, t) {
            return e.length ? (t.push(f().types.arrayExpression(e)), []) : e;
          }
          function g(e, t) {
            var n,
              a,
              r = [],
              i = [],
              o = e,
              s = Array.isArray(o),
              d = 0;
            for (o = s ? o : o[Symbol.iterator](); ; ) {
              var u;
              if (s) {
                if (d >= o.length) break;
                u = o[d++];
              } else {
                if ((d = o.next()).done) break;
                u = d.value;
              }
              var l = u;
              f().types.isSpreadElement(l)
                ? ((i = p(i, r)),
                  r.push(
                    ((n = l),
                    (a = t),
                    c &&
                    !f().types.isIdentifier(n.argument, { name: "arguments" })
                      ? n.argument
                      : a.toArray(n.argument, !0))
                  ))
                : i.push(l);
            }
            return p(i, r), r;
          }
          return {
            visitor: {
              ArrayExpression: function(e) {
                var t = e.node,
                  n = e.scope,
                  a = t.elements;
                if (l(a)) {
                  var r = g(a, n),
                    i = r.shift();
                  0 !== r.length || i === a[0].argument
                    ? e.replaceWith(
                        f().types.callExpression(
                          f().types.memberExpression(
                            i,
                            f().types.identifier("concat")
                          ),
                          r
                        )
                      )
                    : e.replaceWith(i);
                }
              },
              CallExpression: function(e) {
                var t = e.node,
                  n = e.scope,
                  a = t.arguments;
                if (l(a)) {
                  var r = e.get("callee");
                  if (!r.isSuper()) {
                    var i,
                      o = n.buildUndefinedNode();
                    t.arguments = [];
                    var s = (i =
                      1 === a.length && "arguments" === a[0].argument.name
                        ? [a[0].argument]
                        : g(a, n)).shift();
                    i.length
                      ? t.arguments.push(
                          f().types.callExpression(
                            f().types.memberExpression(
                              s,
                              f().types.identifier("concat")
                            ),
                            i
                          )
                        )
                      : t.arguments.push(s);
                    var d = t.callee;
                    if (r.isMemberExpression()) {
                      var u = n.maybeGenerateMemoised(d.object);
                      (o = u
                        ? ((d.object = f().types.assignmentExpression(
                            "=",
                            u,
                            d.object
                          )),
                          u)
                        : f().types.cloneNode(d.object)),
                        f().types.appendToMemberExpression(
                          d,
                          f().types.identifier("apply")
                        );
                    } else
                      t.callee = f().types.memberExpression(
                        t.callee,
                        f().types.identifier("apply")
                      );
                    f().types.isSuper(o) && (o = f().types.thisExpression()),
                      t.arguments.unshift(f().types.cloneNode(o));
                  }
                }
              },
              NewExpression: function(e) {
                var t = e.node,
                  n = e.scope,
                  a = t.arguments;
                if (l(a)) {
                  var r = g(a, n),
                    i = r.shift();
                  (a = r.length
                    ? f().types.callExpression(
                        f().types.memberExpression(
                          i,
                          f().types.identifier("concat")
                        ),
                        r
                      )
                    : i),
                    e.replaceWith(
                      f().types.callExpression(e.hub.addHelper("construct"), [
                        t.callee,
                        a,
                      ])
                    );
                }
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(60));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                RegExpLiteral: function(e) {
                  var t = e.node;
                  r().is(t, "y") &&
                    e.replaceWith(
                      i().types.newExpression(i().types.identifier("RegExp"), [
                        i().types.stringLiteral(t.pattern),
                        i().types.stringLiteral(t.flags),
                      ])
                    );
                },
              },
            }
          );
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function b() {
          var e = r()([
            "\n          function ",
            "() {\n            const data = ",
            ";\n            ",
            " = function() { return data };\n            return data;\n          } \n        ",
          ]);
          return (
            (b = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = n(2);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function E() {
          var e = n(3);
          return (
            (E = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = void 0);
        var o = (0, i().declare)(function(e, t) {
          e.assertVersion(7);
          var f = t.loose,
            v = "taggedTemplateLiteral";
          return (
            f && (v += "Loose"),
            {
              visitor: {
                TaggedTemplateExpression: function(e) {
                  var t = e.node,
                    n = t.quasi,
                    a = [],
                    r = [],
                    i = !0,
                    o = n.quasis,
                    s = Array.isArray(o),
                    d = 0;
                  for (o = s ? o : o[Symbol.iterator](); ; ) {
                    var u;
                    if (s) {
                      if (d >= o.length) break;
                      u = o[d++];
                    } else {
                      if ((d = o.next()).done) break;
                      u = d.value;
                    }
                    var l = u.value,
                      c = l.raw,
                      p = l.cooked,
                      g =
                        null == p
                          ? e.scope.buildUndefinedNode()
                          : E().types.stringLiteral(p);
                    a.push(g),
                      r.push(E().types.stringLiteral(c)),
                      c !== p && (i = !1);
                  }
                  var f = e.scope.getProgramParent(),
                    h = f.generateUidIdentifier("templateObject"),
                    R = this.addHelper(v),
                    y = [E().types.arrayExpression(a)];
                  i || y.push(E().types.arrayExpression(r));
                  var m = E().template.ast(
                    b(),
                    h,
                    E().types.callExpression(R, y),
                    h
                  );
                  f.path.unshiftContainer("body", m),
                    e.replaceWith(
                      E().types.callExpression(
                        t.tag,
                        [
                          E().types.callExpression(E().types.cloneNode(h), []),
                        ].concat(n.expressions)
                      )
                    );
                },
                TemplateLiteral: function(e) {
                  var t = [],
                    n = e.get("expressions"),
                    a = 0,
                    r = e.node.quasis,
                    i = Array.isArray(r),
                    o = 0;
                  for (r = i ? r : r[Symbol.iterator](); ; ) {
                    var s;
                    if (i) {
                      if (o >= r.length) break;
                      s = r[o++];
                    } else {
                      if ((o = r.next()).done) break;
                      s = o.value;
                    }
                    var d = s;
                    if (
                      (d.value.cooked &&
                        t.push(E().types.stringLiteral(d.value.cooked)),
                      a < n.length)
                    ) {
                      var u = n[a++].node;
                      E().types.isStringLiteral(u, { value: "" }) || t.push(u);
                    }
                  }
                  var l = !f || !E().types.isStringLiteral(t[1]);
                  !E().types.isStringLiteral(t[0]) &&
                    l &&
                    t.unshift(E().types.stringLiteral(""));
                  var c,
                    p = t[0];
                  if (f)
                    for (var g = 1; g < t.length; g++)
                      p = E().types.binaryExpression("+", p, t[g]);
                  else
                    1 < t.length &&
                      ((c = !0),
                      (p = t.reduce(function(e, t) {
                        var n = E().types.isLiteral(t);
                        return (
                          !n && c && (c = !(n = !0)),
                          n && E().types.isCallExpression(e)
                            ? (e.arguments.push(t), e)
                            : E().types.callExpression(
                                E().types.memberExpression(
                                  e,
                                  E().types.identifier("concat")
                                ),
                                [t]
                              )
                        );
                      })));
                  e.replaceWith(p);
                },
              },
            }
          );
        });
        exports.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = n(3);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                Scope: function(e) {
                  var t = e.scope;
                  t.getBinding("Symbol") && t.rename("Symbol");
                },
                UnaryExpression: function(e) {
                  var t = e.node,
                    n = e.parent;
                  if ("typeof" === t.operator) {
                    if (
                      e.parentPath.isBinaryExpression() &&
                      0 <=
                        d().types.EQUALITY_BINARY_OPERATORS.indexOf(n.operator)
                    ) {
                      var a = e.getOpposite();
                      if (
                        a.isLiteral() &&
                        "symbol" !== a.node.value &&
                        "object" !== a.node.value
                      )
                        return;
                    }
                    var r = this.addHelper("typeof");
                    if (
                      !e.findParent(function(e) {
                        return (
                          (e.isVariableDeclarator() && e.node.id === r) ||
                          (e.isFunctionDeclaration() &&
                            e.node.id &&
                            e.node.id.name === r.name)
                        );
                      })
                    ) {
                      var i = d().types.callExpression(r, [t.argument]),
                        o = e.get("argument");
                      if (
                        o.isIdentifier() &&
                        !e.scope.hasBinding(o.node.name, !0)
                      ) {
                        var s = d().types.unaryExpression(
                          "typeof",
                          d().types.cloneNode(t.argument)
                        );
                        e.replaceWith(
                          d().types.conditionalExpression(
                            d().types.binaryExpression(
                              "===",
                              s,
                              d().types.stringLiteral("undefined")
                            ),
                            d().types.stringLiteral("undefined"),
                            i
                          )
                        );
                      } else e.replaceWith(i);
                    }
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(98)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(60));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                RegExpLiteral: function(e) {
                  var t = e.node;
                  i().is(t, "u") &&
                    ((t.pattern = (0, r().default)(t.pattern, t.flags)),
                    i().pullFlag(t, "u"));
                },
              },
            }
          );
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(225)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function u() {
          var e = n(3);
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          function i(e, t) {
            var n,
              a,
              r,
              i = ((a = t),
              (r = (n = e).object || n.callee.object),
              a.isStatic(r) && r);
            if (i) return u().types.cloneNode(i);
            var o,
              s,
              d =
                (s = (o = t).path.getData("functionBind")) ||
                ((s = o.generateDeclaredUidIdentifier("context")),
                o.path.setData("functionBind", s));
            return (
              e.object
                ? (e.callee = u().types.sequenceExpression([
                    u().types.assignmentExpression("=", d, e.object),
                    e.callee,
                  ]))
                : (e.callee.object = u().types.assignmentExpression(
                    "=",
                    d,
                    e.callee.object
                  )),
              d
            );
          }
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                CallExpression: function(e) {
                  var t = e.node,
                    n = e.scope,
                    a = t.callee;
                  if (u().types.isBindExpression(a)) {
                    var r = i(a, n);
                    (t.callee = u().types.memberExpression(
                      a.callee,
                      u().types.identifier("call")
                    )),
                      t.arguments.unshift(r);
                  }
                },
                BindExpression: function(e) {
                  var t = e.node,
                    n = i(t, e.scope);
                  e.replaceWith(
                    u().types.callExpression(
                      u().types.memberExpression(
                        t.callee,
                        u().types.identifier("bind")
                      ),
                      [n]
                    )
                  );
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          Object.defineProperty(t, "default", {
            enumerable: !0,
            get: function() {
              return ((t = (e = n(960)) && e.__esModule ? e : { default: e }),
              t).default;
              var e, t;
            },
          });
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var c = n(137),
          a = n(108),
          p = n.n(a),
          r = n(255),
          g = n.n(r),
          i = n(256),
          f = n.n(i),
          o = n(110),
          h = n.n(o),
          s = n(257),
          R = n.n(s),
          d = n(107),
          y = n.n(d);
        t.default = function(e, t) {
          void 0 === t && (t = {});
          var n = t,
            a = n.loose,
            r = void 0 !== a && a,
            i = n.useBuiltIns,
            o = void 0 !== i && i,
            s = n.decoratorsLegacy,
            d = void 0 !== s && s,
            u = n.pipelineProposal,
            l = void 0 === u ? "minimal" : u;
          return {
            presets: [
              [c.default, { loose: r, useBuiltIns: o, decoratorsLegacy: d }],
            ],
            plugins: [
              p.a,
              g.a,
              [f.a, { loose: r }],
              [h.a, { proposal: l }],
              [R.a, { loose: r }],
              y.a,
            ],
          };
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var u = n(138),
          a = n(106),
          l = n.n(a),
          r = n(252),
          c = n.n(r),
          i = n(109),
          p = n.n(i),
          o = n(253),
          g = n.n(o),
          s = n(254),
          f = n.n(s);
        t.default = function(e, t) {
          void 0 === t && (t = {});
          var n = t,
            a = n.loose,
            r = void 0 !== a && a,
            i = n.useBuiltIns,
            o = void 0 !== i && i,
            s = n.decoratorsLegacy,
            d = void 0 !== s && s;
          return {
            presets: [[u.default, { loose: r, useBuiltIns: o }]],
            plugins: [[l.a, { legacy: d }], c.a, p.a, g.a, f.a],
          };
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(103),
          r = n.n(a),
          i = n(104),
          o = n.n(i),
          s = n(105),
          d = n(251),
          u = n.n(d);
        t.default = function(e, t) {
          var n = !1;
          return (
            void 0 !== t && void 0 !== t.loose && (n = t.loose),
            { plugins: [r.a, o.a, [s.default, { loose: n }], u.a] }
          );
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(14),
          r = n.n(a);
        function f() {
          var e = o(n(140));
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = o(n(10));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e = n(55);
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function h() {
          var e = o(n(4));
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e,
            t = (e = n(196)) && e.__esModule ? e : { default: e };
          return (
            (i = function() {
              return t;
            }),
            t
          );
        }
        function o(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = void 0);
        var l = {
            enter: function(e, t) {
              var n = e.node.loc;
              n && ((t.loc = n), e.stop());
            },
          },
          s = (function() {
            function e(e, t) {
              var n = this,
                a = t.code,
                r = t.ast,
                i = t.inputMap;
              (this._map = new Map()),
                (this.declarations = {}),
                (this.path = null),
                (this.ast = {}),
                (this.metadata = {}),
                (this.code = ""),
                (this.inputMap = null),
                (this.hub = {
                  file: this,
                  getCode: function() {
                    return n.code;
                  },
                  getScope: function() {
                    return n.scope;
                  },
                  addHelper: this.addHelper.bind(this),
                  buildError: this.buildCodeFrameError.bind(this),
                }),
                (this.opts = e),
                (this.code = a),
                (this.ast = r),
                (this.inputMap = i),
                (this.path = d()
                  .NodePath.get({
                    hub: this.hub,
                    parentPath: null,
                    parent: this.ast,
                    container: this.ast,
                    key: "program",
                  })
                  .setContext()),
                (this.scope = this.path.scope);
            }
            var t = e.prototype;
            return (
              (t.set = function(e, t) {
                if ("helpersNamespace" === e)
                  throw new Error(
                    "Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility.If you are using @gerhobbelt/babel-plugin-external-helpers you will need to use a newer version than the one you currently have installed. If you have your own implementation, you'll want to explore using 'helperGenerator' alongside 'file.availableHelper()'."
                  );
                this._map.set(e, t);
              }),
              (t.get = function(e) {
                return this._map.get(e);
              }),
              (t.has = function(e) {
                return this._map.has(e);
              }),
              (t.getModuleName = function() {
                var e = this.opts,
                  t = e.filename,
                  n = e.filenameRelative,
                  a = void 0 === n ? t : n,
                  r = e.moduleId,
                  i = e.moduleIds,
                  o = void 0 === i ? !!r : i,
                  s = e.getModuleId,
                  d = e.sourceRoot,
                  u = e.moduleRoot,
                  l = void 0 === u ? d : u,
                  c = e.sourceRoot,
                  p = void 0 === c ? l : c;
                if (!o) return null;
                if (null != r && !s) return r;
                var g = null != l ? l + "/" : "";
                if (a) {
                  var f = null != p ? new RegExp("^" + p + "/?") : "";
                  g += a.replace(f, "").replace(/\.(\w*?)$/, "");
                }
                return (g = g.replace(/\\\\?/g, "/")), (s && s(g)) || g;
              }),
              (t.addImport = function() {
                throw new Error(
                  "This API has been removed. If you're looking for this functionality in Babel 7, you should import the '@gerhobbelt/babel-helper-module-imports' module and use the functions exposed  from that module, such as 'addNamed' or 'addDefault'."
                );
              }),
              (t.availableHelper = function(e, t) {
                var n;
                try {
                  n = f().minVersion(e);
                } catch (e) {
                  if ("BABEL_HELPER_UNKNOWN" !== e.code) throw e;
                  return !1;
                }
                return (
                  "string" != typeof t ||
                  (!i().default.intersects("<" + n, t) &&
                    !i().default.intersects(">=8.0.0", t))
                );
              }),
              (t.addHelper = function(e) {
                var t = this,
                  n = this.declarations[e];
                if (n) return h().cloneNode(n);
                var a = this.get("helperGenerator");
                if (a) {
                  var r = a(e);
                  if (r) return r;
                }
                var i = (this.declarations[
                    e
                  ] = this.scope.generateUidIdentifier(e)),
                  o = {},
                  s = f().getDependencies(e),
                  d = Array.isArray(s),
                  u = 0;
                for (s = d ? s : s[Symbol.iterator](); ; ) {
                  var l;
                  if (d) {
                    if (u >= s.length) break;
                    l = s[u++];
                  } else {
                    if ((u = s.next()).done) break;
                    l = u.value;
                  }
                  var c = l;
                  o[c] = this.addHelper(c);
                }
                var p = f().get(
                    e,
                    function(e) {
                      return o[e];
                    },
                    i,
                    Object.keys(this.scope.getAllBindings())
                  ),
                  g = p.nodes;
                return (
                  p.globals.forEach(function(e) {
                    t.path.scope.hasBinding(e, !0) && t.path.scope.rename(e);
                  }),
                  g.forEach(function(e) {
                    e._compact = !0;
                  }),
                  this.path.unshiftContainer("body", g),
                  this.path.get("body").forEach(function(e) {
                    -1 !== g.indexOf(e.node) &&
                      e.isVariableDeclaration() &&
                      t.scope.registerDeclaration(e);
                  }),
                  i
                );
              }),
              (t.addTemplateObject = function() {
                throw new Error(
                  "This function has been moved into the template literal transform itself."
                );
              }),
              (t.buildCodeFrameError = function(e, t, n) {
                void 0 === n && (n = SyntaxError);
                var a = e && (e.loc || e._loc);
                if (((t = this.opts.filename + ": " + t), !a && e)) {
                  var r = { loc: null };
                  (0, d().default)(e, l, this.scope, r);
                  var i =
                    "This is an error on an internal node. Probably an internal error.";
                  (a = r.loc) && (i += " Location has been estimated."),
                    (t += " (" + i + ")");
                }
                if (a) {
                  var o = this.opts.highlightCode,
                    s = void 0 === o || o;
                  t +=
                    "\n" +
                    (0, u().codeFrameColumns)(
                      this.code,
                      {
                        start: {
                          line: a.start.line,
                          column: a.start.column + 1,
                        },
                      },
                      { highlightCode: s }
                    );
                }
                return new n(t);
              }),
              r()(e, [
                {
                  key: "shebang",
                  get: function() {
                    var e = this.path.node.interpreter;
                    return e ? e.value : "";
                  },
                  set: function(e) {
                    e
                      ? this.path
                          .get("interpreter")
                          .replaceWith(h().interpreterDirective(e))
                      : this.path.get("interpreter").remove();
                  },
                },
              ]),
              e
            );
          })();
        exports.default = s;
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = a(n(10));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function A() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (A = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.get = i),
          (t.minVersion = function(e) {
            return r(e).minVersion();
          }),
          (t.getDependencies = function(e) {
            return Array.from(r(e).dependencies.values());
          }),
          (t.default = t.list = void 0);
        var c = a(n(454));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function p(e) {
          for (var t = []; e.parentPath; e = e.parentPath)
            t.push(e.key), e.inList && t.push(e.listKey);
          return t.reverse().join(".");
        }
        var o = Object.create(null);
        function r(e) {
          if (!o[e]) {
            var t = c.default[e];
            if (!t)
              throw Object.assign(new ReferenceError("Unknown helper " + e), {
                code: "BABEL_HELPER_UNKNOWN",
                helper: e,
              });
            var r = function() {
                return A().file(t.ast());
              },
              i = (function(e) {
                var a,
                  n,
                  r = new Set(),
                  i = new Set(),
                  o = new Map(),
                  s = [],
                  d = [],
                  u = [];
                if (
                  ((0, l().default)(e, {
                    ImportDeclaration: function(e) {
                      var t = e.node.source.value;
                      if (!c.default[t])
                        throw e.buildCodeFrameError("Unknown helper " + t);
                      if (
                        1 !== e.get("specifiers").length ||
                        !e.get("specifiers.0").isImportDefaultSpecifier()
                      )
                        throw e.buildCodeFrameError(
                          "Helpers can only import a default value"
                        );
                      var n = e.node.specifiers[0].local;
                      o.set(n, t), d.push(p(e));
                    },
                    ExportDefaultDeclaration: function(e) {
                      var t = e.get("declaration");
                      if (t.isFunctionDeclaration()) {
                        if (!t.node.id)
                          throw t.buildCodeFrameError(
                            "Helpers should give names to their exported func declaration"
                          );
                        a = t.node.id.name;
                      }
                      n = p(e);
                    },
                    ExportAllDeclaration: function(e) {
                      throw e.buildCodeFrameError(
                        "Helpers can only export default"
                      );
                    },
                    ExportNamedDeclaration: function(e) {
                      throw e.buildCodeFrameError(
                        "Helpers can only export default"
                      );
                    },
                    Statement: function(e) {
                      e.isModuleDeclaration() || e.skip();
                    },
                  }),
                  (0, l().default)(e, {
                    Program: function(e) {
                      var t = e.scope.getAllBindings();
                      Object.keys(t).forEach(function(e) {
                        e !== a && (o.has(t[e].identifier) || i.add(e));
                      });
                    },
                    ReferencedIdentifier: function(e) {
                      var t = e.node.name,
                        n = e.scope.getBinding(t, !0);
                      n ? o.has(n.identifier) && u.push(p(e)) : r.add(t);
                    },
                    AssignmentExpression: function(e) {
                      var t = e.get("left");
                      if (a in t.getBindingIdentifiers()) {
                        if (!t.isIdentifier())
                          throw t.buildCodeFrameError(
                            "Only simple assignments to exports are allowed in helpers"
                          );
                        var n = e.scope.getBinding(a);
                        n && n.scope.path.isProgram() && s.push(p(e));
                      }
                    },
                  }),
                  !n)
                )
                  throw new Error("Helpers must default-export something.");
                return (
                  s.reverse(),
                  {
                    globals: Array.from(r),
                    localBindingNames: Array.from(i),
                    dependencies: o,
                    exportBindingAssignments: s,
                    exportPath: n,
                    exportName: a,
                    importBindingsReferences: u,
                    importPaths: d,
                  }
                );
              })(r());
            o[e] = {
              build: function(e, t, n) {
                var a = r();
                return (
                  (function(e, t, h, n, a) {
                    if (n && !h)
                      throw new Error(
                        "Unexpected local bindings for module-based helpers."
                      );
                    if (h) {
                      var r = t.localBindingNames,
                        i = t.dependencies,
                        R = t.exportBindingAssignments,
                        y = t.exportPath,
                        m = t.exportName,
                        v = t.importBindingsReferences,
                        b = t.importPaths,
                        E = {};
                      i.forEach(function(e, t) {
                        E[t.name] = ("function" == typeof a && a(e)) || t;
                      });
                      var x = {},
                        o = new Set(n || []);
                      r.forEach(function(e) {
                        for (var t = e; o.has(t); ) t = "_" + t;
                        t !== e && (x[e] = t);
                      }),
                        "Identifier" === h.type &&
                          m !== h.name &&
                          (x[m] = h.name),
                        (0, l().default)(e, {
                          Program: function(n) {
                            var e = n.get(y),
                              t = b.map(function(e) {
                                return n.get(e);
                              }),
                              a = v.map(function(e) {
                                return n.get(e);
                              }),
                              r = e.get("declaration");
                            if ("Identifier" === h.type)
                              r.isFunctionDeclaration()
                                ? e.replaceWith(r)
                                : e.replaceWith(
                                    A().variableDeclaration("var", [
                                      A().variableDeclarator(h, r.node),
                                    ])
                                  );
                            else {
                              if ("MemberExpression" !== h.type)
                                throw new Error("Unexpected helper format.");
                              r.isFunctionDeclaration()
                                ? (R.forEach(function(e) {
                                    var t = n.get(e);
                                    t.replaceWith(
                                      A().assignmentExpression("=", h, t.node)
                                    );
                                  }),
                                  e.replaceWith(r),
                                  n.pushContainer(
                                    "body",
                                    A().expressionStatement(
                                      A().assignmentExpression(
                                        "=",
                                        h,
                                        A().identifier(m)
                                      )
                                    )
                                  ))
                                : e.replaceWith(
                                    A().expressionStatement(
                                      A().assignmentExpression("=", h, r.node)
                                    )
                                  );
                            }
                            Object.keys(x).forEach(function(e) {
                              n.scope.rename(e, x[e]);
                            });
                            var i = t,
                              o = Array.isArray(i),
                              s = 0;
                            for (i = o ? i : i[Symbol.iterator](); ; ) {
                              var d;
                              if (o) {
                                if (s >= i.length) break;
                                d = i[s++];
                              } else {
                                if ((s = i.next()).done) break;
                                d = s.value;
                              }
                              d.remove();
                            }
                            var u = a,
                              l = Array.isArray(u),
                              c = 0;
                            for (u = l ? u : u[Symbol.iterator](); ; ) {
                              var p;
                              if (l) {
                                if (c >= u.length) break;
                                p = u[c++];
                              } else {
                                if ((c = u.next()).done) break;
                                p = c.value;
                              }
                              var g = p,
                                f = A().cloneNode(E[g.node.name]);
                              g.replaceWith(f);
                            }
                            n.stop();
                          },
                        });
                    }
                  })(a, i, t, n, e),
                  { nodes: a.program.body, globals: i.globals }
                );
              },
              minVersion: function() {
                return t.minVersion;
              },
              dependencies: i.dependencies,
            };
          }
          return o[e];
        }
        function i(e, t, n, a) {
          return r(e).build(t, n, a);
        }
        var s = Object.keys(c.default)
          .map(function(e) {
            return e.replace(/^_/, "");
          })
          .filter(function(e) {
            return "__esModule" !== e;
          });
        t.list = s;
        var d = i;
        t.default = d;
      },
      function(e, t, n) {
        "use strict";
        function r() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ForAwaitStatement = t.NumericLiteralTypeAnnotation = t.ExistentialTypeParam = t.SpreadProperty = t.RestProperty = t.Flow = t.Pure = t.Generated = t.User = t.Var = t.BlockScoped = t.Referenced = t.Scope = t.Expression = t.Statement = t.BindingIdentifier = t.ReferencedMemberExpression = t.ReferencedIdentifier = void 0);
        var a = {
          types: ["Identifier", "JSXIdentifier"],
          checkPath: function(e, t) {
            var n = e.node,
              a = e.parent;
            if (!r().isIdentifier(n, t) && !r().isJSXMemberExpression(a, t)) {
              if (!r().isJSXIdentifier(n, t)) return !1;
              if (r().react.isCompatTag(n.name)) return !1;
            }
            return r().isReferenced(n, a);
          },
        };
        t.ReferencedIdentifier = a;
        var i = {
          types: ["MemberExpression"],
          checkPath: function(e) {
            var t = e.node,
              n = e.parent;
            return r().isMemberExpression(t) && r().isReferenced(t, n);
          },
        };
        t.ReferencedMemberExpression = i;
        var o = {
          types: ["Identifier"],
          checkPath: function(e) {
            var t = e.node,
              n = e.parent;
            return r().isIdentifier(t) && r().isBinding(t, n);
          },
        };
        t.BindingIdentifier = o;
        var s = {
          types: ["Statement"],
          checkPath: function(e) {
            var t = e.node,
              n = e.parent;
            if (r().isStatement(t)) {
              if (r().isVariableDeclaration(t)) {
                if (r().isForXStatement(n, { left: t })) return !1;
                if (r().isForStatement(n, { init: t })) return !1;
              }
              return !0;
            }
            return !1;
          },
        };
        t.Statement = s;
        var d = {
          types: ["Expression"],
          checkPath: function(e) {
            return e.isIdentifier()
              ? e.isReferencedIdentifier()
              : r().isExpression(e.node);
          },
        };
        t.Expression = d;
        var u = {
          types: ["Scopable"],
          checkPath: function(e) {
            return r().isScope(e.node, e.parent);
          },
        };
        t.Scope = u;
        var l = {
          checkPath: function(e) {
            return r().isReferenced(e.node, e.parent);
          },
        };
        t.Referenced = l;
        var c = {
          checkPath: function(e) {
            return r().isBlockScoped(e.node);
          },
        };
        t.BlockScoped = c;
        var p = {
          types: ["VariableDeclaration"],
          checkPath: function(e) {
            return r().isVar(e.node);
          },
        };
        (t.Var = p),
          (t.User = {
            checkPath: function(e) {
              return e.node && !!e.node.loc;
            },
          }),
          (t.Generated = {
            checkPath: function(e) {
              return !e.isUser();
            },
          }),
          (t.Pure = {
            checkPath: function(e, t) {
              return e.scope.isPure(e.node, t);
            },
          });
        var g = {
          types: [
            "Flow",
            "ImportDeclaration",
            "ExportDeclaration",
            "ImportSpecifier",
          ],
          checkPath: function(e) {
            var t = e.node;
            return !(
              !r().isFlow(t) &&
              (r().isImportDeclaration(t)
                ? "type" !== t.importKind && "typeof" !== t.importKind
                : r().isExportDeclaration(t)
                  ? "type" !== t.exportKind
                  : !r().isImportSpecifier(t) ||
                    ("type" !== t.importKind && "typeof" !== t.importKind))
            );
          },
        };
        (t.Flow = g),
          (t.RestProperty = {
            types: ["RestElement"],
            checkPath: function(e) {
              return e.parentPath && e.parentPath.isObjectPattern();
            },
          }),
          (t.SpreadProperty = {
            types: ["RestElement"],
            checkPath: function(e) {
              return e.parentPath && e.parentPath.isObjectExpression();
            },
          }),
          (t.ExistentialTypeParam = { types: ["ExistsTypeAnnotation"] }),
          (t.NumericLiteralTypeAnnotation = {
            types: ["NumberLiteralTypeAnnotation"],
          }),
          (t.ForAwaitStatement = {
            types: ["ForOfStatement"],
            checkPath: function(e) {
              return !0 === e.node.await;
            },
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n = e.split(".");
            return function(e) {
              return (0, r.default)(e, n, t);
            };
          });
        var a,
          r = (a = n(143)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            if (!(0, l.isMemberExpression)(e)) return !1;
            var a,
              r = Array.isArray(t) ? t : t.split("."),
              i = [];
            for (a = e; (0, l.isMemberExpression)(a); a = a.object)
              i.push(a.property);
            if ((i.push(a), i.length < r.length)) return !1;
            if (!n && i.length > r.length) return !1;
            for (var o = 0, s = i.length - 1; o < r.length; o++, s--) {
              var d = i[s],
                u = void 0;
              if ((0, l.isIdentifier)(d)) u = d.name;
              else {
                if (!(0, l.isStringLiteral)(d)) return !1;
                u = d.value;
              }
              if (r[o] !== u) return !1;
            }
            return !0;
          });
        var l = n(5);
      },
      function(e, t, n) {
        var a = n(145);
        e.exports = function(e) {
          return a(e, 4);
        };
      },
      function(e, t, n) {
        var y = n(62),
          m = n(292),
          v = n(149),
          b = n(293),
          E = n(300),
          x = n(303),
          A = n(155),
          S = n(304),
          _ = n(306),
          T = n(158),
          P = n(307),
          C = n(47),
          w = n(311),
          D = n(312),
          O = n(317),
          F = n(9),
          k = n(66),
          j = n(319),
          M = n(17),
          I = n(321),
          N = n(27),
          B = "[object Arguments]",
          L = "[object Function]",
          U = "[object Object]",
          V = {};
        (V[B] = V["[object Array]"] = V["[object ArrayBuffer]"] = V[
          "[object DataView]"
        ] = V["[object Boolean]"] = V["[object Date]"] = V[
          "[object Float32Array]"
        ] = V["[object Float64Array]"] = V["[object Int8Array]"] = V[
          "[object Int16Array]"
        ] = V["[object Int32Array]"] = V["[object Map]"] = V[
          "[object Number]"
        ] = V[U] = V["[object RegExp]"] = V["[object Set]"] = V[
          "[object String]"
        ] = V["[object Symbol]"] = V["[object Uint8Array]"] = V[
          "[object Uint8ClampedArray]"
        ] = V["[object Uint16Array]"] = V["[object Uint32Array]"] = !0),
          (V["[object Error]"] = V[L] = V["[object WeakMap]"] = !1),
          (e.exports = function n(a, r, i, e, t, o) {
            var s,
              d = 1 & r,
              u = 2 & r,
              l = 4 & r;
            if ((i && (s = t ? i(a, e, t, o) : i(a)), void 0 !== s)) return s;
            if (!M(a)) return a;
            var c = F(a);
            if (c) {
              if (((s = w(a)), !d)) return A(a, s);
            } else {
              var p = C(a),
                g = p == L || "[object GeneratorFunction]" == p;
              if (k(a)) return x(a, d);
              if (p == U || p == B || (g && !t)) {
                if (((s = u || g ? {} : O(a)), !d))
                  return u ? _(a, E(s, a)) : S(a, b(s, a));
              } else {
                if (!V[p]) return t ? a : {};
                s = D(a, p, d);
              }
            }
            o || (o = new y());
            var f = o.get(a);
            if (f) return f;
            if ((o.set(a, s), I(a)))
              return (
                a.forEach(function(e) {
                  s.add(n(e, r, i, e, a, o));
                }),
                s
              );
            if (j(a))
              return (
                a.forEach(function(e, t) {
                  s.set(t, n(e, r, i, t, a, o));
                }),
                s
              );
            var h = l ? (u ? P : T) : u ? keysIn : N,
              R = c ? void 0 : h(a);
            return (
              m(R || a, function(e, t) {
                R && (e = a[(t = e)]), v(s, t, n(e, r, i, t, a, o));
              }),
              s
            );
          });
      },
      function(e, t, n) {
        var a = n(16),
          r = n(17);
        e.exports = function(e) {
          if (!r(e)) return !1;
          var t = a(e);
          return (
            "[object Function]" == t ||
            "[object GeneratorFunction]" == t ||
            "[object AsyncFunction]" == t ||
            "[object Proxy]" == t
          );
        };
      },
      function(n, e, t) {
        (function(e) {
          var t = "object" == typeof e && e && e.Object === Object && e;
          n.exports = t;
        }.call(this, t(21)));
      },
      function(e, t) {
        var n = Function.prototype.toString;
        e.exports = function(e) {
          if (null != e) {
            try {
              return n.call(e);
            } catch (e) {}
            try {
              return e + "";
            } catch (e) {}
          }
          return "";
        };
      },
      function(e, t, n) {
        var r = n(150),
          i = n(34),
          o = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, n) {
          var a = e[t];
          (o.call(e, t) && i(a, n) && (void 0 !== n || t in e)) || r(e, t, n);
        };
      },
      function(e, t, n) {
        var a = n(151);
        e.exports = function(e, t, n) {
          "__proto__" == t && a
            ? a(e, t, {
                configurable: !0,
                enumerable: !0,
                value: n,
                writable: !0,
              })
            : (e[t] = n);
        };
      },
      function(e, t, n) {
        var a = n(20),
          r = (function() {
            try {
              var e = a(Object, "defineProperty");
              return e({}, "", {}), e;
            } catch (e) {}
          })();
        e.exports = r;
      },
      function(e, t, n) {
        var l = n(294),
          c = n(65),
          p = n(9),
          g = n(66),
          f = n(67),
          h = n(153),
          R = Object.prototype.hasOwnProperty;
        e.exports = function(e, t) {
          var n = p(e),
            a = !n && c(e),
            r = !n && !a && g(e),
            i = !n && !a && !r && h(e),
            o = n || a || r || i,
            s = o ? l(e.length, String) : [],
            d = s.length;
          for (var u in e)
            (!t && !R.call(e, u)) ||
              (o &&
                ("length" == u ||
                  (r && ("offset" == u || "parent" == u)) ||
                  (i &&
                    ("buffer" == u ||
                      "byteLength" == u ||
                      "byteOffset" == u)) ||
                  f(u, d))) ||
              s.push(u);
          return s;
        };
      },
      function(e, t, n) {
        var a = n(297),
          r = n(29),
          i = n(45),
          o = i && i.isTypedArray,
          s = o ? r(o) : a;
        e.exports = s;
      },
      function(e, t) {
        e.exports = function(t, n) {
          return function(e) {
            return t(n(e));
          };
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          var n = -1,
            a = e.length;
          for (t || (t = Array(a)); ++n < a; ) t[n] = e[n];
          return t;
        };
      },
      function(e, t) {
        e.exports = function() {
          return [];
        };
      },
      function(e, t, n) {
        var a = n(71),
          r = n(72),
          i = n(70),
          o = n(156),
          s = Object.getOwnPropertySymbols
            ? function(e) {
                for (var t = []; e; ) a(t, i(e)), (e = r(e));
                return t;
              }
            : o;
        e.exports = s;
      },
      function(e, t, n) {
        var a = n(159),
          r = n(70),
          i = n(27);
        e.exports = function(e) {
          return a(e, i, r);
        };
      },
      function(e, t, n) {
        var r = n(71),
          i = n(9);
        e.exports = function(e, t, n) {
          var a = t(e);
          return i(e) ? a : r(a, n(e));
        };
      },
      function(e, t, n) {
        var a = n(20)(n(11), "Set");
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(11).Uint8Array;
        e.exports = a;
      },
      function(s, e) {
        !(function() {
          "use strict";
          var t, n, a, r, i, e;
          function o(e) {
            return e <= 65535
              ? String.fromCharCode(e)
              : String.fromCharCode(Math.floor((e - 65536) / 1024) + 55296) +
                  String.fromCharCode(((e - 65536) % 1024) + 56320);
          }
          for (
            n = {
              NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
              NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
            },
              t = {
                NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
                NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
              },
              a = [
                5760,
                6158,
                8192,
                8193,
                8194,
                8195,
                8196,
                8197,
                8198,
                8199,
                8200,
                8201,
                8202,
                8239,
                8287,
                12288,
                65279,
              ],
              r = new Array(128),
              e = 0;
            e < 128;
            ++e
          )
            r[e] =
              (97 <= e && e <= 122) ||
              (65 <= e && e <= 90) ||
              36 === e ||
              95 === e;
          for (i = new Array(128), e = 0; e < 128; ++e)
            i[e] =
              (97 <= e && e <= 122) ||
              (65 <= e && e <= 90) ||
              (48 <= e && e <= 57) ||
              36 === e ||
              95 === e;
          s.exports = {
            isDecimalDigit: function(e) {
              return 48 <= e && e <= 57;
            },
            isHexDigit: function(e) {
              return (
                (48 <= e && e <= 57) ||
                (97 <= e && e <= 102) ||
                (65 <= e && e <= 70)
              );
            },
            isOctalDigit: function(e) {
              return 48 <= e && e <= 55;
            },
            isWhiteSpace: function(e) {
              return (
                32 === e ||
                9 === e ||
                11 === e ||
                12 === e ||
                160 === e ||
                (5760 <= e && 0 <= a.indexOf(e))
              );
            },
            isLineTerminator: function(e) {
              return 10 === e || 13 === e || 8232 === e || 8233 === e;
            },
            isIdentifierStartES5: function(e) {
              return e < 128 ? r[e] : n.NonAsciiIdentifierStart.test(o(e));
            },
            isIdentifierPartES5: function(e) {
              return e < 128 ? i[e] : n.NonAsciiIdentifierPart.test(o(e));
            },
            isIdentifierStartES6: function(e) {
              return e < 128 ? r[e] : t.NonAsciiIdentifierStart.test(o(e));
            },
            isIdentifierPartES6: function(e) {
              return e < 128 ? i[e] : t.NonAsciiIdentifierPart.test(o(e));
            },
          };
        })();
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            if (e) {
              var a = i.NODE_FIELDS[e.type];
              if (a) {
                var r = a[t];
                r &&
                  r.validate &&
                  ((r.optional && null == n) || r.validate(e, t, n));
              }
            }
          });
        var i = n(13);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return !(!e || !a.VISITOR_KEYS[e.type]);
          });
        var a = n(13);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function e(t) {
            for (var n = {}, a = {}, r = [], i = [], o = 0; o < t.length; o++) {
              var s = t[o];
              if (s && !(0 <= i.indexOf(s))) {
                if ((0, p.isAnyTypeAnnotation)(s)) return [s];
                if ((0, p.isFlowBaseAnnotation)(s)) a[s.type] = s;
                else if ((0, p.isUnionTypeAnnotation)(s))
                  r.indexOf(s.types) < 0 &&
                    ((t = t.concat(s.types)), r.push(s.types));
                else if ((0, p.isGenericTypeAnnotation)(s)) {
                  var d = s.id.name;
                  if (n[d]) {
                    var u = n[d];
                    u.typeParameters
                      ? s.typeParameters &&
                        (u.typeParameters.params = e(
                          u.typeParameters.params.concat(
                            s.typeParameters.params
                          )
                        ))
                      : (u = s.typeParameters);
                  } else n[d] = s;
                } else i.push(s);
              }
            }
            for (var l in a) i.push(a[l]);
            for (var c in n) i.push(n[c]);
            return i;
          });
        var p = n(5);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (0, r.default)(e, !1);
          });
        var a,
          r = (a = n(37)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            if (!n || !e) return e;
            var a = t + "Comments";
            return (
              e[a]
                ? (e[a] = "leading" === t ? n.concat(e[a]) : e[a].concat(n))
                : (e[a] = n),
              e
            );
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            (0, r.default)("innerComments", e, t);
          });
        var a,
          r = (a = n(79)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        var a = n(64),
          r = n(340),
          i = n(341);
        function o(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.__data__ = new a(); ++t < n; ) this.add(e[t]);
        }
        (o.prototype.add = o.prototype.push = r),
          (o.prototype.has = i),
          (e.exports = o);
      },
      function(e, t) {
        e.exports = function(e, t) {
          return e.has(t);
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            (0, r.default)("leadingComments", e, t);
          });
        var a,
          r = (a = n(79)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (
              (0, a.default)(e, t),
              (0, r.default)(e, t),
              (0, i.default)(e, t),
              e
            );
          });
        var a = o(n(173)),
          r = o(n(171)),
          i = o(n(168));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            (0, r.default)("trailingComments", e, t);
          });
        var a,
          r = (a = n(79)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            if ((0, a.isBlockStatement)(e)) return e;
            var n = [];
            return (
              (n = (0, a.isEmptyStatement)(e)
                ? []
                : ((0, a.isStatement)(e) ||
                    (e = (0, a.isFunction)(t)
                      ? (0, r.returnStatement)(e)
                      : (0, r.expressionStatement)(e)),
                  [e])),
              (0, r.blockStatement)(n)
            );
          });
        var a = n(5),
          r = n(8);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              (e = (e = (e = (e += "").replace(/[^a-zA-Z0-9$_]/g, "-")).replace(
                /^[-0-9]+/,
                ""
              )).replace(/[-\s]+(.)?/g, function(e, t) {
                return t ? t.toUpperCase() : "";
              })),
              (0, r.default)(e) || (e = "_" + e),
              e || "_"
            );
          });
        var a,
          r = (a = n(36)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (0, a.default)(e, r.default, t), e;
          });
        var a = i(n(177)),
          r = i(n(178));
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function e(t, n, a) {
            if (t) {
              var r = f.VISITOR_KEYS[t.type];
              if (r) {
                n(t, (a = a || {}));
                var i = r,
                  o = Array.isArray(i),
                  s = 0;
                for (i = o ? i : i[Symbol.iterator](); ; ) {
                  var d;
                  if (o) {
                    if (s >= i.length) break;
                    d = i[s++];
                  } else {
                    if ((s = i.next()).done) break;
                    d = s.value;
                  }
                  var u = t[d];
                  if (Array.isArray(u)) {
                    var l = u,
                      c = Array.isArray(l),
                      p = 0;
                    for (l = c ? l : l[Symbol.iterator](); ; ) {
                      var g;
                      if (c) {
                        if (p >= l.length) break;
                        g = l[p++];
                      } else {
                        if ((p = l.next()).done) break;
                        g = p.value;
                      }
                      e(g, n, a);
                    }
                  } else e(u, n, a);
                }
              }
            }
          });
        var f = n(13);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            void 0 === t && (t = {});
            var n = t.preserveComments ? p : g,
              a = Array.isArray(n),
              r = 0;
            for (n = a ? n : n[Symbol.iterator](); ; ) {
              var i;
              if (a) {
                if (r >= n.length) break;
                i = n[r++];
              } else {
                if ((r = n.next()).done) break;
                i = r.value;
              }
              var o = i;
              null != e[o] && (e[o] = void 0);
            }
            for (var s in e) "_" === s[0] && null != e[s] && (e[s] = void 0);
            var d = Object.getOwnPropertySymbols(e),
              u = Array.isArray(d),
              l = 0;
            for (d = u ? d : d[Symbol.iterator](); ; ) {
              var c;
              if (u) {
                if (l >= d.length) break;
                c = d[l++];
              } else {
                if ((l = d.next()).done) break;
                c = l.value;
              }
              e[c] = null;
            }
          });
        var p = ["tokens", "start", "end", "loc", "raw", "rawValue"],
          g = n(22)
            .COMMENT_KEYS.concat(["comments"])
            .concat(p);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              (0, a.isVariableDeclaration)(e) &&
              ("var" !== e.kind || e[r.BLOCK_SCOPED_SYMBOL])
            );
          });
        var a = n(5),
          r = n(22);
      },
      function(e, t) {
        function i(e, t, n) {
          if (!(e < t))
            return e < 1.5 * t
              ? Math.floor(e / t) + " " + n
              : Math.ceil(e / t) + " " + n + "s";
        }
        e.exports = function(e, t) {
          t = t || {};
          var n,
            a,
            r = typeof e;
          if ("string" === r && 0 < e.length)
            return (function(e) {
              if (!(100 < (e = String(e)).length)) {
                var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
                  e
                );
                if (t) {
                  var n = parseFloat(t[1]);
                  switch ((t[2] || "ms").toLowerCase()) {
                    case "years":
                    case "year":
                    case "yrs":
                    case "yr":
                    case "y":
                      return 315576e5 * n;
                    case "days":
                    case "day":
                    case "d":
                      return 864e5 * n;
                    case "hours":
                    case "hour":
                    case "hrs":
                    case "hr":
                    case "h":
                      return 36e5 * n;
                    case "minutes":
                    case "minute":
                    case "mins":
                    case "min":
                    case "m":
                      return 6e4 * n;
                    case "seconds":
                    case "second":
                    case "secs":
                    case "sec":
                    case "s":
                      return 1e3 * n;
                    case "milliseconds":
                    case "millisecond":
                    case "msecs":
                    case "msec":
                    case "ms":
                      return n;
                    default:
                      return;
                  }
                }
              }
            })(e);
          if ("number" === r && !1 === isNaN(e))
            return t.long
              ? i((a = e), 864e5, "day") ||
                  i(a, 36e5, "hour") ||
                  i(a, 6e4, "minute") ||
                  i(a, 1e3, "second") ||
                  a + " ms"
              : 864e5 <= (n = e)
                ? Math.round(n / 864e5) + "d"
                : 36e5 <= n
                  ? Math.round(n / 36e5) + "h"
                  : 6e4 <= n
                    ? Math.round(n / 6e4) + "m"
                    : 1e3 <= n
                      ? Math.round(n / 1e3) + "s"
                      : n + "ms";
          throw new Error(
            "val is not a non-empty string or a valid number. val=" +
              JSON.stringify(e)
          );
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(14),
          r = n.n(a);
        function i() {
          var e = p(n(82));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = p(n(183));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = void 0);
        var s = p(n(385)),
          d = p(n(10));
        function u() {
          var e = p(n(386));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        var y = p(n(184));
        function l() {
          var e = p(n(185));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (F = function() {
              return e;
            }),
            e
          );
        }
        var c = n(53);
        function p(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var k = {
            For: function(e) {
              var t = F().FOR_INIT_KEYS,
                n = Array.isArray(t),
                a = 0;
              for (t = n ? t : t[Symbol.iterator](); ; ) {
                var r;
                if (n) {
                  if (a >= t.length) break;
                  r = t[a++];
                } else {
                  if ((a = t.next()).done) break;
                  r = a.value;
                }
                var i = r,
                  o = e.get(i);
                o.isVar() &&
                  (
                    e.scope.getFunctionParent() || e.scope.getProgramParent()
                  ).registerBinding("var", o);
              }
            },
            Declaration: function(e) {
              e.isBlockScoped() ||
                (e.isExportDeclaration() &&
                  e.get("declaration").isDeclaration()) ||
                (
                  e.scope.getFunctionParent() || e.scope.getProgramParent()
                ).registerDeclaration(e);
            },
            ReferencedIdentifier: function(e, t) {
              t.references.push(e);
            },
            ForXStatement: function(e, t) {
              var n = e.get("left");
              (n.isPattern() || n.isIdentifier()) &&
                t.constantViolations.push(e);
            },
            ExportDeclaration: {
              exit: function(e) {
                var t = e.node,
                  n = e.scope,
                  a = t.declaration;
                if (F().isClassDeclaration(a) || F().isFunctionDeclaration(a)) {
                  var r = a.id;
                  if (!r) return;
                  var i = n.getBinding(r.name);
                  i && i.reference(e);
                } else if (F().isVariableDeclaration(a)) {
                  var o = a.declarations,
                    s = Array.isArray(o),
                    d = 0;
                  for (o = s ? o : o[Symbol.iterator](); ; ) {
                    var u;
                    if (s) {
                      if (d >= o.length) break;
                      u = o[d++];
                    } else {
                      if ((d = o.next()).done) break;
                      u = d.value;
                    }
                    var l = u,
                      c = F().getBindingIdentifiers(l);
                    for (var p in c) {
                      var g = n.getBinding(p);
                      g && g.reference(e);
                    }
                  }
                }
              },
            },
            LabeledStatement: function(e) {
              e.scope.getProgramParent().addGlobal(e.node),
                e.scope.getBlockParent().registerDeclaration(e);
            },
            AssignmentExpression: function(e, t) {
              t.assignments.push(e);
            },
            UpdateExpression: function(e, t) {
              t.constantViolations.push(e);
            },
            UnaryExpression: function(e, t) {
              "delete" === e.node.operator && t.constantViolations.push(e);
            },
            BlockScoped: function(e) {
              var t = e.scope;
              t.path === e && (t = t.parent),
                t.getBlockParent().registerDeclaration(e);
            },
            ClassDeclaration: function(e) {
              var t = e.node.id;
              if (t) {
                var n = t.name;
                e.scope.bindings[n] = e.scope.getBinding(n);
              }
            },
            Block: function(e) {
              var t = e.get("body"),
                n = Array.isArray(t),
                a = 0;
              for (t = n ? t : t[Symbol.iterator](); ; ) {
                var r;
                if (n) {
                  if (a >= t.length) break;
                  r = t[a++];
                } else {
                  if ((a = t.next()).done) break;
                  r = a.value;
                }
                var i = r;
                i.isFunctionDeclaration() &&
                  e.scope.getBlockParent().registerDeclaration(i);
              }
            },
          },
          g = 0,
          f = (function() {
            function n(e) {
              var t = e.node,
                n = c.scope.get(t);
              if (n && n.path === e) return n;
              c.scope.set(t, this),
                (this.uid = g++),
                (this.block = t),
                (this.path = e),
                (this.labels = new Map());
            }
            var e = n.prototype;
            return (
              (e.traverse = function(e, t, n) {
                (0, d.default)(e, t, this, n, this.path);
              }),
              (e.generateDeclaredUidIdentifier = function(e) {
                var t = this.generateUidIdentifier(e);
                return this.push({ id: t }), F().cloneNode(t);
              }),
              (e.generateUidIdentifier = function(e) {
                return F().identifier(this.generateUid(e));
              }),
              (e.generateUid = function(e) {
                var t;
                void 0 === e && (e = "temp"),
                  (e = F()
                    .toIdentifier(e)
                    .replace(/^_+/, "")
                    .replace(/[0-9]+$/g, ""));
                for (
                  var n = 0;
                  (t = this._generateUid(e, n)),
                    n++,
                    this.hasLabel(t) ||
                      this.hasBinding(t) ||
                      this.hasGlobal(t) ||
                      this.hasReference(t);

                );
                var a = this.getProgramParent();
                return (a.references[t] = !0), (a.uids[t] = !0), t;
              }),
              (e._generateUid = function(e, t) {
                var n = e;
                return 1 < t && (n += t), "_" + n;
              }),
              (e.generateUidBasedOnNode = function(e, t) {
                var n = e;
                F().isAssignmentExpression(e)
                  ? (n = e.left)
                  : F().isVariableDeclarator(e)
                    ? (n = e.id)
                    : (F().isObjectProperty(n) || F().isObjectMethod(n)) &&
                      (n = n.key);
                var a = [];
                !(function e(t, n) {
                  if (F().isModuleDeclaration(t))
                    if (t.source) e(t.source, n);
                    else if (t.specifiers && t.specifiers.length) {
                      var a = t.specifiers,
                        r = Array.isArray(a),
                        i = 0;
                      for (a = r ? a : a[Symbol.iterator](); ; ) {
                        var o;
                        if (r) {
                          if (i >= a.length) break;
                          o = a[i++];
                        } else {
                          if ((i = a.next()).done) break;
                          o = i.value;
                        }
                        e(o, n);
                      }
                    } else t.declaration && e(t.declaration, n);
                  else if (F().isModuleSpecifier(t)) e(t.local, n);
                  else if (F().isMemberExpression(t))
                    e(t.object, n), e(t.property, n);
                  else if (F().isIdentifier(t)) n.push(t.name);
                  else if (F().isLiteral(t)) n.push(t.value);
                  else if (F().isCallExpression(t)) e(t.callee, n);
                  else if (
                    F().isObjectExpression(t) ||
                    F().isObjectPattern(t)
                  ) {
                    var s = t.properties,
                      d = Array.isArray(s),
                      u = 0;
                    for (s = d ? s : s[Symbol.iterator](); ; ) {
                      var l;
                      if (d) {
                        if (u >= s.length) break;
                        l = s[u++];
                      } else {
                        if ((u = s.next()).done) break;
                        l = u.value;
                      }
                      var c = l;
                      e(c.key || c.argument, n);
                    }
                  } else
                    F().isPrivateName(t)
                      ? e(t.id, n)
                      : F().isThisExpression(t)
                        ? n.push("this")
                        : F().isSuper(t) && n.push("super");
                })(n, a);
                var r = a.join("$");
                return (
                  (r = r.replace(/^_/, "") || t || "ref"),
                  this.generateUid(r.slice(0, 20))
                );
              }),
              (e.generateUidIdentifierBasedOnNode = function(e, t) {
                return F().identifier(this.generateUidBasedOnNode(e, t));
              }),
              (e.isStatic = function(e) {
                if (F().isThisExpression(e) || F().isSuper(e)) return !0;
                if (F().isIdentifier(e)) {
                  var t = this.getBinding(e.name);
                  return t ? t.constant : this.hasBinding(e.name);
                }
                return !1;
              }),
              (e.maybeGenerateMemoised = function(e, t) {
                if (this.isStatic(e)) return null;
                var n = this.generateUidIdentifierBasedOnNode(e);
                return t ? n : (this.push({ id: n }), F().cloneNode(n));
              }),
              (e.checkBlockScopedCollisions = function(e, t, n, a) {
                if (
                  "param" !== t &&
                  "local" !== e.kind &&
                  !(
                    ("hoisted" === t && "let" === e.kind) ||
                    ("let" !== t &&
                      "let" !== e.kind &&
                      "const" !== e.kind &&
                      "module" !== e.kind &&
                      ("param" !== e.kind || ("let" !== t && "const" !== t)))
                  )
                )
                  throw this.hub.buildError(
                    a,
                    'Duplicate declaration "' + n + '"',
                    TypeError
                  );
              }),
              (e.rename = function(e, t, n) {
                var a = this.getBinding(e);
                if (a)
                  return (
                    (t = t || this.generateUidIdentifier(e).name),
                    new s.default(a, e, t).rename(n)
                  );
              }),
              (e._renameFromMap = function(e, t, n, a) {
                e[t] && ((e[n] = a), (e[t] = null));
              }),
              (e.dump = function() {
                var e = (0, o().default)("-", 60);
                console.log(e);
                var t = this;
                do {
                  for (var n in (console.log("#", t.block.type), t.bindings)) {
                    var a = t.bindings[n];
                    console.log(" -", n, {
                      constant: a.constant,
                      references: a.references,
                      violations: a.constantViolations.length,
                      kind: a.kind,
                    });
                  }
                } while ((t = t.parent));
                console.log(e);
              }),
              (e.toArray = function(e, t) {
                if (F().isIdentifier(e)) {
                  var n = this.getBinding(e.name);
                  if (n && n.constant && n.path.isGenericType("Array"))
                    return e;
                }
                if (F().isArrayExpression(e)) return e;
                if (F().isIdentifier(e, { name: "arguments" }))
                  return F().callExpression(
                    F().memberExpression(
                      F().memberExpression(
                        F().memberExpression(
                          F().identifier("Array"),
                          F().identifier("prototype")
                        ),
                        F().identifier("slice")
                      ),
                      F().identifier("call")
                    ),
                    [e]
                  );
                var a,
                  r = [e];
                return (
                  (a =
                    !0 === t
                      ? "toConsumableArray"
                      : t
                        ? (r.push(F().numericLiteral(t)), "slicedToArray")
                        : "toArray"),
                  F().callExpression(this.hub.addHelper(a), r)
                );
              }),
              (e.hasLabel = function(e) {
                return !!this.getLabel(e);
              }),
              (e.getLabel = function(e) {
                return this.labels.get(e);
              }),
              (e.registerLabel = function(e) {
                this.labels.set(e.node.label.name, e);
              }),
              (e.registerDeclaration = function(e) {
                if (e.isLabeledStatement()) this.registerLabel(e);
                else if (e.isFunctionDeclaration())
                  this.registerBinding("hoisted", e.get("id"), e);
                else if (e.isVariableDeclaration()) {
                  var t = e.get("declarations"),
                    n = Array.isArray(t),
                    a = 0;
                  for (t = n ? t : t[Symbol.iterator](); ; ) {
                    var r;
                    if (n) {
                      if (a >= t.length) break;
                      r = t[a++];
                    } else {
                      if ((a = t.next()).done) break;
                      r = a.value;
                    }
                    var i = r;
                    this.registerBinding(e.node.kind, i);
                  }
                } else if (e.isClassDeclaration())
                  this.registerBinding("let", e);
                else if (e.isImportDeclaration()) {
                  var o = e.get("specifiers"),
                    s = Array.isArray(o),
                    d = 0;
                  for (o = s ? o : o[Symbol.iterator](); ; ) {
                    var u;
                    if (s) {
                      if (d >= o.length) break;
                      u = o[d++];
                    } else {
                      if ((d = o.next()).done) break;
                      u = d.value;
                    }
                    var l = u;
                    this.registerBinding("module", l);
                  }
                } else if (e.isExportDeclaration()) {
                  var c = e.get("declaration");
                  (c.isClassDeclaration() ||
                    c.isFunctionDeclaration() ||
                    c.isVariableDeclaration()) &&
                    this.registerDeclaration(c);
                } else this.registerBinding("unknown", e);
              }),
              (e.buildUndefinedNode = function() {
                return this.hasBinding("undefined")
                  ? F().unaryExpression("void", F().numericLiteral(0), !0)
                  : F().identifier("undefined");
              }),
              (e.registerConstantViolation = function(e) {
                var t = e.getBindingIdentifiers();
                for (var n in t) {
                  var a = this.getBinding(n);
                  a && a.reassign(e);
                }
              }),
              (e.registerBinding = function(e, t, n) {
                if ((void 0 === n && (n = t), !e))
                  throw new ReferenceError("no `kind`");
                if (t.isVariableDeclaration()) {
                  var a = t.get("declarations"),
                    r = Array.isArray(a),
                    i = 0;
                  for (a = r ? a : a[Symbol.iterator](); ; ) {
                    var o;
                    if (r) {
                      if (i >= a.length) break;
                      o = a[i++];
                    } else {
                      if ((i = a.next()).done) break;
                      o = i.value;
                    }
                    var s = o;
                    this.registerBinding(e, s);
                  }
                } else {
                  var d = this.getProgramParent(),
                    u = t.getBindingIdentifiers(!0);
                  for (var l in u) {
                    var c = u[l],
                      p = Array.isArray(c),
                      g = 0;
                    for (c = p ? c : c[Symbol.iterator](); ; ) {
                      var f;
                      if (p) {
                        if (g >= c.length) break;
                        f = c[g++];
                      } else {
                        if ((g = c.next()).done) break;
                        f = g.value;
                      }
                      var h = f,
                        R = this.getOwnBinding(l);
                      if (R) {
                        if (R.identifier === h) continue;
                        this.checkBlockScopedCollisions(R, e, l, h);
                      }
                      (d.references[l] = !0),
                        R
                          ? this.registerConstantViolation(n)
                          : (this.bindings[l] = new y.default({
                              identifier: h,
                              scope: this,
                              path: n,
                              kind: e,
                            }));
                    }
                  }
                }
              }),
              (e.addGlobal = function(e) {
                this.globals[e.name] = e;
              }),
              (e.hasUid = function(e) {
                var t = this;
                do {
                  if (t.uids[e]) return !0;
                } while ((t = t.parent));
                return !1;
              }),
              (e.hasGlobal = function(e) {
                var t = this;
                do {
                  if (t.globals[e]) return !0;
                } while ((t = t.parent));
                return !1;
              }),
              (e.hasReference = function(e) {
                var t = this;
                do {
                  if (t.references[e]) return !0;
                } while ((t = t.parent));
                return !1;
              }),
              (e.isPure = function(e, t) {
                if (F().isIdentifier(e)) {
                  var n = this.getBinding(e.name);
                  return !!n && (!t || n.constant);
                }
                if (F().isClass(e))
                  return (
                    !(e.superClass && !this.isPure(e.superClass, t)) &&
                    this.isPure(e.body, t)
                  );
                if (F().isClassBody(e)) {
                  var a = e.body,
                    r = Array.isArray(a),
                    i = 0;
                  for (a = r ? a : a[Symbol.iterator](); ; ) {
                    var o;
                    if (r) {
                      if (i >= a.length) break;
                      o = a[i++];
                    } else {
                      if ((i = a.next()).done) break;
                      o = i.value;
                    }
                    var s = o;
                    if (!this.isPure(s, t)) return !1;
                  }
                  return !0;
                }
                if (F().isBinary(e))
                  return this.isPure(e.left, t) && this.isPure(e.right, t);
                if (F().isArrayExpression(e)) {
                  var d = e.elements,
                    u = Array.isArray(d),
                    l = 0;
                  for (d = u ? d : d[Symbol.iterator](); ; ) {
                    var c;
                    if (u) {
                      if (l >= d.length) break;
                      c = d[l++];
                    } else {
                      if ((l = d.next()).done) break;
                      c = l.value;
                    }
                    var p = c;
                    if (!this.isPure(p, t)) return !1;
                  }
                  return !0;
                }
                if (F().isObjectExpression(e)) {
                  var g = e.properties,
                    f = Array.isArray(g),
                    h = 0;
                  for (g = f ? g : g[Symbol.iterator](); ; ) {
                    var R;
                    if (f) {
                      if (h >= g.length) break;
                      R = g[h++];
                    } else {
                      if ((h = g.next()).done) break;
                      R = h.value;
                    }
                    var y = R;
                    if (!this.isPure(y, t)) return !1;
                  }
                  return !0;
                }
                if (F().isClassMethod(e))
                  return (
                    !(e.computed && !this.isPure(e.key, t)) &&
                    "get" !== e.kind &&
                    "set" !== e.kind
                  );
                if (F().isProperty(e))
                  return (
                    !(e.computed && !this.isPure(e.key, t)) &&
                    this.isPure(e.value, t)
                  );
                if (F().isUnaryExpression(e)) return this.isPure(e.argument, t);
                if (F().isTaggedTemplateExpression(e))
                  return (
                    F().matchesPattern(e.tag, "String.raw") &&
                    !this.hasBinding("String", !0) &&
                    this.isPure(e.quasi, t)
                  );
                if (F().isTemplateLiteral(e)) {
                  var m = e.expressions,
                    v = Array.isArray(m),
                    b = 0;
                  for (m = v ? m : m[Symbol.iterator](); ; ) {
                    var E;
                    if (v) {
                      if (b >= m.length) break;
                      E = m[b++];
                    } else {
                      if ((b = m.next()).done) break;
                      E = b.value;
                    }
                    var x = E;
                    if (!this.isPure(x, t)) return !1;
                  }
                  return !0;
                }
                return F().isPureish(e);
              }),
              (e.setData = function(e, t) {
                return (this.data[e] = t);
              }),
              (e.getData = function(e) {
                var t = this;
                do {
                  var n = t.data[e];
                  if (null != n) return n;
                } while ((t = t.parent));
              }),
              (e.removeData = function(e) {
                for (
                  var t = this;
                  null != t.data[e] && (t.data[e] = null), (t = t.parent);

                );
              }),
              (e.init = function() {
                this.references || this.crawl();
              }),
              (e.crawl = function() {
                var e = this.path;
                if (
                  ((this.references = Object.create(null)),
                  (this.bindings = Object.create(null)),
                  (this.globals = Object.create(null)),
                  (this.uids = Object.create(null)),
                  (this.data = Object.create(null)),
                  e.isLoop())
                ) {
                  var t = F().FOR_INIT_KEYS,
                    n = Array.isArray(t),
                    a = 0;
                  for (t = n ? t : t[Symbol.iterator](); ; ) {
                    var r;
                    if (n) {
                      if (a >= t.length) break;
                      r = t[a++];
                    } else {
                      if ((a = t.next()).done) break;
                      r = a.value;
                    }
                    var i = r,
                      o = e.get(i);
                    o.isBlockScoped() && this.registerBinding(o.node.kind, o);
                  }
                }
                if (
                  (e.isFunctionExpression() &&
                    e.has("id") &&
                    (e.get("id").node[F().NOT_LOCAL_BINDING] ||
                      this.registerBinding("local", e.get("id"), e)),
                  e.isClassExpression() &&
                    e.has("id") &&
                    (e.get("id").node[F().NOT_LOCAL_BINDING] ||
                      this.registerBinding("local", e)),
                  e.isFunction())
                ) {
                  var s = e.get("params"),
                    d = Array.isArray(s),
                    u = 0;
                  for (s = d ? s : s[Symbol.iterator](); ; ) {
                    var l;
                    if (d) {
                      if (u >= s.length) break;
                      l = s[u++];
                    } else {
                      if ((u = s.next()).done) break;
                      l = u.value;
                    }
                    var c = l;
                    this.registerBinding("param", c);
                  }
                }
                if (
                  (e.isCatchClause() && this.registerBinding("let", e),
                  !this.getProgramParent().crawling)
                ) {
                  var p = {
                    references: [],
                    constantViolations: [],
                    assignments: [],
                  };
                  (this.crawling = !0), e.traverse(k, p), (this.crawling = !1);
                  var g = p.assignments,
                    f = Array.isArray(g),
                    h = 0;
                  for (g = f ? g : g[Symbol.iterator](); ; ) {
                    var R;
                    if (f) {
                      if (h >= g.length) break;
                      R = g[h++];
                    } else {
                      if ((h = g.next()).done) break;
                      R = h.value;
                    }
                    var y = R,
                      m = y.getBindingIdentifiers(),
                      v = void 0;
                    for (var b in m)
                      y.scope.getBinding(b) ||
                        (v = v || y.scope.getProgramParent()).addGlobal(m[b]);
                    y.scope.registerConstantViolation(y);
                  }
                  var E = p.references,
                    x = Array.isArray(E),
                    A = 0;
                  for (E = x ? E : E[Symbol.iterator](); ; ) {
                    var S;
                    if (x) {
                      if (A >= E.length) break;
                      S = E[A++];
                    } else {
                      if ((A = E.next()).done) break;
                      S = A.value;
                    }
                    var _ = S,
                      T = _.scope.getBinding(_.node.name);
                    T
                      ? T.reference(_)
                      : _.scope.getProgramParent().addGlobal(_.node);
                  }
                  var P = p.constantViolations,
                    C = Array.isArray(P),
                    w = 0;
                  for (P = C ? P : P[Symbol.iterator](); ; ) {
                    var D;
                    if (C) {
                      if (w >= P.length) break;
                      D = P[w++];
                    } else {
                      if ((w = P.next()).done) break;
                      D = w.value;
                    }
                    var O = D;
                    O.scope.registerConstantViolation(O);
                  }
                }
              }),
              (e.push = function(e) {
                var t = this.path;
                t.isBlockStatement() ||
                  t.isProgram() ||
                  (t = this.getBlockParent().path),
                  t.isSwitchStatement() &&
                    (t = (this.getFunctionParent() || this.getProgramParent())
                      .path),
                  (t.isLoop() || t.isCatchClause() || t.isFunction()) &&
                    (t.ensureBlock(), (t = t.get("body")));
                var n = e.unique,
                  a = e.kind || "var",
                  r = null == e._blockHoist ? 2 : e._blockHoist,
                  i = "declaration:" + a + ":" + r,
                  o = !n && t.getData(i);
                if (!o) {
                  var s = F().variableDeclaration(a, []);
                  (s._blockHoist = r),
                    (o = t.unshiftContainer("body", [s])[0]),
                    n || t.setData(i, o);
                }
                var d = F().variableDeclarator(e.id, e.init);
                o.node.declarations.push(d),
                  this.registerBinding(a, o.get("declarations").pop());
              }),
              (e.getProgramParent = function() {
                var e = this;
                do {
                  if (e.path.isProgram()) return e;
                } while ((e = e.parent));
                throw new Error("Couldn't find a Program");
              }),
              (e.getFunctionParent = function() {
                var e = this;
                do {
                  if (e.path.isFunctionParent()) return e;
                } while ((e = e.parent));
                return null;
              }),
              (e.getBlockParent = function() {
                var e = this;
                do {
                  if (e.path.isBlockParent()) return e;
                } while ((e = e.parent));
                throw new Error(
                  "We couldn't find a BlockStatement, For, Switch, Function, Loop or Program..."
                );
              }),
              (e.getAllBindings = function() {
                for (
                  var e = Object.create(null), t = this;
                  (0, u().default)(e, t.bindings), (t = t.parent);

                );
                return e;
              }),
              (e.getAllBindingsOfKind = function() {
                var e = Object.create(null),
                  t = arguments,
                  n = Array.isArray(t),
                  a = 0;
                for (t = n ? t : t[Symbol.iterator](); ; ) {
                  var r;
                  if (n) {
                    if (a >= t.length) break;
                    r = t[a++];
                  } else {
                    if ((a = t.next()).done) break;
                    r = a.value;
                  }
                  var i = r,
                    o = this;
                  do {
                    for (var s in o.bindings) {
                      var d = o.bindings[s];
                      d.kind === i && (e[s] = d);
                    }
                    o = o.parent;
                  } while (o);
                }
                return e;
              }),
              (e.bindingIdentifierEquals = function(e, t) {
                return this.getBindingIdentifier(e) === t;
              }),
              (e.getBinding = function(e) {
                var t = this;
                do {
                  var n = t.getOwnBinding(e);
                  if (n) return n;
                } while ((t = t.parent));
              }),
              (e.getOwnBinding = function(e) {
                return this.bindings[e];
              }),
              (e.getBindingIdentifier = function(e) {
                var t = this.getBinding(e);
                return t && t.identifier;
              }),
              (e.getOwnBindingIdentifier = function(e) {
                var t = this.bindings[e];
                return t && t.identifier;
              }),
              (e.hasOwnBinding = function(e) {
                return !!this.getOwnBinding(e);
              }),
              (e.hasBinding = function(e, t) {
                return !(
                  !e ||
                  (!this.hasOwnBinding(e) &&
                    !this.parentHasBinding(e, t) &&
                    !this.hasUid(e) &&
                    (t || !(0, i().default)(n.globals, e)) &&
                    (t || !(0, i().default)(n.contextVariables, e)))
                );
              }),
              (e.parentHasBinding = function(e, t) {
                return this.parent && this.parent.hasBinding(e, t);
              }),
              (e.updateOwnBinding = function(e, t, n) {
                if (!t) throw new ReferenceError("no `kind`");
                var a = this.getOwnBinding(e.name);
                if (!a) throw new ReferenceError("Unknown binding: " + e.name);
                (a.identifier = e), (a.kind = t), (a.path = n);
              }),
              (e.moveBindingTo = function(e, t) {
                var n = this.getBinding(e);
                n &&
                  (n.scope.removeOwnBinding(e),
                  ((n.scope = t).bindings[e] = n));
              }),
              (e.removeOwnBinding = function(e) {
                delete this.bindings[e];
              }),
              (e.removeBinding = function(e) {
                var t = this.getBinding(e);
                t && t.scope.removeOwnBinding(e);
                for (
                  var n = this;
                  n.uids[e] && (n.uids[e] = !1), (n = n.parent);

                );
              }),
              r()(n, [
                {
                  key: "parent",
                  get: function() {
                    var e = this.path.findParent(function(e) {
                      return e.isScope();
                    });
                    return e && e.scope;
                  },
                },
                {
                  key: "parentBlock",
                  get: function() {
                    return this.path.parent;
                  },
                },
                {
                  key: "hub",
                  get: function() {
                    return this.path.hub;
                  },
                },
              ]),
              n
            );
          })();
        ((exports.default = f).globals = Object.keys(l().default.builtin)),
          (f.contextVariables = ["arguments", "undefined", "Infinity", "NaN"]);
      },
      function(e, t, n) {
        var a = n(382),
          r = n(27);
        e.exports = function(e) {
          return null == e ? [] : a(e, r(e));
        };
      },
      function(e, t, n) {
        var a = n(383),
          r = n(39),
          i = n(49),
          o = n(83);
        e.exports = function(e, t, n) {
          return (t = (n ? r(e, t, n) : void 0 === t) ? 1 : i(t)), a(o(e), t);
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a = (function() {
          function e(e) {
            var t = e.identifier,
              n = e.scope,
              a = e.path,
              r = e.kind;
            (this.identifier = t),
              (this.scope = n),
              (this.path = a),
              (this.kind = r),
              (this.constantViolations = []),
              (this.constant = !0),
              (this.referencePaths = []),
              (this.referenced = !1),
              (this.references = 0),
              this.clearValue();
          }
          var t = e.prototype;
          return (
            (t.deoptValue = function() {
              this.clearValue(), (this.hasDeoptedValue = !0);
            }),
            (t.setValue = function(e) {
              this.hasDeoptedValue || ((this.hasValue = !0), (this.value = e));
            }),
            (t.clearValue = function() {
              (this.hasDeoptedValue = !1),
                (this.hasValue = !1),
                (this.value = null);
            }),
            (t.reassign = function(e) {
              (this.constant = !1),
                -1 === this.constantViolations.indexOf(e) &&
                  this.constantViolations.push(e);
            }),
            (t.reference = function(e) {
              -1 === this.referencePaths.indexOf(e) &&
                ((this.referenced = !0),
                this.references++,
                this.referencePaths.push(e));
            }),
            (t.dereference = function() {
              this.references--, (this.referenced = !!this.references);
            }),
            e
          );
        })();
        t.default = a;
      },
      function(e, t, n) {
        "use strict";
        e.exports = n(393);
      },
      function(e, t, n) {
        var f = n(187),
          h = n(54),
          a = n(188).ArraySet,
          r = n(397).MappingList,
          i = (function() {
            function e(e) {
              e || (e = {}),
                (this._file = h.getArg(e, "file", null)),
                (this._sourceRoot = h.getArg(e, "sourceRoot", null)),
                (this._skipValidation = h.getArg(e, "skipValidation", !1)),
                (this._sources = new a()),
                (this._names = new a()),
                (this._mappings = new r()),
                (this._sourcesContents = null);
            }
            e.fromSourceMap = function(a) {
              var r = a.sourceRoot,
                i = new e({ file: a.file, sourceRoot: r });
              return (
                a.eachMapping(function(e) {
                  var t = {
                    generated: {
                      line: e.generatedLine,
                      column: e.generatedColumn,
                    },
                  };
                  null != e.source &&
                    ((t.source = e.source),
                    null != r && (t.source = h.relative(r, t.source)),
                    (t.original = {
                      line: e.originalLine,
                      column: e.originalColumn,
                    }),
                    null != e.name && (t.name = e.name)),
                    i.addMapping(t);
                }),
                a.sources.forEach(function(e) {
                  var t = e;
                  null !== r && (t = h.relative(r, e)),
                    i._sources.has(t) || i._sources.add(t);
                  var n = a.sourceContentFor(e);
                  null != n && i.setSourceContent(e, n);
                }),
                i
              );
            };
            var t = e.prototype;
            return (
              (t.addMapping = function(e) {
                var t = h.getArg(e, "generated"),
                  n = h.getArg(e, "original", null),
                  a = h.getArg(e, "source", null),
                  r = h.getArg(e, "name", null);
                this._skipValidation || this._validateMapping(t, n, a, r),
                  null != a &&
                    ((a = String(a)),
                    this._sources.has(a) || this._sources.add(a)),
                  null != r &&
                    ((r = String(r)), this._names.has(r) || this._names.add(r)),
                  this._mappings.add({
                    generatedLine: t.line,
                    generatedColumn: t.column,
                    originalLine: null != n && n.line,
                    originalColumn: null != n && n.column,
                    source: a,
                    name: r,
                  });
              }),
              (t.setSourceContent = function(e, t) {
                var n = e;
                null != this._sourceRoot &&
                  (n = h.relative(this._sourceRoot, n)),
                  null != t
                    ? (this._sourcesContents ||
                        (this._sourcesContents = Object.create(null)),
                      (this._sourcesContents[h.toSetString(n)] = t))
                    : this._sourcesContents &&
                      (delete this._sourcesContents[h.toSetString(n)],
                      0 === Object.keys(this._sourcesContents).length &&
                        (this._sourcesContents = null));
              }),
              (t.applySourceMap = function(r, e, i) {
                var o = e;
                if (null == e) {
                  if (null == r.file)
                    throw new Error(
                      'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.'
                    );
                  o = r.file;
                }
                var s = this._sourceRoot;
                null != s && (o = h.relative(s, o));
                var d =
                    0 < this._mappings.toArray().length
                      ? new a()
                      : this._sources,
                  u = new a();
                this._mappings.unsortedForEach(function(e) {
                  if (e.source === o && null != e.originalLine) {
                    var t = r.originalPositionFor({
                      line: e.originalLine,
                      column: e.originalColumn,
                    });
                    null != t.source &&
                      ((e.source = t.source),
                      null != i && (e.source = h.join(i, e.source)),
                      null != s && (e.source = h.relative(s, e.source)),
                      (e.originalLine = t.line),
                      (e.originalColumn = t.column),
                      null != t.name && (e.name = t.name));
                  }
                  var n = e.source;
                  null == n || d.has(n) || d.add(n);
                  var a = e.name;
                  null == a || u.has(a) || u.add(a);
                }, this),
                  (this._sources = d),
                  (this._names = u),
                  r.sources.forEach(function(e) {
                    var t = r.sourceContentFor(e);
                    null != t &&
                      (null != i && (e = h.join(i, e)),
                      null != s && (e = h.relative(s, e)),
                      this.setSourceContent(e, t));
                  }, this);
              }),
              (t._validateMapping = function(e, t, n, a) {
                if (
                  t &&
                  "number" != typeof t.line &&
                  "number" != typeof t.column
                )
                  throw new Error(
                    "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
                  );
                if (
                  e &&
                  "line" in e &&
                  "column" in e &&
                  0 < e.line &&
                  0 <= e.column &&
                  !t &&
                  !n &&
                  !a
                );
                else if (
                  !(
                    e &&
                    "line" in e &&
                    "column" in e &&
                    t &&
                    "line" in t &&
                    "column" in t &&
                    0 < e.line &&
                    0 <= e.column &&
                    0 < t.line &&
                    0 <= t.column &&
                    n
                  )
                )
                  throw new Error(
                    "Invalid mapping: " +
                      JSON.stringify({
                        generated: e,
                        source: n,
                        original: t,
                        name: a,
                      })
                  );
              }),
              (t._serializeMappings = function() {
                for (
                  var e,
                    t,
                    n,
                    a,
                    r = 0,
                    i = 1,
                    o = 0,
                    s = 0,
                    d = 0,
                    u = 0,
                    l = "",
                    c = this._mappings.toArray(),
                    p = 0,
                    g = c.length;
                  p < g;
                  p++
                ) {
                  if (((e = ""), (t = c[p]).generatedLine !== i))
                    for (r = 0; t.generatedLine !== i; ) (e += ";"), i++;
                  else if (0 < p) {
                    if (!h.compareByGeneratedPositionsInflated(t, c[p - 1]))
                      continue;
                    e += ",";
                  }
                  (e += f.encode(t.generatedColumn - r)),
                    (r = t.generatedColumn),
                    null != t.source &&
                      ((a = this._sources.indexOf(t.source)),
                      (e += f.encode(a - u)),
                      (u = a),
                      (e += f.encode(t.originalLine - 1 - s)),
                      (s = t.originalLine - 1),
                      (e += f.encode(t.originalColumn - o)),
                      (o = t.originalColumn),
                      null != t.name &&
                        ((n = this._names.indexOf(t.name)),
                        (e += f.encode(n - d)),
                        (d = n))),
                    (l += e);
                }
                return l;
              }),
              (t._generateSourcesContent = function(e, n) {
                return e.map(function(e) {
                  if (!this._sourcesContents) return null;
                  null != n && (e = h.relative(n, e));
                  var t = h.toSetString(e);
                  return Object.prototype.hasOwnProperty.call(
                    this._sourcesContents,
                    t
                  )
                    ? this._sourcesContents[t]
                    : null;
                }, this);
              }),
              (t.toJSON = function() {
                var e = {
                  version: this._version,
                  sources: this._sources.toArray(),
                  names: this._names.toArray(),
                  mappings: this._serializeMappings(),
                };
                return (
                  null != this._file && (e.file = this._file),
                  null != this._sourceRoot && (e.sourceRoot = this._sourceRoot),
                  this._sourcesContents &&
                    (e.sourcesContent = this._generateSourcesContent(
                      e.sources,
                      e.sourceRoot
                    )),
                  e
                );
              }),
              (t.toString = function() {
                return JSON.stringify(this.toJSON());
              }),
              e
            );
          })();
        (i.prototype._version = 3), (t.SourceMapGenerator = i);
      },
      function(e, t, n) {
        var r = n(396);
        t.encode = function(e) {
          for (
            var t, n = "", a = e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
            (t = 31 & a),
              0 < (a >>>= 5) && (t |= 32),
              (n += r.encode(t)),
              0 < a;

          );
          return n;
        };
      },
      function(e, t) {
        var n = (function() {
          function i() {
            (this._array = []), (this._set = new Map());
          }
          i.fromArray = function(e, t) {
            for (var n = new i(), a = 0, r = e.length; a < r; a++)
              n.add(e[a], t);
            return n;
          };
          var e = i.prototype;
          return (
            (e.size = function() {
              return this._set.size;
            }),
            (e.add = function(e, t) {
              var n = this.has(e),
                a = this._array.length;
              (n && !t) || this._array.push(e), n || this._set.set(e, a);
            }),
            (e.has = function(e) {
              return this._set.has(e);
            }),
            (e.indexOf = function(e) {
              var t = this._set.get(e);
              if (0 <= t) return t;
              throw new Error('"' + e + '" is not in the set.');
            }),
            (e.at = function(e) {
              if (0 <= e && e < this._array.length) return this._array[e];
              throw new Error("No element indexed by " + e);
            }),
            (e.toArray = function() {
              return this._array.slice();
            }),
            i
          );
        })();
        t.ArraySet = n;
      },
      function(e, t, a) {
        (function(t) {
          if ("function" == typeof fetch) {
            var n = null;
            (e.exports = function() {
              if ("string" != typeof n)
                throw new Error(
                  "You must provide the URL of lib/mappings.wasm by calling SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) before using SourceMapConsumer"
                );
              return fetch(n).then(function(e) {
                return e.arrayBuffer();
              });
            }),
              (e.exports.initialize = function(e) {
                return (n = e);
              });
          } else {
            var r = a(31),
              i = a(6);
            (e.exports = function() {
              return new Promise(function(n, a) {
                var e = i.join(t, "mappings.wasm");
                r.readFile(e, null, function(e, t) {
                  e ? a(e) : n(t.buffer);
                });
              });
            }),
              (e.exports.initialize = function(e) {
                console.debug(
                  "SourceMapConsumer.initialize is a no-op when running in node.js"
                );
              });
          }
        }.call(this, "/"));
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.needsWhitespace = l),
          (t.needsWhitespaceBefore = function(e, t) {
            return l(e, t, "before");
          }),
          (t.needsWhitespaceAfter = function(e, t) {
            return l(e, t, "after");
          }),
          (t.needsParens = function(e, t, n) {
            return (
              !!t &&
              (!(
                !c().isNewExpression(t) ||
                t.callee !== e ||
                !(function e(t) {
                  return (
                    !!c().isCallExpression(t) ||
                    (!!c().isMemberExpression(t) &&
                      (e(t.object) || (!t.computed && e(t.property))))
                  );
                })(e)
              ) ||
                u(o, e, t, n))
            );
          });
        var a = r(n(406));
        function c() {
          var e = r(n(4));
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function i(e) {
          var t = {};
          function n(e, r) {
            var i = t[e];
            t[e] = i
              ? function(e, t, n) {
                  var a = i(e, t, n);
                  return null == a ? r(e, t, n) : a;
                }
              : r;
          }
          for (var a = Object.keys(e), r = 0; r < a.length; r++) {
            var i = a[r],
              o = c().FLIPPED_ALIAS_KEYS[i];
            if (o) {
              var s = o,
                d = Array.isArray(s),
                u = 0;
              for (s = d ? s : s[Symbol.iterator](); ; ) {
                var l;
                if (d) {
                  if (u >= s.length) break;
                  l = s[u++];
                } else {
                  if ((u = s.next()).done) break;
                  l = u.value;
                }
                n(l, e[i]);
              }
            } else n(i, e[i]);
          }
          return t;
        }
        var o = i(r(n(407))),
          s = i(a.nodes),
          d = i(a.list);
        function u(e, t, n, a) {
          var r = e[t.type];
          return r ? r(t, n, a) : null;
        }
        function l(e, t, n) {
          if (!e) return 0;
          c().isExpressionStatement(e) && (e = e.expression);
          var a = u(s, e, t);
          if (!a) {
            var r = u(d, e, t);
            if (r) for (var i = 0; i < r.length && !(a = l(r[i], e, n)); i++);
          }
          return ("object" == typeof a && null !== a && a[n]) || 0;
        }
      },
      function(e, t, n) {
        "use strict";
        function i() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function a(e) {
          if (e.declaration) {
            var t = e.declaration;
            this.print(t, e), i().isStatement(t) || this.semicolon();
          } else {
            "type" === e.exportKind && (this.word("type"), this.space());
            for (var n = e.specifiers.slice(0), a = !1; ; ) {
              var r = n[0];
              if (
                !i().isExportDefaultSpecifier(r) &&
                !i().isExportNamespaceSpecifier(r)
              )
                break;
              (a = !0),
                this.print(n.shift(), e),
                n.length && (this.token(","), this.space());
            }
            (n.length || (!n.length && !a)) &&
              (this.token("{"),
              n.length && (this.space(), this.printList(n, e), this.space()),
              this.token("}")),
              e.source &&
                (this.space(),
                this.word("from"),
                this.space(),
                this.print(e.source, e)),
              this.semicolon();
          }
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ImportSpecifier = function(e) {
            ("type" !== e.importKind && "typeof" !== e.importKind) ||
              (this.word(e.importKind), this.space()),
              this.print(e.imported, e),
              e.local &&
                e.local.name !== e.imported.name &&
                (this.space(),
                this.word("as"),
                this.space(),
                this.print(e.local, e));
          }),
          (t.ImportDefaultSpecifier = function(e) {
            this.print(e.local, e);
          }),
          (t.ExportDefaultSpecifier = function(e) {
            this.print(e.exported, e);
          }),
          (t.ExportSpecifier = function(e) {
            this.print(e.local, e),
              e.exported &&
                e.local.name !== e.exported.name &&
                (this.space(),
                this.word("as"),
                this.space(),
                this.print(e.exported, e));
          }),
          (t.ExportNamespaceSpecifier = function(e) {
            this.token("*"),
              this.space(),
              this.word("as"),
              this.space(),
              this.print(e.exported, e);
          }),
          (t.ExportAllDeclaration = function(e) {
            this.word("export"),
              this.space(),
              "type" === e.exportKind && (this.word("type"), this.space()),
              this.token("*"),
              this.space(),
              this.word("from"),
              this.space(),
              this.print(e.source, e),
              this.semicolon();
          }),
          (t.ExportNamedDeclaration = function(e) {
            this.format.decoratorsBeforeExport &&
              i().isClassDeclaration(e.declaration) &&
              this.printJoin(e.declaration.decorators, e),
              this.word("export"),
              this.space(),
              a.apply(this, arguments);
          }),
          (t.ExportDefaultDeclaration = function(e) {
            this.format.decoratorsBeforeExport &&
              i().isClassDeclaration(e.declaration) &&
              this.printJoin(e.declaration.decorators, e),
              this.word("export"),
              this.space(),
              this.word("default"),
              this.space(),
              a.apply(this, arguments);
          }),
          (t.ImportDeclaration = function(e) {
            this.word("import"),
              this.space(),
              ("type" === e.importKind || "typeof" === e.importKind) &&
                (this.word(e.importKind), this.space());
            var t = e.specifiers.slice(0);
            if (t && t.length) {
              for (;;) {
                var n = t[0];
                if (
                  !i().isImportDefaultSpecifier(n) &&
                  !i().isImportNamespaceSpecifier(n)
                )
                  break;
                this.print(t.shift(), e),
                  t.length && (this.token(","), this.space());
              }
              t.length &&
                (this.token("{"),
                this.space(),
                this.printList(t, e),
                this.space(),
                this.token("}")),
                this.space(),
                this.word("from"),
                this.space();
            }
            this.print(e.source, e), this.semicolon();
          }),
          (t.ImportNamespaceSpecifier = function(e) {
            this.token("*"),
              this.space(),
              this.word("as"),
              this.space(),
              this.print(e.local, e);
          });
      },
      function(e, I, t) {
        "use strict";
        (function(e) {
          var s = t(415),
            i = t(416),
            o = t(417);
          function n() {
            return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
          }
          function d(e, t) {
            if (n() < t) throw new RangeError("Invalid typed array length");
            return (
              c.TYPED_ARRAY_SUPPORT
                ? ((e = new Uint8Array(t)).__proto__ = c.prototype)
                : (null === e && (e = new c(t)), (e.length = t)),
              e
            );
          }
          function c(e, t, n) {
            if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c))
              return new c(e, t, n);
            if ("number" != typeof e) return a(this, e, t, n);
            if ("string" == typeof t)
              throw new Error(
                "If encoding is specified then the first argument must be a string"
              );
            return r(this, e);
          }
          function a(e, t, n, a) {
            if ("number" == typeof t)
              throw new TypeError('"value" argument must not be a number');
            return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer
              ? (function(e, t, n, a) {
                  if ((t.byteLength, n < 0 || t.byteLength < n))
                    throw new RangeError("'offset' is out of bounds");
                  if (t.byteLength < n + (a || 0))
                    throw new RangeError("'length' is out of bounds");
                  return (
                    (t =
                      void 0 === n && void 0 === a
                        ? new Uint8Array(t)
                        : void 0 === a
                          ? new Uint8Array(t, n)
                          : new Uint8Array(t, n, a)),
                    c.TYPED_ARRAY_SUPPORT
                      ? ((e = t).__proto__ = c.prototype)
                      : (e = l(e, t)),
                    e
                  );
                })(e, t, n, a)
              : "string" == typeof t
                ? (function(e, t, n) {
                    if (
                      (("string" == typeof n && "" !== n) || (n = "utf8"),
                      !c.isEncoding(n))
                    )
                      throw new TypeError(
                        '"encoding" must be a valid string encoding'
                      );
                    var a = 0 | g(t, n),
                      r = (e = d(e, a)).write(t, n);
                    return r !== a && (e = e.slice(0, r)), e;
                  })(e, t, n)
                : (function(e, t) {
                    if (c.isBuffer(t)) {
                      var n = 0 | p(t.length);
                      return (
                        0 === (e = d(e, n)).length || t.copy(e, 0, 0, n), e
                      );
                    }
                    if (t) {
                      if (
                        ("undefined" != typeof ArrayBuffer &&
                          t.buffer instanceof ArrayBuffer) ||
                        "length" in t
                      )
                        return "number" != typeof t.length ||
                          (a = t.length) != a
                          ? d(e, 0)
                          : l(e, t);
                      if ("Buffer" === t.type && o(t.data)) return l(e, t.data);
                    }
                    var a;
                    throw new TypeError(
                      "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
                    );
                  })(e, t);
          }
          function u(e) {
            if ("number" != typeof e)
              throw new TypeError('"size" argument must be a number');
            if (e < 0)
              throw new RangeError('"size" argument must not be negative');
          }
          function r(e, t) {
            if (
              (u(t), (e = d(e, t < 0 ? 0 : 0 | p(t))), !c.TYPED_ARRAY_SUPPORT)
            )
              for (var n = 0; n < t; ++n) e[n] = 0;
            return e;
          }
          function l(e, t) {
            var n = t.length < 0 ? 0 : 0 | p(t.length);
            e = d(e, n);
            for (var a = 0; a < n; a += 1) e[a] = 255 & t[a];
            return e;
          }
          function p(e) {
            if (e >= n())
              throw new RangeError(
                "Attempt to allocate Buffer larger than maximum size: 0x" +
                  n().toString(16) +
                  " bytes"
              );
            return 0 | e;
          }
          function g(e, t) {
            if (c.isBuffer(e)) return e.length;
            if (
              "undefined" != typeof ArrayBuffer &&
              "function" == typeof ArrayBuffer.isView &&
              (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
            )
              return e.byteLength;
            "string" != typeof e && (e = "" + e);
            var n = e.length;
            if (0 === n) return 0;
            for (var a = !1; ; )
              switch (t) {
                case "ascii":
                case "latin1":
                case "binary":
                  return n;
                case "utf8":
                case "utf-8":
                case void 0:
                  return k(e).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * n;
                case "hex":
                  return n >>> 1;
                case "base64":
                  return j(e).length;
                default:
                  if (a) return k(e).length;
                  (t = ("" + t).toLowerCase()), (a = !0);
              }
          }
          function f(e, t, n) {
            var a = e[t];
            (e[t] = e[n]), (e[n] = a);
          }
          function h(e, t, n, a, r) {
            if (0 === e.length) return -1;
            if (
              ("string" == typeof n
                ? ((a = n), (n = 0))
                : 2147483647 < n
                  ? (n = 2147483647)
                  : n < -2147483648 && (n = -2147483648),
              (n = +n),
              isNaN(n) && (n = r ? 0 : e.length - 1),
              n < 0 && (n = e.length + n),
              n >= e.length)
            ) {
              if (r) return -1;
              n = e.length - 1;
            } else if (n < 0) {
              if (!r) return -1;
              n = 0;
            }
            if (("string" == typeof t && (t = c.from(t, a)), c.isBuffer(t)))
              return 0 === t.length ? -1 : R(e, t, n, a, r);
            if ("number" == typeof t)
              return (
                (t &= 255),
                c.TYPED_ARRAY_SUPPORT &&
                "function" == typeof Uint8Array.prototype.indexOf
                  ? r
                    ? Uint8Array.prototype.indexOf.call(e, t, n)
                    : Uint8Array.prototype.lastIndexOf.call(e, t, n)
                  : R(e, [t], n, a, r)
              );
            throw new TypeError("val must be string, number or Buffer");
          }
          function R(e, t, n, a, r) {
            var i,
              o = 1,
              s = e.length,
              d = t.length;
            if (
              void 0 !== a &&
              ("ucs2" === (a = String(a).toLowerCase()) ||
                "ucs-2" === a ||
                "utf16le" === a ||
                "utf-16le" === a)
            ) {
              if (e.length < 2 || t.length < 2) return -1;
              (s /= o = 2), (d /= 2), (n /= 2);
            }
            function u(e, t) {
              return 1 === o ? e[t] : e.readUInt16BE(t * o);
            }
            if (r) {
              var l = -1;
              for (i = n; i < s; i++)
                if (u(e, i) === u(t, -1 === l ? 0 : i - l)) {
                  if ((-1 === l && (l = i), i - l + 1 === d)) return l * o;
                } else -1 !== l && (i -= i - l), (l = -1);
            } else
              for (s < n + d && (n = s - d), i = n; 0 <= i; i--) {
                for (var c = !0, p = 0; p < d; p++)
                  if (u(e, i + p) !== u(t, p)) {
                    c = !1;
                    break;
                  }
                if (c) return i;
              }
            return -1;
          }
          function y(e, t, n, a) {
            n = Number(n) || 0;
            var r = e.length - n;
            a ? (a = Number(a)) > r && (a = r) : (a = r);
            var i = t.length;
            if (i % 2 != 0) throw new TypeError("Invalid hex string");
            i / 2 < a && (a = i / 2);
            for (var o = 0; o < a; ++o) {
              var s = parseInt(t.substr(2 * o, 2), 16);
              if (isNaN(s)) return o;
              e[n + o] = s;
            }
            return o;
          }
          function m(e, t, n, a) {
            return M(
              (function(e) {
                for (var t = [], n = 0; n < e.length; ++n)
                  t.push(255 & e.charCodeAt(n));
                return t;
              })(t),
              e,
              n,
              a
            );
          }
          function v(e, t, n) {
            n = Math.min(e.length, n);
            for (var a = [], r = t; r < n; ) {
              var i,
                o,
                s,
                d,
                u = e[r],
                l = null,
                c = 239 < u ? 4 : 223 < u ? 3 : 191 < u ? 2 : 1;
              if (r + c <= n)
                switch (c) {
                  case 1:
                    u < 128 && (l = u);
                    break;
                  case 2:
                    128 == (192 & (i = e[r + 1])) &&
                      127 < (d = ((31 & u) << 6) | (63 & i)) &&
                      (l = d);
                    break;
                  case 3:
                    (i = e[r + 1]),
                      (o = e[r + 2]),
                      128 == (192 & i) &&
                        128 == (192 & o) &&
                        2047 <
                          (d = ((15 & u) << 12) | ((63 & i) << 6) | (63 & o)) &&
                        (d < 55296 || 57343 < d) &&
                        (l = d);
                    break;
                  case 4:
                    (i = e[r + 1]),
                      (o = e[r + 2]),
                      (s = e[r + 3]),
                      128 == (192 & i) &&
                        128 == (192 & o) &&
                        128 == (192 & s) &&
                        65535 <
                          (d =
                            ((15 & u) << 18) |
                            ((63 & i) << 12) |
                            ((63 & o) << 6) |
                            (63 & s)) &&
                        d < 1114112 &&
                        (l = d);
                }
              null === l
                ? ((l = 65533), (c = 1))
                : 65535 < l &&
                  ((l -= 65536),
                  a.push(((l >>> 10) & 1023) | 55296),
                  (l = 56320 | (1023 & l))),
                a.push(l),
                (r += c);
            }
            return (function(e) {
              var t = e.length;
              if (t <= b) return String.fromCharCode.apply(String, e);
              for (var n = "", a = 0; a < t; )
                n += String.fromCharCode.apply(String, e.slice(a, (a += b)));
              return n;
            })(a);
          }
          (I.Buffer = c),
            (I.SlowBuffer = function(e) {
              return +e != e && (e = 0), c.alloc(+e);
            }),
            (I.INSPECT_MAX_BYTES = 50),
            (c.TYPED_ARRAY_SUPPORT =
              void 0 !== e.TYPED_ARRAY_SUPPORT
                ? e.TYPED_ARRAY_SUPPORT
                : (function() {
                    try {
                      var e = new Uint8Array(1);
                      return (
                        (e.__proto__ = {
                          __proto__: Uint8Array.prototype,
                          foo: function() {
                            return 42;
                          },
                        }),
                        42 === e.foo() &&
                          "function" == typeof e.subarray &&
                          0 === e.subarray(1, 1).byteLength
                      );
                    } catch (e) {
                      return !1;
                    }
                  })()),
            (I.kMaxLength = n()),
            (c.poolSize = 8192),
            (c._augment = function(e) {
              return (e.__proto__ = c.prototype), e;
            }),
            (c.from = function(e, t, n) {
              return a(null, e, t, n);
            }),
            c.TYPED_ARRAY_SUPPORT &&
              ((c.prototype.__proto__ = Uint8Array.prototype),
              (c.__proto__ = Uint8Array),
              "undefined" != typeof Symbol &&
                Symbol.species &&
                c[Symbol.species] === c &&
                Object.defineProperty(c, Symbol.species, {
                  value: null,
                  configurable: !0,
                })),
            (c.alloc = function(e, t, n) {
              return (
                (r = t),
                (i = n),
                u((a = e)),
                a <= 0
                  ? d(null, a)
                  : void 0 !== r
                    ? "string" == typeof i
                      ? d(null, a).fill(r, i)
                      : d(null, a).fill(r)
                    : d(null, a)
              );
              var a, r, i;
            }),
            (c.allocUnsafe = function(e) {
              return r(null, e);
            }),
            (c.allocUnsafeSlow = function(e) {
              return r(null, e);
            }),
            (c.isBuffer = function(e) {
              return !(null == e || !e._isBuffer);
            }),
            (c.compare = function(e, t) {
              if (!c.isBuffer(e) || !c.isBuffer(t))
                throw new TypeError("Arguments must be Buffers");
              if (e === t) return 0;
              for (
                var n = e.length, a = t.length, r = 0, i = Math.min(n, a);
                r < i;
                ++r
              )
                if (e[r] !== t[r]) {
                  (n = e[r]), (a = t[r]);
                  break;
                }
              return n < a ? -1 : a < n ? 1 : 0;
            }),
            (c.isEncoding = function(e) {
              switch (String(e).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return !0;
                default:
                  return !1;
              }
            }),
            (c.concat = function(e, t) {
              if (!o(e))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              if (0 === e.length) return c.alloc(0);
              var n;
              if (void 0 === t)
                for (n = t = 0; n < e.length; ++n) t += e[n].length;
              var a = c.allocUnsafe(t),
                r = 0;
              for (n = 0; n < e.length; ++n) {
                var i = e[n];
                if (!c.isBuffer(i))
                  throw new TypeError(
                    '"list" argument must be an Array of Buffers'
                  );
                i.copy(a, r), (r += i.length);
              }
              return a;
            }),
            (c.byteLength = g),
            (c.prototype._isBuffer = !0),
            (c.prototype.swap16 = function() {
              var e = this.length;
              if (e % 2 != 0)
                throw new RangeError(
                  "Buffer size must be a multiple of 16-bits"
                );
              for (var t = 0; t < e; t += 2) f(this, t, t + 1);
              return this;
            }),
            (c.prototype.swap32 = function() {
              var e = this.length;
              if (e % 4 != 0)
                throw new RangeError(
                  "Buffer size must be a multiple of 32-bits"
                );
              for (var t = 0; t < e; t += 4)
                f(this, t, t + 3), f(this, t + 1, t + 2);
              return this;
            }),
            (c.prototype.swap64 = function() {
              var e = this.length;
              if (e % 8 != 0)
                throw new RangeError(
                  "Buffer size must be a multiple of 64-bits"
                );
              for (var t = 0; t < e; t += 8)
                f(this, t, t + 7),
                  f(this, t + 1, t + 6),
                  f(this, t + 2, t + 5),
                  f(this, t + 3, t + 4);
              return this;
            }),
            (c.prototype.toString = function() {
              var e = 0 | this.length;
              return 0 === e
                ? ""
                : 0 === arguments.length
                  ? v(this, 0, e)
                  : function(e, t, n) {
                      var a,
                        r,
                        i,
                        o = !1;
                      if (((void 0 === t || t < 0) && (t = 0), t > this.length))
                        return "";
                      if (
                        ((void 0 === n || n > this.length) && (n = this.length),
                        n <= 0)
                      )
                        return "";
                      if ((n >>>= 0) <= (t >>>= 0)) return "";
                      for (e || (e = "utf8"); ; )
                        switch (e) {
                          case "hex":
                            return A(this, t, n);
                          case "utf8":
                          case "utf-8":
                            return v(this, t, n);
                          case "ascii":
                            return E(this, t, n);
                          case "latin1":
                          case "binary":
                            return x(this, t, n);
                          case "base64":
                            return (
                              (a = this),
                              (i = n),
                              0 === (r = t) && i === a.length
                                ? s.fromByteArray(a)
                                : s.fromByteArray(a.slice(r, i))
                            );
                          case "ucs2":
                          case "ucs-2":
                          case "utf16le":
                          case "utf-16le":
                            return S(this, t, n);
                          default:
                            if (o)
                              throw new TypeError("Unknown encoding: " + e);
                            (e = (e + "").toLowerCase()), (o = !0);
                        }
                    }.apply(this, arguments);
            }),
            (c.prototype.equals = function(e) {
              if (!c.isBuffer(e))
                throw new TypeError("Argument must be a Buffer");
              return this === e || 0 === c.compare(this, e);
            }),
            (c.prototype.inspect = function() {
              var e = "",
                t = I.INSPECT_MAX_BYTES;
              return (
                0 < this.length &&
                  ((e = this.toString("hex", 0, t)
                    .match(/.{2}/g)
                    .join(" ")),
                  this.length > t && (e += " ... ")),
                "<Buffer " + e + ">"
              );
            }),
            (c.prototype.compare = function(e, t, n, a, r) {
              if (!c.isBuffer(e))
                throw new TypeError("Argument must be a Buffer");
              if (
                (void 0 === t && (t = 0),
                void 0 === n && (n = e ? e.length : 0),
                void 0 === a && (a = 0),
                void 0 === r && (r = this.length),
                t < 0 || n > e.length || a < 0 || r > this.length)
              )
                throw new RangeError("out of range index");
              if (r <= a && n <= t) return 0;
              if (r <= a) return -1;
              if (n <= t) return 1;
              if (this === e) return 0;
              for (
                var i = (r >>>= 0) - (a >>>= 0),
                  o = (n >>>= 0) - (t >>>= 0),
                  s = Math.min(i, o),
                  d = this.slice(a, r),
                  u = e.slice(t, n),
                  l = 0;
                l < s;
                ++l
              )
                if (d[l] !== u[l]) {
                  (i = d[l]), (o = u[l]);
                  break;
                }
              return i < o ? -1 : o < i ? 1 : 0;
            }),
            (c.prototype.includes = function(e, t, n) {
              return -1 !== this.indexOf(e, t, n);
            }),
            (c.prototype.indexOf = function(e, t, n) {
              return h(this, e, t, n, !0);
            }),
            (c.prototype.lastIndexOf = function(e, t, n) {
              return h(this, e, t, n, !1);
            }),
            (c.prototype.write = function(e, t, n, a) {
              if (void 0 === t) (a = "utf8"), (n = this.length), (t = 0);
              else if (void 0 === n && "string" == typeof t)
                (a = t), (n = this.length), (t = 0);
              else {
                if (!isFinite(t))
                  throw new Error(
                    "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                  );
                (t |= 0),
                  isFinite(n)
                    ? ((n |= 0), void 0 === a && (a = "utf8"))
                    : ((a = n), (n = void 0));
              }
              var r,
                i,
                o,
                s,
                d,
                u,
                l,
                c,
                p,
                g = this.length - t;
              if (
                ((void 0 === n || g < n) && (n = g),
                (0 < e.length && (n < 0 || t < 0)) || t > this.length)
              )
                throw new RangeError("Attempt to write outside buffer bounds");
              a || (a = "utf8");
              for (var f = !1; ; )
                switch (a) {
                  case "hex":
                    return y(this, e, t, n);
                  case "utf8":
                  case "utf-8":
                    return (
                      (c = t), (p = n), M(k(e, (l = this).length - c), l, c, p)
                    );
                  case "ascii":
                    return m(this, e, t, n);
                  case "latin1":
                  case "binary":
                    return m(this, e, t, n);
                  case "base64":
                    return (s = this), (d = t), (u = n), M(j(e), s, d, u);
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return (
                      (i = t),
                      (o = n),
                      M(
                        (function(e, t) {
                          for (
                            var n, a, r, i = [], o = 0;
                            o < e.length && !((t -= 2) < 0);
                            ++o
                          )
                            (a = (n = e.charCodeAt(o)) >> 8),
                              (r = n % 256),
                              i.push(r),
                              i.push(a);
                          return i;
                        })(e, (r = this).length - i),
                        r,
                        i,
                        o
                      )
                    );
                  default:
                    if (f) throw new TypeError("Unknown encoding: " + a);
                    (a = ("" + a).toLowerCase()), (f = !0);
                }
            }),
            (c.prototype.toJSON = function() {
              return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0),
              };
            });
          var b = 4096;
          function E(e, t, n) {
            var a = "";
            n = Math.min(e.length, n);
            for (var r = t; r < n; ++r) a += String.fromCharCode(127 & e[r]);
            return a;
          }
          function x(e, t, n) {
            var a = "";
            n = Math.min(e.length, n);
            for (var r = t; r < n; ++r) a += String.fromCharCode(e[r]);
            return a;
          }
          function A(e, t, n) {
            var a,
              r = e.length;
            (!t || t < 0) && (t = 0), (!n || n < 0 || r < n) && (n = r);
            for (var i = "", o = t; o < n; ++o)
              i += (a = e[o]) < 16 ? "0" + a.toString(16) : a.toString(16);
            return i;
          }
          function S(e, t, n) {
            for (var a = e.slice(t, n), r = "", i = 0; i < a.length; i += 2)
              r += String.fromCharCode(a[i] + 256 * a[i + 1]);
            return r;
          }
          function _(e, t, n) {
            if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
            if (n < e + t)
              throw new RangeError("Trying to access beyond buffer length");
          }
          function T(e, t, n, a, r, i) {
            if (!c.isBuffer(e))
              throw new TypeError(
                '"buffer" argument must be a Buffer instance'
              );
            if (r < t || t < i)
              throw new RangeError('"value" argument is out of bounds');
            if (n + a > e.length) throw new RangeError("Index out of range");
          }
          function P(e, t, n, a) {
            t < 0 && (t = 65535 + t + 1);
            for (var r = 0, i = Math.min(e.length - n, 2); r < i; ++r)
              e[n + r] =
                (t & (255 << (8 * (a ? r : 1 - r)))) >>> (8 * (a ? r : 1 - r));
          }
          function C(e, t, n, a) {
            t < 0 && (t = 4294967295 + t + 1);
            for (var r = 0, i = Math.min(e.length - n, 4); r < i; ++r)
              e[n + r] = (t >>> (8 * (a ? r : 3 - r))) & 255;
          }
          function w(e, t, n, a, r, i) {
            if (n + a > e.length) throw new RangeError("Index out of range");
            if (n < 0) throw new RangeError("Index out of range");
          }
          function D(e, t, n, a, r) {
            return r || w(e, 0, n, 4), i.write(e, t, n, a, 23, 4), n + 4;
          }
          function O(e, t, n, a, r) {
            return r || w(e, 0, n, 8), i.write(e, t, n, a, 52, 8), n + 8;
          }
          (c.prototype.slice = function(e, t) {
            var n,
              a = this.length;
            if (
              ((e = ~~e) < 0 ? (e += a) < 0 && (e = 0) : a < e && (e = a),
              (t = void 0 === t ? a : ~~t) < 0
                ? (t += a) < 0 && (t = 0)
                : a < t && (t = a),
              t < e && (t = e),
              c.TYPED_ARRAY_SUPPORT)
            )
              (n = this.subarray(e, t)).__proto__ = c.prototype;
            else {
              var r = t - e;
              n = new c(r, void 0);
              for (var i = 0; i < r; ++i) n[i] = this[i + e];
            }
            return n;
          }),
            (c.prototype.readUIntLE = function(e, t, n) {
              (e |= 0), (t |= 0), n || _(e, t, this.length);
              for (var a = this[e], r = 1, i = 0; ++i < t && (r *= 256); )
                a += this[e + i] * r;
              return a;
            }),
            (c.prototype.readUIntBE = function(e, t, n) {
              (e |= 0), (t |= 0), n || _(e, t, this.length);
              for (var a = this[e + --t], r = 1; 0 < t && (r *= 256); )
                a += this[e + --t] * r;
              return a;
            }),
            (c.prototype.readUInt8 = function(e, t) {
              return t || _(e, 1, this.length), this[e];
            }),
            (c.prototype.readUInt16LE = function(e, t) {
              return t || _(e, 2, this.length), this[e] | (this[e + 1] << 8);
            }),
            (c.prototype.readUInt16BE = function(e, t) {
              return t || _(e, 2, this.length), (this[e] << 8) | this[e + 1];
            }),
            (c.prototype.readUInt32LE = function(e, t) {
              return (
                t || _(e, 4, this.length),
                (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                  16777216 * this[e + 3]
              );
            }),
            (c.prototype.readUInt32BE = function(e, t) {
              return (
                t || _(e, 4, this.length),
                16777216 * this[e] +
                  ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
              );
            }),
            (c.prototype.readIntLE = function(e, t, n) {
              (e |= 0), (t |= 0), n || _(e, t, this.length);
              for (var a = this[e], r = 1, i = 0; ++i < t && (r *= 256); )
                a += this[e + i] * r;
              return a >= (r *= 128) && (a -= Math.pow(2, 8 * t)), a;
            }),
            (c.prototype.readIntBE = function(e, t, n) {
              (e |= 0), (t |= 0), n || _(e, t, this.length);
              for (var a = t, r = 1, i = this[e + --a]; 0 < a && (r *= 256); )
                i += this[e + --a] * r;
              return i >= (r *= 128) && (i -= Math.pow(2, 8 * t)), i;
            }),
            (c.prototype.readInt8 = function(e, t) {
              return (
                t || _(e, 1, this.length),
                128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
              );
            }),
            (c.prototype.readInt16LE = function(e, t) {
              t || _(e, 2, this.length);
              var n = this[e] | (this[e + 1] << 8);
              return 32768 & n ? 4294901760 | n : n;
            }),
            (c.prototype.readInt16BE = function(e, t) {
              t || _(e, 2, this.length);
              var n = this[e + 1] | (this[e] << 8);
              return 32768 & n ? 4294901760 | n : n;
            }),
            (c.prototype.readInt32LE = function(e, t) {
              return (
                t || _(e, 4, this.length),
                this[e] |
                  (this[e + 1] << 8) |
                  (this[e + 2] << 16) |
                  (this[e + 3] << 24)
              );
            }),
            (c.prototype.readInt32BE = function(e, t) {
              return (
                t || _(e, 4, this.length),
                (this[e] << 24) |
                  (this[e + 1] << 16) |
                  (this[e + 2] << 8) |
                  this[e + 3]
              );
            }),
            (c.prototype.readFloatLE = function(e, t) {
              return t || _(e, 4, this.length), i.read(this, e, !0, 23, 4);
            }),
            (c.prototype.readFloatBE = function(e, t) {
              return t || _(e, 4, this.length), i.read(this, e, !1, 23, 4);
            }),
            (c.prototype.readDoubleLE = function(e, t) {
              return t || _(e, 8, this.length), i.read(this, e, !0, 52, 8);
            }),
            (c.prototype.readDoubleBE = function(e, t) {
              return t || _(e, 8, this.length), i.read(this, e, !1, 52, 8);
            }),
            (c.prototype.writeUIntLE = function(e, t, n, a) {
              (e = +e),
                (t |= 0),
                (n |= 0),
                a || T(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
              var r = 1,
                i = 0;
              for (this[t] = 255 & e; ++i < n && (r *= 256); )
                this[t + i] = (e / r) & 255;
              return t + n;
            }),
            (c.prototype.writeUIntBE = function(e, t, n, a) {
              (e = +e),
                (t |= 0),
                (n |= 0),
                a || T(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
              var r = n - 1,
                i = 1;
              for (this[t + r] = 255 & e; 0 <= --r && (i *= 256); )
                this[t + r] = (e / i) & 255;
              return t + n;
            }),
            (c.prototype.writeUInt8 = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 1, 255, 0),
                c.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                (this[t] = 255 & e),
                t + 1
              );
            }),
            (c.prototype.writeUInt16LE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 2, 65535, 0),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                  : P(this, e, t, !0),
                t + 2
              );
            }),
            (c.prototype.writeUInt16BE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 2, 65535, 0),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                  : P(this, e, t, !1),
                t + 2
              );
            }),
            (c.prototype.writeUInt32LE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 4, 4294967295, 0),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t + 3] = e >>> 24),
                    (this[t + 2] = e >>> 16),
                    (this[t + 1] = e >>> 8),
                    (this[t] = 255 & e))
                  : C(this, e, t, !0),
                t + 4
              );
            }),
            (c.prototype.writeUInt32BE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 4, 4294967295, 0),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 24),
                    (this[t + 1] = e >>> 16),
                    (this[t + 2] = e >>> 8),
                    (this[t + 3] = 255 & e))
                  : C(this, e, t, !1),
                t + 4
              );
            }),
            (c.prototype.writeIntLE = function(e, t, n, a) {
              if (((e = +e), (t |= 0), !a)) {
                var r = Math.pow(2, 8 * n - 1);
                T(this, e, t, n, r - 1, -r);
              }
              var i = 0,
                o = 1,
                s = 0;
              for (this[t] = 255 & e; ++i < n && (o *= 256); )
                e < 0 && 0 === s && 0 !== this[t + i - 1] && (s = 1),
                  (this[t + i] = (((e / o) >> 0) - s) & 255);
              return t + n;
            }),
            (c.prototype.writeIntBE = function(e, t, n, a) {
              if (((e = +e), (t |= 0), !a)) {
                var r = Math.pow(2, 8 * n - 1);
                T(this, e, t, n, r - 1, -r);
              }
              var i = n - 1,
                o = 1,
                s = 0;
              for (this[t + i] = 255 & e; 0 <= --i && (o *= 256); )
                e < 0 && 0 === s && 0 !== this[t + i + 1] && (s = 1),
                  (this[t + i] = (((e / o) >> 0) - s) & 255);
              return t + n;
            }),
            (c.prototype.writeInt8 = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 1, 127, -128),
                c.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                e < 0 && (e = 255 + e + 1),
                (this[t] = 255 & e),
                t + 1
              );
            }),
            (c.prototype.writeInt16LE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 2, 32767, -32768),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                  : P(this, e, t, !0),
                t + 2
              );
            }),
            (c.prototype.writeInt16BE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 2, 32767, -32768),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                  : P(this, e, t, !1),
                t + 2
              );
            }),
            (c.prototype.writeInt32LE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 4, 2147483647, -2147483648),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = 255 & e),
                    (this[t + 1] = e >>> 8),
                    (this[t + 2] = e >>> 16),
                    (this[t + 3] = e >>> 24))
                  : C(this, e, t, !0),
                t + 4
              );
            }),
            (c.prototype.writeInt32BE = function(e, t, n) {
              return (
                (e = +e),
                (t |= 0),
                n || T(this, e, t, 4, 2147483647, -2147483648),
                e < 0 && (e = 4294967295 + e + 1),
                c.TYPED_ARRAY_SUPPORT
                  ? ((this[t] = e >>> 24),
                    (this[t + 1] = e >>> 16),
                    (this[t + 2] = e >>> 8),
                    (this[t + 3] = 255 & e))
                  : C(this, e, t, !1),
                t + 4
              );
            }),
            (c.prototype.writeFloatLE = function(e, t, n) {
              return D(this, e, t, !0, n);
            }),
            (c.prototype.writeFloatBE = function(e, t, n) {
              return D(this, e, t, !1, n);
            }),
            (c.prototype.writeDoubleLE = function(e, t, n) {
              return O(this, e, t, !0, n);
            }),
            (c.prototype.writeDoubleBE = function(e, t, n) {
              return O(this, e, t, !1, n);
            }),
            (c.prototype.copy = function(e, t, n, a) {
              if (
                (n || (n = 0),
                a || 0 === a || (a = this.length),
                t >= e.length && (t = e.length),
                t || (t = 0),
                0 < a && a < n && (a = n),
                a === n)
              )
                return 0;
              if (0 === e.length || 0 === this.length) return 0;
              if (t < 0) throw new RangeError("targetStart out of bounds");
              if (n < 0 || n >= this.length)
                throw new RangeError("sourceStart out of bounds");
              if (a < 0) throw new RangeError("sourceEnd out of bounds");
              a > this.length && (a = this.length),
                e.length - t < a - n && (a = e.length - t + n);
              var r,
                i = a - n;
              if (this === e && n < t && t < a)
                for (r = i - 1; 0 <= r; --r) e[r + t] = this[r + n];
              else if (i < 1e3 || !c.TYPED_ARRAY_SUPPORT)
                for (r = 0; r < i; ++r) e[r + t] = this[r + n];
              else Uint8Array.prototype.set.call(e, this.subarray(n, n + i), t);
              return i;
            }),
            (c.prototype.fill = function(e, t, n, a) {
              if ("string" == typeof e) {
                if (
                  ("string" == typeof t
                    ? ((a = t), (t = 0), (n = this.length))
                    : "string" == typeof n && ((a = n), (n = this.length)),
                  1 === e.length)
                ) {
                  var r = e.charCodeAt(0);
                  r < 256 && (e = r);
                }
                if (void 0 !== a && "string" != typeof a)
                  throw new TypeError("encoding must be a string");
                if ("string" == typeof a && !c.isEncoding(a))
                  throw new TypeError("Unknown encoding: " + a);
              } else "number" == typeof e && (e &= 255);
              if (t < 0 || this.length < t || this.length < n)
                throw new RangeError("Out of range index");
              if (n <= t) return this;
              var i;
              if (
                ((t >>>= 0),
                (n = void 0 === n ? this.length : n >>> 0),
                e || (e = 0),
                "number" == typeof e)
              )
                for (i = t; i < n; ++i) this[i] = e;
              else {
                var o = c.isBuffer(e) ? e : k(new c(e, a).toString()),
                  s = o.length;
                for (i = 0; i < n - t; ++i) this[i + t] = o[i % s];
              }
              return this;
            });
          var F = /[^+\/0-9A-Za-z-_]/g;
          function k(e, t) {
            var n;
            t = t || 1 / 0;
            for (var a = e.length, r = null, i = [], o = 0; o < a; ++o) {
              if (55295 < (n = e.charCodeAt(o)) && n < 57344) {
                if (!r) {
                  if (56319 < n) {
                    -1 < (t -= 3) && i.push(239, 191, 189);
                    continue;
                  }
                  if (o + 1 === a) {
                    -1 < (t -= 3) && i.push(239, 191, 189);
                    continue;
                  }
                  r = n;
                  continue;
                }
                if (n < 56320) {
                  -1 < (t -= 3) && i.push(239, 191, 189), (r = n);
                  continue;
                }
                n = 65536 + (((r - 55296) << 10) | (n - 56320));
              } else r && -1 < (t -= 3) && i.push(239, 191, 189);
              if (((r = null), n < 128)) {
                if ((t -= 1) < 0) break;
                i.push(n);
              } else if (n < 2048) {
                if ((t -= 2) < 0) break;
                i.push((n >> 6) | 192, (63 & n) | 128);
              } else if (n < 65536) {
                if ((t -= 3) < 0) break;
                i.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
              } else {
                if (!(n < 1114112)) throw new Error("Invalid code point");
                if ((t -= 4) < 0) break;
                i.push(
                  (n >> 18) | 240,
                  ((n >> 12) & 63) | 128,
                  ((n >> 6) & 63) | 128,
                  (63 & n) | 128
                );
              }
            }
            return i;
          }
          function j(e) {
            return s.toByteArray(
              (function(e) {
                if (
                  (e = ((t = e),
                  t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")).replace(
                    F,
                    ""
                  )).length < 2
                )
                  return "";
                for (var t; e.length % 4 != 0; ) e += "=";
                return e;
              })(e)
            );
          }
          function M(e, t, n, a) {
            for (var r = 0; r < a && !(r + n >= t.length || r >= e.length); ++r)
              t[r + n] = e[r];
            return r;
          }
        }.call(this, t(21)));
      },
      function(e, t, n) {
        var d = n(433),
          u = {};
        for (var a in d) d.hasOwnProperty(a) && (u[d[a]] = a);
        var o = (e.exports = {
          rgb: { channels: 3, labels: "rgb" },
          hsl: { channels: 3, labels: "hsl" },
          hsv: { channels: 3, labels: "hsv" },
          hwb: { channels: 3, labels: "hwb" },
          cmyk: { channels: 4, labels: "cmyk" },
          xyz: { channels: 3, labels: "xyz" },
          lab: { channels: 3, labels: "lab" },
          lch: { channels: 3, labels: "lch" },
          hex: { channels: 1, labels: ["hex"] },
          keyword: { channels: 1, labels: ["keyword"] },
          ansi16: { channels: 1, labels: ["ansi16"] },
          ansi256: { channels: 1, labels: ["ansi256"] },
          hcg: { channels: 3, labels: ["h", "c", "g"] },
          apple: { channels: 3, labels: ["r16", "g16", "b16"] },
          gray: { channels: 1, labels: ["gray"] },
        });
        for (var r in o)
          if (o.hasOwnProperty(r)) {
            if (!("channels" in o[r]))
              throw new Error("missing channels property: " + r);
            if (!("labels" in o[r]))
              throw new Error("missing channel labels property: " + r);
            if (o[r].labels.length !== o[r].channels)
              throw new Error("channel and label counts mismatch: " + r);
            var i = o[r].channels,
              s = o[r].labels;
            delete o[r].channels,
              delete o[r].labels,
              Object.defineProperty(o[r], "channels", { value: i }),
              Object.defineProperty(o[r], "labels", { value: s });
          }
        (o.rgb.hsl = function(e) {
          var t,
            n,
            a = e[0] / 255,
            r = e[1] / 255,
            i = e[2] / 255,
            o = Math.min(a, r, i),
            s = Math.max(a, r, i),
            d = s - o;
          return (
            s === o
              ? (t = 0)
              : a === s
                ? (t = (r - i) / d)
                : r === s
                  ? (t = 2 + (i - a) / d)
                  : i === s && (t = 4 + (a - r) / d),
            (t = Math.min(60 * t, 360)) < 0 && (t += 360),
            (n = (o + s) / 2),
            [
              t,
              100 * (s === o ? 0 : n <= 0.5 ? d / (s + o) : d / (2 - s - o)),
              100 * n,
            ]
          );
        }),
          (o.rgb.hsv = function(e) {
            var t,
              n,
              a,
              r,
              i,
              o = e[0] / 255,
              s = e[1] / 255,
              d = e[2] / 255,
              u = Math.max(o, s, d),
              l = u - Math.min(o, s, d),
              c = function(e) {
                return (u - e) / 6 / l + 0.5;
              };
            return (
              0 === l
                ? (r = i = 0)
                : ((i = l / u),
                  (t = c(o)),
                  (n = c(s)),
                  (a = c(d)),
                  o === u
                    ? (r = a - n)
                    : s === u
                      ? (r = 1 / 3 + t - a)
                      : d === u && (r = 2 / 3 + n - t),
                  r < 0 ? (r += 1) : 1 < r && (r -= 1)),
              [360 * r, 100 * i, 100 * u]
            );
          }),
          (o.rgb.hwb = function(e) {
            var t = e[0],
              n = e[1],
              a = e[2];
            return [
              o.rgb.hsl(e)[0],
              (1 / 255) * Math.min(t, Math.min(n, a)) * 100,
              100 * (a = 1 - (1 / 255) * Math.max(t, Math.max(n, a))),
            ];
          }),
          (o.rgb.cmyk = function(e) {
            var t,
              n = e[0] / 255,
              a = e[1] / 255,
              r = e[2] / 255;
            return [
              100 *
                ((1 - n - (t = Math.min(1 - n, 1 - a, 1 - r))) / (1 - t) || 0),
              100 * ((1 - a - t) / (1 - t) || 0),
              100 * ((1 - r - t) / (1 - t) || 0),
              100 * t,
            ];
          }),
          (o.rgb.keyword = function(e) {
            var t = u[e];
            if (t) return t;
            var n,
              a,
              r,
              i = 1 / 0;
            for (var o in d)
              if (d.hasOwnProperty(o)) {
                var s = ((a = e),
                (r = d[o]),
                Math.pow(a[0] - r[0], 2) +
                  Math.pow(a[1] - r[1], 2) +
                  Math.pow(a[2] - r[2], 2));
                s < i && ((i = s), (n = o));
              }
            return n;
          }),
          (o.keyword.rgb = function(e) {
            return d[e];
          }),
          (o.rgb.xyz = function(e) {
            var t = e[0] / 255,
              n = e[1] / 255,
              a = e[2] / 255;
            return [
              100 *
                (0.4124 *
                  (t =
                    0.04045 < t
                      ? Math.pow((t + 0.055) / 1.055, 2.4)
                      : t / 12.92) +
                  0.3576 *
                    (n =
                      0.04045 < n
                        ? Math.pow((n + 0.055) / 1.055, 2.4)
                        : n / 12.92) +
                  0.1805 *
                    (a =
                      0.04045 < a
                        ? Math.pow((a + 0.055) / 1.055, 2.4)
                        : a / 12.92)),
              100 * (0.2126 * t + 0.7152 * n + 0.0722 * a),
              100 * (0.0193 * t + 0.1192 * n + 0.9505 * a),
            ];
          }),
          (o.rgb.lab = function(e) {
            var t = o.rgb.xyz(e),
              n = t[0],
              a = t[1],
              r = t[2];
            return (
              (a /= 100),
              (r /= 108.883),
              (n =
                0.008856 < (n /= 95.047)
                  ? Math.pow(n, 1 / 3)
                  : 7.787 * n + 16 / 116),
              [
                116 *
                  (a =
                    0.008856 < a ? Math.pow(a, 1 / 3) : 7.787 * a + 16 / 116) -
                  16,
                500 * (n - a),
                200 *
                  (a -
                    (r =
                      0.008856 < r
                        ? Math.pow(r, 1 / 3)
                        : 7.787 * r + 16 / 116)),
              ]
            );
          }),
          (o.hsl.rgb = function(e) {
            var t,
              n,
              a,
              r,
              i,
              o = e[0] / 360,
              s = e[1] / 100,
              d = e[2] / 100;
            if (0 === s) return [(i = 255 * d), i, i];
            (t = 2 * d - (n = d < 0.5 ? d * (1 + s) : d + s - d * s)),
              (r = [0, 0, 0]);
            for (var u = 0; u < 3; u++)
              (a = o + (1 / 3) * -(u - 1)) < 0 && a++,
                1 < a && a--,
                (i =
                  6 * a < 1
                    ? t + 6 * (n - t) * a
                    : 2 * a < 1
                      ? n
                      : 3 * a < 2
                        ? t + (n - t) * (2 / 3 - a) * 6
                        : t),
                (r[u] = 255 * i);
            return r;
          }),
          (o.hsl.hsv = function(e) {
            var t = e[0],
              n = e[1] / 100,
              a = e[2] / 100,
              r = n,
              i = Math.max(a, 0.01);
            return (
              (n *= (a *= 2) <= 1 ? a : 2 - a),
              (r *= i <= 1 ? i : 2 - i),
              [
                t,
                100 * (0 === a ? (2 * r) / (i + r) : (2 * n) / (a + n)),
                ((a + n) / 2) * 100,
              ]
            );
          }),
          (o.hsv.rgb = function(e) {
            var t = e[0] / 60,
              n = e[1] / 100,
              a = e[2] / 100,
              r = Math.floor(t) % 6,
              i = t - Math.floor(t),
              o = 255 * a * (1 - n),
              s = 255 * a * (1 - n * i),
              d = 255 * a * (1 - n * (1 - i));
            switch (((a *= 255), r)) {
              case 0:
                return [a, d, o];
              case 1:
                return [s, a, o];
              case 2:
                return [o, a, d];
              case 3:
                return [o, s, a];
              case 4:
                return [d, o, a];
              case 5:
                return [a, o, s];
            }
          }),
          (o.hsv.hsl = function(e) {
            var t,
              n,
              a,
              r = e[0],
              i = e[1] / 100,
              o = e[2] / 100,
              s = Math.max(o, 0.01);
            return (
              (a = (2 - i) * o),
              (n = i * s),
              [
                r,
                100 * (n = (n /= (t = (2 - i) * s) <= 1 ? t : 2 - t) || 0),
                100 * (a /= 2),
              ]
            );
          }),
          (o.hwb.rgb = function(e) {
            var t,
              n,
              a,
              r,
              i,
              o,
              s,
              d = e[0] / 360,
              u = e[1] / 100,
              l = e[2] / 100,
              c = u + l;
            switch (
              (1 < c && ((u /= c), (l /= c)),
              (n = 1 - l),
              (a = 6 * d - (t = Math.floor(6 * d))),
              0 != (1 & t) && (a = 1 - a),
              (r = u + a * (n - u)),
              t)
            ) {
              default:
              case 6:
              case 0:
                (i = n), (o = r), (s = u);
                break;
              case 1:
                (i = r), (o = n), (s = u);
                break;
              case 2:
                (i = u), (o = n), (s = r);
                break;
              case 3:
                (i = u), (o = r), (s = n);
                break;
              case 4:
                (i = r), (o = u), (s = n);
                break;
              case 5:
                (i = n), (o = u), (s = r);
            }
            return [255 * i, 255 * o, 255 * s];
          }),
          (o.cmyk.rgb = function(e) {
            var t = e[0] / 100,
              n = e[1] / 100,
              a = e[2] / 100,
              r = e[3] / 100;
            return [
              255 * (1 - Math.min(1, t * (1 - r) + r)),
              255 * (1 - Math.min(1, n * (1 - r) + r)),
              255 * (1 - Math.min(1, a * (1 - r) + r)),
            ];
          }),
          (o.xyz.rgb = function(e) {
            var t,
              n,
              a,
              r = e[0] / 100,
              i = e[1] / 100,
              o = e[2] / 100;
            return (
              (n = -0.9689 * r + 1.8758 * i + 0.0415 * o),
              (a = 0.0557 * r + -0.204 * i + 1.057 * o),
              (t =
                0.0031308 < (t = 3.2406 * r + -1.5372 * i + -0.4986 * o)
                  ? 1.055 * Math.pow(t, 1 / 2.4) - 0.055
                  : 12.92 * t),
              (n =
                0.0031308 < n
                  ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055
                  : 12.92 * n),
              (a =
                0.0031308 < a
                  ? 1.055 * Math.pow(a, 1 / 2.4) - 0.055
                  : 12.92 * a),
              [
                255 * (t = Math.min(Math.max(0, t), 1)),
                255 * (n = Math.min(Math.max(0, n), 1)),
                255 * (a = Math.min(Math.max(0, a), 1)),
              ]
            );
          }),
          (o.xyz.lab = function(e) {
            var t = e[0],
              n = e[1],
              a = e[2];
            return (
              (n /= 100),
              (a /= 108.883),
              (t =
                0.008856 < (t /= 95.047)
                  ? Math.pow(t, 1 / 3)
                  : 7.787 * t + 16 / 116),
              [
                116 *
                  (n =
                    0.008856 < n ? Math.pow(n, 1 / 3) : 7.787 * n + 16 / 116) -
                  16,
                500 * (t - n),
                200 *
                  (n -
                    (a =
                      0.008856 < a
                        ? Math.pow(a, 1 / 3)
                        : 7.787 * a + 16 / 116)),
              ]
            );
          }),
          (o.lab.xyz = function(e) {
            var t,
              n,
              a,
              r = e[0];
            (t = e[1] / 500 + (n = (r + 16) / 116)), (a = n - e[2] / 200);
            var i = Math.pow(n, 3),
              o = Math.pow(t, 3),
              s = Math.pow(a, 3);
            return (
              (n = 0.008856 < i ? i : (n - 16 / 116) / 7.787),
              (t = 0.008856 < o ? o : (t - 16 / 116) / 7.787),
              (a = 0.008856 < s ? s : (a - 16 / 116) / 7.787),
              [(t *= 95.047), (n *= 100), (a *= 108.883)]
            );
          }),
          (o.lab.lch = function(e) {
            var t,
              n = e[0],
              a = e[1],
              r = e[2];
            return (
              (t = (360 * Math.atan2(r, a)) / 2 / Math.PI) < 0 && (t += 360),
              [n, Math.sqrt(a * a + r * r), t]
            );
          }),
          (o.lch.lab = function(e) {
            var t,
              n = e[0],
              a = e[1];
            return (
              (t = (e[2] / 360) * 2 * Math.PI),
              [n, a * Math.cos(t), a * Math.sin(t)]
            );
          }),
          (o.rgb.ansi16 = function(e) {
            var t = e[0],
              n = e[1],
              a = e[2],
              r = 1 in arguments ? arguments[1] : o.rgb.hsv(e)[2];
            if (0 === (r = Math.round(r / 50))) return 30;
            var i =
              30 +
              ((Math.round(a / 255) << 2) |
                (Math.round(n / 255) << 1) |
                Math.round(t / 255));
            return 2 === r && (i += 60), i;
          }),
          (o.hsv.ansi16 = function(e) {
            return o.rgb.ansi16(o.hsv.rgb(e), e[2]);
          }),
          (o.rgb.ansi256 = function(e) {
            var t = e[0],
              n = e[1],
              a = e[2];
            return t === n && n === a
              ? t < 8
                ? 16
                : 248 < t
                  ? 231
                  : Math.round(((t - 8) / 247) * 24) + 232
              : 16 +
                  36 * Math.round((t / 255) * 5) +
                  6 * Math.round((n / 255) * 5) +
                  Math.round((a / 255) * 5);
          }),
          (o.ansi16.rgb = function(e) {
            var t = e % 10;
            if (0 === t || 7 === t)
              return 50 < e && (t += 3.5), [(t = (t / 10.5) * 255), t, t];
            var n = 0.5 * (1 + ~~(50 < e));
            return [
              (1 & t) * n * 255,
              ((t >> 1) & 1) * n * 255,
              ((t >> 2) & 1) * n * 255,
            ];
          }),
          (o.ansi256.rgb = function(e) {
            if (232 <= e) {
              var t = 10 * (e - 232) + 8;
              return [t, t, t];
            }
            var n;
            return (
              (e -= 16),
              [
                (Math.floor(e / 36) / 5) * 255,
                (Math.floor((n = e % 36) / 6) / 5) * 255,
                ((n % 6) / 5) * 255,
              ]
            );
          }),
          (o.rgb.hex = function(e) {
            var t = (
              ((255 & Math.round(e[0])) << 16) +
              ((255 & Math.round(e[1])) << 8) +
              (255 & Math.round(e[2]))
            )
              .toString(16)
              .toUpperCase();
            return "000000".substring(t.length) + t;
          }),
          (o.hex.rgb = function(e) {
            var t = e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
            if (!t) return [0, 0, 0];
            var n = t[0];
            3 === t[0].length &&
              (n = n
                .split("")
                .map(function(e) {
                  return e + e;
                })
                .join(""));
            var a = parseInt(n, 16);
            return [(a >> 16) & 255, (a >> 8) & 255, 255 & a];
          }),
          (o.rgb.hcg = function(e) {
            var t,
              n = e[0] / 255,
              a = e[1] / 255,
              r = e[2] / 255,
              i = Math.max(Math.max(n, a), r),
              o = Math.min(Math.min(n, a), r),
              s = i - o;
            return (
              (t =
                s <= 0
                  ? 0
                  : i === n
                    ? ((a - r) / s) % 6
                    : i === a
                      ? 2 + (r - n) / s
                      : 4 + (n - a) / s + 4),
              (t /= 6),
              [360 * (t %= 1), 100 * s, 100 * (s < 1 ? o / (1 - s) : 0)]
            );
          }),
          (o.hsl.hcg = function(e) {
            var t,
              n = e[1] / 100,
              a = e[2] / 100,
              r = 0;
            return (
              (t = a < 0.5 ? 2 * n * a : 2 * n * (1 - a)) < 1 &&
                (r = (a - 0.5 * t) / (1 - t)),
              [e[0], 100 * t, 100 * r]
            );
          }),
          (o.hsv.hcg = function(e) {
            var t = e[1] / 100,
              n = e[2] / 100,
              a = t * n,
              r = 0;
            return a < 1 && (r = (n - a) / (1 - a)), [e[0], 100 * a, 100 * r];
          }),
          (o.hcg.rgb = function(e) {
            var t = e[0] / 360,
              n = e[1] / 100,
              a = e[2] / 100;
            if (0 === n) return [255 * a, 255 * a, 255 * a];
            var r,
              i = [0, 0, 0],
              o = (t % 1) * 6,
              s = o % 1,
              d = 1 - s;
            switch (Math.floor(o)) {
              case 0:
                (i[0] = 1), (i[1] = s), (i[2] = 0);
                break;
              case 1:
                (i[0] = d), (i[1] = 1), (i[2] = 0);
                break;
              case 2:
                (i[0] = 0), (i[1] = 1), (i[2] = s);
                break;
              case 3:
                (i[0] = 0), (i[1] = d), (i[2] = 1);
                break;
              case 4:
                (i[0] = s), (i[1] = 0), (i[2] = 1);
                break;
              default:
                (i[0] = 1), (i[1] = 0), (i[2] = d);
            }
            return (
              (r = (1 - n) * a),
              [255 * (n * i[0] + r), 255 * (n * i[1] + r), 255 * (n * i[2] + r)]
            );
          }),
          (o.hcg.hsv = function(e) {
            var t = e[1] / 100,
              n = t + (e[2] / 100) * (1 - t),
              a = 0;
            return 0 < n && (a = t / n), [e[0], 100 * a, 100 * n];
          }),
          (o.hcg.hsl = function(e) {
            var t = e[1] / 100,
              n = (e[2] / 100) * (1 - t) + 0.5 * t,
              a = 0;
            return (
              0 < n && n < 0.5
                ? (a = t / (2 * n))
                : 0.5 <= n && n < 1 && (a = t / (2 * (1 - n))),
              [e[0], 100 * a, 100 * n]
            );
          }),
          (o.hcg.hwb = function(e) {
            var t = e[1] / 100,
              n = t + (e[2] / 100) * (1 - t);
            return [e[0], 100 * (n - t), 100 * (1 - n)];
          }),
          (o.hwb.hcg = function(e) {
            var t = e[1] / 100,
              n = 1 - e[2] / 100,
              a = n - t,
              r = 0;
            return a < 1 && (r = (n - a) / (1 - a)), [e[0], 100 * a, 100 * r];
          }),
          (o.apple.rgb = function(e) {
            return [
              (e[0] / 65535) * 255,
              (e[1] / 65535) * 255,
              (e[2] / 65535) * 255,
            ];
          }),
          (o.rgb.apple = function(e) {
            return [
              (e[0] / 255) * 65535,
              (e[1] / 255) * 65535,
              (e[2] / 255) * 65535,
            ];
          }),
          (o.gray.rgb = function(e) {
            return [(e[0] / 100) * 255, (e[0] / 100) * 255, (e[0] / 100) * 255];
          }),
          (o.gray.hsl = o.gray.hsv = function(e) {
            return [0, 0, e[0]];
          }),
          (o.gray.hwb = function(e) {
            return [0, 100, e[0]];
          }),
          (o.gray.cmyk = function(e) {
            return [0, 0, 0, e[0]];
          }),
          (o.gray.lab = function(e) {
            return [e[0], 0, 0];
          }),
          (o.gray.hex = function(e) {
            var t = 255 & Math.round((e[0] / 100) * 255),
              n = ((t << 16) + (t << 8) + t).toString(16).toUpperCase();
            return "000000".substring(n.length) + n;
          }),
          (o.rgb.gray = function(e) {
            return [((e[0] + e[1] + e[2]) / 3 / 255) * 100];
          });
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function c() {
          var e = n(87);
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        function p() {
          var e = n(55);
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            var a = (function(e, t) {
                t = Object.assign(
                  {
                    allowReturnOutsideFunction: !0,
                    allowSuperOutsideMethod: !0,
                    sourceType: "module",
                  },
                  t
                );
                try {
                  return (0, c().parse)(e, t);
                } catch (t) {
                  var n = t.loc;
                  throw (n &&
                    ((t.message +=
                      "\n" + (0, p().codeFrameColumns)(e, { start: n })),
                    (t.code = "BABEL_TEMPLATE_PARSE_ERROR")),
                  t);
                }
              })(t, n.parser),
              r = n.placeholderWhitelist,
              i = n.placeholderPattern,
              o = void 0 === i ? g : i,
              s = n.preserveComments;
            l().removePropertiesDeep(a, { preserveComments: s }), e.validate(a);
            var d = [],
              u = new Set();
            return (
              l().traverse(a, f, {
                placeholders: d,
                placeholderNames: u,
                placeholderWhitelist: r,
                placeholderPattern: o,
              }),
              { ast: a, placeholders: d, placeholderNames: u }
            );
          });
        var g = /^[_$A-Z0-9]+$/;
        function f(e, t, n) {
          var a;
          if (l().isIdentifier(e) || l().isJSXIdentifier(e)) a = e.name;
          else {
            if (!l().isStringLiteral(e)) return;
            a = e.value;
          }
          if (
            (n.placeholderPattern && n.placeholderPattern.test(a)) ||
            (n.placeholderWhitelist && n.placeholderWhitelist.has(a))
          ) {
            var r,
              i = (t = t.slice())[t.length - 1],
              o = i.node,
              s = i.key;
            l().isStringLiteral(e)
              ? (r = "string")
              : (l().isNewExpression(o) && "arguments" === s) ||
                (l().isCallExpression(o) && "arguments" === s) ||
                (l().isFunction(o) && "params" === s)
                ? (r = "param")
                : l().isExpressionStatement(o)
                  ? ((r = "statement"), (t = t.slice(0, -1)))
                  : (r = "other"),
              n.placeholders.push({
                name: a,
                type: r,
                resolve: function(d) {
                  return (function(e, t) {
                    for (var n = d, a = 0; a < t.length - 1; a++) {
                      var r = t[a],
                        i = r.key,
                        o = r.index;
                      n = void 0 === o ? n[i] : n[i][o];
                    }
                    var s = t[t.length - 1];
                    return { parent: n, key: s.key, index: s.index };
                  })(0, t);
                },
                isDuplicate: n.placeholderNames.has(a),
              }),
              n.placeholderNames.add(a);
          }
        }
      },
      function(e, t, n) {
        "use strict";
        function d() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(t, n) {
            var e = d().cloneNode(t.ast);
            return (
              n &&
                (t.placeholders.forEach(function(e) {
                  if (!Object.prototype.hasOwnProperty.call(n, e.name)) {
                    var t = e.name;
                    throw new Error(
                      'Error: No substitution given for "' +
                        t +
                        "\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @gerhobbelt/babel-template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['" +
                        t +
                        "'])}\n            - { placeholderPattern: /^" +
                        t +
                        "$/ }"
                    );
                  }
                }),
                Object.keys(n).forEach(function(e) {
                  if (!t.placeholderNames.has(e))
                    throw new Error('Unknown substitution "' + e + '" given');
                })),
              t.placeholders
                .slice()
                .reverse()
                .forEach(function(t) {
                  try {
                    !(function(e, t, n) {
                      e.isDuplicate &&
                        (Array.isArray(n)
                          ? (n = n.map(function(e) {
                              return d().cloneNode(e);
                            }))
                          : "object" == typeof n && (n = d().cloneNode(n)));
                      var a = e.resolve(t),
                        r = a.parent,
                        i = a.key,
                        o = a.index;
                      if ("string" === e.type) {
                        if (
                          ("string" == typeof n && (n = d().stringLiteral(n)),
                          !n || !d().isStringLiteral(n))
                        )
                          throw new Error("Expected string substitution");
                      } else if ("statement" === e.type)
                        void 0 === o
                          ? n
                            ? Array.isArray(n)
                              ? (n = d().blockStatement(n))
                              : "string" == typeof n
                                ? (n = d().expressionStatement(
                                    d().identifier(n)
                                  ))
                                : d().isStatement(n) ||
                                  (n = d().expressionStatement(n))
                            : (n = d().emptyStatement())
                          : n &&
                            !Array.isArray(n) &&
                            ("string" == typeof n && (n = d().identifier(n)),
                            d().isStatement(n) ||
                              (n = d().expressionStatement(n)));
                      else if ("param" === e.type) {
                        if (
                          ("string" == typeof n && (n = d().identifier(n)),
                          void 0 === o)
                        )
                          throw new Error("Assertion failure.");
                      } else if (
                        ("string" == typeof n && (n = d().identifier(n)),
                        Array.isArray(n))
                      )
                        throw new Error(
                          "Cannot replace single expression with an array."
                        );
                      if (void 0 === o) d().validate(r, i, n), (r[i] = n);
                      else {
                        var s = r[i].slice();
                        "statement" === e.type || "param" === e.type
                          ? null == n
                            ? s.splice(o, 1)
                            : Array.isArray(n)
                              ? s.splice.apply(s, [o, 1].concat(n))
                              : (s[o] = n)
                          : (s[o] = n),
                          d().validate(r, i, s),
                          (r[i] = s);
                      }
                    })(t, e, (n && n[t.name]) || null);
                  } catch (e) {
                    throw ((e.message =
                      '@gerhobbelt/babel-template placeholder "' +
                      t.name +
                      '": ' +
                      e.message),
                    e);
                  }
                }),
              e
            );
          });
      },
      function(ce, pe, e) {
        (function(e) {
          var l;
          (pe = ce.exports = q),
            "object" == typeof e && e.env,
            (l = function() {}),
            (pe.SEMVER_SPEC_VERSION = "2.0.0");
          var a = 256,
            r = Number.MAX_SAFE_INTEGER || 9007199254740991,
            c = (pe.re = []),
            t = (pe.src = []),
            n = 0,
            i = n++;
          t[i] = "0|[1-9]\\d*";
          var o = n++;
          t[o] = "[0-9]+";
          var s = n++;
          t[s] = "\\d*[a-zA-Z-][a-zA-Z0-9-]*";
          var d = n++;
          t[d] = "(" + t[i] + ")\\.(" + t[i] + ")\\.(" + t[i] + ")";
          var u = n++;
          t[u] = "(" + t[o] + ")\\.(" + t[o] + ")\\.(" + t[o] + ")";
          var p = n++;
          t[p] = "(?:" + t[i] + "|" + t[s] + ")";
          var g = n++;
          t[g] = "(?:" + t[o] + "|" + t[s] + ")";
          var f = n++;
          t[f] = "(?:-(" + t[p] + "(?:\\." + t[p] + ")*))";
          var h = n++;
          t[h] = "(?:-?(" + t[g] + "(?:\\." + t[g] + ")*))";
          var R = n++;
          t[R] = "[0-9A-Za-z-]+";
          var y = n++;
          t[y] = "(?:\\+(" + t[R] + "(?:\\." + t[R] + ")*))";
          var m = n++,
            v = "v?" + t[d] + t[f] + "?" + t[y] + "?";
          t[m] = "^" + v + "$";
          var b = "[v=\\s]*" + t[u] + t[h] + "?" + t[y] + "?",
            E = n++;
          t[E] = "^" + b + "$";
          var x = n++;
          t[x] = "((?:<|>)?=?)";
          var A = n++;
          t[A] = t[o] + "|x|X|\\*";
          var S = n++;
          t[S] = t[i] + "|x|X|\\*";
          var _ = n++;
          t[_] =
            "[v=\\s]*(" +
            t[S] +
            ")(?:\\.(" +
            t[S] +
            ")(?:\\.(" +
            t[S] +
            ")(?:" +
            t[f] +
            ")?" +
            t[y] +
            "?)?)?";
          var T = n++;
          t[T] =
            "[v=\\s]*(" +
            t[A] +
            ")(?:\\.(" +
            t[A] +
            ")(?:\\.(" +
            t[A] +
            ")(?:" +
            t[h] +
            ")?" +
            t[y] +
            "?)?)?";
          var P = n++;
          t[P] = "^" + t[x] + "\\s*" + t[_] + "$";
          var C = n++;
          t[C] = "^" + t[x] + "\\s*" + t[T] + "$";
          var w = n++;
          t[w] =
            "(?:^|[^\\d])(\\d{1,16})(?:\\.(\\d{1,16}))?(?:\\.(\\d{1,16}))?(?:$|[^\\d])";
          var D = n++;
          t[D] = "(?:~>?)";
          var O = n++;
          (t[O] = "(\\s*)" + t[D] + "\\s+"), (c[O] = new RegExp(t[O], "g"));
          var F = n++;
          t[F] = "^" + t[D] + t[_] + "$";
          var k = n++;
          t[k] = "^" + t[D] + t[T] + "$";
          var j = n++;
          t[j] = "(?:\\^)";
          var M = n++;
          (t[M] = "(\\s*)" + t[j] + "\\s+"), (c[M] = new RegExp(t[M], "g"));
          var I = n++;
          t[I] = "^" + t[j] + t[_] + "$";
          var N = n++;
          t[N] = "^" + t[j] + t[T] + "$";
          var B = n++;
          t[B] = "^" + t[x] + "\\s*(" + b + ")$|^$";
          var L = n++;
          t[L] = "^" + t[x] + "\\s*(" + v + ")$|^$";
          var U = n++;
          (t[U] = "(\\s*)" + t[x] + "\\s*(" + b + "|" + t[_] + ")"),
            (c[U] = new RegExp(t[U], "g"));
          var V = n++;
          t[V] = "^\\s*(" + t[_] + ")\\s+-\\s+(" + t[_] + ")\\s*$";
          var W = n++;
          t[W] = "^\\s*(" + t[T] + ")\\s+-\\s+(" + t[T] + ")\\s*$";
          var G = n++;
          t[G] = "(<|>)?=?\\s*\\*";
          for (var K = 0; K < 35; K++)
            l(K, t[K]), c[K] || (c[K] = new RegExp(t[K]));
          function H(e, t) {
            if (e instanceof q) return e;
            if ("string" != typeof e) return null;
            if (e.length > a) return null;
            if (!(t ? c[E] : c[m]).test(e)) return null;
            try {
              return new q(e, t);
            } catch (e) {
              return null;
            }
          }
          function q(e, t) {
            if (e instanceof q) {
              if (e.loose === t) return e;
              e = e.version;
            } else if ("string" != typeof e)
              throw new TypeError("Invalid Version: " + e);
            if (e.length > a)
              throw new TypeError(
                "version is longer than " + a + " characters"
              );
            if (!(this instanceof q)) return new q(e, t);
            l("SemVer", e, t), (this.loose = t);
            var n = e.trim().match(t ? c[E] : c[m]);
            if (!n) throw new TypeError("Invalid Version: " + e);
            if (
              ((this.raw = e),
              (this.major = +n[1]),
              (this.minor = +n[2]),
              (this.patch = +n[3]),
              this.major > r || this.major < 0)
            )
              throw new TypeError("Invalid major version");
            if (this.minor > r || this.minor < 0)
              throw new TypeError("Invalid minor version");
            if (this.patch > r || this.patch < 0)
              throw new TypeError("Invalid patch version");
            n[4]
              ? (this.prerelease = n[4].split(".").map(function(e) {
                  if (/^[0-9]+$/.test(e)) {
                    var t = +e;
                    if (0 <= t && t < r) return t;
                  }
                  return e;
                }))
              : (this.prerelease = []),
              (this.build = n[5] ? n[5].split(".") : []),
              this.format();
          }
          (pe.parse = H),
            (pe.valid = function(e, t) {
              var n = H(e, t);
              return n ? n.version : null;
            }),
            (pe.clean = function(e, t) {
              var n = H(e.trim().replace(/^[=v]+/, ""), t);
              return n ? n.version : null;
            }),
            ((pe.SemVer = q).prototype.format = function() {
              return (
                (this.version =
                  this.major + "." + this.minor + "." + this.patch),
                this.prerelease.length &&
                  (this.version += "-" + this.prerelease.join(".")),
                this.version
              );
            }),
            (q.prototype.toString = function() {
              return this.version;
            }),
            (q.prototype.compare = function(e) {
              return (
                l("SemVer.compare", this.version, this.loose, e),
                e instanceof q || (e = new q(e, this.loose)),
                this.compareMain(e) || this.comparePre(e)
              );
            }),
            (q.prototype.compareMain = function(e) {
              return (
                e instanceof q || (e = new q(e, this.loose)),
                J(this.major, e.major) ||
                  J(this.minor, e.minor) ||
                  J(this.patch, e.patch)
              );
            }),
            (q.prototype.comparePre = function(e) {
              if (
                (e instanceof q || (e = new q(e, this.loose)),
                this.prerelease.length && !e.prerelease.length)
              )
                return -1;
              if (!this.prerelease.length && e.prerelease.length) return 1;
              if (!this.prerelease.length && !e.prerelease.length) return 0;
              var t = 0;
              do {
                var n = this.prerelease[t],
                  a = e.prerelease[t];
                if (
                  (l("prerelease compare", t, n, a),
                  void 0 === n && void 0 === a)
                )
                  return 0;
                if (void 0 === a) return 1;
                if (void 0 === n) return -1;
                if (n !== a) return J(n, a);
              } while (++t);
            }),
            (q.prototype.inc = function(e, t) {
              switch (e) {
                case "premajor":
                  (this.prerelease.length = 0),
                    (this.patch = 0),
                    (this.minor = 0),
                    this.major++,
                    this.inc("pre", t);
                  break;
                case "preminor":
                  (this.prerelease.length = 0),
                    (this.patch = 0),
                    this.minor++,
                    this.inc("pre", t);
                  break;
                case "prepatch":
                  (this.prerelease.length = 0),
                    this.inc("patch", t),
                    this.inc("pre", t);
                  break;
                case "prerelease":
                  0 === this.prerelease.length && this.inc("patch", t),
                    this.inc("pre", t);
                  break;
                case "major":
                  (0 === this.minor &&
                    0 === this.patch &&
                    0 !== this.prerelease.length) ||
                    this.major++,
                    (this.minor = 0),
                    (this.patch = 0),
                    (this.prerelease = []);
                  break;
                case "minor":
                  (0 === this.patch && 0 !== this.prerelease.length) ||
                    this.minor++,
                    (this.patch = 0),
                    (this.prerelease = []);
                  break;
                case "patch":
                  0 === this.prerelease.length && this.patch++,
                    (this.prerelease = []);
                  break;
                case "pre":
                  if (0 === this.prerelease.length) this.prerelease = [0];
                  else {
                    for (var n = this.prerelease.length; 0 <= --n; )
                      "number" == typeof this.prerelease[n] &&
                        (this.prerelease[n]++, (n = -2));
                    -1 === n && this.prerelease.push(0);
                  }
                  t &&
                    (this.prerelease[0] === t
                      ? isNaN(this.prerelease[1]) && (this.prerelease = [t, 0])
                      : (this.prerelease = [t, 0]));
                  break;
                default:
                  throw new Error("invalid increment argument: " + e);
              }
              return this.format(), (this.raw = this.version), this;
            }),
            (pe.inc = function(e, t, n, a) {
              "string" == typeof n && ((a = n), (n = void 0));
              try {
                return new q(e, n).inc(t, a).version;
              } catch (e) {
                return null;
              }
            }),
            (pe.diff = function(e, t) {
              if (Q(e, t)) return null;
              var n = H(e),
                a = H(t);
              if (n.prerelease.length || a.prerelease.length) {
                for (var r in n)
                  if (
                    ("major" === r || "minor" === r || "patch" === r) &&
                    n[r] !== a[r]
                  )
                    return "pre" + r;
                return "prerelease";
              }
              for (var r in n)
                if (
                  ("major" === r || "minor" === r || "patch" === r) &&
                  n[r] !== a[r]
                )
                  return r;
            }),
            (pe.compareIdentifiers = J);
          var Y = /^[0-9]+$/;
          function J(e, t) {
            var n = Y.test(e),
              a = Y.test(t);
            return (
              n && a && ((e = +e), (t = +t)),
              n && !a ? -1 : a && !n ? 1 : e < t ? -1 : t < e ? 1 : 0
            );
          }
          function X(e, t, n) {
            return new q(e, n).compare(new q(t, n));
          }
          function z(e, t, n) {
            return 0 < X(e, t, n);
          }
          function $(e, t, n) {
            return X(e, t, n) < 0;
          }
          function Q(e, t, n) {
            return 0 === X(e, t, n);
          }
          function Z(e, t, n) {
            return 0 !== X(e, t, n);
          }
          function ee(e, t, n) {
            return 0 <= X(e, t, n);
          }
          function te(e, t, n) {
            return X(e, t, n) <= 0;
          }
          function ne(e, t, n, a) {
            var r;
            switch (t) {
              case "===":
                "object" == typeof e && (e = e.version),
                  "object" == typeof n && (n = n.version),
                  (r = e === n);
                break;
              case "!==":
                "object" == typeof e && (e = e.version),
                  "object" == typeof n && (n = n.version),
                  (r = e !== n);
                break;
              case "":
              case "=":
              case "==":
                r = Q(e, n, a);
                break;
              case "!=":
                r = Z(e, n, a);
                break;
              case ">":
                r = z(e, n, a);
                break;
              case ">=":
                r = ee(e, n, a);
                break;
              case "<":
                r = $(e, n, a);
                break;
              case "<=":
                r = te(e, n, a);
                break;
              default:
                throw new TypeError("Invalid operator: " + t);
            }
            return r;
          }
          function ae(e, t) {
            if (e instanceof ae) {
              if (e.loose === t) return e;
              e = e.value;
            }
            if (!(this instanceof ae)) return new ae(e, t);
            l("comparator", e, t),
              (this.loose = t),
              this.parse(e),
              this.semver === re
                ? (this.value = "")
                : (this.value = this.operator + this.semver.version),
              l("comp", this);
          }
          (pe.rcompareIdentifiers = function(e, t) {
            return J(t, e);
          }),
            (pe.major = function(e, t) {
              return new q(e, t).major;
            }),
            (pe.minor = function(e, t) {
              return new q(e, t).minor;
            }),
            (pe.patch = function(e, t) {
              return new q(e, t).patch;
            }),
            (pe.compare = X),
            (pe.compareLoose = function(e, t) {
              return X(e, t, !0);
            }),
            (pe.rcompare = function(e, t, n) {
              return X(t, e, n);
            }),
            (pe.sort = function(e, n) {
              return e.sort(function(e, t) {
                return pe.compare(e, t, n);
              });
            }),
            (pe.rsort = function(e, n) {
              return e.sort(function(e, t) {
                return pe.rcompare(e, t, n);
              });
            }),
            (pe.gt = z),
            (pe.lt = $),
            (pe.eq = Q),
            (pe.neq = Z),
            (pe.gte = ee),
            (pe.lte = te),
            (pe.cmp = ne),
            (pe.Comparator = ae);
          var re = {};
          function ie(e, t) {
            if (e instanceof ie) return e.loose === t ? e : new ie(e.raw, t);
            if (e instanceof ae) return new ie(e.value, t);
            if (!(this instanceof ie)) return new ie(e, t);
            if (
              ((this.loose = t),
              (this.raw = e),
              (this.set = e
                .split(/\s*\|\|\s*/)
                .map(function(e) {
                  return this.parseRange(e.trim());
                }, this)
                .filter(function(e) {
                  return e.length;
                })),
              !this.set.length)
            )
              throw new TypeError("Invalid SemVer Range: " + e);
            this.format();
          }
          function oe(e) {
            return !e || "x" === e.toLowerCase() || "*" === e;
          }
          function se(e, t, n, a, r, i, o, s, d, u, l, c, p) {
            return (
              (t = oe(n)
                ? ""
                : oe(a)
                  ? ">=" + n + ".0.0"
                  : oe(r)
                    ? ">=" + n + "." + a + ".0"
                    : ">=" + t) +
              " " +
              (s = oe(d)
                ? ""
                : oe(u)
                  ? "<" + (+d + 1) + ".0.0"
                  : oe(l)
                    ? "<" + d + "." + (+u + 1) + ".0"
                    : c
                      ? "<=" + d + "." + u + "." + l + "-" + c
                      : "<=" + s)
            ).trim();
          }
          function de(e, t) {
            for (var n = 0; n < e.length; n++) if (!e[n].test(t)) return !1;
            if (t.prerelease.length) {
              for (n = 0; n < e.length; n++)
                if (
                  (l(e[n].semver),
                  e[n].semver !== re && 0 < e[n].semver.prerelease.length)
                ) {
                  var a = e[n].semver;
                  if (
                    a.major === t.major &&
                    a.minor === t.minor &&
                    a.patch === t.patch
                  )
                    return !0;
                }
              return !1;
            }
            return !0;
          }
          function ue(e, t, n) {
            try {
              t = new ie(t, n);
            } catch (e) {
              return !1;
            }
            return t.test(e);
          }
          function le(e, t, n, a) {
            var r, i, o, s, d;
            switch (((e = new q(e, a)), (t = new ie(t, a)), n)) {
              case ">":
                (r = z), (i = te), (o = $), (s = ">"), (d = ">=");
                break;
              case "<":
                (r = $), (i = ee), (o = z), (s = "<"), (d = "<=");
                break;
              default:
                throw new TypeError('Must provide a hilo val of "<" or ">"');
            }
            if (ue(e, t, a)) return !1;
            for (var u = 0; u < t.set.length; ++u) {
              var l = null,
                c = null;
              if (
                (t.set[u].forEach(function(e) {
                  e.semver === re && (e = new ae(">=0.0.0")),
                    (l = l || e),
                    (c = c || e),
                    r(e.semver, l.semver, a)
                      ? (l = e)
                      : o(e.semver, c.semver, a) && (c = e);
                }),
                l.operator === s || l.operator === d)
              )
                return !1;
              if ((!c.operator || c.operator === s) && i(e, c.semver))
                return !1;
              if (c.operator === d && o(e, c.semver)) return !1;
            }
            return !0;
          }
          (ae.prototype.parse = function(e) {
            var t = this.loose ? c[B] : c[L],
              n = e.match(t);
            if (!n) throw new TypeError("Invalid comparator: " + e);
            (this.operator = n[1]),
              "=" === this.operator && (this.operator = ""),
              n[2]
                ? (this.semver = new q(n[2], this.loose))
                : (this.semver = re);
          }),
            (ae.prototype.toString = function() {
              return this.value;
            }),
            (ae.prototype.test = function(e) {
              return (
                l("Comparator.test", e, this.loose),
                this.semver === re ||
                  ("string" == typeof e && (e = new q(e, this.loose)),
                  ne(e, this.operator, this.semver, this.loose))
              );
            }),
            (ae.prototype.intersects = function(e, t) {
              if (!(e instanceof ae))
                throw new TypeError("a Comparator is required");
              var n;
              if ("" === this.operator)
                return (n = new ie(e.value, t)), ue(this.value, n, t);
              if ("" === e.operator)
                return (n = new ie(this.value, t)), ue(e.semver, n, t);
              var a = !(
                  (">=" !== this.operator && ">" !== this.operator) ||
                  (">=" !== e.operator && ">" !== e.operator)
                ),
                r = !(
                  ("<=" !== this.operator && "<" !== this.operator) ||
                  ("<=" !== e.operator && "<" !== e.operator)
                ),
                i = this.semver.version === e.semver.version,
                o = !(
                  (">=" !== this.operator && "<=" !== this.operator) ||
                  (">=" !== e.operator && "<=" !== e.operator)
                ),
                s =
                  ne(this.semver, "<", e.semver, t) &&
                  (">=" === this.operator || ">" === this.operator) &&
                  ("<=" === e.operator || "<" === e.operator),
                d =
                  ne(this.semver, ">", e.semver, t) &&
                  ("<=" === this.operator || "<" === this.operator) &&
                  (">=" === e.operator || ">" === e.operator);
              return a || r || (i && o) || s || d;
            }),
            ((pe.Range = ie).prototype.format = function() {
              return (
                (this.range = this.set
                  .map(function(e) {
                    return e.join(" ").trim();
                  })
                  .join("||")
                  .trim()),
                this.range
              );
            }),
            (ie.prototype.toString = function() {
              return this.range;
            }),
            (ie.prototype.parseRange = function(e) {
              var d = this.loose;
              (e = e.trim()), l("range", e, d);
              var t = d ? c[W] : c[V];
              (e = e.replace(t, se)),
                l("hyphen replace", e),
                (e = e.replace(c[U], "$1$2$3")),
                l("comparator trim", e, c[U]),
                (e = (e = (e = e.replace(c[O], "$1~")).replace(c[M], "$1^"))
                  .split(/\s+/)
                  .join(" "));
              var n = d ? c[B] : c[L],
                a = e
                  .split(" ")
                  .map(function(e) {
                    return (
                      (n = d),
                      l("comp", (t = e)),
                      (o = n),
                      (t = t
                        .trim()
                        .split(/\s+/)
                        .map(function(e) {
                          return (function(o, e) {
                            l("caret", o, e);
                            var t = e ? c[N] : c[I];
                            return o.replace(t, function(e, t, n, a, r) {
                              var i;
                              return (
                                l("caret", o, e, t, n, a, r),
                                (i = oe(t)
                                  ? ""
                                  : oe(n)
                                    ? ">=" + t + ".0.0 <" + (+t + 1) + ".0.0"
                                    : oe(a)
                                      ? "0" === t
                                        ? ">=" +
                                          t +
                                          "." +
                                          n +
                                          ".0 <" +
                                          t +
                                          "." +
                                          (+n + 1) +
                                          ".0"
                                        : ">=" +
                                          t +
                                          "." +
                                          n +
                                          ".0 <" +
                                          (+t + 1) +
                                          ".0.0"
                                      : r
                                        ? (l("replaceCaret pr", r),
                                          "-" !== r.charAt(0) && (r = "-" + r),
                                          "0" === t
                                            ? "0" === n
                                              ? ">=" +
                                                t +
                                                "." +
                                                n +
                                                "." +
                                                a +
                                                r +
                                                " <" +
                                                t +
                                                "." +
                                                n +
                                                "." +
                                                (+a + 1)
                                              : ">=" +
                                                t +
                                                "." +
                                                n +
                                                "." +
                                                a +
                                                r +
                                                " <" +
                                                t +
                                                "." +
                                                (+n + 1) +
                                                ".0"
                                            : ">=" +
                                              t +
                                              "." +
                                              n +
                                              "." +
                                              a +
                                              r +
                                              " <" +
                                              (+t + 1) +
                                              ".0.0")
                                        : (l("no pr"),
                                          "0" === t
                                            ? "0" === n
                                              ? ">=" +
                                                t +
                                                "." +
                                                n +
                                                "." +
                                                a +
                                                " <" +
                                                t +
                                                "." +
                                                n +
                                                "." +
                                                (+a + 1)
                                              : ">=" +
                                                t +
                                                "." +
                                                n +
                                                "." +
                                                a +
                                                " <" +
                                                t +
                                                "." +
                                                (+n + 1) +
                                                ".0"
                                            : ">=" +
                                              t +
                                              "." +
                                              n +
                                              "." +
                                              a +
                                              " <" +
                                              (+t + 1) +
                                              ".0.0")),
                                l("caret return", i),
                                i
                              );
                            });
                          })(e, o);
                        })
                        .join(" ")),
                      l("caret", t),
                      (s = n),
                      (t = t
                        .trim()
                        .split(/\s+/)
                        .map(function(e) {
                          return (
                            (o = e),
                            (t = s ? c[k] : c[F]),
                            o.replace(t, function(e, t, n, a, r) {
                              var i;
                              return (
                                l("tilde", o, e, t, n, a, r),
                                (i = oe(t)
                                  ? ""
                                  : oe(n)
                                    ? ">=" + t + ".0.0 <" + (+t + 1) + ".0.0"
                                    : oe(a)
                                      ? ">=" +
                                        t +
                                        "." +
                                        n +
                                        ".0 <" +
                                        t +
                                        "." +
                                        (+n + 1) +
                                        ".0"
                                      : r
                                        ? (l("replaceTilde pr", r),
                                          "-" !== r.charAt(0) && (r = "-" + r),
                                          ">=" +
                                            t +
                                            "." +
                                            n +
                                            "." +
                                            a +
                                            r +
                                            " <" +
                                            t +
                                            "." +
                                            (+n + 1) +
                                            ".0")
                                        : ">=" +
                                          t +
                                          "." +
                                          n +
                                          "." +
                                          a +
                                          " <" +
                                          t +
                                          "." +
                                          (+n + 1) +
                                          ".0"),
                                l("tilde return", i),
                                i
                              );
                            })
                          );
                          var o, t;
                        })
                        .join(" ")),
                      l("tildes", t),
                      l("replaceXRanges", (r = t), (i = n)),
                      (t = r
                        .split(/\s+/)
                        .map(function(e) {
                          return (function(u, e) {
                            u = u.trim();
                            var t = e ? c[C] : c[P];
                            return u.replace(t, function(e, t, n, a, r, i) {
                              l("xRange", u, e, t, n, a, r, i);
                              var o = oe(n),
                                s = o || oe(a),
                                d = s || oe(r);
                              return (
                                "=" === t && d && (t = ""),
                                o
                                  ? (e =
                                      ">" === t || "<" === t ? "<0.0.0" : "*")
                                  : t && d
                                    ? (s && (a = 0),
                                      d && (r = 0),
                                      ">" === t
                                        ? ((t = ">="),
                                          s
                                            ? ((n = +n + 1), (r = a = 0))
                                            : d && ((a = +a + 1), (r = 0)))
                                        : "<=" === t &&
                                          ((t = "<"),
                                          s ? (n = +n + 1) : (a = +a + 1)),
                                      (e = t + n + "." + a + "." + r))
                                    : s
                                      ? (e =
                                          ">=" +
                                          n +
                                          ".0.0 <" +
                                          (+n + 1) +
                                          ".0.0")
                                      : d &&
                                        (e =
                                          ">=" +
                                          n +
                                          "." +
                                          a +
                                          ".0 <" +
                                          n +
                                          "." +
                                          (+a + 1) +
                                          ".0"),
                                l("xRange return", e),
                                e
                              );
                            });
                          })(e, i);
                        })
                        .join(" ")),
                      l("xrange", t),
                      l("replaceStars", (a = t), n),
                      (t = a.trim().replace(c[G], "")),
                      l("stars", t),
                      t
                    );
                    var t, n, a, r, i, s, o;
                  })
                  .join(" ")
                  .split(/\s+/);
              return (
                this.loose &&
                  (a = a.filter(function(e) {
                    return !!e.match(n);
                  })),
                a.map(function(e) {
                  return new ae(e, d);
                })
              );
            }),
            (ie.prototype.intersects = function(n, a) {
              if (!(n instanceof ie))
                throw new TypeError("a Range is required");
              return this.set.some(function(e) {
                return e.every(function(t) {
                  return n.set.some(function(e) {
                    return e.every(function(e) {
                      return t.intersects(e, a);
                    });
                  });
                });
              });
            }),
            (pe.toComparators = function(e, t) {
              return new ie(e, t).set.map(function(e) {
                return e
                  .map(function(e) {
                    return e.value;
                  })
                  .join(" ")
                  .trim()
                  .split(" ");
              });
            }),
            (ie.prototype.test = function(e) {
              if (!e) return !1;
              "string" == typeof e && (e = new q(e, this.loose));
              for (var t = 0; t < this.set.length; t++)
                if (de(this.set[t], e)) return !0;
              return !1;
            }),
            (pe.satisfies = ue),
            (pe.maxSatisfying = function(e, t, n) {
              var a = null,
                r = null;
              try {
                var i = new ie(t, n);
              } catch (e) {
                return null;
              }
              return (
                e.forEach(function(e) {
                  i.test(e) &&
                    ((a && -1 !== r.compare(e)) || (r = new q((a = e), n)));
                }),
                a
              );
            }),
            (pe.minSatisfying = function(e, t, n) {
              var a = null,
                r = null;
              try {
                var i = new ie(t, n);
              } catch (e) {
                return null;
              }
              return (
                e.forEach(function(e) {
                  i.test(e) &&
                    ((a && 1 !== r.compare(e)) || (r = new q((a = e), n)));
                }),
                a
              );
            }),
            (pe.validRange = function(e, t) {
              try {
                return new ie(e, t).range || "*";
              } catch (e) {
                return null;
              }
            }),
            (pe.ltr = function(e, t, n) {
              return le(e, t, "<", n);
            }),
            (pe.gtr = function(e, t, n) {
              return le(e, t, ">", n);
            }),
            (pe.outside = le),
            (pe.prerelease = function(e, t) {
              var n = H(e, t);
              return n && n.prerelease.length ? n.prerelease : null;
            }),
            (pe.intersects = function(e, t, n) {
              return (e = new ie(e, n)), (t = new ie(t, n)), e.intersects(t);
            }),
            (pe.coerce = function(e) {
              if (e instanceof q) return e;
              if ("string" != typeof e) return null;
              var t = e.match(c[w]);
              return null == t
                ? null
                : H((t[1] || "0") + "." + (t[2] || "0") + "." + (t[3] || "0"));
            });
        }.call(this, e(7)));
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getEnv = function(e) {
            return void 0 === e && (e = "development"), "development";
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.createCachedDescriptors = function(e, t, n) {
            var a = t.plugins,
              r = t.presets,
              i = t.passPerPreset;
            return {
              options: t,
              plugins: a
                ? function() {
                    return s(a, e)(n);
                  }
                : function() {
                    return [];
                  },
              presets: r
                ? function() {
                    return o(r, e)(n)(!!i);
                  }
                : function() {
                    return [];
                  },
            };
          }),
          (t.createUncachedDescriptors = function(e, t, n) {
            var a, r;
            return {
              options: t,
              plugins: function() {
                return a || (a = c(t.plugins || [], e, n)), a;
              },
              presets: function() {
                return (
                  r || (r = l(t.presets || [], e, n, !!t.passPerPreset)), r
                );
              },
            };
          }),
          (t.createDescriptor = g);
        var R = n(89),
          y = n(56),
          r = n(57),
          i = new WeakMap(),
          o = (0, r.makeWeakCache)(function(n, e) {
            var a = e.using(function(e) {
              return e;
            });
            return (0, r.makeStrongCache)(function(t) {
              return (0, r.makeStrongCache)(function(e) {
                return l(n, a, t, e).map(function(e) {
                  return u(i, e);
                });
              });
            });
          }),
          a = new WeakMap(),
          s = (0, r.makeWeakCache)(function(t, e) {
            var n = e.using(function(e) {
              return e;
            });
            return (0, r.makeStrongCache)(function(e) {
              return c(t, n, e).map(function(e) {
                return u(a, e);
              });
            });
          }),
          d = {};
        function u(e, a) {
          var t = a.value,
            n = a.options,
            r = void 0 === n ? d : n;
          if (!1 === r) return a;
          var i = e.get(t);
          i || ((i = new WeakMap()), e.set(t, i));
          var o = i.get(r);
          if ((o || ((o = []), i.set(r, o)), -1 === o.indexOf(a))) {
            var s = o.filter(function(e) {
              return (
                (n = a),
                (t = e).name === n.name &&
                  t.value === n.value &&
                  t.options === n.options &&
                  t.dirname === n.dirname &&
                  t.alias === n.alias &&
                  t.ownPass === n.ownPass &&
                  (t.file && t.file.request) === (n.file && n.file.request) &&
                  (t.file && t.file.resolved) === (n.file && n.file.resolved)
              );
              var t, n;
            });
            if (0 < s.length) return s[0];
            o.push(a);
          }
          return a;
        }
        function l(e, t, n, a) {
          return p("preset", e, t, n, a);
        }
        function c(e, t, n) {
          return p("plugin", e, t, n);
        }
        function p(n, e, a, r, i) {
          var t = e.map(function(e, t) {
            return g(e, a, { type: n, alias: r + "$" + t, ownPass: !!i });
          });
          return (
            (function(e) {
              var t = new Map(),
                n = e,
                a = Array.isArray(n),
                r = 0;
              for (n = a ? n : n[Symbol.iterator](); ; ) {
                var i;
                if (a) {
                  if (r >= n.length) break;
                  i = n[r++];
                } else {
                  if ((r = n.next()).done) break;
                  i = r.value;
                }
                var o = i;
                if ("function" == typeof o.value) {
                  var s = t.get(o.value);
                  if (
                    (s || ((s = new Set()), t.set(o.value, s)), s.has(o.name))
                  )
                    throw new Error(
                      [
                        "Duplicate plugin/preset detected.",
                        "If you'd like to use two separate instances of a plugin,",
                        "they need separate names, e.g.",
                        "",
                        "  plugins: [",
                        "    ['some-plugin', {}],",
                        "    ['some-plugin', {}, 'some unique name'],",
                        "  ]",
                      ].join("\n")
                    );
                  s.add(o.name);
                }
              }
            })(t),
            t
          );
        }
        function g(e, t, n) {
          var a,
            r,
            i = n.type,
            o = n.alias,
            s = n.ownPass,
            d = (0, y.getItemDescriptor)(e);
          if (d) return d;
          var u = e;
          if (Array.isArray(u))
            if (3 === u.length) {
              var l = u;
              (u = l[0]), (r = l[1]), (a = l[2]);
            } else {
              var c = u;
              (u = c[0]), (r = c[1]);
            }
          var p = void 0,
            g = null;
          if ("string" == typeof u) {
            if ("string" != typeof i)
              throw new Error(
                "To resolve a string-based item, the type of item must be given"
              );
            var f = u,
              h = ("plugin" === i ? R.loadPlugin : R.loadPreset)(u, t);
            (g = h.filepath), (u = h.value), (p = { request: f, resolved: g });
          }
          if (!u) throw new Error("Unexpected falsy value: " + String(u));
          if ("object" == typeof u && u.__esModule) {
            if (!u.default)
              throw new Error(
                "Must export a default export when using ES6 modules."
              );
            u = u.default;
          }
          if ("object" != typeof u && "function" != typeof u)
            throw new Error(
              "Unsupported format: " +
                typeof u +
                ". Expected an object or a function."
            );
          if (null !== g && "object" == typeof u && u)
            throw new Error(
              "Plugin/Preset files are not allowed to export objects, only functions. In " +
                g
            );
          return {
            name: a,
            alias: g || o,
            value: u,
            options: r,
            dirname: t,
            ownPass: s,
            file: p,
          };
        }
      },
      function(e, t, n) {
        "use strict";
        function d(e, t) {
          for (var n = Object.keys(t), a = 0; a < n.length; a++) {
            var r = n[a],
              i = t[r];
            void 0 !== i && (e[r] = i);
          }
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.mergeOptions = function(e, t) {
            for (var n = Object.keys(t), a = 0; a < n.length; a++) {
              var r = n[a];
              if ("parserOpts" === r && t.parserOpts) {
                var i = t.parserOpts;
                d((e.parserOpts = e.parserOpts || {}), i);
              } else if ("generatorOpts" === r && t.generatorOpts) {
                var o = t.generatorOpts;
                d((e.generatorOpts = e.generatorOpts || {}), o);
              } else {
                var s = t[r];
                void 0 !== s && (e[r] = s);
              }
            }
          });
      },
      function(e, t, n) {
        "use strict";
        function R() {
          var e = s(n(6));
          return (
            (R = function() {
              return e;
            }),
            e
          );
        }
        function a() {
          var e = s(n(201));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.buildPresetChain = function(e, t) {
            var n = u(e, t);
            return n
              ? {
                  plugins: k(n.plugins),
                  presets: k(n.presets),
                  options: n.options,
                }
              : null;
          }),
          (t.buildRootChain = function(e, t) {
            var n,
              a = E({ options: e, dirname: t.cwd }, t);
            if (!a) return null;
            "string" == typeof e.configFile
              ? (n = (0, m.loadConfig)(
                  e.configFile,
                  t.cwd,
                  t.envName,
                  t.caller
                ))
              : !1 !== e.configFile &&
                (n = (0, m.findRootConfig)(t.root, t.envName, t.caller));
            var r = e.babelrc,
              i = e.babelrcRoots,
              o = { options: [], presets: [], plugins: [] };
            if (n) {
              var s = v(n),
                d = x(s, t);
              if (!d) return null;
              void 0 === r && (r = s.options.babelrc),
                void 0 === i && (i = s.options.babelrcRoots),
                F(o, d);
            }
            var u,
              l,
              c =
                "string" == typeof t.filename
                  ? (0, m.findPackageData)(t.filename)
                  : null,
              p = { options: [], presets: [], plugins: [] };
            if (
              (!0 === r || void 0 === r) &&
              c &&
              (function(n, e, t) {
                if ("boolean" == typeof t) return t;
                var a = n.root;
                if (void 0 === t) return -1 !== e.directories.indexOf(a);
                var r = t;
                return (
                  Array.isArray(r) || (r = [r]),
                  1 ===
                    (r = r.map(function(e) {
                      return "string" == typeof e
                        ? R().default.resolve(n.cwd, e)
                        : e;
                    })).length && r[0] === a
                    ? -1 !== e.directories.indexOf(a)
                    : r.some(function(t) {
                        return (
                          "string" == typeof t &&
                            (t = (0, y.default)(t, n.cwd)),
                          e.directories.some(function(e) {
                            return B(t, n.cwd, e, n);
                          })
                        );
                      })
                );
              })(t, c, i)
            ) {
              var g = (0, m.findRelativeConfig)(c, t.envName, t.caller);
              if (
                ((u = g.ignore),
                (l = g.config),
                u && I(t, u.ignore, null, u.dirname))
              )
                return null;
              if (l) {
                var f = x(b(l), t);
                if (!f) return null;
                F(p, f);
              }
            }
            var h = F(F(F({ options: [], presets: [], plugins: [] }, o), p), a);
            return {
              plugins: k(h.plugins),
              presets: k(h.presets),
              options: h.options.map(function(e) {
                return (
                  (t = e),
                  delete (n = Object.assign({}, t)).extends,
                  delete n.env,
                  delete n.overrides,
                  delete n.plugins,
                  delete n.presets,
                  delete n.passPerPreset,
                  delete n.ignore,
                  delete n.only,
                  delete n.test,
                  delete n.include,
                  delete n.exclude,
                  n.sourceMap &&
                    ((n.sourceMaps = n.sourceMap), delete n.sourceMap),
                  n
                );
                var t, n;
              }),
              ignore: u || void 0,
              babelrc: l || void 0,
              config: n || void 0,
            };
          }),
          (t.buildPresetChainWalker = void 0);
        var r = n(91),
          y = s(n(460)),
          m = n(89),
          i = n(57),
          o = n(198);
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var d = (0, a().default)("babel:config:config-chain"),
          u = D({
            init: function(e) {
              return e;
            },
            root: function(e) {
              return l(e);
            },
            env: function(e, t) {
              return c(e)(t);
            },
            overrides: function(e, t) {
              return p(e)(t);
            },
            overridesEnv: function(e, t, n) {
              return g(e)(t)(n);
            },
          });
        t.buildPresetChainWalker = u;
        var l = (0, i.makeWeakCache)(function(e) {
            return T(e, e.alias, o.createUncachedDescriptors);
          }),
          c = (0, i.makeWeakCache)(function(t) {
            return (0, i.makeStrongCache)(function(e) {
              return P(t, t.alias, o.createUncachedDescriptors, e);
            });
          }),
          p = (0, i.makeWeakCache)(function(t) {
            return (0, i.makeStrongCache)(function(e) {
              return C(t, t.alias, o.createUncachedDescriptors, e);
            });
          }),
          g = (0, i.makeWeakCache)(function(n) {
            return (0, i.makeStrongCache)(function(t) {
              return (0, i.makeStrongCache)(function(e) {
                return w(n, n.alias, o.createUncachedDescriptors, t, e);
              });
            });
          }),
          v = (0, i.makeWeakCache)(function(e) {
            return {
              filepath: e.filepath,
              dirname: e.dirname,
              options: (0, r.validate)("configfile", e.options),
            };
          }),
          b = (0, i.makeWeakCache)(function(e) {
            return {
              filepath: e.filepath,
              dirname: e.dirname,
              options: (0, r.validate)("babelrcfile", e.options),
            };
          }),
          f = (0, i.makeWeakCache)(function(e) {
            return {
              filepath: e.filepath,
              dirname: e.dirname,
              options: (0, r.validate)("extendsfile", e.options),
            };
          }),
          E = D({
            root: function(e) {
              return T(e, "base", o.createCachedDescriptors);
            },
            env: function(e, t) {
              return P(e, "base", o.createCachedDescriptors, t);
            },
            overrides: function(e, t) {
              return C(e, "base", o.createCachedDescriptors, t);
            },
            overridesEnv: function(e, t, n) {
              return w(e, "base", o.createCachedDescriptors, t, n);
            },
          }),
          x = D({
            root: function(e) {
              return h(e);
            },
            env: function(e, t) {
              return A(e)(t);
            },
            overrides: function(e, t) {
              return S(e)(t);
            },
            overridesEnv: function(e, t, n) {
              return _(e)(t)(n);
            },
          }),
          h = (0, i.makeWeakCache)(function(e) {
            return T(e, e.filepath, o.createUncachedDescriptors);
          }),
          A = (0, i.makeWeakCache)(function(t) {
            return (0, i.makeStrongCache)(function(e) {
              return P(t, t.filepath, o.createUncachedDescriptors, e);
            });
          }),
          S = (0, i.makeWeakCache)(function(t) {
            return (0, i.makeStrongCache)(function(e) {
              return C(t, t.filepath, o.createUncachedDescriptors, e);
            });
          }),
          _ = (0, i.makeWeakCache)(function(n) {
            return (0, i.makeStrongCache)(function(t) {
              return (0, i.makeStrongCache)(function(e) {
                return w(n, n.filepath, o.createUncachedDescriptors, t, e);
              });
            });
          });
        function T(e, t, n) {
          return n(e.dirname, e.options, t);
        }
        function P(e, t, n, a) {
          var r = e.dirname,
            i = e.options,
            o = i.env && i.env[a];
          return o ? n(r, o, t + '.env["' + a + '"]') : null;
        }
        function C(e, t, n, a) {
          var r = e.dirname,
            i = e.options,
            o = i.overrides && i.overrides[a];
          if (!o) throw new Error("Assertion failure - missing override");
          return n(r, o, t + ".overrides[" + a + "]");
        }
        function w(e, t, n, a, r) {
          var i = e.dirname,
            o = e.options,
            s = o.overrides && o.overrides[a];
          if (!s) throw new Error("Assertion failure - missing override");
          var d = s.env && s.env[r];
          return d
            ? n(i, d, t + ".overrides[" + a + '].env["' + r + '"]')
            : null;
        }
        function D(e) {
          var y = e.root,
            m = e.env,
            v = e.overrides,
            b = e.overridesEnv;
          return function(r, i, e) {
            void 0 === e && (e = new Set());
            var t,
              n,
              a,
              o,
              s,
              d,
              u,
              l = r.dirname,
              c = [],
              p = y(r);
            if (j(p, l, i)) {
              c.push(p);
              var g = m(r, i.envName);
              g && j(g, l, i) && c.push(g),
                (p.options.overrides || []).forEach(function(e, t) {
                  var n = v(r, t);
                  if (j(n, l, i)) {
                    c.push(n);
                    var a = b(r, t, i.envName);
                    a && j(a, l, i) && c.push(a);
                  }
                });
            }
            if (
              c.some(function(e) {
                var t = e.options,
                  n = t.ignore,
                  a = t.only;
                return I(i, n, a, l);
              })
            )
              return null;
            for (
              var f = { options: [], presets: [], plugins: [] }, h = 0;
              h < c.length;
              h++
            ) {
              var R = c[h];
              if (!O(f, R.options, l, i, e)) return null;
              (t = f),
                (u = d = o = a = void 0),
                (s = (n = R).options),
                (d = n.plugins),
                (u = n.presets),
                t.options.push(s),
                (a = t.plugins).push.apply(a, d()),
                (o = t.presets).push.apply(o, u());
            }
            return f;
          };
        }
        function O(e, t, n, a, r) {
          if (void 0 === t.extends) return !0;
          var i = (0, m.loadConfig)(t.extends, n, a.envName, a.caller);
          if (r.has(i))
            throw new Error(
              "Configuration cycle detected loading " +
                i.filepath +
                ".\nFile already loaded following the config chain:\n" +
                Array.from(r, function(e) {
                  return " - " + e.filepath;
                }).join("\n")
            );
          r.add(i);
          var o = x(f(i), a, r);
          return r.delete(i), !!o && (F(e, o), !0);
        }
        function F(e, t) {
          var n, a, r;
          return (
            (n = e.options).push.apply(n, t.options),
            (a = e.plugins).push.apply(a, t.plugins),
            (r = e.presets).push.apply(r, t.presets),
            e
          );
        }
        function k(e) {
          var t = new Map(),
            n = [],
            a = e,
            r = Array.isArray(a),
            i = 0;
          for (a = r ? a : a[Symbol.iterator](); ; ) {
            var o;
            if (r) {
              if (i >= a.length) break;
              o = a[i++];
            } else {
              if ((i = a.next()).done) break;
              o = i.value;
            }
            var s = o;
            if ("function" == typeof s.value) {
              var d = s.value,
                u = t.get(d);
              u || ((u = new Map()), t.set(d, u));
              var l = u.get(s.name);
              l
                ? (l.value = s)
                : ((l = { value: s }),
                  n.push(l),
                  s.ownPass || u.set(s.name, l));
            } else n.push({ value: s });
          }
          return n.reduce(function(e, t) {
            return e.push(t.value), e;
          }, []);
        }
        function j(e, t, n) {
          var a = e.options;
          return (
            (void 0 === a.test || M(n, a.test, t)) &&
            (void 0 === a.include || M(n, a.include, t)) &&
            (void 0 === a.exclude || !M(n, a.exclude, t))
          );
        }
        function M(e, t, n) {
          return N(e, Array.isArray(t) ? t : [t], n);
        }
        function I(e, t, n, a) {
          return t && N(e, t, a)
            ? (d(
                "Ignored %o because it matched one of %O from %o",
                e.filename,
                t,
                a
              ),
              !0)
            : !(
                !n ||
                N(e, n, a) ||
                (d(
                  "Ignored %o because it failed to match one of %O from %o",
                  e.filename,
                  n,
                  a
                ),
                0)
              );
        }
        function N(t, e, n) {
          return e.some(function(e) {
            return B(e, n, t.filename, t);
          });
        }
        function B(e, t, n, a) {
          if ("function" == typeof e)
            return !!e(n, { dirname: t, envName: a.envName, caller: a.caller });
          if ("string" != typeof n)
            throw new Error(
              "Configuration contains string/RegExp pattern, but no filename was passed to Babel"
            );
          return "string" == typeof e && (e = (0, y.default)(e, t)), e.test(n);
        }
      },
      function(n, i, a) {
        (function(t) {
          function e() {
            var e;
            try {
              e = i.storage.debug;
            } catch (e) {}
            return !e && void 0 !== t && "env" in t && (e = void 0), e;
          }
          ((i = n.exports = a(458)).log = function() {
            return (
              "object" == typeof console &&
              console.log &&
              Function.prototype.apply.call(console.log, console, arguments)
            );
          }),
            (i.formatArgs = function(e) {
              var t = this.useColors;
              if (
                ((e[0] =
                  (t ? "%c" : "") +
                  this.namespace +
                  (t ? " %c" : " ") +
                  e[0] +
                  (t ? "%c " : " ") +
                  "+" +
                  i.humanize(this.diff)),
                t)
              ) {
                var n = "color: " + this.color;
                e.splice(1, 0, n, "color: inherit");
                var a = 0,
                  r = 0;
                e[0].replace(/%[a-zA-Z%]/g, function(e) {
                  "%%" !== e && "%c" === e && (r = ++a);
                }),
                  e.splice(r, 0, n);
              }
            }),
            (i.save = function(e) {
              try {
                null == e
                  ? i.storage.removeItem("debug")
                  : (i.storage.debug = e);
              } catch (e) {}
            }),
            (i.load = e),
            (i.useColors = function() {
              return (
                !(
                  "undefined" == typeof window ||
                  !window.process ||
                  "renderer" !== window.process.type
                ) ||
                (("undefined" == typeof navigator ||
                  !navigator.userAgent ||
                  !navigator.userAgent
                    .toLowerCase()
                    .match(/(edge|trident)\/(\d+)/)) &&
                  (("undefined" != typeof document &&
                    document.documentElement &&
                    document.documentElement.style &&
                    document.documentElement.style.WebkitAppearance) ||
                    ("undefined" != typeof window &&
                      window.console &&
                      (window.console.firebug ||
                        (window.console.exception && window.console.table))) ||
                    ("undefined" != typeof navigator &&
                      navigator.userAgent &&
                      navigator.userAgent
                        .toLowerCase()
                        .match(/firefox\/(\d+)/) &&
                      31 <= parseInt(RegExp.$1, 10)) ||
                    ("undefined" != typeof navigator &&
                      navigator.userAgent &&
                      navigator.userAgent
                        .toLowerCase()
                        .match(/applewebkit\/(\d+)/))))
              );
            }),
            (i.storage =
              "undefined" != typeof chrome && void 0 !== chrome.storage
                ? chrome.storage.local
                : (function() {
                    try {
                      return window.localStorage;
                    } catch (e) {}
                  })()),
            (i.colors = [
              "#0000CC",
              "#0000FF",
              "#0033CC",
              "#0033FF",
              "#0066CC",
              "#0066FF",
              "#0099CC",
              "#0099FF",
              "#00CC00",
              "#00CC33",
              "#00CC66",
              "#00CC99",
              "#00CCCC",
              "#00CCFF",
              "#3300CC",
              "#3300FF",
              "#3333CC",
              "#3333FF",
              "#3366CC",
              "#3366FF",
              "#3399CC",
              "#3399FF",
              "#33CC00",
              "#33CC33",
              "#33CC66",
              "#33CC99",
              "#33CCCC",
              "#33CCFF",
              "#6600CC",
              "#6600FF",
              "#6633CC",
              "#6633FF",
              "#66CC00",
              "#66CC33",
              "#9900CC",
              "#9900FF",
              "#9933CC",
              "#9933FF",
              "#99CC00",
              "#99CC33",
              "#CC0000",
              "#CC0033",
              "#CC0066",
              "#CC0099",
              "#CC00CC",
              "#CC00FF",
              "#CC3300",
              "#CC3333",
              "#CC3366",
              "#CC3399",
              "#CC33CC",
              "#CC33FF",
              "#CC6600",
              "#CC6633",
              "#CC9900",
              "#CC9933",
              "#CCCC00",
              "#CCCC33",
              "#FF0000",
              "#FF0033",
              "#FF0066",
              "#FF0099",
              "#FF00CC",
              "#FF00FF",
              "#FF3300",
              "#FF3333",
              "#FF3366",
              "#FF3399",
              "#FF33CC",
              "#FF33FF",
              "#FF6600",
              "#FF6633",
              "#FF9900",
              "#FF9933",
              "#FFCC00",
              "#FFCC33",
            ]),
            (i.formatters.j = function(e) {
              try {
                return JSON.stringify(e);
              } catch (e) {
                return "[UnexpectedJSONParseError]: " + e.message;
              }
            }),
            i.enable(e());
        }.call(this, a(7)));
      },
      function(e, t, n) {
        "use strict";
        function d(e) {
          switch (e.type) {
            case "root":
              return "";
            case "env":
              return d(e.parent) + '.env["' + e.name + '"]';
            case "overrides":
              return d(e.parent) + ".overrides[" + e.index + "]";
            case "option":
              return d(e.parent) + "." + e.name;
            case "access":
              return d(e.parent) + "[" + JSON.stringify(e.name) + "]";
            default:
              throw new Error("Assertion failure: Unknown type " + e.type);
          }
        }
        function u(e, t) {
          return { type: "access", name: t, parent: e };
        }
        function l(e, t) {
          if (void 0 !== t && ("object" != typeof t || Array.isArray(t) || !t))
            throw new Error(d(e) + " must be an object, or undefined");
          return t;
        }
        function a(e, t) {
          if (null != t && !Array.isArray(t))
            throw new Error(d(e) + " must be an array, or undefined");
          return t;
        }
        function r(e) {
          return (
            "string" == typeof e ||
            "function" == typeof e ||
            e instanceof RegExp
          );
        }
        function i(e, t) {
          if (
            ("object" != typeof t || !t) &&
            "string" != typeof t &&
            "function" != typeof t
          )
            throw new Error(d(e) + " must be a string, object, function");
          return t;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.msg = d),
          (t.access = u),
          (t.assertSourceMaps = function(e, t) {
            if (
              void 0 !== t &&
              "boolean" != typeof t &&
              "inline" !== t &&
              "both" !== t
            )
              throw new Error(
                d(e) + ' must be a boolean, "inline", "both", or undefined'
              );
            return t;
          }),
          (t.assertCompact = function(e, t) {
            if (void 0 !== t && "boolean" != typeof t && "auto" !== t)
              throw new Error(
                d(e) + ' must be a boolean, "auto", or undefined'
              );
            return t;
          }),
          (t.assertSourceType = function(e, t) {
            if (
              void 0 !== t &&
              "module" !== t &&
              "script" !== t &&
              "unambiguous" !== t
            )
              throw new Error(
                d(e) +
                  ' must be "module", "script", "unambiguous", or undefined'
              );
            return t;
          }),
          (t.assertCallerMetadata = function(e, t) {
            var n = l(e, t);
            if (n) {
              if ("string" != typeof n.name)
                throw new Error(
                  d(e) + ' set but does not contain "name" property string'
                );
              for (var a = Object.keys(n), r = 0; r < a.length; r++) {
                var i = a[r],
                  o = u(e, i),
                  s = n[i];
                if (
                  null != s &&
                  "boolean" != typeof s &&
                  "string" != typeof s &&
                  "number" != typeof s
                )
                  throw new Error(
                    d(o) +
                      " must be null, undefined, a boolean, a string, or a number."
                  );
              }
            }
            return t;
          }),
          (t.assertInputSourceMap = function(e, t) {
            if (
              void 0 !== t &&
              "boolean" != typeof t &&
              ("object" != typeof t || !t)
            )
              throw new Error(
                d(e) + " must be a boolean, object, or undefined"
              );
            return t;
          }),
          (t.assertString = function(e, t) {
            if (void 0 !== t && "string" != typeof t)
              throw new Error(d(e) + " must be a string, or undefined");
            return t;
          }),
          (t.assertFunction = function(e, t) {
            if (void 0 !== t && "function" != typeof t)
              throw new Error(d(e) + " must be a function, or undefined");
            return t;
          }),
          (t.assertBoolean = function(e, t) {
            if (void 0 !== t && "boolean" != typeof t)
              throw new Error(d(e) + " must be a boolean, or undefined");
            return t;
          }),
          (t.assertObject = l),
          (t.assertArray = a),
          (t.assertIgnoreList = function(n, e) {
            var t = a(n, e);
            return (
              t &&
                t.forEach(function(e, t) {
                  return (function(e, t) {
                    if (
                      "string" != typeof t &&
                      "function" != typeof t &&
                      !(t instanceof RegExp)
                    )
                      throw new Error(
                        d(e) +
                          " must be an array of string/Funtion/RegExp values, or undefined"
                      );
                    return t;
                  })(u(n, t), e);
                }),
              t
            );
          }),
          (t.assertConfigApplicableTest = function(n, e) {
            if (void 0 === e) return e;
            if (Array.isArray(e))
              e.forEach(function(e, t) {
                if (!r(e))
                  throw new Error(
                    d(u(n, t)) + " must be a string/Function/RegExp."
                  );
              });
            else if (!r(e))
              throw new Error(
                d(n) + " must be a string/Function/RegExp, or an array of those"
              );
            return e;
          }),
          (t.assertConfigFileSearch = function(e, t) {
            if (void 0 !== t && "boolean" != typeof t && "string" != typeof t)
              throw new Error(
                d(e) +
                  " must be a undefined, a boolean, a string, got " +
                  JSON.stringify(t)
              );
            return t;
          }),
          (t.assertBabelrcSearch = function(n, e) {
            if (void 0 === e || "boolean" == typeof e) return e;
            if (Array.isArray(e))
              e.forEach(function(e, t) {
                if (!r(e))
                  throw new Error(
                    d(u(n, t)) + " must be a string/Function/RegExp."
                  );
              });
            else if (!r(e))
              throw new Error(
                d(n) +
                  " must be a undefined, a boolean, a string/Function/RegExp or an array of those, got " +
                  JSON.stringify(e)
              );
            return e;
          }),
          (t.assertPluginList = function(n, e) {
            var t = a(n, e);
            return (
              t &&
                t.forEach(function(e, t) {
                  return (function(e, t) {
                    if (Array.isArray(t)) {
                      if (0 === t.length)
                        throw new Error(d(e) + " must include an object");
                      if (3 < t.length)
                        throw new Error(
                          d(e) + " may only be a two-tuple or three-tuple"
                        );
                      if ((i(u(e, 0), t[0]), 1 < t.length)) {
                        var n = t[1];
                        if (
                          void 0 !== n &&
                          !1 !== n &&
                          ("object" != typeof n || Array.isArray(n))
                        )
                          throw new Error(
                            d(u(e, 1)) +
                              " must be an object, false, or undefined"
                          );
                      }
                      if (3 === t.length) {
                        var a = t[2];
                        if (void 0 !== a && "string" != typeof a)
                          throw new Error(
                            d(u(e, 2)) + " must be a string, or undefined"
                          );
                      }
                    } else i(e, t);
                    return t;
                  })(u(n, t), e);
                }),
              t
            );
          });
      },
      function(e, t, n) {
        "use strict";
        function f() {
          var e = a(n(6));
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = s),
          (t.loadPartialConfig = function(e) {
            var t = s(e);
            if (!t) return null;
            var n = t.options,
              a = t.babelrc,
              r = t.ignore,
              i = t.config;
            return (
              (n.plugins || []).forEach(function(e) {
                if (e.value instanceof o.default)
                  throw new Error(
                    "Passing cached plugin instances is not supported in babel.loadPartialConfig()"
                  );
              }),
              new d(
                n,
                a ? a.filepath : void 0,
                r ? r.filepath : void 0,
                i ? i.filepath : void 0
              )
            );
          });
        var o = a(n(90)),
          h = n(199),
          R = n(56),
          y = n(200),
          m = n(197),
          v = n(91);
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(e) {
          if (null != e && ("object" != typeof e || Array.isArray(e)))
            throw new Error(
              "Babel options must be an object, null, or undefined"
            );
          var t = e ? (0, v.validate)("arguments", e) : {},
            n = t.envName,
            a = void 0 === n ? (0, m.getEnv)() : n,
            r = t.cwd,
            i = void 0 === r ? "." : r,
            o = t.root,
            s = void 0 === o ? "." : o,
            d = t.caller,
            u = f().default.resolve(i),
            l = f().default.resolve(u, s),
            c = {
              filename:
                "string" == typeof t.filename
                  ? f().default.resolve(i, t.filename)
                  : void 0,
              cwd: u,
              root: l,
              envName: a,
              caller: d,
            },
            p = (0, y.buildRootChain)(t, c);
          if (!p) return null;
          var g = {};
          return (
            p.options.forEach(function(e) {
              (0, h.mergeOptions)(g, e);
            }),
            (g.babelrc = !1),
            (g.configFile = !1),
            (g.passPerPreset = !1),
            (g.envName = c.envName),
            (g.cwd = c.cwd),
            (g.root = c.root),
            (g.filename = "string" == typeof c.filename ? c.filename : void 0),
            (g.plugins = p.plugins.map(function(e) {
              return (0, R.createItemFromDescriptor)(e);
            })),
            (g.presets = p.presets.map(function(e) {
              return (0, R.createItemFromDescriptor)(e);
            })),
            {
              options: g,
              context: c,
              ignore: p.ignore,
              babelrc: p.babelrc,
              config: p.config,
            }
          );
        }
        var d = (function() {
          function e(e, t, n, a) {
            (this.options = e),
              (this.babelignore = n),
              (this.babelrc = t),
              (this.config = a),
              Object.freeze(this);
          }
          return (
            (e.prototype.hasFilesystemConfig = function() {
              return void 0 !== this.babelrc || void 0 !== this.config;
            }),
            e
          );
        })();
        Object.freeze(d.prototype);
      },
      function(e, t, n) {
        "use strict";
        function P() {
          var e = a(n(10));
          return (
            (P = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.runAsync = function(e, t, n, a) {
            var r;
            try {
              r = i(e, t, n);
            } catch (e) {
              return a(e);
            }
            return a(null, r);
          }),
          (t.runSync = i);
        var C = a(n(465)),
          w = a(n(466)),
          s = a(n(212)),
          d = a(n(213)),
          u = a(n(502));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function i(T, e, t) {
          var n = (0, d.default)(T.passes, (0, s.default)(T), e, t);
          !(function(e, t) {
            var n = T.passes,
              a = Array.isArray(n),
              r = 0;
            for (n = a ? n : n[Symbol.iterator](); ; ) {
              var i;
              if (a) {
                if (r >= n.length) break;
                i = n[r++];
              } else {
                if ((r = n.next()).done) break;
                i = r.value;
              }
              var o = [],
                s = [],
                d = [],
                u = i.concat([(0, w.default)()]),
                l = Array.isArray(u),
                c = 0;
              for (u = l ? u : u[Symbol.iterator](); ; ) {
                var p;
                if (l) {
                  if (c >= u.length) break;
                  p = u[c++];
                } else {
                  if ((c = u.next()).done) break;
                  p = c.value;
                }
                var g = p,
                  f = new C.default(e, g.key, g.options);
                o.push([g, f]), s.push(f), d.push(g.visitor);
              }
              for (var h = 0; h < o.length; h++) {
                var R = o[h],
                  y = R[0],
                  m = R[1],
                  v = y.pre;
                if (v)
                  if (D(v.call(m, e)))
                    throw new Error(
                      "You appear to be using an plugin with an async .pre, which your current version of Babel does not support.If you're using a published plugin, you may need to upgrade your @gerhobbelt/babel-core version."
                    );
              }
              var b = P().default.visitors.merge(
                d,
                s,
                e.opts.wrapPluginVisitorMethod
              );
              (0, P().default)(e.ast, b, e.scope);
              for (var E = 0; E < o.length; E++) {
                var x = o[E],
                  A = x[0],
                  S = x[1],
                  _ = A.post;
                if (_)
                  if (D(_.call(S, e)))
                    throw new Error(
                      "You appear to be using an plugin with an async .post, which your current version of Babel does not support.If you're using a published plugin, you may need to upgrade your @gerhobbelt/babel-core version."
                    );
              }
            }
          })(n);
          var a = n.opts,
            r = !1 !== a.code ? (0, u.default)(T.passes, n) : {},
            i = r.outputCode,
            o = r.outputMap;
          return {
            metadata: n.metadata,
            options: a,
            ast: !0 === a.ast ? n.ast : null,
            code: void 0 === i ? null : i,
            map: void 0 === o ? null : o,
            sourceType: n.ast.program.sourceType,
          };
        }
        function D(e) {
          return (
            !!e &&
            ("object" == typeof e || "function" == typeof e) &&
            "function" == typeof e.then
          );
        }
      },
      function(e, t, n) {
        var o = n(474),
          s = n(12);
        e.exports = function e(t, n, a, r, i) {
          return (
            t === n ||
            (null == t || null == n || (!s(t) && !s(n))
              ? t != t && n != n
              : o(t, n, a, r, e, i))
          );
        };
      },
      function(e, t, n) {
        var R = n(169),
          y = n(475),
          m = n(170);
        e.exports = function(e, t, n, a, r, i) {
          var o = 1 & n,
            s = e.length,
            d = t.length;
          if (s != d && !(o && s < d)) return !1;
          var u = i.get(e);
          if (u && i.get(t)) return u == t;
          var l = -1,
            c = !0,
            p = 2 & n ? new R() : void 0;
          for (i.set(e, t), i.set(t, e); ++l < s; ) {
            var g = e[l],
              f = t[l];
            if (a) var h = o ? a(f, g, l, t, e, i) : a(g, f, l, e, t, i);
            if (void 0 !== h) {
              if (h) continue;
              c = !1;
              break;
            }
            if (p) {
              if (
                !y(t, function(e, t) {
                  if (!m(p, t) && (g === e || r(g, e, n, a, i)))
                    return p.push(t);
                })
              ) {
                c = !1;
                break;
              }
            } else if (g !== f && !r(g, f, n, a, i)) {
              c = !1;
              break;
            }
          }
          return i.delete(e), i.delete(t), c;
        };
      },
      function(e, t, n) {
        var a = n(17);
        e.exports = function(e) {
          return e == e && !a(e);
        };
      },
      function(e, t) {
        e.exports = function(t, n) {
          return function(e) {
            return null != e && e[t] === n && (void 0 !== n || t in Object(e));
          };
        };
      },
      function(e, t, n) {
        var r = n(210),
          i = n(58);
        e.exports = function(e, t) {
          for (var n = 0, a = (t = r(t, e)).length; null != e && n < a; )
            e = e[i(t[n++])];
          return n && n == a ? e : void 0;
        };
      },
      function(e, t, n) {
        var a = n(9),
          r = n(92),
          i = n(482),
          o = n(83);
        e.exports = function(e, t) {
          return a(e) ? e : r(e, t) ? [e] : i(o(e));
        };
      },
      function(e, t, n) {
        var s = n(210),
          d = n(65),
          u = n(9),
          l = n(67),
          c = n(68),
          p = n(58);
        e.exports = function(e, t, n) {
          for (var a = -1, r = (t = s(t, e)).length, i = !1; ++a < r; ) {
            var o = p(t[a]);
            if (!(i = null != e && n(e, o))) break;
            e = e[o];
          }
          return i || ++a != r
            ? i
            : !!(r = null == e ? 0 : e.length) &&
                c(r) &&
                l(o, r) &&
                (u(e) || d(e));
        };
      },
      function(e, t, n) {
        "use strict";
        function O() {
          var e,
            t = (e = n(6)) && e.__esModule ? e : { default: e };
          return (
            (O = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t = e.options,
              n = t.filename,
              a = t.cwd,
              r = t.filenameRelative,
              i =
                void 0 === r
                  ? "string" == typeof n
                    ? O().default.relative(a, n)
                    : "unknown"
                  : r,
              o = t.sourceType,
              s = void 0 === o ? "module" : o,
              d = t.inputSourceMap,
              u = t.sourceMaps,
              l = void 0 === u ? !!d : u,
              c = t.moduleRoot,
              p = t.sourceRoot,
              g = void 0 === p ? c : p,
              f = t.sourceFileName,
              h = void 0 === f ? O().default.basename(i) : f,
              R = t.comments,
              y = void 0 === R || R,
              m = t.compact,
              v = void 0 === m ? "auto" : m,
              b = e.options,
              E = Object.assign({}, b, {
                parserOpts: Object.assign(
                  {
                    sourceType:
                      ".mjs" === O().default.extname(i) ? "module" : s,
                    sourceFileName: n,
                    plugins: [],
                  },
                  b.parserOpts
                ),
                generatorOpts: Object.assign(
                  {
                    filename: n,
                    auxiliaryCommentBefore: b.auxiliaryCommentBefore,
                    auxiliaryCommentAfter: b.auxiliaryCommentAfter,
                    retainLines: b.retainLines,
                    comments: y,
                    shouldPrintComment: b.shouldPrintComment,
                    compact: v,
                    minified: b.minified,
                    sourceMaps: l,
                    sourceRoot: g,
                    sourceFileName: h,
                  },
                  b.generatorOpts
                ),
              }),
              x = e.passes,
              A = Array.isArray(x),
              S = 0;
            for (x = A ? x : x[Symbol.iterator](); ; ) {
              var _;
              if (A) {
                if (S >= x.length) break;
                _ = x[S++];
              } else {
                if ((S = x.next()).done) break;
                _ = S.value;
              }
              var T = _,
                P = Array.isArray(T),
                C = 0;
              for (T = P ? T : T[Symbol.iterator](); ; ) {
                var w;
                if (P) {
                  if (C >= T.length) break;
                  w = T[C++];
                } else {
                  if ((C = T.next()).done) break;
                  w = C.value;
                }
                var D = w;
                D.manipulateOptions && D.manipulateOptions(E, E.parserOpts);
              }
            }
            return E;
          });
      },
      function(e, t, n) {
        "use strict";
        function i() {
          var e = r(n(6));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function a() {
          var e = r(n(201));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = r(n(499));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = r(n(214));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = n(87);
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        function A() {
          var e = n(55);
          return (
            (A = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n, a) {
            n = "" + (n || "");
            var r = null;
            if (!1 !== t.inputSourceMap) {
              if (
                ("object" == typeof t.inputSourceMap &&
                  (r = d().default.fromObject(t.inputSourceMap)),
                !r)
              )
                try {
                  (r = d().default.fromSource(n)) &&
                    (n = d().default.removeComments(n));
                } catch (e) {
                  l("discarding unknown inline input sourcemap", e),
                    (n = d().default.removeComments(n));
                }
              if (!r)
                if ("string" == typeof t.filename)
                  try {
                    (r = d().default.fromMapFileSource(
                      n,
                      i().default.dirname(t.filename)
                    )) && (n = d().default.removeMapFileComments(n));
                  } catch (e) {
                    l("discarding unknown file input sourcemap", e),
                      (n = d().default.removeMapFileComments(n));
                  }
                else
                  l("discarding un-loadable file input sourcemap"),
                    (n = d().default.removeMapFileComments(n));
            }
            if (a) {
              if ("Program" === a.type) a = s().file(a, [], []);
              else if ("File" !== a.type)
                throw new Error("AST root must be a Program or File node");
              a = (0, o().default)(a);
            } else
              a = (function(e, t, n) {
                var a = t.parserOpts,
                  r = t.highlightCode,
                  i = void 0 === r || r,
                  o = t.filename,
                  s = void 0 === o ? "unknown" : o;
                try {
                  var d = [],
                    u = e,
                    l = Array.isArray(u),
                    c = 0;
                  for (u = l ? u : u[Symbol.iterator](); ; ) {
                    var p;
                    if (l) {
                      if (c >= u.length) break;
                      p = u[c++];
                    } else {
                      if ((c = u.next()).done) break;
                      p = c.value;
                    }
                    var g = p,
                      f = Array.isArray(g),
                      h = 0;
                    for (g = f ? g : g[Symbol.iterator](); ; ) {
                      var R;
                      if (f) {
                        if (h >= g.length) break;
                        R = g[h++];
                      } else {
                        if ((h = g.next()).done) break;
                        R = h.value;
                      }
                      var y = R.parserOverride;
                      if (y) {
                        var m = y(n, a, x().parse);
                        void 0 !== m && d.push(m);
                      }
                    }
                  }
                  if (0 === d.length) return (0, x().parse)(n, a);
                  if (1 !== d.length)
                    throw new Error(
                      "More than one plugin attempted to override parsing."
                    );
                  if ("function" == typeof d[0].then)
                    throw new Error(
                      "You appear to be using an async codegen plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @gerhobbelt/babel-core version."
                    );
                  return d[0];
                } catch (e) {
                  "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED" === e.code &&
                    (e.message +=
                      "\nConsider renaming the file to '.mjs', or setting sourceType:module or sourceType:unambiguous in your Babel config for this file.");
                  var v = e.loc,
                    b = e.missingPlugin;
                  if (v) {
                    var E = (0, A().codeFrameColumns)(
                      n,
                      { start: { line: v.line, column: v.column + 1 } },
                      { highlightCode: i }
                    );
                    (e.message = b
                      ? s + ": " + (0, S.default)(b[0], v, E)
                      : s + ": " + e.message + "\n\n" + E),
                      (e.code = "BABEL_PARSE_ERROR");
                  }
                  throw e;
                }
              })(e, t, n);
            return new u.default(t, { code: n, ast: a, inputMap: r });
          });
        var u = r(n(139)),
          S = r(n(501));
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var l = (0, a().default)("babel:transform:file");
      },
      function(e, i, t) {
        "use strict";
        var o = t(31),
          s = t(6),
          a = t(500);
        function n(e, t) {
          var n;
          (t = t || {}).isFileComment &&
            (e = (function(e, t) {
              var n = i.mapFileCommentRegex.exec(e),
                a = n[1] || n[2],
                r = s.resolve(t, a);
              try {
                return o.readFileSync(r, "utf8");
              } catch (e) {
                throw new Error(
                  "An error occurred while trying to read the map file at " +
                    r +
                    "\n" +
                    e
                );
              }
            })(e, t.commentFileDir)),
            t.hasComment && (e = e.split(",").pop()),
            t.isEncoded &&
              ((n = e), (e = a.Buffer.from(n, "base64").toString())),
            (t.isJSON || t.isEncoded) && (e = JSON.parse(e)),
            (this.sourcemap = e);
        }
        Object.defineProperty(i, "commentRegex", {
          get: function() {
            return /^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/gm;
          },
        }),
          Object.defineProperty(i, "mapFileCommentRegex", {
            get: function() {
              return /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"`]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm;
            },
          }),
          (n.prototype.toJSON = function(e) {
            return JSON.stringify(this.sourcemap, null, e);
          }),
          (n.prototype.toBase64 = function() {
            var e = this.toJSON();
            return a.Buffer.from(e, "utf8").toString("base64");
          }),
          (n.prototype.toComment = function(e) {
            var t =
              "sourceMappingURL=data:application/json;charset=utf-8;base64," +
              this.toBase64();
            return e && e.multiline ? "/*# " + t + " */" : "//# " + t;
          }),
          (n.prototype.toObject = function() {
            return JSON.parse(this.toJSON());
          }),
          (n.prototype.addProperty = function(e, t) {
            if (this.sourcemap.hasOwnProperty(e))
              throw new Error(
                'property "' +
                  e +
                  '" already exists on the sourcemap, use set property instead'
              );
            return this.setProperty(e, t);
          }),
          (n.prototype.setProperty = function(e, t) {
            return (this.sourcemap[e] = t), this;
          }),
          (n.prototype.getProperty = function(e) {
            return this.sourcemap[e];
          }),
          (i.fromObject = function(e) {
            return new n(e);
          }),
          (i.fromJSON = function(e) {
            return new n(e, { isJSON: !0 });
          }),
          (i.fromBase64 = function(e) {
            return new n(e, { isEncoded: !0 });
          }),
          (i.fromComment = function(e) {
            return new n(
              (e = e.replace(/^\/\*/g, "//").replace(/\*\/$/g, "")),
              { isEncoded: !0, hasComment: !0 }
            );
          }),
          (i.fromMapFileComment = function(e, t) {
            return new n(e, {
              commentFileDir: t,
              isFileComment: !0,
              isJSON: !0,
            });
          }),
          (i.fromSource = function(e) {
            var t = e.match(i.commentRegex);
            return t ? i.fromComment(t.pop()) : null;
          }),
          (i.fromMapFileSource = function(e, t) {
            var n = e.match(i.mapFileCommentRegex);
            return n ? i.fromMapFileComment(n.pop(), t) : null;
          }),
          (i.removeComments = function(e) {
            return e.replace(i.commentRegex, "");
          }),
          (i.removeMapFileComments = function(e) {
            return e.replace(i.mapFileCommentRegex, "");
          }),
          (i.generateMapFileComment = function(e, t) {
            var n = "sourceMappingURL=" + e;
            return t && t.multiline ? "/*# " + n + " */" : "//# " + n;
          });
      },
      function(e, t, n) {
        var f = n(216),
          h = n(59),
          a = n(217).ArraySet,
          r = n(506).MappingList,
          i = (function() {
            function e(e) {
              e || (e = {}),
                (this._file = h.getArg(e, "file", null)),
                (this._sourceRoot = h.getArg(e, "sourceRoot", null)),
                (this._skipValidation = h.getArg(e, "skipValidation", !1)),
                (this._sources = new a()),
                (this._names = new a()),
                (this._mappings = new r()),
                (this._sourcesContents = null);
            }
            e.fromSourceMap = function(a) {
              var r = a.sourceRoot,
                i = new e({ file: a.file, sourceRoot: r });
              return (
                a.eachMapping(function(e) {
                  var t = {
                    generated: {
                      line: e.generatedLine,
                      column: e.generatedColumn,
                    },
                  };
                  null != e.source &&
                    ((t.source = e.source),
                    null != r && (t.source = h.relative(r, t.source)),
                    (t.original = {
                      line: e.originalLine,
                      column: e.originalColumn,
                    }),
                    null != e.name && (t.name = e.name)),
                    i.addMapping(t);
                }),
                a.sources.forEach(function(e) {
                  var t = e;
                  null !== r && (t = h.relative(r, e)),
                    i._sources.has(t) || i._sources.add(t);
                  var n = a.sourceContentFor(e);
                  null != n && i.setSourceContent(e, n);
                }),
                i
              );
            };
            var t = e.prototype;
            return (
              (t.addMapping = function(e) {
                var t = h.getArg(e, "generated"),
                  n = h.getArg(e, "original", null),
                  a = h.getArg(e, "source", null),
                  r = h.getArg(e, "name", null);
                this._skipValidation || this._validateMapping(t, n, a, r),
                  null != a &&
                    ((a = String(a)),
                    this._sources.has(a) || this._sources.add(a)),
                  null != r &&
                    ((r = String(r)), this._names.has(r) || this._names.add(r)),
                  this._mappings.add({
                    generatedLine: t.line,
                    generatedColumn: t.column,
                    originalLine: null != n && n.line,
                    originalColumn: null != n && n.column,
                    source: a,
                    name: r,
                  });
              }),
              (t.setSourceContent = function(e, t) {
                var n = e;
                null != this._sourceRoot &&
                  (n = h.relative(this._sourceRoot, n)),
                  null != t
                    ? (this._sourcesContents ||
                        (this._sourcesContents = Object.create(null)),
                      (this._sourcesContents[h.toSetString(n)] = t))
                    : this._sourcesContents &&
                      (delete this._sourcesContents[h.toSetString(n)],
                      0 === Object.keys(this._sourcesContents).length &&
                        (this._sourcesContents = null));
              }),
              (t.applySourceMap = function(r, e, i) {
                var o = e;
                if (null == e) {
                  if (null == r.file)
                    throw new Error(
                      'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.'
                    );
                  o = r.file;
                }
                var s = this._sourceRoot;
                null != s && (o = h.relative(s, o));
                var d =
                    0 < this._mappings.toArray().length
                      ? new a()
                      : this._sources,
                  u = new a();
                this._mappings.unsortedForEach(function(e) {
                  if (e.source === o && null != e.originalLine) {
                    var t = r.originalPositionFor({
                      line: e.originalLine,
                      column: e.originalColumn,
                    });
                    null != t.source &&
                      ((e.source = t.source),
                      null != i && (e.source = h.join(i, e.source)),
                      null != s && (e.source = h.relative(s, e.source)),
                      (e.originalLine = t.line),
                      (e.originalColumn = t.column),
                      null != t.name && (e.name = t.name));
                  }
                  var n = e.source;
                  null == n || d.has(n) || d.add(n);
                  var a = e.name;
                  null == a || u.has(a) || u.add(a);
                }, this),
                  (this._sources = d),
                  (this._names = u),
                  r.sources.forEach(function(e) {
                    var t = r.sourceContentFor(e);
                    null != t &&
                      (null != i && (e = h.join(i, e)),
                      null != s && (e = h.relative(s, e)),
                      this.setSourceContent(e, t));
                  }, this);
              }),
              (t._validateMapping = function(e, t, n, a) {
                if (
                  t &&
                  "number" != typeof t.line &&
                  "number" != typeof t.column
                )
                  throw new Error(
                    "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
                  );
                if (
                  e &&
                  "line" in e &&
                  "column" in e &&
                  0 < e.line &&
                  0 <= e.column &&
                  !t &&
                  !n &&
                  !a
                );
                else if (
                  !(
                    e &&
                    "line" in e &&
                    "column" in e &&
                    t &&
                    "line" in t &&
                    "column" in t &&
                    0 < e.line &&
                    0 <= e.column &&
                    0 < t.line &&
                    0 <= t.column &&
                    n
                  )
                )
                  throw new Error(
                    "Invalid mapping: " +
                      JSON.stringify({
                        generated: e,
                        source: n,
                        original: t,
                        name: a,
                      })
                  );
              }),
              (t._serializeMappings = function() {
                for (
                  var e,
                    t,
                    n,
                    a,
                    r = 0,
                    i = 1,
                    o = 0,
                    s = 0,
                    d = 0,
                    u = 0,
                    l = "",
                    c = this._mappings.toArray(),
                    p = 0,
                    g = c.length;
                  p < g;
                  p++
                ) {
                  if (((e = ""), (t = c[p]).generatedLine !== i))
                    for (r = 0; t.generatedLine !== i; ) (e += ";"), i++;
                  else if (0 < p) {
                    if (!h.compareByGeneratedPositionsInflated(t, c[p - 1]))
                      continue;
                    e += ",";
                  }
                  (e += f.encode(t.generatedColumn - r)),
                    (r = t.generatedColumn),
                    null != t.source &&
                      ((a = this._sources.indexOf(t.source)),
                      (e += f.encode(a - u)),
                      (u = a),
                      (e += f.encode(t.originalLine - 1 - s)),
                      (s = t.originalLine - 1),
                      (e += f.encode(t.originalColumn - o)),
                      (o = t.originalColumn),
                      null != t.name &&
                        ((n = this._names.indexOf(t.name)),
                        (e += f.encode(n - d)),
                        (d = n))),
                    (l += e);
                }
                return l;
              }),
              (t._generateSourcesContent = function(e, n) {
                return e.map(function(e) {
                  if (!this._sourcesContents) return null;
                  null != n && (e = h.relative(n, e));
                  var t = h.toSetString(e);
                  return Object.prototype.hasOwnProperty.call(
                    this._sourcesContents,
                    t
                  )
                    ? this._sourcesContents[t]
                    : null;
                }, this);
              }),
              (t.toJSON = function() {
                var e = {
                  version: this._version,
                  sources: this._sources.toArray(),
                  names: this._names.toArray(),
                  mappings: this._serializeMappings(),
                };
                return (
                  null != this._file && (e.file = this._file),
                  null != this._sourceRoot && (e.sourceRoot = this._sourceRoot),
                  this._sourcesContents &&
                    (e.sourcesContent = this._generateSourcesContent(
                      e.sources,
                      e.sourceRoot
                    )),
                  e
                );
              }),
              (t.toString = function() {
                return JSON.stringify(this.toJSON());
              }),
              e
            );
          })();
        (i.prototype._version = 3), (t.SourceMapGenerator = i);
      },
      function(e, t, n) {
        var r = n(505);
        t.encode = function(e) {
          for (
            var t, n = "", a = e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
            (t = 31 & a),
              0 < (a >>>= 5) && (t |= 32),
              (n += r.encode(t)),
              0 < a;

          );
          return n;
        };
      },
      function(e, t) {
        var n = (function() {
          function i() {
            (this._array = []), (this._set = new Map());
          }
          i.fromArray = function(e, t) {
            for (var n = new i(), a = 0, r = e.length; a < r; a++)
              n.add(e[a], t);
            return n;
          };
          var e = i.prototype;
          return (
            (e.size = function() {
              return this._set.size;
            }),
            (e.add = function(e, t) {
              var n = this.has(e),
                a = this._array.length;
              (n && !t) || this._array.push(e), n || this._set.set(e, a);
            }),
            (e.has = function(e) {
              return this._set.has(e);
            }),
            (e.indexOf = function(e) {
              var t = this._set.get(e);
              if (0 <= t) return t;
              throw new Error('"' + e + '" is not in the set.');
            }),
            (e.at = function(e) {
              if (0 <= e && e < this._array.length) return this._array[e];
              throw new Error("No element indexed by " + e);
            }),
            (e.toArray = function() {
              return this._array.slice();
            }),
            i
          );
        })();
        t.ArraySet = n;
      },
      function(e, t, a) {
        (function(t) {
          if ("function" == typeof fetch) {
            var n = null;
            (e.exports = function() {
              if ("string" != typeof n)
                throw new Error(
                  "You must provide the URL of lib/mappings.wasm by calling SourceMapConsumer.initialize({ 'lib/mappings.wasm': ... }) before using SourceMapConsumer"
                );
              return fetch(n).then(function(e) {
                return e.arrayBuffer();
              });
            }),
              (e.exports.initialize = function(e) {
                return (n = e);
              });
          } else {
            var r = a(31),
              i = a(6);
            (e.exports = function() {
              return new Promise(function(n, a) {
                var e = i.join(t, "mappings.wasm");
                r.readFile(e, null, function(e, t) {
                  e ? a(e) : n(t.buffer);
                });
              });
            }),
              (e.exports.initialize = function(e) {
                console.debug(
                  "SourceMapConsumer.initialize is a no-op when running in node.js"
                );
              });
          }
        }.call(this, "/"));
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("asyncGenerators");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("classProperties", "classPrivateProperties");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.legacy,
            a = void 0 !== n && n;
          if ("boolean" != typeof a)
            throw new Error("'legacy' must be a boolean.");
          if (!0 !== a)
            throw new Error(
              'The new decorators proposal is not supported yet. You must pass the `"legacy": true` option to @gerhobbelt/babel-plugin-syntax-decorators'
            );
          var r = t.decoratorsBeforeExport;
          if (void 0 === r) {
            if (!a)
              throw new Error(
                "The '@gerhobbelt/babel-plugin-syntax-decorators' plugin requires a 'decoratorsBeforeExport' option, whose value must be a boolean."
              );
          } else {
            if (a)
              throw new Error(
                "'decoratorsBeforeExport' can't be used with legacy decorators."
              );
            if ("boolean" != typeof r)
              throw new Error("'decoratorsBeforeExport' must be a boolean.");
          }
          return {
            manipulateOptions: function(e, t) {
              t.plugins.push(
                a
                  ? "decorators-legacy"
                  : ["decorators", { decoratorsBeforeExport: r }]
              );
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("doExpressions");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("exportDefaultFrom");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("exportNamespaceFrom");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("functionBind");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("functionSent");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.some(function(e) {
                  return "typescript" === (Array.isArray(e) ? e[0] : e);
                }) || t.plugins.push("jsx");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("objectRestSpread");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("optionalCatchBinding");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = t.proposals = void 0);
        var r = ["minimal"];
        t.proposals = r;
        var i = (0, a().declare)(function(e, t) {
          var n = t.proposal;
          if ((e.assertVersion(7), "string" != typeof n || !r.includes(n)))
            throw new Error(
              "The pipeline operator plugin requires a 'proposal' option.'proposal' must be one of: " +
                r.join(", ") +
                ". More details: https://babeljs.io/docs/en/next/babel-plugin-proposal-pipeline-operator"
            );
          return {
            manipulateOptions: function(e, t) {
              t.plugins.push(["pipelineOperator", { proposal: n }]);
            },
          };
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r(e, n) {
          var a = [];
          e.forEach(function(e, t) {
            (Array.isArray(e) ? e[0] : e) === n && a.unshift(t);
          });
          for (var t = 0; t < a.length; t++) {
            var r = a[t];
            e.splice(r, 1);
          }
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e, t) {
          var a = t.isTSX;
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                var n = t.plugins;
                r(n, "flow"),
                  r(n, "jsx"),
                  t.plugins.push(
                    "typescript",
                    "objectRestSpread",
                    "classProperties"
                  ),
                  a && t.plugins.push("jsx");
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = o(n(233));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = o(n(94));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            e.traverse(s, { wrapAwait: t.wrapAwait });
            var n = (function(e) {
              if (e.parentPath.isCallExpression({ callee: e.node })) return !0;
              var t = e.parentPath;
              if (
                t.isMemberExpression() &&
                i().isIdentifier(t.node.property, { name: "bind" })
              ) {
                var n = t.parentPath;
                return (
                  n.isCallExpression() &&
                  1 === n.node.arguments.length &&
                  i().isThisExpression(n.node.arguments[0]) &&
                  n.parentPath.isCallExpression({ callee: n.node })
                );
              }
              return !1;
            })(e);
            (e.node.async = !1),
              (e.node.generator = !0),
              (0, a().default)(e, i().cloneNode(t.wrapAsync)),
              e.isObjectMethod() ||
                e.isClassMethod() ||
                e.parentPath.isObjectProperty() ||
                e.parentPath.isClassProperty() ||
                n ||
                !e.isExpression() ||
                (0, r().default)(e);
          });
        var s = {
          Function: function(e) {
            e.skip();
          },
          AwaitExpression: function(e, t) {
            var n = t.wrapAwait,
              a = e.get("argument");
            e.parentPath.isYieldExpression()
              ? e.replaceWith(a.node)
              : e.replaceWith(
                  i().yieldExpression(
                    n ? i().callExpression(i().cloneNode(n), [a.node]) : a.node
                  )
                );
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function u() {
          var e = r(n(23));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function a() {
          var e = r(n(24));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n, a, r, i, o;
            e.isClassMethod() || e.isObjectMethod()
              ? ((a = t),
                (r = (n = e).node),
                (i = r.body),
                (o = l().functionExpression(
                  null,
                  [],
                  l().blockStatement(i.body),
                  !0
                )),
                (i.body = [
                  l().returnStatement(
                    l().callExpression(l().callExpression(a, [o]), [])
                  ),
                ]),
                (r.async = !1),
                (r.generator = !1),
                n
                  .get("body.body.0.argument.callee.arguments.0")
                  .unwrapFunctionEnvironment())
              : (function(n, e) {
                  var t = n.node,
                    a = n.isFunctionDeclaration(),
                    r = t.id,
                    i = a ? p : c;
                  n.isArrowFunctionExpression() &&
                    n.arrowFunctionToExpression(),
                    (t.id = null),
                    a && (t.type = "FunctionExpression");
                  var o = l().callExpression(e, [t]),
                    s = i({
                      NAME: r || null,
                      REF: n.scope.generateUidIdentifier(r ? r.name : "ref"),
                      FUNCTION: o,
                      PARAMS: t.params.reduce(
                        function(e, t) {
                          return (
                            (e.done =
                              e.done ||
                              l().isAssignmentPattern(t) ||
                              l().isRestElement(t)),
                            e.done ||
                              e.params.push(n.scope.generateUidIdentifier("x")),
                            e
                          );
                        },
                        { params: [], done: !1 }
                      ).params,
                    });
                  if (a) n.replaceWith(s[0]), n.insertAfter(s[1]);
                  else {
                    var d = s.callee.body.body[1].argument;
                    r ||
                      (0, u().default)({
                        node: d,
                        parent: n.parent,
                        scope: n.scope,
                      }),
                      !d || d.id || t.params.length
                        ? n.replaceWith(s)
                        : n.replaceWith(o);
                  }
                })(e, t);
          });
        var c = a().default.expression(
            "\n  (function () {\n    var REF = FUNCTION;\n    return function NAME(PARAMS) {\n      return REF.apply(this, arguments);\n    };\n  })()\n"
          ),
          p = (0, a().default)(
            "\n  function NAME(PARAMS) { return REF.apply(this, arguments); }\n  function REF() {\n    REF = FUNCTION;\n    return REF.apply(this, arguments);\n  }\n"
          );
      },
      function(e, D, p) {
        (function(a, r) {
          var s = /%[sdj%]/g;
          (D.format = function(e) {
            if (!A(e)) {
              for (var t = [], n = 0; n < arguments.length; n++)
                t.push(d(arguments[n]));
              return t.join(" ");
            }
            n = 1;
            for (
              var a = arguments,
                r = a.length,
                i = String(e).replace(s, function(e) {
                  if ("%%" === e) return "%";
                  if (r <= n) return e;
                  switch (e) {
                    case "%s":
                      return String(a[n++]);
                    case "%d":
                      return Number(a[n++]);
                    case "%j":
                      try {
                        return JSON.stringify(a[n++]);
                      } catch (e) {
                        return "[Circular]";
                      }
                    default:
                      return e;
                  }
                }),
                o = a[n];
              n < r;
              o = a[++n]
            )
              E(o) || !l(o) ? (i += " " + o) : (i += " " + d(o));
            return i;
          }),
            (D.deprecate = function(e, t) {
              if (S(a.process))
                return function() {
                  return D.deprecate(e, t).apply(this, arguments);
                };
              if (!0 === r.noDeprecation) return e;
              var n = !1;
              return function() {
                if (!n) {
                  if (r.throwDeprecation) throw new Error(t);
                  r.traceDeprecation ? console.trace(t) : console.error(t),
                    (n = !0);
                }
                return e.apply(this, arguments);
              };
            });
          var e,
            i = {};
          function d(e, t) {
            var n = { seen: [], stylize: u };
            return (
              3 <= arguments.length && (n.depth = arguments[2]),
              4 <= arguments.length && (n.colors = arguments[3]),
              b(t) ? (n.showHidden = t) : t && D._extend(n, t),
              S(n.showHidden) && (n.showHidden = !1),
              S(n.depth) && (n.depth = 2),
              S(n.colors) && (n.colors = !1),
              S(n.customInspect) && (n.customInspect = !0),
              n.colors && (n.stylize = o),
              R(n, e, n.depth)
            );
          }
          function o(e, t) {
            var n = d.styles[t];
            return n
              ? "[" + d.colors[n][0] + "m" + e + "[" + d.colors[n][1] + "m"
              : e;
          }
          function u(e, t) {
            return e;
          }
          function R(t, n, a) {
            if (
              t.customInspect &&
              n &&
              C(n.inspect) &&
              n.inspect !== D.inspect &&
              (!n.constructor || n.constructor.prototype !== n)
            ) {
              var e = n.inspect(a, t);
              return A(e) || (e = R(t, e, a)), e;
            }
            var r = (function(e, t) {
              if (S(t)) return e.stylize("undefined", "undefined");
              if (A(t)) {
                var n =
                  "'" +
                  JSON.stringify(t)
                    .replace(/^"|"$/g, "")
                    .replace(/'/g, "\\'")
                    .replace(/\\"/g, '"') +
                  "'";
                return e.stylize(n, "string");
              }
              return x(t)
                ? e.stylize("" + t, "number")
                : b(t)
                  ? e.stylize("" + t, "boolean")
                  : E(t)
                    ? e.stylize("null", "null")
                    : void 0;
            })(t, n);
            if (r) return r;
            var i,
              o = Object.keys(n),
              s = ((i = {}),
              o.forEach(function(e, t) {
                i[e] = !0;
              }),
              i);
            if (
              (t.showHidden && (o = Object.getOwnPropertyNames(n)),
              P(n) &&
                (0 <= o.indexOf("message") || 0 <= o.indexOf("description")))
            )
              return y(n);
            if (0 === o.length) {
              if (C(n)) {
                var d = n.name ? ": " + n.name : "";
                return t.stylize("[Function" + d + "]", "special");
              }
              if (_(n))
                return t.stylize(RegExp.prototype.toString.call(n), "regexp");
              if (T(n))
                return t.stylize(Date.prototype.toString.call(n), "date");
              if (P(n)) return y(n);
            }
            var u,
              l,
              c,
              p,
              g = "",
              f = !1,
              h = ["{", "}"];
            return (
              v(n) && ((f = !0), (h = ["[", "]"])),
              C(n) && (g = " [Function" + (n.name ? ": " + n.name : "") + "]"),
              _(n) && (g = " " + RegExp.prototype.toString.call(n)),
              T(n) && (g = " " + Date.prototype.toUTCString.call(n)),
              P(n) && (g = " " + y(n)),
              0 !== o.length || (f && 0 != n.length)
                ? a < 0
                  ? _(n)
                    ? t.stylize(RegExp.prototype.toString.call(n), "regexp")
                    : t.stylize("[Object]", "special")
                  : (t.seen.push(n),
                    (u = f
                      ? (function(t, n, a, r, e) {
                          for (var i = [], o = 0, s = n.length; o < s; ++o)
                            w(n, String(o))
                              ? i.push(m(t, n, a, r, String(o), !0))
                              : i.push("");
                          return (
                            e.forEach(function(e) {
                              e.match(/^\d+$/) || i.push(m(t, n, a, r, e, !0));
                            }),
                            i
                          );
                        })(t, n, a, s, o)
                      : o.map(function(e) {
                          return m(t, n, a, s, e, f);
                        })),
                    t.seen.pop(),
                    (c = g),
                    (p = h),
                    60 <
                    (l = u).reduce(function(e, t) {
                      return (
                        t.indexOf("\n"),
                        e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
                      );
                    }, 0)
                      ? p[0] +
                        ("" === c ? "" : c + "\n ") +
                        " " +
                        l.join(",\n  ") +
                        " " +
                        p[1]
                      : p[0] + c + " " + l.join(", ") + " " + p[1])
                : h[0] + g + h[1]
            );
          }
          function y(e) {
            return "[" + Error.prototype.toString.call(e) + "]";
          }
          function m(e, t, n, a, r, i) {
            var o, s, d;
            if (
              ((d = Object.getOwnPropertyDescriptor(t, r) || { value: t[r] })
                .get
                ? (s = d.set
                    ? e.stylize("[Getter/Setter]", "special")
                    : e.stylize("[Getter]", "special"))
                : d.set && (s = e.stylize("[Setter]", "special")),
              w(a, r) || (o = "[" + r + "]"),
              s ||
                (e.seen.indexOf(d.value) < 0
                  ? -1 <
                      (s = E(n)
                        ? R(e, d.value, null)
                        : R(e, d.value, n - 1)).indexOf("\n") &&
                    (s = i
                      ? s
                          .split("\n")
                          .map(function(e) {
                            return "  " + e;
                          })
                          .join("\n")
                          .substr(2)
                      : "\n" +
                        s
                          .split("\n")
                          .map(function(e) {
                            return "   " + e;
                          })
                          .join("\n"))
                  : (s = e.stylize("[Circular]", "special"))),
              S(o))
            ) {
              if (i && r.match(/^\d+$/)) return s;
              o = (o = JSON.stringify("" + r)).match(
                /^"([a-zA-Z_][a-zA-Z_0-9]*)"$/
              )
                ? ((o = o.substr(1, o.length - 2)), e.stylize(o, "name"))
                : ((o = o
                    .replace(/'/g, "\\'")
                    .replace(/\\"/g, '"')
                    .replace(/(^"|"$)/g, "'")),
                  e.stylize(o, "string"));
            }
            return o + ": " + s;
          }
          function v(e) {
            return Array.isArray(e);
          }
          function b(e) {
            return "boolean" == typeof e;
          }
          function E(e) {
            return null === e;
          }
          function x(e) {
            return "number" == typeof e;
          }
          function A(e) {
            return "string" == typeof e;
          }
          function S(e) {
            return void 0 === e;
          }
          function _(e) {
            return l(e) && "[object RegExp]" === t(e);
          }
          function l(e) {
            return "object" == typeof e && null !== e;
          }
          function T(e) {
            return l(e) && "[object Date]" === t(e);
          }
          function P(e) {
            return l(e) && ("[object Error]" === t(e) || e instanceof Error);
          }
          function C(e) {
            return "function" == typeof e;
          }
          function t(e) {
            return Object.prototype.toString.call(e);
          }
          function n(e) {
            return e < 10 ? "0" + e.toString(10) : e.toString(10);
          }
          (D.debuglog = function(t) {
            if ((S(e) && (e = ""), (t = t.toUpperCase()), !i[t]))
              if (new RegExp("\\b" + t + "\\b", "i").test(e)) {
                var n = r.pid;
                i[t] = function() {
                  var e = D.format.apply(D, arguments);
                  console.error("%s %d: %s", t, n, e);
                };
              } else i[t] = function() {};
            return i[t];
          }),
            ((D.inspect = d).colors = {
              bold: [1, 22],
              italic: [3, 23],
              underline: [4, 24],
              inverse: [7, 27],
              white: [37, 39],
              grey: [90, 39],
              black: [30, 39],
              blue: [34, 39],
              cyan: [36, 39],
              green: [32, 39],
              magenta: [35, 39],
              red: [31, 39],
              yellow: [33, 39],
            }),
            (d.styles = {
              special: "cyan",
              number: "yellow",
              boolean: "yellow",
              undefined: "grey",
              null: "bold",
              string: "green",
              date: "magenta",
              regexp: "red",
            }),
            (D.isArray = v),
            (D.isBoolean = b),
            (D.isNull = E),
            (D.isNullOrUndefined = function(e) {
              return null == e;
            }),
            (D.isNumber = x),
            (D.isString = A),
            (D.isSymbol = function(e) {
              return "symbol" == typeof e;
            }),
            (D.isUndefined = S),
            (D.isRegExp = _),
            (D.isObject = l),
            (D.isDate = T),
            (D.isError = P),
            (D.isFunction = C),
            (D.isPrimitive = function(e) {
              return (
                null === e ||
                "boolean" == typeof e ||
                "number" == typeof e ||
                "string" == typeof e ||
                "symbol" == typeof e ||
                void 0 === e
              );
            }),
            (D.isBuffer = p(517));
          var c = [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ];
          function w(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
          }
          (D.log = function() {
            var e, t;
            console.log(
              "%s - %s",
              ((e = new Date()),
              (t = [n(e.getHours()), n(e.getMinutes()), n(e.getSeconds())].join(
                ":"
              )),
              [e.getDate(), c[e.getMonth()], t].join(" ")),
              D.format.apply(D, arguments)
            );
          }),
            (D.inherits = p(518)),
            (D._extend = function(e, t) {
              if (!t || !l(t)) return e;
              for (var n = Object.keys(t), a = n.length; a--; )
                e[n[a]] = t[n[a]];
              return e;
            });
        }.call(this, p(21), p(7)));
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t = e.node.sourceType;
            if ("module" !== t && "script" !== t)
              throw e.buildCodeFrameError(
                'Unknown sourceType "' + t + '", cannot transform.'
              );
            return "module" === e.node.sourceType;
          });
      },
      function(e, t, n) {
        "use strict";
        function p() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            e.traverse(t, Object.assign({}, r, n, { memoiser: new a() }));
          });
        var a = (function() {
            function e() {
              this._map = new WeakMap();
            }
            var t = e.prototype;
            return (
              (t.has = function(e) {
                return this._map.has(e);
              }),
              (t.get = function(e) {
                if (this.has(e)) {
                  var t = this._map.get(e),
                    n = t.value;
                  return (
                    t.count--,
                    0 === t.count ? p().assignmentExpression("=", n, e) : n
                  );
                }
              }),
              (t.set = function(e, t, n) {
                return this._map.set(e, { count: n, value: t });
              }),
              e
            );
          })(),
          r = {
            memoise: function() {},
            handle: function(e) {
              var t = e.node,
                n = e.parent,
                a = e.parentPath;
              if (a.isUpdateExpression({ argument: t })) {
                var r = n.operator,
                  i = n.prefix;
                this.memoise(e, 2);
                var o = p().binaryExpression(
                  r[0],
                  p().unaryExpression("+", this.get(e)),
                  p().numericLiteral(1)
                );
                if (i) a.replaceWith(this.set(e, o));
                else {
                  var s = e.scope,
                    d = s.generateUidIdentifierBasedOnNode(t);
                  s.push({ id: d }),
                    (o.left = p().assignmentExpression(
                      "=",
                      p().cloneNode(d),
                      o.left
                    )),
                    a.replaceWith(
                      p().sequenceExpression([this.set(e, o), p().cloneNode(d)])
                    );
                }
              } else {
                if (a.isAssignmentExpression({ left: t })) {
                  var u = n.operator,
                    l = n.right;
                  return (
                    "=" !== u &&
                      (this.memoise(e, 2),
                      (l = p().binaryExpression(
                        u.slice(0, -1),
                        this.get(e),
                        l
                      ))),
                    void a.replaceWith(this.set(e, l))
                  );
                }
                if (a.isCallExpression({ callee: t })) {
                  var c = n.arguments;
                  a.replaceWith(this.call(e, c));
                } else e.replaceWith(this.get(e));
              }
            },
          };
      },
      function(e, t, n) {
        "use strict";
        function p() {
          var e = a(n(23));
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        function g() {
          var e = a(n(529));
          return (
            (g = function() {
              return e;
            }),
            e
          );
        }
        function f() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function r(n) {
          var i = f().objectExpression([]);
          return (
            Object.keys(n).forEach(function(e) {
              var a = n[e],
                r = f().objectExpression([]),
                t = f().objectProperty(a._key, r, a._computed);
              Object.keys(a).forEach(function(e) {
                var t = a[e];
                if ("_" !== e[0]) {
                  var n = f().objectProperty(f().identifier(e), t);
                  f().inheritsComments(n, t),
                    f().removeComments(t),
                    r.properties.push(n);
                }
              }),
                i.properties.push(t);
            }),
            i
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.push = function(e, t, n, a, r) {
            var i,
              o,
              s = f().toKeyAlias(t),
              d = {};
            if (
              ((0, g().default)(e, s) && (d = e[s]),
              ((e[s] = d)._inherits = d._inherits || []),
              d._inherits.push(t),
              (d._key = t.key),
              t.computed && (d._computed = !0),
              t.decorators)
            ) {
              var u = (d.decorators = d.decorators || f().arrayExpression([]));
              u.elements = u.elements.concat(
                t.decorators
                  .map(function(e) {
                    return e.expression;
                  })
                  .reverse()
              );
            }
            if (d.value || d.initializer)
              throw a.buildCodeFrameError(t, "Key conflict with sibling node");
            (f().isObjectProperty(t) ||
              f().isObjectMethod(t) ||
              f().isClassMethod(t)) &&
              (i = f().toComputedKey(t, t.key)),
              f().isProperty(t)
                ? (o = t.value)
                : (f().isObjectMethod(t) || f().isClassMethod(t)) &&
                  ((o = f().functionExpression(
                    null,
                    t.params,
                    t.body,
                    t.generator,
                    t.async
                  )).returnType = t.returnType);
            var l,
              c = ((l = t),
              (!f().isClassMethod(l) && !f().isObjectMethod(l)) ||
              ("get" !== l.kind && "set" !== l.kind)
                ? "value"
                : l.kind);
            return (
              (n && "value" === c) || (n = c),
              r &&
                f().isStringLiteral(i) &&
                ("value" === n || "initializer" === n) &&
                f().isFunctionExpression(o) &&
                (o = (0, p().default)({ id: i, node: o, scope: r })),
              o && (f().inheritsComments(o, t), (d[n] = o)),
              d
            );
          }),
          (t.hasComputed = function(e) {
            for (var t in e) if (e[t]._computed) return !0;
            return !1;
          }),
          (t.toComputedObjectFromClass = function(e) {
            for (
              var t = f().arrayExpression([]), n = 0;
              n < e.properties.length;
              n++
            ) {
              var a = e.properties[n],
                r = a.value;
              r.properties.unshift(
                f().objectProperty(f().identifier("key"), f().toComputedKey(a))
              ),
                t.elements.push(r);
            }
            return t;
          }),
          (t.toClassObject = r),
          (t.toDefineObject = function(n) {
            return (
              Object.keys(n).forEach(function(e) {
                var t = n[e];
                t.value && (t.writable = f().booleanLiteral(!0)),
                  (t.configurable = f().booleanLiteral(!0)),
                  (t.enumerable = f().booleanLiteral(!0));
              }),
              r(n)
            );
          });
      },
      function(e, t, n) {
        var a = n(51)(n(931));
        e.exports = a;
      },
      function(e, t, n) {
        "use strict";
        function u() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            e.traverse(a, {
              scope: e.scope,
              bindingNames: t,
              seen: new WeakSet(),
            });
          });
        var a = {
          UpdateExpression: {
            exit: function(e) {
              var t = this.scope,
                n = this.bindingNames,
                a = e.get("argument");
              if (a.isIdentifier()) {
                var r = a.node.name;
                if (n.has(r) && t.getBinding(r) === e.scope.getBinding(r))
                  if (
                    e.parentPath.isExpressionStatement() &&
                    !e.isCompletionRecord()
                  ) {
                    var i = "++" == e.node.operator ? "+=" : "-=";
                    e.replaceWith(
                      u().assignmentExpression(i, a.node, u().numericLiteral(1))
                    );
                  } else if (e.node.prefix)
                    e.replaceWith(
                      u().assignmentExpression(
                        "=",
                        u().identifier(r),
                        u().binaryExpression(
                          e.node.operator[0],
                          u().unaryExpression("+", a.node),
                          u().numericLiteral(1)
                        )
                      )
                    );
                  else {
                    var o = e.scope.generateUidIdentifierBasedOnNode(
                        a.node,
                        "old"
                      ),
                      s = o.name;
                    e.scope.push({ id: o });
                    var d = u().binaryExpression(
                      e.node.operator[0],
                      u().identifier(s),
                      u().numericLiteral(1)
                    );
                    e.replaceWith(
                      u().sequenceExpression([
                        u().assignmentExpression(
                          "=",
                          u().identifier(s),
                          u().unaryExpression("+", a.node)
                        ),
                        u().assignmentExpression("=", u().cloneNode(a.node), d),
                        u().identifier(s),
                      ])
                    );
                  }
              }
            },
          },
          AssignmentExpression: {
            exit: function(e) {
              var t = this.scope,
                n = this.seen,
                a = this.bindingNames;
              if ("=" !== e.node.operator && !n.has(e.node)) {
                n.add(e.node);
                var r = e.get("left");
                if (r.isIdentifier()) {
                  var i = r.node.name;
                  a.has(i) &&
                    t.getBinding(i) === e.scope.getBinding(i) &&
                    ((e.node.right = u().binaryExpression(
                      e.node.operator.slice(0, -1),
                      u().cloneNode(e.node.left),
                      e.node.right
                    )),
                    (e.node.operator = "="));
                }
              }
            },
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            void 0 === n && (n = "var"), e.traverse(a, { kind: n, emit: t });
          });
        var a = {
          Scope: function(e, t) {
            "let" === t.kind && e.skip();
          },
          Function: function(e) {
            e.skip();
          },
          VariableDeclaration: function(e, t) {
            if (!t.kind || e.node.kind === t.kind) {
              var n,
                a = [],
                r = e.get("declarations"),
                i = Array.isArray(r),
                o = 0;
              for (r = i ? r : r[Symbol.iterator](); ; ) {
                var s;
                if (i) {
                  if (o >= r.length) break;
                  s = r[o++];
                } else {
                  if ((o = r.next()).done) break;
                  s = o.value;
                }
                var d = s;
                for (var u in ((n = d.node.id),
                d.node.init &&
                  a.push(
                    l().expressionStatement(
                      l().assignmentExpression("=", d.node.id, d.node.init)
                    )
                  ),
                d.getBindingIdentifiers()))
                  t.emit(l().identifier(u), u, null !== d.node.init);
              }
              e.parentPath.isFor({ left: e.node })
                ? e.replaceWith(n)
                : e.replaceWithMultiple(a);
            }
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = o(n(231));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function y() {
          var e = n(3);
          return (
            (y = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = o(n(942));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function d(e) {
          switch (e.parent.type) {
            case "TSTypeReference":
            case "TSQualifiedName":
            case "TSExpressionWithTypeArguments":
            case "TSTypeQuery":
              return !0;
            default:
              return !1;
          }
        }
        var s = (0, a().declare)(function(e, t) {
          var n = t.jsxPragma,
            s = void 0 === n ? "React" : n;
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                Pattern: a,
                Identifier: a,
                RestElement: a,
                Program: function(e, t) {
                  var n = (t.programPath = e).get("body"),
                    a = Array.isArray(n),
                    r = 0;
                  for (n = a ? n : n[Symbol.iterator](); ; ) {
                    var i;
                    if (a) {
                      if (r >= n.length) break;
                      i = n[r++];
                    } else {
                      if ((r = n.next()).done) break;
                      i = r.value;
                    }
                    var o = i;
                    if (y().types.isImportDeclaration(o)) {
                      if (0 === o.node.specifiers.length) return;
                      var s = !0,
                        d = [],
                        u = o.node.specifiers,
                        l = Array.isArray(u),
                        c = 0;
                      for (u = l ? u : u[Symbol.iterator](); ; ) {
                        var p;
                        if (l) {
                          if (c >= u.length) break;
                          p = u[c++];
                        } else {
                          if ((c = u.next()).done) break;
                          p = c.value;
                        }
                        var g = p,
                          f = o.scope.getBinding(g.local.name);
                        f && R(f, t.programPath) ? d.push(f.path) : (s = !1);
                      }
                      if (s) o.remove();
                      else for (var h = 0; h < d.length; h++) d[h].remove();
                    }
                  }
                },
                TSDeclareFunction: function(e) {
                  e.remove();
                },
                TSDeclareMethod: function(e) {
                  e.remove();
                },
                VariableDeclaration: function(e) {
                  e.node.declare && e.remove();
                },
                VariableDeclarator: function(e) {
                  var t = e.node;
                  t.definite && (t.definite = null);
                },
                ClassMethod: function(a) {
                  var e = a.node;
                  if (
                    (e.accessibility && (e.accessibility = null),
                    e.abstract && (e.abstract = null),
                    e.optional && (e.optional = null),
                    "constructor" === e.kind)
                  ) {
                    var t = [],
                      n = e.params,
                      r = Array.isArray(n),
                      i = 0;
                    for (n = r ? n : n[Symbol.iterator](); ; ) {
                      var o;
                      if (r) {
                        if (i >= n.length) break;
                        o = n[i++];
                      } else {
                        if ((i = n.next()).done) break;
                        o = i.value;
                      }
                      var s = o;
                      "TSParameterProperty" === s.type && t.push(s.parameter);
                    }
                    if (t.length) {
                      var d = t.map(function(e) {
                          var t;
                          if (y().types.isIdentifier(e)) t = e.name;
                          else {
                            if (
                              !y().types.isAssignmentPattern(e) ||
                              !y().types.isIdentifier(e.left)
                            )
                              throw a.buildCodeFrameError(
                                "Parameter properties can not be destructuring patterns."
                              );
                            t = e.left.name;
                          }
                          var n = y().types.assignmentExpression(
                            "=",
                            y().types.memberExpression(
                              y().types.thisExpression(),
                              y().types.identifier(t)
                            ),
                            y().types.identifier(t)
                          );
                          return y().types.expressionStatement(n);
                        }),
                        u = e.body.body,
                        l = u[0],
                        c =
                          void 0 !== l &&
                          y().types.isExpressionStatement(l) &&
                          y().types.isCallExpression(l.expression) &&
                          y().types.isSuper(l.expression.callee);
                      e.body.body = c ? [l].concat(d, u.slice(1)) : d.concat(u);
                    }
                  }
                },
                TSParameterProperty: function(e) {
                  e.replaceWith(e.node.parameter);
                },
                ClassProperty: function(e) {
                  var t = e.node;
                  t.accessibility && (t.accessibility = null),
                    t.abstract && (t.abstract = null),
                    t.readonly && (t.readonly = null),
                    t.optional && (t.optional = null),
                    t.definite && (t.definite = null),
                    t.typeAnnotation && (t.typeAnnotation = null);
                },
                TSIndexSignature: function(e) {
                  e.remove();
                },
                ClassDeclaration: function(e) {
                  var t = e.node;
                  t.declare ? e.remove() : t.abstract && (t.abstract = null);
                },
                Class: function(e) {
                  var t = e.node;
                  t.typeParameters && (t.typeParameters = null),
                    t.superTypeParameters && (t.superTypeParameters = null),
                    t.implements && (t.implements = null),
                    e.get("body.body").forEach(function(e) {
                      e.isClassProperty() &&
                        ((e.node.typeAnnotation = null),
                        e.node.value || e.node.decorators || e.remove());
                    });
                },
                Function: function(e) {
                  var t = e.node;
                  t.typeParameters && (t.typeParameters = null),
                    t.returnType && (t.returnType = null);
                  var n = t.params[0];
                  n &&
                    y().types.isIdentifier(n) &&
                    "this" === n.name &&
                    t.params.shift();
                },
                TSModuleDeclaration: function(e) {
                  if (!e.node.declare && "StringLiteral" !== e.node.id.type)
                    throw e.buildCodeFrameError(
                      "Namespaces are not supported."
                    );
                  e.remove();
                },
                TSInterfaceDeclaration: function(e) {
                  e.remove();
                },
                TSTypeAliasDeclaration: function(e) {
                  e.remove();
                },
                TSEnumDeclaration: function(e) {
                  (0, i.default)(e, y().types);
                },
                TSImportEqualsDeclaration: function(e) {
                  throw e.buildCodeFrameError(
                    "`import =` is not supported by @gerhobbelt/babel-plugin-transform-typescript\nPlease consider using `import <moduleName> from '<moduleName>';` alongside Typescript's --allowSyntheticDefaultImports option."
                  );
                },
                TSExportAssignment: function(e) {
                  throw e.buildCodeFrameError(
                    "`export =` is not supported by @gerhobbelt/babel-plugin-transform-typescript\nPlease consider using `export <value>;`."
                  );
                },
                TSTypeAssertion: function(e) {
                  e.replaceWith(e.node.expression);
                },
                TSAsExpression: function(e) {
                  e.replaceWith(e.node.expression);
                },
                TSNonNullExpression: function(e) {
                  e.replaceWith(e.node.expression);
                },
                CallExpression: function(e) {
                  e.node.typeParameters = null;
                },
                NewExpression: function(e) {
                  e.node.typeParameters = null;
                },
                JSXOpeningElement: function(e) {
                  e.node.typeParameters = null;
                },
                TaggedTemplateExpression: function(e) {
                  e.node.typeParameters = null;
                },
              },
            }
          );
          function a(e) {
            var t = e.node;
            t.typeAnnotation && (t.typeAnnotation = null),
              y().types.isIdentifier(t) && t.optional && (t.optional = null);
          }
          function R(e, t) {
            var n = e.referencePaths,
              a = Array.isArray(n),
              r = 0;
            for (n = a ? n : n[Symbol.iterator](); ; ) {
              var i;
              if (a) {
                if (r >= n.length) break;
                i = n[r++];
              } else {
                if ((r = n.next()).done) break;
                i = r.value;
              }
              if (!d(i)) return !1;
            }
            if (e.identifier.name !== s) return !0;
            var o = !1;
            return (
              t.traverse({
                JSXElement: function() {
                  o = !0;
                },
                JSXFragment: function() {
                  o = !0;
                },
              }),
              !o
            );
          }
        });
        t.default = s;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(93)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          e.assertVersion(7);
          var l = !1;
          return {
            inherits: r().default,
            visitor: {
              Program: function(e, t) {
                var n = t.file.ast.comments,
                  a = t.opts,
                  r = (l = !1),
                  i = n,
                  o = Array.isArray(i),
                  s = 0;
                for (i = o ? i : i[Symbol.iterator](); ; ) {
                  var d;
                  if (o) {
                    if (s >= i.length) break;
                    d = i[s++];
                  } else {
                    if ((s = i.next()).done) break;
                    d = s.value;
                  }
                  var u = d;
                  0 <= u.value.indexOf("@flow") &&
                    ((r = !0),
                    (u.value = u.value.replace("@flow", "")),
                    u.value.replace(/\*/g, "").trim() || (u.ignore = !0));
                }
                !r && a.requireDirective && (l = !0);
              },
              ImportDeclaration: function(e) {
                if (!l && e.node.specifiers.length) {
                  var n = 0;
                  e.node.specifiers.forEach(function(e) {
                    var t = e.importKind;
                    ("type" !== t && "typeof" !== t) || n++;
                  }),
                    n === e.node.specifiers.length && e.remove();
                }
              },
              Flow: function(e) {
                if (l)
                  throw e.buildCodeFrameError(
                    "A @flow directive is required when using Flow annotations with the `requireDirective` option."
                  );
                e.remove();
              },
              ClassProperty: function(e) {
                l ||
                  ((e.node.variance = null),
                  (e.node.typeAnnotation = null),
                  e.node.value || e.remove());
              },
              ClassPrivateProperty: function(e) {
                l || (e.node.typeAnnotation = null);
              },
              Class: function(e) {
                l ||
                  ((e.node.implements = null),
                  e.get("body.body").forEach(function(e) {
                    e.isClassProperty() &&
                      ((e.node.typeAnnotation = null),
                      e.node.value || e.remove());
                  }));
              },
              AssignmentPattern: function(e) {
                var t = e.node;
                l || (t.left.optional = !1);
              },
              Function: function(e) {
                var t = e.node;
                if (!l) {
                  for (var n = 0; n < t.params.length; n++) {
                    var a = t.params[n];
                    (a.optional = !1),
                      "AssignmentPattern" === a.type && (a.left.optional = !1);
                  }
                  t.predicate = null;
                }
              },
              TypeCastExpression: function(e) {
                if (!l) {
                  for (
                    var t = e.node;
                    (t = t.expression), i().types.isTypeCastExpression(t);

                  );
                  e.replaceWith(t);
                }
              },
              CallExpression: function(e) {
                var t = e.node;
                l || (t.typeArguments = null);
              },
              OptionalCallExpression: function(e) {
                var t = e.node;
                l || (t.typeArguments = null);
              },
              NewExpression: function(e) {
                var t = e.node;
                l || (t.typeArguments = null);
              },
            },
          };
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e,
            t = (e = n(6)) && e.__esModule ? e : { default: e };
          return (
            (s = function() {
              return t;
            }),
            t
          );
        }
        function d() {
          var e = n(3);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          function i(e, t) {
            for (
              var n = t.arguments[0].properties, a = !0, r = 0;
              r < n.length;
              r++
            ) {
              var i = n[r],
                o = d().types.toComputedKey(i);
              if (d().types.isLiteral(o, { value: "displayName" })) {
                a = !1;
                break;
              }
            }
            a &&
              n.unshift(
                d().types.objectProperty(
                  d().types.identifier("displayName"),
                  d().types.stringLiteral(e)
                )
              );
          }
          e.assertVersion(7);
          var a = d().types.buildMatchMemberExpression("React.createClass");
          function o(e) {
            if (!e || !d().types.isCallExpression(e)) return !1;
            if (!a(e.callee) && "createReactClass" !== e.callee.name) return !1;
            var t = e.arguments;
            if (1 !== t.length) return !1;
            var n = t[0];
            return !!d().types.isObjectExpression(n);
          }
          return {
            visitor: {
              ExportDefaultDeclaration: function(e, t) {
                var n = e.node;
                if (o(n.declaration)) {
                  var a = t.filename || "unknown",
                    r = s().default.basename(a, s().default.extname(a));
                  "index" === r &&
                    (r = s().default.basename(s().default.dirname(a))),
                    i(r, n.declaration);
                }
              },
              CallExpression: function(e) {
                var t,
                  n = e.node;
                o(n) &&
                  (e.find(function(e) {
                    if (e.isAssignmentExpression()) t = e.node.left;
                    else if (e.isObjectProperty()) t = e.node.key;
                    else if (e.isVariableDeclarator()) t = e.node.id;
                    else if (e.isStatement()) return !0;
                    if (t) return !0;
                  }),
                  t &&
                    (d().types.isMemberExpression(t) && (t = t.property),
                    d().types.isIdentifier(t) && i(t.name, n)));
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = s(n(227));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = s(n(100));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = n(3);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var d = (0, a().declare)(function(e, f) {
          e.assertVersion(7);
          var t = void 0 === f.throwIfNamespace || !!f.throwIfNamespace,
            h = f.pragma || "React.createElement",
            R = f.pragmaFrag || "React.Fragment",
            y = /\*?\s*@jsx\s+([^\s]+)/,
            m = /\*?\s*@jsxFrag\s+([^\s]+)/,
            v = function(e) {
              return function() {
                return e
                  .split(".")
                  .map(function(e) {
                    return o().types.identifier(e);
                  })
                  .reduce(function(e, t) {
                    return o().types.memberExpression(e, t);
                  });
              };
            },
            n = (0, i().default)({
              pre: function(e) {
                var t = e.tagName,
                  n = e.args;
                o().types.react.isCompatTag(t)
                  ? n.push(o().types.stringLiteral(t))
                  : n.push(e.tagExpr);
              },
              post: function(e, t) {
                e.callee = t.get("jsxIdentifier")();
              },
              throwIfNamespace: t,
            });
          return (
            (n.Program = {
              enter: function(e, t) {
                var n = t.file,
                  a = h,
                  r = R,
                  i = !!f.pragma,
                  o = !!f.pragmaFrag,
                  s = n.ast.comments,
                  d = Array.isArray(s),
                  u = 0;
                for (s = d ? s : s[Symbol.iterator](); ; ) {
                  var l;
                  if (d) {
                    if (u >= s.length) break;
                    l = s[u++];
                  } else {
                    if ((u = s.next()).done) break;
                    l = u.value;
                  }
                  var c = l,
                    p = y.exec(c.value);
                  p && ((a = p[1]), (i = !0));
                  var g = m.exec(c.value);
                  g && ((r = g[1]), (o = !0));
                }
                t.set("jsxIdentifier", v(a)),
                  t.set("jsxFragIdentifier", v(r)),
                  t.set("usedFragment", !1),
                  t.set("pragmaSet", i),
                  t.set("pragmaFragSet", o);
              },
              exit: function(e, t) {
                if (
                  t.get("pragmaSet") &&
                  t.get("usedFragment") &&
                  !t.get("pragmaFragSet")
                )
                  throw new Error(
                    "transform-react-jsx: pragma has been set but pragmafrag has not been set"
                  );
              },
            }),
            (n.JSXAttribute = function(e) {
              o().types.isJSXElement(e.node.value) &&
                (e.node.value = o().types.jsxExpressionContainer(e.node.value));
            }),
            { inherits: r().default, visitor: n }
          );
        });
        t.default = d;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = n(3);
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                JSXOpeningElement: function(e) {
                  var t = e.node,
                    n = r().types.jsxIdentifier("__self"),
                    a = r().types.thisExpression();
                  t.attributes.push(
                    r().types.jsxAttribute(
                      n,
                      r().types.jsxExpressionContainer(a)
                    )
                  );
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function R() {
          var e = n(3);
          return (
            (R = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                JSXOpeningElement: function(e, t) {
                  var n,
                    a,
                    r,
                    i,
                    o,
                    s = R().types.jsxIdentifier("__source"),
                    d = e.container.openingElement.loc;
                  if (d) {
                    for (
                      var u = e.container.openingElement.attributes, l = 0;
                      l < u.length;
                      l++
                    ) {
                      var c = u[l].name;
                      if (c && "__source" === c.name) return;
                    }
                    if (!t.fileNameIdentifier) {
                      var p = t.filename || "",
                        g = e.scope.generateUidIdentifier("_jsxFileName"),
                        f = e.hub.getScope();
                      f && f.push({ id: g, init: R().types.stringLiteral(p) }),
                        (t.fileNameIdentifier = g);
                    }
                    var h = ((n = t.fileNameIdentifier),
                    (a = d.start.line),
                    (r =
                      null != a
                        ? R().types.numericLiteral(a)
                        : R().types.nullLiteral()),
                    (i = R().types.objectProperty(
                      R().types.identifier("fileName"),
                      n
                    )),
                    (o = R().types.objectProperty(
                      R().types.identifier("lineNumber"),
                      r
                    )),
                    R().types.objectExpression([i, o]));
                    u.push(
                      R().types.jsxAttribute(
                        s,
                        R().types.jsxExpressionContainer(h)
                      )
                    );
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        var a,
          C = (a = n(15)) && a.__esModule ? a : { default: a },
          w = r(n(963)),
          D = r(n(964)),
          O = r(n(32));
        function r(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        var i = Object.prototype.hasOwnProperty;
        function o(e) {
          C.default.ok(this instanceof o),
            O.getTypes().assertIdentifier(e),
            (this.nextTempId = 0),
            (this.contextId = e),
            (this.listing = []),
            (this.marked = [!0]),
            (this.insertedLocs = new Set()),
            (this.finalLoc = this.loc()),
            (this.tryEntries = []),
            (this.leapManager = new w.LeapManager(this));
        }
        var s = o.prototype;
        function d(e) {
          return new Error(
            "all declarations should have been transformed into assignments before the Exploder began its work: " +
              JSON.stringify(e)
          );
        }
        (t.Emitter = o),
          (s.loc = function() {
            var e = O.getTypes().numericLiteral(-1);
            return this.insertedLocs.add(e), e;
          }),
          (s.getInsertedLocs = function() {
            return this.insertedLocs;
          }),
          (s.getContextId = function() {
            return O.getTypes().clone(this.contextId);
          }),
          (s.mark = function(e) {
            O.getTypes().assertLiteral(e);
            var t = this.listing.length;
            return (
              -1 === e.value
                ? (e.value = t)
                : C.default.strictEqual(e.value, t),
              (this.marked[t] = !0),
              e
            );
          }),
          (s.emit = function(e) {
            var t = O.getTypes();
            t.isExpression(e) && (e = t.expressionStatement(e)),
              t.assertStatement(e),
              this.listing.push(e);
          }),
          (s.emitAssign = function(e, t) {
            return this.emit(this.assign(e, t)), e;
          }),
          (s.assign = function(e, t) {
            var n = O.getTypes();
            return n.expressionStatement(
              n.assignmentExpression("=", n.cloneDeep(e), t)
            );
          }),
          (s.contextProperty = function(e, t) {
            var n = O.getTypes();
            return n.memberExpression(
              this.getContextId(),
              t ? n.stringLiteral(e) : n.identifier(e),
              !!t
            );
          }),
          (s.stop = function(e) {
            e && this.setReturnValue(e), this.jump(this.finalLoc);
          }),
          (s.setReturnValue = function(e) {
            O.getTypes().assertExpression(e.value),
              this.emitAssign(
                this.contextProperty("rval"),
                this.explodeExpression(e)
              );
          }),
          (s.clearPendingException = function(e, t) {
            var n = O.getTypes();
            n.assertLiteral(e);
            var a = n.callExpression(this.contextProperty("catch", !0), [
              n.clone(e),
            ]);
            t ? this.emitAssign(t, a) : this.emit(a);
          }),
          (s.jump = function(e) {
            this.emitAssign(this.contextProperty("next"), e),
              this.emit(O.getTypes().breakStatement());
          }),
          (s.jumpIf = function(e, t) {
            var n = O.getTypes();
            n.assertExpression(e),
              n.assertLiteral(t),
              this.emit(
                n.ifStatement(
                  e,
                  n.blockStatement([
                    this.assign(this.contextProperty("next"), t),
                    n.breakStatement(),
                  ])
                )
              );
          }),
          (s.jumpIfNot = function(e, t) {
            var n,
              a = O.getTypes();
            a.assertExpression(e),
              a.assertLiteral(t),
              (n =
                a.isUnaryExpression(e) && "!" === e.operator
                  ? e.argument
                  : a.unaryExpression("!", e)),
              this.emit(
                a.ifStatement(
                  n,
                  a.blockStatement([
                    this.assign(this.contextProperty("next"), t),
                    a.breakStatement(),
                  ])
                )
              );
          }),
          (s.makeTempVar = function() {
            return this.contextProperty("t" + this.nextTempId++);
          }),
          (s.getContextFunction = function(e) {
            var t = O.getTypes();
            return t.functionExpression(
              e || null,
              [this.getContextId()],
              t.blockStatement([this.getDispatchLoop()]),
              !1,
              !1
            );
          }),
          (s.getDispatchLoop = function() {
            var n,
              a = this,
              r = O.getTypes(),
              i = [],
              o = !1;
            return (
              a.listing.forEach(function(e, t) {
                a.marked.hasOwnProperty(t) &&
                  (i.push(r.switchCase(r.numericLiteral(t), (n = []))),
                  (o = !1)),
                  o || (n.push(e), r.isCompletionStatement(e) && (o = !0));
              }),
              (this.finalLoc.value = this.listing.length),
              i.push(
                r.switchCase(this.finalLoc, []),
                r.switchCase(r.stringLiteral("end"), [
                  r.returnStatement(
                    r.callExpression(this.contextProperty("stop"), [])
                  ),
                ])
              ),
              r.whileStatement(
                r.numericLiteral(1),
                r.switchStatement(
                  r.assignmentExpression(
                    "=",
                    this.contextProperty("prev"),
                    this.contextProperty("next")
                  ),
                  i
                )
              )
            );
          }),
          (s.getTryLocsList = function() {
            if (0 === this.tryEntries.length) return null;
            var i = O.getTypes(),
              o = 0;
            return i.arrayExpression(
              this.tryEntries.map(function(e) {
                var t = e.firstLoc.value;
                C.default.ok(o <= t, "try entries out of order"), (o = t);
                var n = e.catchEntry,
                  a = e.finallyEntry,
                  r = [e.firstLoc, n ? n.firstLoc : null];
                return (
                  a && ((r[2] = a.firstLoc), (r[3] = a.afterLoc)),
                  i.arrayExpression(
                    r.map(function(e) {
                      return e && i.clone(e);
                    })
                  )
                );
              })
            );
          }),
          (s.explode = function(e, t) {
            var n = O.getTypes(),
              a = e.node;
            if ((n.assertNode(a), n.isDeclaration(a))) throw d(a);
            if (n.isStatement(a)) return this.explodeStatement(e);
            if (n.isExpression(a)) return this.explodeExpression(e, t);
            switch (a.type) {
              case "Program":
                return e.get("body").map(this.explodeStatement, this);
              case "VariableDeclarator":
                throw d(a);
              case "Property":
              case "SwitchCase":
              case "CatchClause":
                throw new Error(
                  a.type + " nodes should be handled by their parents"
                );
              default:
                throw new Error(
                  "unknown Node of type " + JSON.stringify(a.type)
                );
            }
          }),
          (s.explodeStatement = function(n, e) {
            var t,
              a,
              r,
              i = O.getTypes(),
              o = n.node,
              s = this;
            if (
              (i.assertStatement(o),
              e ? i.assertIdentifier(e) : (e = null),
              i.isBlockStatement(o))
            )
              n.get("body").forEach(function(e) {
                s.explodeStatement(e);
              });
            else if (D.containsLeap(o))
              switch (o.type) {
                case "ExpressionStatement":
                  s.explodeExpression(n.get("expression"), !0);
                  break;
                case "LabeledStatement":
                  (a = this.loc()),
                    s.leapManager.withEntry(
                      new w.LabeledEntry(a, o.label),
                      function() {
                        s.explodeStatement(n.get("body"), o.label);
                      }
                    ),
                    s.mark(a);
                  break;
                case "WhileStatement":
                  (t = this.loc()),
                    (a = this.loc()),
                    s.mark(t),
                    s.jumpIfNot(s.explodeExpression(n.get("test")), a),
                    s.leapManager.withEntry(
                      new w.LoopEntry(a, t, e),
                      function() {
                        s.explodeStatement(n.get("body"));
                      }
                    ),
                    s.jump(t),
                    s.mark(a);
                  break;
                case "DoWhileStatement":
                  var d = this.loc(),
                    u = this.loc();
                  (a = this.loc()),
                    s.mark(d),
                    s.leapManager.withEntry(
                      new w.LoopEntry(a, u, e),
                      function() {
                        s.explode(n.get("body"));
                      }
                    ),
                    s.mark(u),
                    s.jumpIf(s.explodeExpression(n.get("test")), d),
                    s.mark(a);
                  break;
                case "ForStatement":
                  r = this.loc();
                  var l = this.loc();
                  (a = this.loc()),
                    o.init && s.explode(n.get("init"), !0),
                    s.mark(r),
                    o.test &&
                      s.jumpIfNot(s.explodeExpression(n.get("test")), a),
                    s.leapManager.withEntry(
                      new w.LoopEntry(a, l, e),
                      function() {
                        s.explodeStatement(n.get("body"));
                      }
                    ),
                    s.mark(l),
                    o.update && s.explode(n.get("update"), !0),
                    s.jump(r),
                    s.mark(a);
                  break;
                case "TypeCastExpression":
                  return s.explodeExpression(n.get("expression"));
                case "ForInStatement":
                  (r = this.loc()), (a = this.loc());
                  var c = s.makeTempVar();
                  s.emitAssign(
                    c,
                    i.callExpression(O.runtimeProperty("keys"), [
                      s.explodeExpression(n.get("right")),
                    ])
                  ),
                    s.mark(r);
                  var p = s.makeTempVar();
                  s.jumpIf(
                    i.memberExpression(
                      i.assignmentExpression(
                        "=",
                        p,
                        i.callExpression(i.cloneDeep(c), [])
                      ),
                      i.identifier("done"),
                      !1
                    ),
                    a
                  ),
                    s.emitAssign(
                      o.left,
                      i.memberExpression(
                        i.cloneDeep(p),
                        i.identifier("value"),
                        !1
                      )
                    ),
                    s.leapManager.withEntry(
                      new w.LoopEntry(a, r, e),
                      function() {
                        s.explodeStatement(n.get("body"));
                      }
                    ),
                    s.jump(r),
                    s.mark(a);
                  break;
                case "BreakStatement":
                  s.emitAbruptCompletion({
                    type: "break",
                    target: s.leapManager.getBreakLoc(o.label),
                  });
                  break;
                case "ContinueStatement":
                  s.emitAbruptCompletion({
                    type: "continue",
                    target: s.leapManager.getContinueLoc(o.label),
                  });
                  break;
                case "SwitchStatement":
                  var g = s.emitAssign(
                    s.makeTempVar(),
                    s.explodeExpression(n.get("discriminant"))
                  );
                  a = this.loc();
                  for (
                    var f = this.loc(),
                      h = f,
                      R = [],
                      y = o.cases || [],
                      m = y.length - 1;
                    0 <= m;
                    --m
                  ) {
                    var v = y[m];
                    i.assertSwitchCase(v),
                      v.test
                        ? (h = i.conditionalExpression(
                            i.binaryExpression("===", i.cloneDeep(g), v.test),
                            (R[m] = this.loc()),
                            h
                          ))
                        : (R[m] = f);
                  }
                  var b = n.get("discriminant");
                  O.replaceWithOrRemove(b, h),
                    s.jump(s.explodeExpression(b)),
                    s.leapManager.withEntry(new w.SwitchEntry(a), function() {
                      n.get("cases").forEach(function(e) {
                        var t = e.key;
                        s.mark(R[t]),
                          e.get("consequent").forEach(function(e) {
                            s.explodeStatement(e);
                          });
                      });
                    }),
                    s.mark(a),
                    -1 === f.value &&
                      (s.mark(f), C.default.strictEqual(a.value, f.value));
                  break;
                case "IfStatement":
                  var E = o.alternate && this.loc();
                  (a = this.loc()),
                    s.jumpIfNot(s.explodeExpression(n.get("test")), E || a),
                    s.explodeStatement(n.get("consequent")),
                    E &&
                      (s.jump(a),
                      s.mark(E),
                      s.explodeStatement(n.get("alternate"))),
                    s.mark(a);
                  break;
                case "ReturnStatement":
                  s.emitAbruptCompletion({
                    type: "return",
                    value: s.explodeExpression(n.get("argument")),
                  });
                  break;
                case "WithStatement":
                  throw new Error(
                    "WithStatement not supported in generator functions."
                  );
                case "TryStatement":
                  a = this.loc();
                  var x = o.handler,
                    A = x && this.loc(),
                    S = A && new w.CatchEntry(A, x.param),
                    _ = o.finalizer && this.loc(),
                    T = _ && new w.FinallyEntry(_, a),
                    P = new w.TryEntry(s.getUnmarkedCurrentLoc(), S, T);
                  s.tryEntries.push(P),
                    s.updateContextPrevLoc(P.firstLoc),
                    s.leapManager.withEntry(P, function() {
                      if ((s.explodeStatement(n.get("block")), A)) {
                        _ ? s.jump(_) : s.jump(a),
                          s.updateContextPrevLoc(s.mark(A));
                        var e = n.get("handler.body"),
                          t = s.makeTempVar();
                        s.clearPendingException(P.firstLoc, t),
                          e.traverse(F, {
                            getSafeParam: function() {
                              return i.cloneDeep(t);
                            },
                            catchParamName: x.param.name,
                          }),
                          s.leapManager.withEntry(S, function() {
                            s.explodeStatement(e);
                          });
                      }
                      _ &&
                        (s.updateContextPrevLoc(s.mark(_)),
                        s.leapManager.withEntry(T, function() {
                          s.explodeStatement(n.get("finalizer"));
                        }),
                        s.emit(
                          i.returnStatement(
                            i.callExpression(s.contextProperty("finish"), [
                              T.firstLoc,
                            ])
                          )
                        ));
                    }),
                    s.mark(a);
                  break;
                case "ThrowStatement":
                  s.emit(
                    i.throwStatement(s.explodeExpression(n.get("argument")))
                  );
                  break;
                default:
                  throw new Error(
                    "unknown Statement of type " + JSON.stringify(o.type)
                  );
              }
            else s.emit(o);
          });
        var F = {
          Identifier: function(e, t) {
            e.node.name === t.catchParamName &&
              O.isReference(e) &&
              O.replaceWithOrRemove(e, t.getSafeParam());
          },
          Scope: function(e, t) {
            e.scope.hasOwnBinding(t.catchParamName) && e.skip();
          },
        };
        (s.emitAbruptCompletion = function(e) {
          var t, n;
          ("normal" === (n = (t = e).type)
            ? !i.call(t, "target")
            : "break" === n || "continue" === n
              ? !i.call(t, "value") && O.getTypes().isLiteral(t.target)
              : ("return" === n || "throw" === n) &&
                i.call(t, "value") &&
                !i.call(t, "target")) ||
            C.default.ok(!1, "invalid completion record: " + JSON.stringify(e)),
            C.default.notStrictEqual(
              e.type,
              "normal",
              "normal completions are not abrupt"
            );
          var a = O.getTypes(),
            r = [a.stringLiteral(e.type)];
          "break" === e.type || "continue" === e.type
            ? (a.assertLiteral(e.target),
              (r[1] = this.insertedLocs.has(e.target)
                ? e.target
                : a.cloneDeep(e.target)))
            : ("return" !== e.type && "throw" !== e.type) ||
              (e.value &&
                (a.assertExpression(e.value),
                (r[1] = this.insertedLocs.has(e.value)
                  ? e.value
                  : a.cloneDeep(e.value)))),
            this.emit(
              a.returnStatement(
                a.callExpression(this.contextProperty("abrupt"), r)
              )
            );
        }),
          (s.getUnmarkedCurrentLoc = function() {
            return O.getTypes().numericLiteral(this.listing.length);
          }),
          (s.updateContextPrevLoc = function(e) {
            var t = O.getTypes();
            e
              ? (t.assertLiteral(e),
                -1 === e.value
                  ? (e.value = this.listing.length)
                  : C.default.strictEqual(e.value, this.listing.length))
              : (e = this.getUnmarkedCurrentLoc()),
              this.emitAssign(this.contextProperty("prev"), e);
          }),
          (s.explodeExpression = function(e, t) {
            var r = O.getTypes(),
              n = e.node;
            if (!n) return n;
            r.assertExpression(n);
            var a,
              i,
              o = this;
            function s(e) {
              if ((r.assertExpression(e), !t)) return e;
              o.emit(e);
            }
            if (!D.containsLeap(n)) return s(n);
            var d = D.containsLeap.onlyChildren(n);
            function u(e, t, n) {
              C.default.ok(
                !n || !e,
                "Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?"
              );
              var a = o.explodeExpression(t, n);
              return (
                n ||
                  ((e || (d && !r.isLiteral(a))) &&
                    (a = o.emitAssign(e || o.makeTempVar(), a))),
                a
              );
            }
            switch (n.type) {
              case "MemberExpression":
                return s(
                  r.memberExpression(
                    o.explodeExpression(e.get("object")),
                    n.computed ? u(null, e.get("property")) : n.property,
                    n.computed
                  )
                );
              case "CallExpression":
                var l,
                  c = e.get("callee"),
                  p = e.get("arguments"),
                  g = [],
                  f = !1;
                if (
                  (p.forEach(function(e) {
                    f = f || D.containsLeap(e.node);
                  }),
                  r.isMemberExpression(c.node))
                )
                  if (f) {
                    var h = u(o.makeTempVar(), c.get("object")),
                      R = c.node.computed
                        ? u(null, c.get("property"))
                        : c.node.property;
                    g.unshift(h),
                      (l = r.memberExpression(
                        r.memberExpression(r.cloneDeep(h), R, c.node.computed),
                        r.identifier("call"),
                        !1
                      ));
                  } else l = o.explodeExpression(c);
                else
                  (l = u(null, c)),
                    r.isMemberExpression(l) &&
                      (l = r.sequenceExpression([
                        r.numericLiteral(0),
                        r.cloneDeep(l),
                      ]));
                return (
                  p.forEach(function(e) {
                    g.push(u(null, e));
                  }),
                  s(
                    r.callExpression(
                      l,
                      g.map(function(e) {
                        return r.cloneDeep(e);
                      })
                    )
                  )
                );
              case "NewExpression":
                return s(
                  r.newExpression(
                    u(null, e.get("callee")),
                    e.get("arguments").map(function(e) {
                      return u(null, e);
                    })
                  )
                );
              case "ObjectExpression":
                return s(
                  r.objectExpression(
                    e.get("properties").map(function(e) {
                      return e.isObjectProperty()
                        ? r.objectProperty(
                            e.node.key,
                            u(null, e.get("value")),
                            e.node.computed
                          )
                        : e.node;
                    })
                  )
                );
              case "ArrayExpression":
                return s(
                  r.arrayExpression(
                    e.get("elements").map(function(e) {
                      return u(null, e);
                    })
                  )
                );
              case "SequenceExpression":
                var y = n.expressions.length - 1;
                return (
                  e.get("expressions").forEach(function(e) {
                    e.key === y
                      ? (a = o.explodeExpression(e, t))
                      : o.explodeExpression(e, !0);
                  }),
                  a
                );
              case "LogicalExpression":
                (i = this.loc()), t || (a = o.makeTempVar());
                var m = u(a, e.get("left"));
                return (
                  "&&" === n.operator
                    ? o.jumpIfNot(m, i)
                    : (C.default.strictEqual(n.operator, "||"), o.jumpIf(m, i)),
                  u(a, e.get("right"), t),
                  o.mark(i),
                  a
                );
              case "ConditionalExpression":
                var v = this.loc();
                i = this.loc();
                var b = o.explodeExpression(e.get("test"));
                return (
                  o.jumpIfNot(b, v),
                  t || (a = o.makeTempVar()),
                  u(a, e.get("consequent"), t),
                  o.jump(i),
                  o.mark(v),
                  u(a, e.get("alternate"), t),
                  o.mark(i),
                  a
                );
              case "UnaryExpression":
                return s(
                  r.unaryExpression(
                    n.operator,
                    o.explodeExpression(e.get("argument")),
                    !!n.prefix
                  )
                );
              case "BinaryExpression":
                return s(
                  r.binaryExpression(
                    n.operator,
                    u(null, e.get("left")),
                    u(null, e.get("right"))
                  )
                );
              case "AssignmentExpression":
                if ("=" === n.operator)
                  return s(
                    r.assignmentExpression(
                      n.operator,
                      o.explodeExpression(e.get("left")),
                      o.explodeExpression(e.get("right"))
                    )
                  );
                var E = o.explodeExpression(e.get("left")),
                  x = o.emitAssign(o.makeTempVar(), E);
                return s(
                  r.assignmentExpression(
                    "=",
                    r.cloneDeep(E),
                    r.assignmentExpression(
                      n.operator,
                      r.cloneDeep(x),
                      o.explodeExpression(e.get("right"))
                    )
                  )
                );
              case "UpdateExpression":
                return s(
                  r.updateExpression(
                    n.operator,
                    o.explodeExpression(e.get("argument")),
                    n.prefix
                  )
                );
              case "YieldExpression":
                i = this.loc();
                var A = n.argument && o.explodeExpression(e.get("argument"));
                if (A && n.delegate) {
                  var S = o.makeTempVar(),
                    _ = r.returnStatement(
                      r.callExpression(o.contextProperty("delegateYield"), [
                        A,
                        r.stringLiteral(S.property.name),
                        i,
                      ])
                    );
                  return (_.loc = n.loc), o.emit(_), o.mark(i), S;
                }
                o.emitAssign(o.contextProperty("next"), i);
                var T = r.returnStatement(r.cloneDeep(A) || null);
                return (
                  (T.loc = n.loc),
                  o.emit(T),
                  o.mark(i),
                  o.contextProperty("sent")
                );
              default:
                throw new Error(
                  "unknown Expression of type " + JSON.stringify(n.type)
                );
            }
          });
      },
      function(e, t, n) {
        "use strict";
        var r = Object,
          i = Object.defineProperty,
          a = Object.create;
        function o(t, n, a) {
          if (i)
            try {
              i.call(r, t, n, { value: a });
            } catch (e) {
              t[n] = a;
            }
          else t[n] = a;
        }
        function s(e) {
          return e && (o(e, "call", e.call), o(e, "apply", e.apply)), e;
        }
        s(i), s(a);
        var d = s(Object.prototype.hasOwnProperty),
          u = s(Number.prototype.toString),
          l = s(String.prototype.slice),
          c = function() {};
        function p(e) {
          return a ? a.call(r, e) : ((c.prototype = e || null), new c());
        }
        var g = Math.random,
          f = p(null);
        function h() {
          do {
            var e = ((t = l.call(u.call(g(), 36), 2)),
            (n = void 0),
            ((n = {})[t] = !0),
            Object.keys(n)[0]);
          } while (d.call(f, e));
          var t, n;
          return (f[e] = e);
        }
        t.makeUniqueKey = h;
        var R = Object.getOwnPropertyNames;
        function y(e) {
          return p(null);
        }
        (Object.getOwnPropertyNames = function(e) {
          for (var t = R(e), n = 0, a = 0, r = t.length; n < r; ++n)
            d.call(f, t[n]) || (a < n && (t[a] = t[n]), ++a);
          return (t.length = a), t;
        }),
          (t.makeAccessor = function(r) {
            var t = h(),
              i = p(null);
            function e(e) {
              return (
                d.call(e, t) ||
                  o((n = e), t, function(e, t) {
                    if (e === i) return t ? (a = null) : a || (a = r(n));
                  }),
                e[t](i)
              );
              var n, a;
            }
            return (
              (r = r || y),
              (e.forget = function(e) {
                d.call(e, t) && e[t](i, !0);
              }),
              e
            );
          });
      },
      function(e, t) {
        e.exports = function() {
          var e = Error.prepareStackTrace;
          Error.prepareStackTrace = function(e, t) {
            return t;
          };
          var t = new Error().stack;
          return (Error.prepareStackTrace = e), t[2].getFileName();
        };
      },
      function(e, t, n) {
        var d = n(6),
          u = n(31),
          l = d.parse || n(970);
        e.exports = function(e, t) {
          var n =
              t && t.moduleDirectory
                ? [].concat(t.moduleDirectory)
                : ["node_modules"],
            a = d.resolve(e);
          if (t && !1 === t.preserveSymlinks)
            try {
              a = u.realpathSync(a);
            } catch (e) {
              if ("ENOENT" !== e.code) throw e;
            }
          var r = "/";
          /^([A-Za-z]:)/.test(a) ? (r = "") : /^\\\\/.test(a) && (r = "\\\\");
          for (var i = [a], o = l(a); o.dir !== i[i.length - 1]; )
            i.push(o.dir), (o = l(o.dir));
          var s = i.reduce(function(e, t) {
            return e.concat(
              n.map(function(e) {
                return d.join(r, t, e);
              })
            );
          }, []);
          return t && t.paths ? s.concat(t.paths) : s;
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(977)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          e.assertVersion(7);
          var n = /(\\*)([\u2028\u2029])/g;
          function a(e, t, n) {
            return t.length % 2 == 1
              ? e
              : t + "\\u" + n.charCodeAt(0).toString(16);
          }
          return {
            inherits: r().default,
            visitor: {
              "DirectiveLiteral|StringLiteral": function(e) {
                var t = e.node.extra;
                t && t.raw && (t.raw = t.raw.replace(n, a));
              },
            },
          };
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = r(n(226));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = r(n(233));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = n(3);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          e.assertVersion(7);
          var r = function(e) {
              return (
                d().types.isIdentifier(e.meta, { name: "function" }) &&
                d().types.isIdentifier(e.property, { name: "sent" })
              );
            },
            i = {
              Function: function(e) {
                e.skip();
              },
              YieldExpression: function(e) {
                var t, n;
                (t = e.parent),
                  (n = this.sentId),
                  (d().types.isAssignmentExpression(t) &&
                    d().types.isIdentifier(t.left, { name: n })) ||
                    e.replaceWith(
                      d().types.assignmentExpression(
                        "=",
                        d().types.identifier(this.sentId),
                        e.node
                      )
                    );
              },
              MetaProperty: function(e) {
                r(e.node) && e.replaceWith(d().types.identifier(this.sentId));
              },
            };
          return {
            inherits: o().default,
            visitor: {
              MetaProperty: function(e, t) {
                if (r(e.node)) {
                  var n = e.getFunctionParent();
                  if (!n.node.generator)
                    throw new Error("Parent generator function not found");
                  var a = e.scope.generateUid("function.sent");
                  n.traverse(i, { sentId: a }),
                    n.node.body.body.unshift(
                      d().types.variableDeclaration("let", [
                        d().types.variableDeclarator(
                          d().types.identifier(a),
                          d().types.yieldExpression()
                        ),
                      ])
                    ),
                    (0, s().default)(n, t.addHelper("skipFirstGeneratorNext"));
                }
              },
            },
          };
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(978)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          function t(e) {
            var t = e.node;
            if ("Number" === t.callee.name) {
              var n = t.arguments[0];
              i().types.isStringLiteral(n) &&
                (n.value = n.value.replace(/_/g, ""));
            }
          }
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                CallExpression: t,
                NewExpression: t,
                NumericLiteral: function(e) {
                  var t = e.node.extra;
                  t && /_/.test(t.raw) && (t.raw = t.raw.replace(/_/g, ""));
                },
              },
            }
          );
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(979)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                UnaryExpression: function(e) {
                  var t = e.node,
                    n = t.operator,
                    a = t.argument;
                  if ("throw" === n) {
                    var r = i().types.functionExpression(
                      null,
                      [i().types.identifier("e")],
                      i().types.blockStatement([
                        i().types.throwStatement(i().types.identifier("e")),
                      ])
                    );
                    e.replaceWith(i().types.callExpression(r, [a]));
                  }
                },
              },
            }
          );
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(980)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function p() {
          var e = n(3);
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                AssignmentExpression: function(e) {
                  var t = e.node,
                    n = e.scope,
                    a = t.operator,
                    r = t.left,
                    i = t.right;
                  if ("||=" === a || "&&=" === a || "??=" === a) {
                    var o = p().types.cloneNode(r);
                    if (p().types.isMemberExpression(r)) {
                      var s = r.object,
                        d = r.property,
                        u = r.computed,
                        l = n.maybeGenerateMemoised(s);
                      if (
                        (l &&
                          ((r.object = l),
                          (o.object = p().types.assignmentExpression(
                            "=",
                            p().types.cloneNode(l),
                            s
                          ))),
                        u)
                      ) {
                        var c = n.maybeGenerateMemoised(d);
                        c &&
                          ((r.property = c),
                          (o.property = p().types.assignmentExpression(
                            "=",
                            p().types.cloneNode(c),
                            d
                          )));
                      }
                    }
                    e.replaceWith(
                      p().types.logicalExpression(
                        a.slice(0, -1),
                        o,
                        p().types.assignmentExpression("=", r, i)
                      )
                    );
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(981)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function h() {
          var e = n(3);
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.loose,
            f = void 0 !== n && n;
          return {
            inherits: r().default,
            visitor: {
              "OptionalCallExpression|OptionalMemberExpression": function(e) {
                e.node.optional &&
                  (function(e, t) {
                    for (
                      var n = e.scope, a = [], r = e;
                      r.isOptionalMemberExpression() ||
                      r.isOptionalCallExpression();

                    )
                      (o = r.node).optional && a.push(o),
                        (r = r.isOptionalMemberExpression()
                          ? ((r.node.type = "MemberExpression"),
                            r.get("object"))
                          : ((r.node.type = "CallExpression"),
                            r.get("callee")));
                    for (var i = a.length - 1; 0 <= i; i--) {
                      var o;
                      (o = a[i]).optional = !1;
                      var s = h().types.isCallExpression(o),
                        d = s ? "callee" : "object",
                        u = o[d],
                        l = void 0,
                        c = void 0;
                      if (
                        (f && s
                          ? (c = l = u)
                          : (l = n.maybeGenerateMemoised(u))
                            ? ((c = h().types.assignmentExpression(
                                "=",
                                h().types.cloneNode(l),
                                u
                              )),
                              (o[d] = l))
                            : (c = l = u),
                        s && h().types.isMemberExpression(u))
                      )
                        if (f) o.callee = u;
                        else {
                          var p = u.object,
                            g = n.maybeGenerateMemoised(p);
                          g
                            ? (u.object = h().types.assignmentExpression(
                                "=",
                                g,
                                p
                              ))
                            : (g = p),
                            o.arguments.unshift(h().types.cloneNode(g)),
                            (o.callee = h().types.memberExpression(
                              o.callee,
                              h().types.identifier("call")
                            ));
                        }
                      t.isOptionalCallExpression() &&
                        (t.node.type = "CallExpression"),
                        t.replaceWith(
                          h().types.conditionalExpression(
                            f
                              ? h().types.binaryExpression(
                                  "==",
                                  h().types.cloneNode(c),
                                  h().types.nullLiteral()
                                )
                              : h().types.logicalExpression(
                                  "||",
                                  h().types.binaryExpression(
                                    "===",
                                    h().types.cloneNode(c),
                                    h().types.nullLiteral()
                                  ),
                                  h().types.binaryExpression(
                                    "===",
                                    h().types.cloneNode(l),
                                    n.buildUndefinedNode()
                                  )
                                ),
                            n.buildUndefinedNode(),
                            t.node
                          )
                        ),
                        (t = t.get("alternate"));
                    }
                  })(
                    e,
                    e.find(function(e) {
                      var t = e.parentPath;
                      return !(
                        ("object" == e.key && t.isOptionalMemberExpression()) ||
                        ("callee" == e.key && t.isOptionalCallExpression()) ||
                        ("argument" == e.key &&
                          t.isUnaryExpression({ operator: "delete" }))
                      );
                    })
                  );
              },
            },
          };
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(982)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function o() {
          var e = n(3);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e, t) {
          var n = t.loose,
            i = void 0 !== n && n;
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                LogicalExpression: function(e) {
                  var t = e.node,
                    n = e.scope;
                  if ("??" === t.operator) {
                    var a = n.generateUidIdentifierBasedOnNode(t.left);
                    n.push({ id: a });
                    var r = o().types.assignmentExpression(
                      "=",
                      o().types.cloneNode(a),
                      t.left
                    );
                    e.replaceWith(
                      o().types.conditionalExpression(
                        i
                          ? o().types.binaryExpression(
                              "!=",
                              r,
                              o().types.nullLiteral()
                            )
                          : o().types.logicalExpression(
                              "&&",
                              o().types.binaryExpression(
                                "!==",
                                r,
                                o().types.nullLiteral()
                              ),
                              o().types.binaryExpression(
                                "!==",
                                o().types.cloneNode(a),
                                n.buildUndefinedNode()
                              )
                            ),
                        o().types.cloneNode(a),
                        t.right
                      )
                    );
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a,
          r = (a = n(25)) && a.__esModule ? a : { default: a };
        function s() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        var i = (function() {
          function e(e, t, n, a) {
            (this.queue = null),
              (this.parentPath = a),
              (this.scope = e),
              (this.state = n),
              (this.opts = t);
          }
          var t = e.prototype;
          return (
            (t.shouldVisit = function(e) {
              var t = this.opts;
              if (t.enter || t.exit) return !0;
              if (t[e.type]) return !0;
              var n = s().VISITOR_KEYS[e.type];
              if (!n || !n.length) return !1;
              var a = n,
                r = Array.isArray(a),
                i = 0;
              for (a = r ? a : a[Symbol.iterator](); ; ) {
                var o;
                if (r) {
                  if (i >= a.length) break;
                  o = a[i++];
                } else {
                  if ((i = a.next()).done) break;
                  o = i.value;
                }
                if (e[o]) return !0;
              }
              return !1;
            }),
            (t.create = function(e, t, n, a) {
              return r.default.get({
                parentPath: this.parentPath,
                parent: e,
                container: t,
                key: n,
                listKey: a,
              });
            }),
            (t.maybeQueue = function(e, t) {
              if (this.trap) throw new Error("Infinite cycle detected");
              this.queue &&
                (t ? this.queue.push(e) : this.priorityQueue.push(e));
            }),
            (t.visitMultiple = function(e, t, n) {
              if (0 === e.length) return !1;
              for (var a = [], r = 0; r < e.length; r++) {
                var i = e[r];
                i && this.shouldVisit(i) && a.push(this.create(t, e, r, n));
              }
              return this.visitQueue(a);
            }),
            (t.visitSingle = function(e, t) {
              return (
                !!this.shouldVisit(e[t]) &&
                this.visitQueue([this.create(e, e, t)])
              );
            }),
            (t.visitQueue = function(e) {
              this.queue = e;
              var t = [],
                n = !(this.priorityQueue = []),
                a = e,
                r = Array.isArray(a),
                i = 0;
              for (a = r ? a : a[Symbol.iterator](); ; ) {
                var o;
                if (r) {
                  if (i >= a.length) break;
                  o = a[i++];
                } else {
                  if ((i = a.next()).done) break;
                  o = i.value;
                }
                var s = o;
                if (
                  (s.resync(),
                  (0 !== s.contexts.length &&
                    s.contexts[s.contexts.length - 1] === this) ||
                    s.pushContext(this),
                  null !== s.key && !(0 <= t.indexOf(s.node)))
                ) {
                  if ((t.push(s.node), s.visit())) {
                    n = !0;
                    break;
                  }
                  if (
                    this.priorityQueue.length &&
                    ((n = this.visitQueue(this.priorityQueue)),
                    (this.priorityQueue = []),
                    (this.queue = e),
                    n)
                  )
                    break;
                }
              }
              var d = e,
                u = Array.isArray(d),
                l = 0;
              for (d = u ? d : d[Symbol.iterator](); ; ) {
                var c;
                if (u) {
                  if (l >= d.length) break;
                  c = d[l++];
                } else {
                  if ((l = d.next()).done) break;
                  c = l.value;
                }
                c.popContext();
              }
              return (this.queue = null), n;
            }),
            (t.visit = function(e, t) {
              var n = e[t];
              return (
                !!n &&
                (Array.isArray(n)
                  ? this.visitMultiple(n, e, t)
                  : this.visitSingle(e, t))
              );
            }),
            e
          );
        })();
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a,
          r = (0,
          ((a = n(142)), a && a.__esModule ? a : { default: a }).default)(
            "React.Component"
          );
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return !!e && /^[a-z]/.test(e);
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            for (var t = [], n = 0; n < e.children.length; n++) {
              var a = e.children[n];
              (0, r.isJSXText)(a)
                ? (0, i.default)(a, t)
                : ((0, r.isJSXExpressionContainer)(a) && (a = a.expression),
                  (0, r.isJSXEmptyExpression)(a) || t.push(a));
            }
            return t;
          });
        var a,
          r = n(5),
          i = (a = n(262)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            for (
              var n = e.value.split(/\r\n|\n|\r/), a = 0, r = 0;
              r < n.length;
              r++
            )
              n[r].match(/[^ \t]/) && (a = r);
            for (var i = "", o = 0; o < n.length; o++) {
              var s = n[o],
                d = 0 === o,
                u = o === n.length - 1,
                l = o === a,
                c = s.replace(/\t/g, " ");
              d || (c = c.replace(/^[ ]+/, "")),
                u || (c = c.replace(/[ ]+$/, "")),
                c && (l || (c += " "), (i += c));
            }
            i && t.push((0, p.stringLiteral)(i));
          });
        var p = n(8);
      },
      function(e, t, n) {
        "use strict";
        function u() {
          var e = a(n(144));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(a) {
            for (
              var e = arguments.length, r = new Array(1 < e ? e - 1 : 0), t = 1;
              t < e;
              t++
            )
              r[t - 1] = arguments[t];
            var n = l.BUILDER_KEYS[a],
              i = r.length;
            if (i > n.length)
              throw new Error(
                a +
                  ": Too many arguments passed. Received " +
                  i +
                  " but can receive no more than " +
                  n.length
              );
            var o = { type: a },
              s = 0;
            for (var d in (n.forEach(function(e) {
              var t,
                n = l.NODE_FIELDS[a][e];
              s < i && (t = r[s]),
                void 0 === t && (t = (0, u().default)(n.default)),
                (o[e] = t),
                s++;
            }),
            o))
              (0, c.default)(o, d, o[d]);
            return o;
          });
        var l = n(13),
          c = a(n(163));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t) {
        e.exports = function() {
          (this.__data__ = []), (this.size = 0);
        };
      },
      function(e, t, n) {
        var a = n(42),
          r = Array.prototype.splice;
        e.exports = function(e) {
          var t = this.__data__,
            n = a(t, e);
          return !(
            n < 0 ||
            (n == t.length - 1 ? t.pop() : r.call(t, n, 1), --this.size, 0)
          );
        };
      },
      function(e, t, n) {
        var a = n(42);
        e.exports = function(e) {
          var t = this.__data__,
            n = a(t, e);
          return n < 0 ? void 0 : t[n][1];
        };
      },
      function(e, t, n) {
        var a = n(42);
        e.exports = function(e) {
          return -1 < a(this.__data__, e);
        };
      },
      function(e, t, n) {
        var r = n(42);
        e.exports = function(e, t) {
          var n = this.__data__,
            a = r(n, e);
          return a < 0 ? (++this.size, n.push([e, t])) : (n[a][1] = t), this;
        };
      },
      function(e, t, n) {
        var a = n(41);
        e.exports = function() {
          (this.__data__ = new a()), (this.size = 0);
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var t = this.__data__,
            n = t.delete(e);
          return (this.size = t.size), n;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return this.__data__.get(e);
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return this.__data__.has(e);
        };
      },
      function(e, t, n) {
        var r = n(41),
          i = n(63),
          o = n(64);
        e.exports = function(e, t) {
          var n = this.__data__;
          if (n instanceof r) {
            var a = n.__data__;
            if (!i || a.length < 199)
              return a.push([e, t]), (this.size = ++n.size), this;
            n = this.__data__ = new o(a);
          }
          return n.set(e, t), (this.size = n.size), this;
        };
      },
      function(e, t, n) {
        var a = n(146),
          r = n(277),
          i = n(17),
          o = n(148),
          s = /^\[object .+?Constructor\]$/,
          d = Function.prototype,
          u = Object.prototype,
          l = d.toString,
          c = u.hasOwnProperty,
          p = RegExp(
            "^" +
              l
                .call(c)
                .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                .replace(
                  /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                  "$1.*?"
                ) +
              "$"
          );
        e.exports = function(e) {
          return !(!i(e) || r(e)) && (a(e) ? p : s).test(o(e));
        };
      },
      function(e, t, n) {
        var a = n(26),
          r = Object.prototype,
          i = r.hasOwnProperty,
          o = r.toString,
          s = a ? a.toStringTag : void 0;
        e.exports = function(e) {
          var t = i.call(e, s),
            n = e[s];
          try {
            var a = !(e[s] = void 0);
          } catch (e) {}
          var r = o.call(e);
          return a && (t ? (e[s] = n) : delete e[s]), r;
        };
      },
      function(e, t) {
        var n = Object.prototype.toString;
        e.exports = function(e) {
          return n.call(e);
        };
      },
      function(e, t, n) {
        var a,
          r = n(278),
          i = (a = /[^.]+$/.exec((r && r.keys && r.keys.IE_PROTO) || ""))
            ? "Symbol(src)_1." + a
            : "";
        e.exports = function(e) {
          return !!i && i in e;
        };
      },
      function(e, t, n) {
        var a = n(11)["__core-js_shared__"];
        e.exports = a;
      },
      function(e, t) {
        e.exports = function(e, t) {
          return null == e ? void 0 : e[t];
        };
      },
      function(e, t, n) {
        var a = n(281),
          r = n(41),
          i = n(63);
        e.exports = function() {
          (this.size = 0),
            (this.__data__ = {
              hash: new a(),
              map: new (i || r)(),
              string: new a(),
            });
        };
      },
      function(e, t, n) {
        var a = n(282),
          r = n(283),
          i = n(284),
          o = n(285),
          s = n(286);
        function d(e) {
          var t = -1,
            n = null == e ? 0 : e.length;
          for (this.clear(); ++t < n; ) {
            var a = e[t];
            this.set(a[0], a[1]);
          }
        }
        (d.prototype.clear = a),
          (d.prototype.delete = r),
          (d.prototype.get = i),
          (d.prototype.has = o),
          (d.prototype.set = s),
          (e.exports = d);
      },
      function(e, t, n) {
        var a = n(43);
        e.exports = function() {
          (this.__data__ = a ? a(null) : {}), (this.size = 0);
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var t = this.has(e) && delete this.__data__[e];
          return (this.size -= t ? 1 : 0), t;
        };
      },
      function(e, t, n) {
        var a = n(43),
          r = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
          var t = this.__data__;
          if (a) {
            var n = t[e];
            return "__lodash_hash_undefined__" === n ? void 0 : n;
          }
          return r.call(t, e) ? t[e] : void 0;
        };
      },
      function(e, t, n) {
        var a = n(43),
          r = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
          var t = this.__data__;
          return a ? void 0 !== t[e] : r.call(t, e);
        };
      },
      function(e, t, n) {
        var a = n(43);
        e.exports = function(e, t) {
          var n = this.__data__;
          return (
            (this.size += this.has(e) ? 0 : 1),
            (n[e] = a && void 0 === t ? "__lodash_hash_undefined__" : t),
            this
          );
        };
      },
      function(e, t, n) {
        var a = n(44);
        e.exports = function(e) {
          var t = a(this, e).delete(e);
          return (this.size -= t ? 1 : 0), t;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var t = typeof e;
          return "string" == t ||
            "number" == t ||
            "symbol" == t ||
            "boolean" == t
            ? "__proto__" !== e
            : null === e;
        };
      },
      function(e, t, n) {
        var a = n(44);
        e.exports = function(e) {
          return a(this, e).get(e);
        };
      },
      function(e, t, n) {
        var a = n(44);
        e.exports = function(e) {
          return a(this, e).has(e);
        };
      },
      function(e, t, n) {
        var r = n(44);
        e.exports = function(e, t) {
          var n = r(this, e),
            a = n.size;
          return n.set(e, t), (this.size += n.size == a ? 0 : 1), this;
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          for (
            var n = -1, a = null == e ? 0 : e.length;
            ++n < a && !1 !== t(e[n], n, e);

          );
          return e;
        };
      },
      function(e, t, n) {
        var a = n(35),
          r = n(27);
        e.exports = function(e, t) {
          return e && a(t, r(t), e);
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          for (var n = -1, a = Array(e); ++n < e; ) a[n] = t(n);
          return a;
        };
      },
      function(e, t, n) {
        var a = n(16),
          r = n(12);
        e.exports = function(e) {
          return r(e) && "[object Arguments]" == a(e);
        };
      },
      function(e, t) {
        e.exports = function() {
          return !1;
        };
      },
      function(e, t, n) {
        var a = n(16),
          r = n(68),
          i = n(12),
          o = {};
        (o["[object Float32Array]"] = o["[object Float64Array]"] = o[
          "[object Int8Array]"
        ] = o["[object Int16Array]"] = o["[object Int32Array]"] = o[
          "[object Uint8Array]"
        ] = o["[object Uint8ClampedArray]"] = o["[object Uint16Array]"] = o[
          "[object Uint32Array]"
        ] = !0),
          (o["[object Arguments]"] = o["[object Array]"] = o[
            "[object ArrayBuffer]"
          ] = o["[object Boolean]"] = o["[object DataView]"] = o[
            "[object Date]"
          ] = o["[object Error]"] = o["[object Function]"] = o[
            "[object Map]"
          ] = o["[object Number]"] = o["[object Object]"] = o[
            "[object RegExp]"
          ] = o["[object Set]"] = o["[object String]"] = o[
            "[object WeakMap]"
          ] = !1),
          (e.exports = function(e) {
            return i(e) && r(e.length) && !!o[a(e)];
          });
      },
      function(e, t, n) {
        var a = n(69),
          r = n(299),
          i = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
          if (!a(e)) return r(e);
          var t = [];
          for (var n in Object(e))
            i.call(e, n) && "constructor" != n && t.push(n);
          return t;
        };
      },
      function(e, t, n) {
        var a = n(154)(Object.keys, Object);
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(35),
          r = n(46);
        e.exports = function(e, t) {
          return e && a(t, r(t), e);
        };
      },
      function(e, t, n) {
        var r = n(17),
          i = n(69),
          o = n(302),
          s = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
          if (!r(e)) return o(e);
          var t = i(e),
            n = [];
          for (var a in e)
            ("constructor" != a || (!t && s.call(e, a))) && n.push(a);
          return n;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var t = [];
          if (null != e) for (var n in Object(e)) t.push(n);
          return t;
        };
      },
      function(e, o, s) {
        (function(e) {
          var t = s(11),
            n = "object" == typeof o && o && !o.nodeType && o,
            a = n && "object" == typeof e && e && !e.nodeType && e,
            r = a && a.exports === n ? t.Buffer : void 0,
            i = r ? r.allocUnsafe : void 0;
          e.exports = function(e, t) {
            if (t) return e.slice();
            var n = e.length,
              a = i ? i(n) : new e.constructor(n);
            return e.copy(a), a;
          };
        }.call(this, s(28)(e)));
      },
      function(e, t, n) {
        var a = n(35),
          r = n(70);
        e.exports = function(e, t) {
          return a(e, r(e), t);
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          for (
            var n = -1, a = null == e ? 0 : e.length, r = 0, i = [];
            ++n < a;

          ) {
            var o = e[n];
            t(o, n, e) && (i[r++] = o);
          }
          return i;
        };
      },
      function(e, t, n) {
        var a = n(35),
          r = n(157);
        e.exports = function(e, t) {
          return a(e, r(e), t);
        };
      },
      function(e, t, n) {
        var a = n(159),
          r = n(157),
          i = n(46);
        e.exports = function(e) {
          return a(e, i, r);
        };
      },
      function(e, t, n) {
        var a = n(20)(n(11), "DataView");
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(20)(n(11), "Promise");
        e.exports = a;
      },
      function(e, t, n) {
        var a = n(20)(n(11), "WeakMap");
        e.exports = a;
      },
      function(e, t) {
        var a = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
          var t = e.length,
            n = new e.constructor(t);
          return (
            t &&
              "string" == typeof e[0] &&
              a.call(e, "index") &&
              ((n.index = e.index), (n.input = e.input)),
            n
          );
        };
      },
      function(e, t, n) {
        var r = n(73),
          i = n(313),
          o = n(314),
          s = n(315),
          d = n(316);
        e.exports = function(e, t, n) {
          var a = e.constructor;
          switch (t) {
            case "[object ArrayBuffer]":
              return r(e);
            case "[object Boolean]":
            case "[object Date]":
              return new a(+e);
            case "[object DataView]":
              return i(e, n);
            case "[object Float32Array]":
            case "[object Float64Array]":
            case "[object Int8Array]":
            case "[object Int16Array]":
            case "[object Int32Array]":
            case "[object Uint8Array]":
            case "[object Uint8ClampedArray]":
            case "[object Uint16Array]":
            case "[object Uint32Array]":
              return d(e, n);
            case "[object Map]":
              return new a();
            case "[object Number]":
            case "[object String]":
              return new a(e);
            case "[object RegExp]":
              return o(e);
            case "[object Set]":
              return new a();
            case "[object Symbol]":
              return s(e);
          }
        };
      },
      function(e, t, n) {
        var a = n(73);
        e.exports = function(e, t) {
          var n = t ? a(e.buffer) : e.buffer;
          return new e.constructor(n, e.byteOffset, e.byteLength);
        };
      },
      function(e, t) {
        var n = /\w*$/;
        e.exports = function(e) {
          var t = new e.constructor(e.source, n.exec(e));
          return (t.lastIndex = e.lastIndex), t;
        };
      },
      function(e, t, n) {
        var a = n(26),
          r = a ? a.prototype : void 0,
          i = r ? r.valueOf : void 0;
        e.exports = function(e) {
          return i ? Object(i.call(e)) : {};
        };
      },
      function(e, t, n) {
        var a = n(73);
        e.exports = function(e, t) {
          var n = t ? a(e.buffer) : e.buffer;
          return new e.constructor(n, e.byteOffset, e.length);
        };
      },
      function(e, t, n) {
        var a = n(318),
          r = n(72),
          i = n(69);
        e.exports = function(e) {
          return "function" != typeof e.constructor || i(e) ? {} : a(r(e));
        };
      },
      function(e, t, n) {
        var a = n(17),
          r = Object.create,
          i = (function() {
            function n() {}
            return function(e) {
              if (!a(e)) return {};
              if (r) return r(e);
              n.prototype = e;
              var t = new n();
              return (n.prototype = void 0), t;
            };
          })();
        e.exports = i;
      },
      function(e, t, n) {
        var a = n(320),
          r = n(29),
          i = n(45),
          o = i && i.isMap,
          s = o ? r(o) : a;
        e.exports = s;
      },
      function(e, t, n) {
        var a = n(47),
          r = n(12);
        e.exports = function(e) {
          return r(e) && "[object Map]" == a(e);
        };
      },
      function(e, t, n) {
        var a = n(322),
          r = n(29),
          i = n(45),
          o = i && i.isSet,
          s = o ? r(o) : a;
        e.exports = s;
      },
      function(e, t, n) {
        var a = n(47),
          r = n(12);
        e.exports = function(e) {
          return r(e) && "[object Set]" == a(e);
        };
      },
      function(e, t, n) {
        "use strict";
        var a = null;
        function r(e) {
          if (null !== a && (a.property, 1)) {
            var t = a;
            return (a = r.prototype = null), t;
          }
          return (
            (a = r.prototype = null == e ? Object.create(null) : e), new r()
          );
        }
        r(),
          (e.exports = function(e) {
            return r(e);
          });
      },
      function(e, t) {
        !(function() {
          "use strict";
          function t(e) {
            if (null == e) return !1;
            switch (e.type) {
              case "BlockStatement":
              case "BreakStatement":
              case "ContinueStatement":
              case "DebuggerStatement":
              case "DoWhileStatement":
              case "EmptyStatement":
              case "ExpressionStatement":
              case "ForInStatement":
              case "ForStatement":
              case "IfStatement":
              case "LabeledStatement":
              case "ReturnStatement":
              case "SwitchStatement":
              case "ThrowStatement":
              case "TryStatement":
              case "VariableDeclaration":
              case "WhileStatement":
              case "WithStatement":
                return !0;
            }
            return !1;
          }
          function n(e) {
            switch (e.type) {
              case "IfStatement":
                return null != e.alternate ? e.alternate : e.consequent;
              case "LabeledStatement":
              case "ForStatement":
              case "ForInStatement":
              case "WhileStatement":
              case "WithStatement":
                return e.body;
            }
            return null;
          }
          e.exports = {
            isExpression: function(e) {
              if (null == e) return !1;
              switch (e.type) {
                case "ArrayExpression":
                case "AssignmentExpression":
                case "BinaryExpression":
                case "CallExpression":
                case "ConditionalExpression":
                case "FunctionExpression":
                case "Identifier":
                case "Literal":
                case "LogicalExpression":
                case "MemberExpression":
                case "NewExpression":
                case "ObjectExpression":
                case "SequenceExpression":
                case "ThisExpression":
                case "UnaryExpression":
                case "UpdateExpression":
                  return !0;
              }
              return !1;
            },
            isStatement: t,
            isIterationStatement: function(e) {
              if (null == e) return !1;
              switch (e.type) {
                case "DoWhileStatement":
                case "ForInStatement":
                case "ForStatement":
                case "WhileStatement":
                  return !0;
              }
              return !1;
            },
            isSourceElement: function(e) {
              return t(e) || (null != e && "FunctionDeclaration" === e.type);
            },
            isProblematicIfStatement: function(e) {
              var t;
              if ("IfStatement" !== e.type) return !1;
              if (null == e.alternate) return !1;
              t = e.consequent;
              do {
                if ("IfStatement" === t.type && null == t.alternate) return !0;
                t = n(t);
              } while (t);
              return !1;
            },
            trailingStatement: n,
          };
        })();
      },
      function(e, t, u) {
        !(function() {
          "use strict";
          var o = u(162);
          function n(e, t) {
            return !(!t && "yield" === e) && a(e, t);
          }
          function a(t, e) {
            if (
              e &&
              (function(e) {
                switch (t) {
                  case "implements":
                  case "interface":
                  case "package":
                  case "private":
                  case "protected":
                  case "public":
                  case "static":
                  case "let":
                    return !0;
                  default:
                    return !1;
                }
              })()
            )
              return !0;
            switch (t.length) {
              case 2:
                return "if" === t || "in" === t || "do" === t;
              case 3:
                return "var" === t || "for" === t || "new" === t || "try" === t;
              case 4:
                return (
                  "this" === t ||
                  "else" === t ||
                  "case" === t ||
                  "void" === t ||
                  "with" === t ||
                  "enum" === t
                );
              case 5:
                return (
                  "while" === t ||
                  "break" === t ||
                  "catch" === t ||
                  "throw" === t ||
                  "const" === t ||
                  "yield" === t ||
                  "class" === t ||
                  "super" === t
                );
              case 6:
                return (
                  "return" === t ||
                  "typeof" === t ||
                  "delete" === t ||
                  "switch" === t ||
                  "export" === t ||
                  "import" === t
                );
              case 7:
                return "default" === t || "finally" === t || "extends" === t;
              case 8:
                return "function" === t || "continue" === t || "debugger" === t;
              case 10:
                return "instanceof" === t;
              default:
                return !1;
            }
          }
          function r(e, t) {
            return "null" === e || "true" === e || "false" === e || n(e, t);
          }
          function i(e, t) {
            return "null" === e || "true" === e || "false" === e || a(e, t);
          }
          function s(e) {
            var t, n, a;
            if (0 === e.length) return !1;
            if (((a = e.charCodeAt(0)), !o.isIdentifierStartES5(a))) return !1;
            for (t = 1, n = e.length; t < n; ++t)
              if (((a = e.charCodeAt(t)), !o.isIdentifierPartES5(a))) return !1;
            return !0;
          }
          function d(e) {
            var t, n, a, r, i;
            if (0 === e.length) return !1;
            for (i = o.isIdentifierStartES6, t = 0, n = e.length; t < n; ++t) {
              if (55296 <= (a = e.charCodeAt(t)) && a <= 56319) {
                if (++t >= n) return !1;
                if (!(56320 <= (r = e.charCodeAt(t)) && r <= 57343)) return !1;
                a = 1024 * (a - 55296) + (r - 56320) + 65536;
              }
              if (!i(a)) return !1;
              i = o.isIdentifierPartES6;
            }
            return !0;
          }
          e.exports = {
            isKeywordES5: n,
            isKeywordES6: a,
            isReservedWordES5: r,
            isReservedWordES6: i,
            isRestrictedWord: function(e) {
              return "eval" === e || "arguments" === e;
            },
            isIdentifierNameES5: s,
            isIdentifierNameES6: d,
            isIdentifierES5: function(e, t) {
              return s(e) && !r(e, t);
            },
            isIdentifierES6: function(e, t) {
              return d(e) && !i(e, t);
            },
          };
        })();
      },
      function(e, t, n) {
        "use strict";
        var a = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(18)),
          r = function(e, t) {
            void 0 === t && (t = "TypeParameterDeclaration"),
              (0, a.default)(e, {
                builder: ["id", "typeParameters", "extends", "body"],
                visitor: [
                  "id",
                  "typeParameters",
                  "extends",
                  "mixins",
                  "implements",
                  "body",
                ],
                aliases: [
                  "Flow",
                  "FlowDeclaration",
                  "Statement",
                  "Declaration",
                ],
                fields: {
                  id: (0, a.validateType)("Identifier"),
                  typeParameters: (0, a.validateOptionalType)(t),
                  extends: (0, a.validateOptional)(
                    (0, a.arrayOfType)("InterfaceExtends")
                  ),
                  mixins: (0, a.validateOptional)(
                    (0, a.arrayOfType)("InterfaceExtends")
                  ),
                  implements: (0, a.validateOptional)(
                    (0, a.arrayOfType)("ClassImplements")
                  ),
                  body: (0, a.validateType)("ObjectTypeAnnotation"),
                },
              });
          };
        (0, a.default)("AnyTypeAnnotation", {
          aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
        }),
          (0, a.default)("ArrayTypeAnnotation", {
            visitor: ["elementType"],
            aliases: ["Flow", "FlowType"],
            fields: { elementType: (0, a.validateType)("FlowType") },
          }),
          (0, a.default)("BooleanTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("BooleanLiteralTypeAnnotation", {
            builder: ["value"],
            aliases: ["Flow", "FlowType"],
            fields: {
              value: (0, a.validate)((0, a.assertValueType)("boolean")),
            },
          }),
          (0, a.default)("NullLiteralTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("ClassImplements", {
            visitor: ["id", "typeParameters"],
            aliases: ["Flow"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterInstantiation"
              ),
            },
          }),
          r("DeclareClass", "TypeParameterInstantiation"),
          (0, a.default)("DeclareFunction", {
            visitor: ["id"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              predicate: (0, a.validateOptionalType)("DeclaredPredicate"),
            },
          }),
          r("DeclareInterface"),
          (0, a.default)("DeclareModule", {
            builder: ["id", "body", "kind"],
            visitor: ["id", "body"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              id: (0, a.validateType)(["Identifier", "StringLiteral"]),
              body: (0, a.validateType)("BlockStatement"),
              kind: (0, a.validateOptional)(
                (0, a.assertOneOf)("CommonJS", "ES")
              ),
            },
          }),
          (0, a.default)("DeclareModuleExports", {
            visitor: ["typeAnnotation"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: { typeAnnotation: (0, a.validateType)("TypeAnnotation") },
          }),
          (0, a.default)("DeclareTypeAlias", {
            visitor: ["id", "typeParameters", "right"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterDeclaration"
              ),
              right: (0, a.validateType)("FlowType"),
            },
          }),
          (0, a.default)("DeclareOpaqueType", {
            visitor: ["id", "typeParameters", "supertype"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterDeclaration"
              ),
              supertype: (0, a.validateOptionalType)("FlowType"),
            },
          }),
          (0, a.default)("DeclareVariable", {
            visitor: ["id"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: { id: (0, a.validateType)("Identifier") },
          }),
          (0, a.default)("DeclareExportDeclaration", {
            visitor: ["declaration", "specifiers", "source"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              declaration: (0, a.validateOptionalType)("Flow"),
              specifiers: (0, a.validateOptional)(
                (0, a.arrayOfType)([
                  "ExportSpecifier",
                  "ExportNamespaceSpecifier",
                ])
              ),
              source: (0, a.validateOptionalType)("StringLiteral"),
              default: (0, a.validateOptional)(
                (0, a.assertValueType)("boolean")
              ),
            },
          }),
          (0, a.default)("DeclareExportAllDeclaration", {
            visitor: ["source"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              source: (0, a.validateType)("StringLiteral"),
              exportKind: (0, a.validateOptional)(
                (0, a.assertOneOf)(["type", "value"])
              ),
            },
          }),
          (0, a.default)("DeclaredPredicate", {
            visitor: ["value"],
            aliases: ["Flow", "FlowPredicate"],
            fields: { value: (0, a.validateType)("Flow") },
          }),
          (0, a.default)("ExistsTypeAnnotation", {
            aliases: ["Flow", "FlowType"],
          }),
          (0, a.default)("FunctionTypeAnnotation", {
            visitor: ["typeParameters", "params", "rest", "returnType"],
            aliases: ["Flow", "FlowType"],
            fields: {
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterDeclaration"
              ),
              params: (0, a.validate)((0, a.arrayOfType)("FunctionTypeParam")),
              rest: (0, a.validateOptionalType)("FunctionTypeParam"),
              returnType: (0, a.validateType)("FlowType"),
            },
          }),
          (0, a.default)("FunctionTypeParam", {
            visitor: ["name", "typeAnnotation"],
            aliases: ["Flow"],
            fields: {
              name: (0, a.validateOptionalType)("Identifier"),
              typeAnnotation: (0, a.validateType)("FlowType"),
              optional: (0, a.validateOptional)(
                (0, a.assertValueType)("boolean")
              ),
            },
          }),
          (0, a.default)("GenericTypeAnnotation", {
            visitor: ["id", "typeParameters"],
            aliases: ["Flow", "FlowType"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterInstantiation"
              ),
            },
          }),
          (0, a.default)("InferredPredicate", {
            aliases: ["Flow", "FlowPredicate"],
          }),
          (0, a.default)("InterfaceExtends", {
            visitor: ["id", "typeParameters"],
            aliases: ["Flow"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterInstantiation"
              ),
            },
          }),
          r("InterfaceDeclaration"),
          (0, a.default)("InterfaceTypeAnnotation", {
            visitor: ["extends", "body"],
            aliases: ["Flow", "FlowType"],
            fields: {
              extends: (0, a.validateOptional)(
                (0, a.arrayOfType)("InterfaceExtends")
              ),
              body: (0, a.validateType)("ObjectTypeAnnotation"),
            },
          }),
          (0, a.default)("IntersectionTypeAnnotation", {
            visitor: ["types"],
            aliases: ["Flow", "FlowType"],
            fields: { types: (0, a.validate)((0, a.arrayOfType)("FlowType")) },
          }),
          (0, a.default)("MixedTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("EmptyTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("NullableTypeAnnotation", {
            visitor: ["typeAnnotation"],
            aliases: ["Flow", "FlowType"],
            fields: { typeAnnotation: (0, a.validateType)("FlowType") },
          }),
          (0, a.default)("NumberLiteralTypeAnnotation", {
            builder: ["value"],
            aliases: ["Flow", "FlowType"],
            fields: {
              value: (0, a.validate)((0, a.assertValueType)("number")),
            },
          }),
          (0, a.default)("NumberTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("ObjectTypeAnnotation", {
            visitor: [
              "properties",
              "indexers",
              "callProperties",
              "internalSlots",
            ],
            aliases: ["Flow", "FlowType"],
            builder: [
              "properties",
              "indexers",
              "callProperties",
              "internalSlots",
              "exact",
            ],
            fields: {
              properties: (0, a.validate)(
                (0, a.arrayOfType)([
                  "ObjectTypeProperty",
                  "ObjectTypeSpreadProperty",
                ])
              ),
              indexers: (0, a.validateOptional)(
                (0, a.arrayOfType)("ObjectTypeIndexer")
              ),
              callProperties: (0, a.validateOptional)(
                (0, a.arrayOfType)("ObjectTypeCallProperty")
              ),
              internalSlots: (0, a.validateOptional)(
                (0, a.arrayOfType)("ObjectTypeInternalSlot")
              ),
              exact: {
                validate: (0, a.assertValueType)("boolean"),
                default: !1,
              },
            },
          }),
          (0, a.default)("ObjectTypeInternalSlot", {
            visitor: ["id", "value", "optional", "static", "method"],
            aliases: ["Flow", "UserWhitespacable"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              value: (0, a.validateType)("FlowType"),
              optional: (0, a.validate)((0, a.assertValueType)("boolean")),
              static: (0, a.validate)((0, a.assertValueType)("boolean")),
              method: (0, a.validate)((0, a.assertValueType)("boolean")),
            },
          }),
          (0, a.default)("ObjectTypeCallProperty", {
            visitor: ["value"],
            aliases: ["Flow", "UserWhitespacable"],
            fields: {
              value: (0, a.validateType)("FlowType"),
              static: (0, a.validate)((0, a.assertValueType)("boolean")),
            },
          }),
          (0, a.default)("ObjectTypeIndexer", {
            visitor: ["id", "key", "value", "variance"],
            aliases: ["Flow", "UserWhitespacable"],
            fields: {
              id: (0, a.validateOptionalType)("Identifier"),
              key: (0, a.validateType)("FlowType"),
              value: (0, a.validateType)("FlowType"),
              static: (0, a.validate)((0, a.assertValueType)("boolean")),
              variance: (0, a.validateOptionalType)("Variance"),
            },
          }),
          (0, a.default)("ObjectTypeProperty", {
            visitor: ["key", "value", "variance"],
            aliases: ["Flow", "UserWhitespacable"],
            fields: {
              key: (0, a.validateType)(["Identifier", "StringLiteral"]),
              value: (0, a.validateType)("FlowType"),
              kind: (0, a.validate)((0, a.assertOneOf)("init", "get", "set")),
              static: (0, a.validate)((0, a.assertValueType)("boolean")),
              proto: (0, a.validate)((0, a.assertValueType)("boolean")),
              optional: (0, a.validate)((0, a.assertValueType)("boolean")),
              variance: (0, a.validateOptionalType)("Variance"),
            },
          }),
          (0, a.default)("ObjectTypeSpreadProperty", {
            visitor: ["argument"],
            aliases: ["Flow", "UserWhitespacable"],
            fields: { argument: (0, a.validateType)("FlowType") },
          }),
          (0, a.default)("OpaqueType", {
            visitor: ["id", "typeParameters", "supertype", "impltype"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterDeclaration"
              ),
              supertype: (0, a.validateOptionalType)("FlowType"),
              impltype: (0, a.validateType)("FlowType"),
            },
          }),
          (0, a.default)("QualifiedTypeIdentifier", {
            visitor: ["id", "qualification"],
            aliases: ["Flow"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              qualification: (0, a.validateType)([
                "Identifier",
                "QualifiedTypeIdentifier",
              ]),
            },
          }),
          (0, a.default)("StringLiteralTypeAnnotation", {
            builder: ["value"],
            aliases: ["Flow", "FlowType"],
            fields: {
              value: (0, a.validate)((0, a.assertValueType)("string")),
            },
          }),
          (0, a.default)("StringTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("ThisTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          }),
          (0, a.default)("TupleTypeAnnotation", {
            visitor: ["types"],
            aliases: ["Flow", "FlowType"],
            fields: { types: (0, a.validate)((0, a.arrayOfType)("FlowType")) },
          }),
          (0, a.default)("TypeofTypeAnnotation", {
            visitor: ["argument"],
            aliases: ["Flow", "FlowType"],
            fields: { argument: (0, a.validateType)("FlowType") },
          }),
          (0, a.default)("TypeAlias", {
            visitor: ["id", "typeParameters", "right"],
            aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
            fields: {
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TypeParameterDeclaration"
              ),
              right: (0, a.validateType)("FlowType"),
            },
          }),
          (0, a.default)("TypeAnnotation", {
            aliases: ["Flow"],
            visitor: ["typeAnnotation"],
            fields: { typeAnnotation: (0, a.validateType)("FlowType") },
          }),
          (0, a.default)("TypeCastExpression", {
            visitor: ["expression", "typeAnnotation"],
            aliases: ["Flow", "ExpressionWrapper", "Expression"],
            fields: {
              expression: (0, a.validateType)("Expression"),
              typeAnnotation: (0, a.validateType)("TypeAnnotation"),
            },
          }),
          (0, a.default)("TypeParameter", {
            aliases: ["Flow"],
            visitor: ["bound", "default", "variance"],
            fields: {
              name: (0, a.validate)((0, a.assertValueType)("string")),
              bound: (0, a.validateOptionalType)("TypeAnnotation"),
              default: (0, a.validateOptionalType)("FlowType"),
              variance: (0, a.validateOptionalType)("Variance"),
            },
          }),
          (0, a.default)("TypeParameterDeclaration", {
            aliases: ["Flow"],
            visitor: ["params"],
            fields: {
              params: (0, a.validate)((0, a.arrayOfType)("TypeParameter")),
            },
          }),
          (0, a.default)("TypeParameterInstantiation", {
            aliases: ["Flow"],
            visitor: ["params"],
            fields: { params: (0, a.validate)((0, a.arrayOfType)("FlowType")) },
          }),
          (0, a.default)("UnionTypeAnnotation", {
            visitor: ["types"],
            aliases: ["Flow", "FlowType"],
            fields: { types: (0, a.validate)((0, a.arrayOfType)("FlowType")) },
          }),
          (0, a.default)("Variance", {
            aliases: ["Flow"],
            builder: ["kind"],
            fields: {
              kind: (0, a.validate)((0, a.assertOneOf)("minus", "plus")),
            },
          }),
          (0, a.default)("VoidTypeAnnotation", {
            aliases: ["Flow", "FlowType", "FlowBaseAnnotation"],
          });
      },
      function(e, t, n) {
        "use strict";
        var a = (function(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(18));
        (0, a.default)("JSXAttribute", {
          visitor: ["name", "value"],
          aliases: ["JSX", "Immutable"],
          fields: {
            name: {
              validate: (0, a.assertNodeType)(
                "JSXIdentifier",
                "JSXNamespacedName"
              ),
            },
            value: {
              optional: !0,
              validate: (0, a.assertNodeType)(
                "JSXElement",
                "JSXFragment",
                "StringLiteral",
                "JSXExpressionContainer"
              ),
            },
          },
        }),
          (0, a.default)("JSXClosingElement", {
            visitor: ["name"],
            aliases: ["JSX", "Immutable"],
            fields: {
              name: {
                validate: (0, a.assertNodeType)(
                  "JSXIdentifier",
                  "JSXMemberExpression"
                ),
              },
            },
          }),
          (0, a.default)("JSXElement", {
            builder: [
              "openingElement",
              "closingElement",
              "children",
              "selfClosing",
            ],
            visitor: ["openingElement", "children", "closingElement"],
            aliases: ["JSX", "Immutable", "Expression"],
            fields: {
              openingElement: {
                validate: (0, a.assertNodeType)("JSXOpeningElement"),
              },
              closingElement: {
                optional: !0,
                validate: (0, a.assertNodeType)("JSXClosingElement"),
              },
              children: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)(
                      "JSXText",
                      "JSXExpressionContainer",
                      "JSXSpreadChild",
                      "JSXElement",
                      "JSXFragment"
                    )
                  )
                ),
              },
            },
          }),
          (0, a.default)("JSXEmptyExpression", { aliases: ["JSX"] }),
          (0, a.default)("JSXExpressionContainer", {
            visitor: ["expression"],
            aliases: ["JSX", "Immutable"],
            fields: {
              expression: { validate: (0, a.assertNodeType)("Expression") },
            },
          }),
          (0, a.default)("JSXSpreadChild", {
            visitor: ["expression"],
            aliases: ["JSX", "Immutable"],
            fields: {
              expression: { validate: (0, a.assertNodeType)("Expression") },
            },
          }),
          (0, a.default)("JSXIdentifier", {
            builder: ["name"],
            aliases: ["JSX"],
            fields: { name: { validate: (0, a.assertValueType)("string") } },
          }),
          (0, a.default)("JSXMemberExpression", {
            visitor: ["object", "property"],
            aliases: ["JSX"],
            fields: {
              object: {
                validate: (0, a.assertNodeType)(
                  "JSXMemberExpression",
                  "JSXIdentifier"
                ),
              },
              property: { validate: (0, a.assertNodeType)("JSXIdentifier") },
            },
          }),
          (0, a.default)("JSXNamespacedName", {
            visitor: ["namespace", "name"],
            aliases: ["JSX"],
            fields: {
              namespace: { validate: (0, a.assertNodeType)("JSXIdentifier") },
              name: { validate: (0, a.assertNodeType)("JSXIdentifier") },
            },
          }),
          (0, a.default)("JSXOpeningElement", {
            builder: ["name", "attributes", "selfClosing"],
            visitor: ["name", "attributes"],
            aliases: ["JSX", "Immutable"],
            fields: {
              name: {
                validate: (0, a.assertNodeType)(
                  "JSXIdentifier",
                  "JSXMemberExpression"
                ),
              },
              selfClosing: {
                default: !1,
                validate: (0, a.assertValueType)("boolean"),
              },
              attributes: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")
                  )
                ),
              },
              typeParameters: {
                validate: (0, a.assertNodeType)(
                  "TypeParameterInstantiation",
                  "TSTypeParameterInstantiation"
                ),
                optional: !0,
              },
            },
          }),
          (0, a.default)("JSXSpreadAttribute", {
            visitor: ["argument"],
            aliases: ["JSX"],
            fields: {
              argument: { validate: (0, a.assertNodeType)("Expression") },
            },
          }),
          (0, a.default)("JSXText", {
            aliases: ["JSX", "Immutable"],
            builder: ["value"],
            fields: { value: { validate: (0, a.assertValueType)("string") } },
          }),
          (0, a.default)("JSXFragment", {
            builder: ["openingFragment", "closingFragment", "children"],
            visitor: ["openingFragment", "children", "closingFragment"],
            aliases: ["JSX", "Immutable", "Expression"],
            fields: {
              openingFragment: {
                validate: (0, a.assertNodeType)("JSXOpeningFragment"),
              },
              closingFragment: {
                validate: (0, a.assertNodeType)("JSXClosingFragment"),
              },
              children: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)(
                    (0, a.assertNodeType)(
                      "JSXText",
                      "JSXExpressionContainer",
                      "JSXSpreadChild",
                      "JSXElement",
                      "JSXFragment"
                    )
                  )
                ),
              },
            },
          }),
          (0, a.default)("JSXOpeningFragment", {
            aliases: ["JSX", "Immutable"],
          }),
          (0, a.default)("JSXClosingFragment", {
            aliases: ["JSX", "Immutable"],
          });
      },
      function(e, t, n) {
        "use strict";
        var a = (function(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(18));
        (0, a.default)("Noop", { visitor: [] }),
          (0, a.default)("ParenthesizedExpression", {
            visitor: ["expression"],
            aliases: ["Expression", "ExpressionWrapper"],
            fields: {
              expression: { validate: (0, a.assertNodeType)("Expression") },
            },
          });
      },
      function(e, t, n) {
        "use strict";
        var a,
          r,
          i = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(18)),
          o = n(78);
        (0, i.default)("AwaitExpression", {
          builder: ["argument"],
          visitor: ["argument"],
          aliases: ["Expression", "Terminatorless"],
          fields: {
            argument: { validate: (0, i.assertNodeType)("Expression") },
          },
        }),
          (0, i.default)("BindExpression", {
            visitor: ["object", "callee"],
            aliases: ["Expression"],
            fields: {},
          }),
          (0, i.default)("ClassProperty", {
            visitor: ["key", "value", "typeAnnotation", "decorators"],
            builder: [
              "key",
              "value",
              "typeAnnotation",
              "decorators",
              "computed",
            ],
            aliases: ["Property"],
            fields: Object.assign({}, o.classMethodOrPropertyCommon, {
              value: {
                validate: (0, i.assertNodeType)("Expression"),
                optional: !0,
              },
              definite: {
                validate: (0, i.assertValueType)("boolean"),
                optional: !0,
              },
              typeAnnotation: {
                validate: (0, i.assertNodeType)(
                  "TypeAnnotation",
                  "TSTypeAnnotation",
                  "Noop"
                ),
                optional: !0,
              },
              decorators: {
                validate: (0, i.chain)(
                  (0, i.assertValueType)("array"),
                  (0, i.assertEach)((0, i.assertNodeType)("Decorator"))
                ),
                optional: !0,
              },
              readonly: {
                validate: (0, i.assertValueType)("boolean"),
                optional: !0,
              },
            }),
          }),
          (0, i.default)("OptionalMemberExpression", {
            builder: ["object", "property", "computed", "optional"],
            visitor: ["object", "property"],
            aliases: ["Expression"],
            fields: {
              object: { validate: (0, i.assertNodeType)("Expression") },
              property: {
                validate: ((a = (0, i.assertNodeType)("Identifier")),
                (r = (0, i.assertNodeType)("Expression")),
                function(e, t, n) {
                  (e.computed ? r : a)(e, t, n);
                }),
              },
              computed: { default: !1 },
              optional: { validate: (0, i.assertValueType)("boolean") },
            },
          }),
          (0, i.default)("OptionalCallExpression", {
            visitor: ["callee", "arguments", "typeParameters", "typeArguments"],
            builder: ["callee", "arguments", "optional"],
            aliases: ["Expression"],
            fields: {
              callee: { validate: (0, i.assertNodeType)("Expression") },
              arguments: {
                validate: (0, i.chain)(
                  (0, i.assertValueType)("array"),
                  (0, i.assertEach)(
                    (0, i.assertNodeType)(
                      "Expression",
                      "SpreadElement",
                      "JSXNamespacedName"
                    )
                  )
                ),
              },
              optional: { validate: (0, i.assertValueType)("boolean") },
              typeArguments: {
                validate: (0, i.assertNodeType)("TypeParameterInstantiation"),
                optional: !0,
              },
              typeParameters: {
                validate: (0, i.assertNodeType)("TSTypeParameterInstantiation"),
                optional: !0,
              },
            },
          }),
          (0, i.default)("ClassPrivateProperty", {
            visitor: ["key", "value"],
            builder: ["key", "value"],
            aliases: ["Property", "Private"],
            fields: {
              key: { validate: (0, i.assertNodeType)("PrivateName") },
              value: {
                validate: (0, i.assertNodeType)("Expression"),
                optional: !0,
              },
            },
          }),
          (0, i.default)("Import", { aliases: ["Expression"] }),
          (0, i.default)("Decorator", {
            visitor: ["expression"],
            fields: {
              expression: { validate: (0, i.assertNodeType)("Expression") },
            },
          }),
          (0, i.default)("DoExpression", {
            visitor: ["body"],
            aliases: ["Expression"],
            fields: {
              body: { validate: (0, i.assertNodeType)("BlockStatement") },
            },
          }),
          (0, i.default)("ExportDefaultSpecifier", {
            visitor: ["exported"],
            aliases: ["ModuleSpecifier"],
            fields: {
              exported: { validate: (0, i.assertNodeType)("Identifier") },
            },
          }),
          (0, i.default)("ExportNamespaceSpecifier", {
            visitor: ["exported"],
            aliases: ["ModuleSpecifier"],
            fields: {
              exported: { validate: (0, i.assertNodeType)("Identifier") },
            },
          }),
          (0, i.default)("PrivateName", {
            visitor: ["id"],
            aliases: ["Private"],
            fields: { id: { validate: (0, i.assertNodeType)("Identifier") } },
          }),
          (0, i.default)("BigIntLiteral", {
            builder: ["value"],
            fields: { value: { validate: (0, i.assertValueType)("string") } },
            aliases: ["Expression", "Pureish", "Literal", "Immutable"],
          });
      },
      function(e, t, n) {
        "use strict";
        var a = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(18)),
          r = n(74),
          i = n(78),
          o = (0, a.assertValueType)("boolean"),
          s = {
            returnType: {
              validate: (0, a.assertNodeType)("TSTypeAnnotation", "Noop"),
              optional: !0,
            },
            typeParameters: {
              validate: (0, a.assertNodeType)(
                "TSTypeParameterDeclaration",
                "Noop"
              ),
              optional: !0,
            },
          };
        (0, a.default)("TSParameterProperty", {
          aliases: ["LVal"],
          visitor: ["parameter"],
          fields: {
            accessibility: {
              validate: (0, a.assertOneOf)("public", "private", "protected"),
              optional: !0,
            },
            readonly: {
              validate: (0, a.assertValueType)("boolean"),
              optional: !0,
            },
            parameter: {
              validate: (0, a.assertNodeType)(
                "Identifier",
                "AssignmentPattern"
              ),
            },
          },
        }),
          (0, a.default)("TSDeclareFunction", {
            aliases: ["Statement", "Declaration"],
            visitor: ["id", "typeParameters", "params", "returnType"],
            fields: Object.assign({}, r.functionDeclarationCommon, s),
          }),
          (0, a.default)("TSDeclareMethod", {
            visitor: [
              "decorators",
              "key",
              "typeParameters",
              "params",
              "returnType",
            ],
            fields: Object.assign({}, i.classMethodOrDeclareMethodCommon, s),
          }),
          (0, a.default)("TSQualifiedName", {
            aliases: ["TSEntityName"],
            visitor: ["left", "right"],
            fields: {
              left: (0, a.validateType)("TSEntityName"),
              right: (0, a.validateType)("Identifier"),
            },
          });
        var d = {
            typeParameters: (0, a.validateOptionalType)(
              "TSTypeParameterDeclaration"
            ),
            parameters: (0, a.validateArrayOfType)([
              "Identifier",
              "RestElement",
            ]),
            typeAnnotation: (0, a.validateOptionalType)("TSTypeAnnotation"),
          },
          u = {
            aliases: ["TSTypeElement"],
            visitor: ["typeParameters", "parameters", "typeAnnotation"],
            fields: d,
          };
        (0, a.default)("TSCallSignatureDeclaration", u),
          (0, a.default)("TSConstructSignatureDeclaration", u);
        var l = {
          key: (0, a.validateType)("Expression"),
          computed: (0, a.validate)(o),
          optional: (0, a.validateOptional)(o),
        };
        (0, a.default)("TSPropertySignature", {
          aliases: ["TSTypeElement"],
          visitor: ["key", "typeAnnotation", "initializer"],
          fields: Object.assign({}, l, {
            readonly: (0, a.validateOptional)(o),
            typeAnnotation: (0, a.validateOptionalType)("TSTypeAnnotation"),
            initializer: (0, a.validateOptionalType)("Expression"),
          }),
        }),
          (0, a.default)("TSMethodSignature", {
            aliases: ["TSTypeElement"],
            visitor: ["key", "typeParameters", "parameters", "typeAnnotation"],
            fields: Object.assign({}, d, l),
          }),
          (0, a.default)("TSIndexSignature", {
            aliases: ["TSTypeElement"],
            visitor: ["parameters", "typeAnnotation"],
            fields: {
              readonly: (0, a.validateOptional)(o),
              parameters: (0, a.validateArrayOfType)("Identifier"),
              typeAnnotation: (0, a.validateOptionalType)("TSTypeAnnotation"),
            },
          });
        for (
          var c = [
              "TSAnyKeyword",
              "TSNumberKeyword",
              "TSObjectKeyword",
              "TSBooleanKeyword",
              "TSStringKeyword",
              "TSSymbolKeyword",
              "TSVoidKeyword",
              "TSUndefinedKeyword",
              "TSNullKeyword",
              "TSNeverKeyword",
            ],
            p = 0;
          p < c.length;
          p++
        ) {
          var g = c[p];
          (0, a.default)(g, { aliases: ["TSType"], visitor: [], fields: {} });
        }
        (0, a.default)("TSThisType", {
          aliases: ["TSType"],
          visitor: [],
          fields: {},
        });
        var f = {
          aliases: ["TSType"],
          visitor: ["typeParameters", "typeAnnotation"],
          fields: d,
        };
        (0, a.default)("TSFunctionType", f),
          (0, a.default)("TSConstructorType", f),
          (0, a.default)("TSTypeReference", {
            aliases: ["TSType"],
            visitor: ["typeName", "typeParameters"],
            fields: {
              typeName: (0, a.validateType)("TSEntityName"),
              typeParameters: (0, a.validateOptionalType)(
                "TSTypeParameterInstantiation"
              ),
            },
          }),
          (0, a.default)("TSTypePredicate", {
            aliases: ["TSType"],
            visitor: ["parameterName", "typeAnnotation"],
            fields: {
              parameterName: (0, a.validateType)(["Identifier", "TSThisType"]),
              typeAnnotation: (0, a.validateType)("TSTypeAnnotation"),
            },
          }),
          (0, a.default)("TSTypeQuery", {
            aliases: ["TSType"],
            visitor: ["exprName"],
            fields: { exprName: (0, a.validateType)("TSEntityName") },
          }),
          (0, a.default)("TSTypeLiteral", {
            aliases: ["TSType"],
            visitor: ["members"],
            fields: { members: (0, a.validateArrayOfType)("TSTypeElement") },
          }),
          (0, a.default)("TSArrayType", {
            aliases: ["TSType"],
            visitor: ["elementType"],
            fields: { elementType: (0, a.validateType)("TSType") },
          }),
          (0, a.default)("TSTupleType", {
            aliases: ["TSType"],
            visitor: ["elementTypes"],
            fields: { elementTypes: (0, a.validateArrayOfType)("TSType") },
          });
        var h = {
          aliases: ["TSType"],
          visitor: ["types"],
          fields: { types: (0, a.validateArrayOfType)("TSType") },
        };
        (0, a.default)("TSUnionType", h),
          (0, a.default)("TSIntersectionType", h),
          (0, a.default)("TSConditionalType", {
            aliases: ["TSType"],
            visitor: ["checkType", "extendsType", "trueType", "falseType"],
            fields: {
              checkType: (0, a.validateType)("TSType"),
              extendsType: (0, a.validateType)("TSType"),
              trueType: (0, a.validateType)("TSType"),
              falseType: (0, a.validateType)("TSType"),
            },
          }),
          (0, a.default)("TSInferType", {
            aliases: ["TSType"],
            visitor: ["typeParameter"],
            fields: { typeParameter: (0, a.validateType)("TSTypeParameter") },
          }),
          (0, a.default)("TSParenthesizedType", {
            aliases: ["TSType"],
            visitor: ["typeAnnotation"],
            fields: { typeAnnotation: (0, a.validateType)("TSType") },
          }),
          (0, a.default)("TSTypeOperator", {
            aliases: ["TSType"],
            visitor: ["typeAnnotation"],
            fields: {
              operator: (0, a.validate)((0, a.assertValueType)("string")),
              typeAnnotation: (0, a.validateType)("TSType"),
            },
          }),
          (0, a.default)("TSIndexedAccessType", {
            aliases: ["TSType"],
            visitor: ["objectType", "indexType"],
            fields: {
              objectType: (0, a.validateType)("TSType"),
              indexType: (0, a.validateType)("TSType"),
            },
          }),
          (0, a.default)("TSMappedType", {
            aliases: ["TSType"],
            visitor: ["typeParameter", "typeAnnotation"],
            fields: {
              readonly: (0, a.validateOptional)(o),
              typeParameter: (0, a.validateType)("TSTypeParameter"),
              optional: (0, a.validateOptional)(o),
              typeAnnotation: (0, a.validateOptionalType)("TSType"),
            },
          }),
          (0, a.default)("TSLiteralType", {
            aliases: ["TSType"],
            visitor: ["literal"],
            fields: {
              literal: (0, a.validateType)([
                "NumericLiteral",
                "StringLiteral",
                "BooleanLiteral",
              ]),
            },
          }),
          (0, a.default)("TSExpressionWithTypeArguments", {
            aliases: ["TSType"],
            visitor: ["expression", "typeParameters"],
            fields: {
              expression: (0, a.validateType)("TSEntityName"),
              typeParameters: (0, a.validateOptionalType)(
                "TSTypeParameterInstantiation"
              ),
            },
          }),
          (0, a.default)("TSInterfaceDeclaration", {
            aliases: ["Statement", "Declaration"],
            visitor: ["id", "typeParameters", "extends", "body"],
            fields: {
              declare: (0, a.validateOptional)(o),
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TSTypeParameterDeclaration"
              ),
              extends: (0, a.validateOptional)(
                (0, a.arrayOfType)("TSExpressionWithTypeArguments")
              ),
              body: (0, a.validateType)("TSInterfaceBody"),
            },
          }),
          (0, a.default)("TSInterfaceBody", {
            visitor: ["body"],
            fields: { body: (0, a.validateArrayOfType)("TSTypeElement") },
          }),
          (0, a.default)("TSTypeAliasDeclaration", {
            aliases: ["Statement", "Declaration"],
            visitor: ["id", "typeParameters", "typeAnnotation"],
            fields: {
              declare: (0, a.validateOptional)(o),
              id: (0, a.validateType)("Identifier"),
              typeParameters: (0, a.validateOptionalType)(
                "TSTypeParameterDeclaration"
              ),
              typeAnnotation: (0, a.validateType)("TSType"),
            },
          }),
          (0, a.default)("TSAsExpression", {
            aliases: ["Expression"],
            visitor: ["expression", "typeAnnotation"],
            fields: {
              expression: (0, a.validateType)("Expression"),
              typeAnnotation: (0, a.validateType)("TSType"),
            },
          }),
          (0, a.default)("TSTypeAssertion", {
            aliases: ["Expression"],
            visitor: ["typeAnnotation", "expression"],
            fields: {
              typeAnnotation: (0, a.validateType)("TSType"),
              expression: (0, a.validateType)("Expression"),
            },
          }),
          (0, a.default)("TSEnumDeclaration", {
            aliases: ["Statement", "Declaration"],
            visitor: ["id", "members"],
            fields: {
              declare: (0, a.validateOptional)(o),
              const: (0, a.validateOptional)(o),
              id: (0, a.validateType)("Identifier"),
              members: (0, a.validateArrayOfType)("TSEnumMember"),
              initializer: (0, a.validateOptionalType)("Expression"),
            },
          }),
          (0, a.default)("TSEnumMember", {
            visitor: ["id", "initializer"],
            fields: {
              id: (0, a.validateType)(["Identifier", "StringLiteral"]),
              initializer: (0, a.validateOptionalType)("Expression"),
            },
          }),
          (0, a.default)("TSModuleDeclaration", {
            aliases: ["Statement", "Declaration"],
            visitor: ["id", "body"],
            fields: {
              declare: (0, a.validateOptional)(o),
              global: (0, a.validateOptional)(o),
              id: (0, a.validateType)(["Identifier", "StringLiteral"]),
              body: (0, a.validateType)([
                "TSModuleBlock",
                "TSModuleDeclaration",
              ]),
            },
          }),
          (0, a.default)("TSModuleBlock", {
            visitor: ["body"],
            fields: { body: (0, a.validateArrayOfType)("Statement") },
          }),
          (0, a.default)("TSImportEqualsDeclaration", {
            aliases: ["Statement"],
            visitor: ["id", "moduleReference"],
            fields: {
              isExport: (0, a.validate)(o),
              id: (0, a.validateType)("Identifier"),
              moduleReference: (0, a.validateType)([
                "TSEntityName",
                "TSExternalModuleReference",
              ]),
            },
          }),
          (0, a.default)("TSExternalModuleReference", {
            visitor: ["expression"],
            fields: { expression: (0, a.validateType)("StringLiteral") },
          }),
          (0, a.default)("TSNonNullExpression", {
            aliases: ["Expression"],
            visitor: ["expression"],
            fields: { expression: (0, a.validateType)("Expression") },
          }),
          (0, a.default)("TSExportAssignment", {
            aliases: ["Statement"],
            visitor: ["expression"],
            fields: { expression: (0, a.validateType)("Expression") },
          }),
          (0, a.default)("TSNamespaceExportDeclaration", {
            aliases: ["Statement"],
            visitor: ["id"],
            fields: { id: (0, a.validateType)("Identifier") },
          }),
          (0, a.default)("TSTypeAnnotation", {
            visitor: ["typeAnnotation"],
            fields: {
              typeAnnotation: { validate: (0, a.assertNodeType)("TSType") },
            },
          }),
          (0, a.default)("TSTypeParameterInstantiation", {
            visitor: ["params"],
            fields: {
              params: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("TSType"))
                ),
              },
            },
          }),
          (0, a.default)("TSTypeParameterDeclaration", {
            visitor: ["params"],
            fields: {
              params: {
                validate: (0, a.chain)(
                  (0, a.assertValueType)("array"),
                  (0, a.assertEach)((0, a.assertNodeType)("TSTypeParameter"))
                ),
              },
            },
          }),
          (0, a.default)("TSTypeParameter", {
            visitor: ["constraint", "default"],
            fields: {
              name: { validate: (0, a.assertValueType)("string") },
              constraint: {
                validate: (0, a.assertNodeType)("TSType"),
                optional: !0,
              },
              default: {
                validate: (0, a.assertNodeType)("TSType"),
                optional: !0,
              },
            },
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            if (!(0, r.default)(e)) {
              var t = (e && e.type) || JSON.stringify(e);
              throw new TypeError('Not a valid node of type "' + t + '"');
            }
          });
        var a,
          r = (a = n(164)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.assertArrayExpression = function(e, t) {
            void 0 === t && (t = {}), i("ArrayExpression", e, t);
          }),
          (t.assertAssignmentExpression = function(e, t) {
            void 0 === t && (t = {}), i("AssignmentExpression", e, t);
          }),
          (t.assertBinaryExpression = function(e, t) {
            void 0 === t && (t = {}), i("BinaryExpression", e, t);
          }),
          (t.assertInterpreterDirective = function(e, t) {
            void 0 === t && (t = {}), i("InterpreterDirective", e, t);
          }),
          (t.assertDirective = function(e, t) {
            void 0 === t && (t = {}), i("Directive", e, t);
          }),
          (t.assertDirectiveLiteral = function(e, t) {
            void 0 === t && (t = {}), i("DirectiveLiteral", e, t);
          }),
          (t.assertBlockStatement = function(e, t) {
            void 0 === t && (t = {}), i("BlockStatement", e, t);
          }),
          (t.assertBreakStatement = function(e, t) {
            void 0 === t && (t = {}), i("BreakStatement", e, t);
          }),
          (t.assertCallExpression = function(e, t) {
            void 0 === t && (t = {}), i("CallExpression", e, t);
          }),
          (t.assertCatchClause = function(e, t) {
            void 0 === t && (t = {}), i("CatchClause", e, t);
          }),
          (t.assertConditionalExpression = function(e, t) {
            void 0 === t && (t = {}), i("ConditionalExpression", e, t);
          }),
          (t.assertContinueStatement = function(e, t) {
            void 0 === t && (t = {}), i("ContinueStatement", e, t);
          }),
          (t.assertDebuggerStatement = function(e, t) {
            void 0 === t && (t = {}), i("DebuggerStatement", e, t);
          }),
          (t.assertDoWhileStatement = function(e, t) {
            void 0 === t && (t = {}), i("DoWhileStatement", e, t);
          }),
          (t.assertEmptyStatement = function(e, t) {
            void 0 === t && (t = {}), i("EmptyStatement", e, t);
          }),
          (t.assertExpressionStatement = function(e, t) {
            void 0 === t && (t = {}), i("ExpressionStatement", e, t);
          }),
          (t.assertFile = function(e, t) {
            void 0 === t && (t = {}), i("File", e, t);
          }),
          (t.assertForInStatement = function(e, t) {
            void 0 === t && (t = {}), i("ForInStatement", e, t);
          }),
          (t.assertForStatement = function(e, t) {
            void 0 === t && (t = {}), i("ForStatement", e, t);
          }),
          (t.assertFunctionDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("FunctionDeclaration", e, t);
          }),
          (t.assertFunctionExpression = function(e, t) {
            void 0 === t && (t = {}), i("FunctionExpression", e, t);
          }),
          (t.assertIdentifier = function(e, t) {
            void 0 === t && (t = {}), i("Identifier", e, t);
          }),
          (t.assertIfStatement = function(e, t) {
            void 0 === t && (t = {}), i("IfStatement", e, t);
          }),
          (t.assertLabeledStatement = function(e, t) {
            void 0 === t && (t = {}), i("LabeledStatement", e, t);
          }),
          (t.assertStringLiteral = function(e, t) {
            void 0 === t && (t = {}), i("StringLiteral", e, t);
          }),
          (t.assertNumericLiteral = function(e, t) {
            void 0 === t && (t = {}), i("NumericLiteral", e, t);
          }),
          (t.assertNullLiteral = function(e, t) {
            void 0 === t && (t = {}), i("NullLiteral", e, t);
          }),
          (t.assertBooleanLiteral = function(e, t) {
            void 0 === t && (t = {}), i("BooleanLiteral", e, t);
          }),
          (t.assertRegExpLiteral = function(e, t) {
            void 0 === t && (t = {}), i("RegExpLiteral", e, t);
          }),
          (t.assertLogicalExpression = function(e, t) {
            void 0 === t && (t = {}), i("LogicalExpression", e, t);
          }),
          (t.assertMemberExpression = function(e, t) {
            void 0 === t && (t = {}), i("MemberExpression", e, t);
          }),
          (t.assertNewExpression = function(e, t) {
            void 0 === t && (t = {}), i("NewExpression", e, t);
          }),
          (t.assertProgram = function(e, t) {
            void 0 === t && (t = {}), i("Program", e, t);
          }),
          (t.assertObjectExpression = function(e, t) {
            void 0 === t && (t = {}), i("ObjectExpression", e, t);
          }),
          (t.assertObjectMethod = function(e, t) {
            void 0 === t && (t = {}), i("ObjectMethod", e, t);
          }),
          (t.assertObjectProperty = function(e, t) {
            void 0 === t && (t = {}), i("ObjectProperty", e, t);
          }),
          (t.assertRestElement = function(e, t) {
            void 0 === t && (t = {}), i("RestElement", e, t);
          }),
          (t.assertReturnStatement = function(e, t) {
            void 0 === t && (t = {}), i("ReturnStatement", e, t);
          }),
          (t.assertSequenceExpression = function(e, t) {
            void 0 === t && (t = {}), i("SequenceExpression", e, t);
          }),
          (t.assertSwitchCase = function(e, t) {
            void 0 === t && (t = {}), i("SwitchCase", e, t);
          }),
          (t.assertSwitchStatement = function(e, t) {
            void 0 === t && (t = {}), i("SwitchStatement", e, t);
          }),
          (t.assertThisExpression = function(e, t) {
            void 0 === t && (t = {}), i("ThisExpression", e, t);
          }),
          (t.assertThrowStatement = function(e, t) {
            void 0 === t && (t = {}), i("ThrowStatement", e, t);
          }),
          (t.assertTryStatement = function(e, t) {
            void 0 === t && (t = {}), i("TryStatement", e, t);
          }),
          (t.assertUnaryExpression = function(e, t) {
            void 0 === t && (t = {}), i("UnaryExpression", e, t);
          }),
          (t.assertUpdateExpression = function(e, t) {
            void 0 === t && (t = {}), i("UpdateExpression", e, t);
          }),
          (t.assertVariableDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("VariableDeclaration", e, t);
          }),
          (t.assertVariableDeclarator = function(e, t) {
            void 0 === t && (t = {}), i("VariableDeclarator", e, t);
          }),
          (t.assertWhileStatement = function(e, t) {
            void 0 === t && (t = {}), i("WhileStatement", e, t);
          }),
          (t.assertWithStatement = function(e, t) {
            void 0 === t && (t = {}), i("WithStatement", e, t);
          }),
          (t.assertAssignmentPattern = function(e, t) {
            void 0 === t && (t = {}), i("AssignmentPattern", e, t);
          }),
          (t.assertArrayPattern = function(e, t) {
            void 0 === t && (t = {}), i("ArrayPattern", e, t);
          }),
          (t.assertArrowFunctionExpression = function(e, t) {
            void 0 === t && (t = {}), i("ArrowFunctionExpression", e, t);
          }),
          (t.assertClassBody = function(e, t) {
            void 0 === t && (t = {}), i("ClassBody", e, t);
          }),
          (t.assertClassDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ClassDeclaration", e, t);
          }),
          (t.assertClassExpression = function(e, t) {
            void 0 === t && (t = {}), i("ClassExpression", e, t);
          }),
          (t.assertExportAllDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ExportAllDeclaration", e, t);
          }),
          (t.assertExportDefaultDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ExportDefaultDeclaration", e, t);
          }),
          (t.assertExportNamedDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ExportNamedDeclaration", e, t);
          }),
          (t.assertExportSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ExportSpecifier", e, t);
          }),
          (t.assertForOfStatement = function(e, t) {
            void 0 === t && (t = {}), i("ForOfStatement", e, t);
          }),
          (t.assertImportDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ImportDeclaration", e, t);
          }),
          (t.assertImportDefaultSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ImportDefaultSpecifier", e, t);
          }),
          (t.assertImportNamespaceSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ImportNamespaceSpecifier", e, t);
          }),
          (t.assertImportSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ImportSpecifier", e, t);
          }),
          (t.assertMetaProperty = function(e, t) {
            void 0 === t && (t = {}), i("MetaProperty", e, t);
          }),
          (t.assertClassMethod = function(e, t) {
            void 0 === t && (t = {}), i("ClassMethod", e, t);
          }),
          (t.assertObjectPattern = function(e, t) {
            void 0 === t && (t = {}), i("ObjectPattern", e, t);
          }),
          (t.assertSpreadElement = function(e, t) {
            void 0 === t && (t = {}), i("SpreadElement", e, t);
          }),
          (t.assertSuper = function(e, t) {
            void 0 === t && (t = {}), i("Super", e, t);
          }),
          (t.assertTaggedTemplateExpression = function(e, t) {
            void 0 === t && (t = {}), i("TaggedTemplateExpression", e, t);
          }),
          (t.assertTemplateElement = function(e, t) {
            void 0 === t && (t = {}), i("TemplateElement", e, t);
          }),
          (t.assertTemplateLiteral = function(e, t) {
            void 0 === t && (t = {}), i("TemplateLiteral", e, t);
          }),
          (t.assertYieldExpression = function(e, t) {
            void 0 === t && (t = {}), i("YieldExpression", e, t);
          }),
          (t.assertAnyTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("AnyTypeAnnotation", e, t);
          }),
          (t.assertArrayTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("ArrayTypeAnnotation", e, t);
          }),
          (t.assertBooleanTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("BooleanTypeAnnotation", e, t);
          }),
          (t.assertBooleanLiteralTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("BooleanLiteralTypeAnnotation", e, t);
          }),
          (t.assertNullLiteralTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("NullLiteralTypeAnnotation", e, t);
          }),
          (t.assertClassImplements = function(e, t) {
            void 0 === t && (t = {}), i("ClassImplements", e, t);
          }),
          (t.assertDeclareClass = function(e, t) {
            void 0 === t && (t = {}), i("DeclareClass", e, t);
          }),
          (t.assertDeclareFunction = function(e, t) {
            void 0 === t && (t = {}), i("DeclareFunction", e, t);
          }),
          (t.assertDeclareInterface = function(e, t) {
            void 0 === t && (t = {}), i("DeclareInterface", e, t);
          }),
          (t.assertDeclareModule = function(e, t) {
            void 0 === t && (t = {}), i("DeclareModule", e, t);
          }),
          (t.assertDeclareModuleExports = function(e, t) {
            void 0 === t && (t = {}), i("DeclareModuleExports", e, t);
          }),
          (t.assertDeclareTypeAlias = function(e, t) {
            void 0 === t && (t = {}), i("DeclareTypeAlias", e, t);
          }),
          (t.assertDeclareOpaqueType = function(e, t) {
            void 0 === t && (t = {}), i("DeclareOpaqueType", e, t);
          }),
          (t.assertDeclareVariable = function(e, t) {
            void 0 === t && (t = {}), i("DeclareVariable", e, t);
          }),
          (t.assertDeclareExportDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("DeclareExportDeclaration", e, t);
          }),
          (t.assertDeclareExportAllDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("DeclareExportAllDeclaration", e, t);
          }),
          (t.assertDeclaredPredicate = function(e, t) {
            void 0 === t && (t = {}), i("DeclaredPredicate", e, t);
          }),
          (t.assertExistsTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("ExistsTypeAnnotation", e, t);
          }),
          (t.assertFunctionTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("FunctionTypeAnnotation", e, t);
          }),
          (t.assertFunctionTypeParam = function(e, t) {
            void 0 === t && (t = {}), i("FunctionTypeParam", e, t);
          }),
          (t.assertGenericTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("GenericTypeAnnotation", e, t);
          }),
          (t.assertInferredPredicate = function(e, t) {
            void 0 === t && (t = {}), i("InferredPredicate", e, t);
          }),
          (t.assertInterfaceExtends = function(e, t) {
            void 0 === t && (t = {}), i("InterfaceExtends", e, t);
          }),
          (t.assertInterfaceDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("InterfaceDeclaration", e, t);
          }),
          (t.assertInterfaceTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("InterfaceTypeAnnotation", e, t);
          }),
          (t.assertIntersectionTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("IntersectionTypeAnnotation", e, t);
          }),
          (t.assertMixedTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("MixedTypeAnnotation", e, t);
          }),
          (t.assertEmptyTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("EmptyTypeAnnotation", e, t);
          }),
          (t.assertNullableTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("NullableTypeAnnotation", e, t);
          }),
          (t.assertNumberLiteralTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("NumberLiteralTypeAnnotation", e, t);
          }),
          (t.assertNumberTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("NumberTypeAnnotation", e, t);
          }),
          (t.assertObjectTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("ObjectTypeAnnotation", e, t);
          }),
          (t.assertObjectTypeInternalSlot = function(e, t) {
            void 0 === t && (t = {}), i("ObjectTypeInternalSlot", e, t);
          }),
          (t.assertObjectTypeCallProperty = function(e, t) {
            void 0 === t && (t = {}), i("ObjectTypeCallProperty", e, t);
          }),
          (t.assertObjectTypeIndexer = function(e, t) {
            void 0 === t && (t = {}), i("ObjectTypeIndexer", e, t);
          }),
          (t.assertObjectTypeProperty = function(e, t) {
            void 0 === t && (t = {}), i("ObjectTypeProperty", e, t);
          }),
          (t.assertObjectTypeSpreadProperty = function(e, t) {
            void 0 === t && (t = {}), i("ObjectTypeSpreadProperty", e, t);
          }),
          (t.assertOpaqueType = function(e, t) {
            void 0 === t && (t = {}), i("OpaqueType", e, t);
          }),
          (t.assertQualifiedTypeIdentifier = function(e, t) {
            void 0 === t && (t = {}), i("QualifiedTypeIdentifier", e, t);
          }),
          (t.assertStringLiteralTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("StringLiteralTypeAnnotation", e, t);
          }),
          (t.assertStringTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("StringTypeAnnotation", e, t);
          }),
          (t.assertThisTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("ThisTypeAnnotation", e, t);
          }),
          (t.assertTupleTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("TupleTypeAnnotation", e, t);
          }),
          (t.assertTypeofTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("TypeofTypeAnnotation", e, t);
          }),
          (t.assertTypeAlias = function(e, t) {
            void 0 === t && (t = {}), i("TypeAlias", e, t);
          }),
          (t.assertTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("TypeAnnotation", e, t);
          }),
          (t.assertTypeCastExpression = function(e, t) {
            void 0 === t && (t = {}), i("TypeCastExpression", e, t);
          }),
          (t.assertTypeParameter = function(e, t) {
            void 0 === t && (t = {}), i("TypeParameter", e, t);
          }),
          (t.assertTypeParameterDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TypeParameterDeclaration", e, t);
          }),
          (t.assertTypeParameterInstantiation = function(e, t) {
            void 0 === t && (t = {}), i("TypeParameterInstantiation", e, t);
          }),
          (t.assertUnionTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("UnionTypeAnnotation", e, t);
          }),
          (t.assertVariance = function(e, t) {
            void 0 === t && (t = {}), i("Variance", e, t);
          }),
          (t.assertVoidTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("VoidTypeAnnotation", e, t);
          }),
          (t.assertJSXAttribute = function(e, t) {
            void 0 === t && (t = {}), i("JSXAttribute", e, t);
          }),
          (t.assertJSXClosingElement = function(e, t) {
            void 0 === t && (t = {}), i("JSXClosingElement", e, t);
          }),
          (t.assertJSXElement = function(e, t) {
            void 0 === t && (t = {}), i("JSXElement", e, t);
          }),
          (t.assertJSXEmptyExpression = function(e, t) {
            void 0 === t && (t = {}), i("JSXEmptyExpression", e, t);
          }),
          (t.assertJSXExpressionContainer = function(e, t) {
            void 0 === t && (t = {}), i("JSXExpressionContainer", e, t);
          }),
          (t.assertJSXSpreadChild = function(e, t) {
            void 0 === t && (t = {}), i("JSXSpreadChild", e, t);
          }),
          (t.assertJSXIdentifier = function(e, t) {
            void 0 === t && (t = {}), i("JSXIdentifier", e, t);
          }),
          (t.assertJSXMemberExpression = function(e, t) {
            void 0 === t && (t = {}), i("JSXMemberExpression", e, t);
          }),
          (t.assertJSXNamespacedName = function(e, t) {
            void 0 === t && (t = {}), i("JSXNamespacedName", e, t);
          }),
          (t.assertJSXOpeningElement = function(e, t) {
            void 0 === t && (t = {}), i("JSXOpeningElement", e, t);
          }),
          (t.assertJSXSpreadAttribute = function(e, t) {
            void 0 === t && (t = {}), i("JSXSpreadAttribute", e, t);
          }),
          (t.assertJSXText = function(e, t) {
            void 0 === t && (t = {}), i("JSXText", e, t);
          }),
          (t.assertJSXFragment = function(e, t) {
            void 0 === t && (t = {}), i("JSXFragment", e, t);
          }),
          (t.assertJSXOpeningFragment = function(e, t) {
            void 0 === t && (t = {}), i("JSXOpeningFragment", e, t);
          }),
          (t.assertJSXClosingFragment = function(e, t) {
            void 0 === t && (t = {}), i("JSXClosingFragment", e, t);
          }),
          (t.assertNoop = function(e, t) {
            void 0 === t && (t = {}), i("Noop", e, t);
          }),
          (t.assertParenthesizedExpression = function(e, t) {
            void 0 === t && (t = {}), i("ParenthesizedExpression", e, t);
          }),
          (t.assertAwaitExpression = function(e, t) {
            void 0 === t && (t = {}), i("AwaitExpression", e, t);
          }),
          (t.assertBindExpression = function(e, t) {
            void 0 === t && (t = {}), i("BindExpression", e, t);
          }),
          (t.assertClassProperty = function(e, t) {
            void 0 === t && (t = {}), i("ClassProperty", e, t);
          }),
          (t.assertOptionalMemberExpression = function(e, t) {
            void 0 === t && (t = {}), i("OptionalMemberExpression", e, t);
          }),
          (t.assertOptionalCallExpression = function(e, t) {
            void 0 === t && (t = {}), i("OptionalCallExpression", e, t);
          }),
          (t.assertClassPrivateProperty = function(e, t) {
            void 0 === t && (t = {}), i("ClassPrivateProperty", e, t);
          }),
          (t.assertImport = function(e, t) {
            void 0 === t && (t = {}), i("Import", e, t);
          }),
          (t.assertDecorator = function(e, t) {
            void 0 === t && (t = {}), i("Decorator", e, t);
          }),
          (t.assertDoExpression = function(e, t) {
            void 0 === t && (t = {}), i("DoExpression", e, t);
          }),
          (t.assertExportDefaultSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ExportDefaultSpecifier", e, t);
          }),
          (t.assertExportNamespaceSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ExportNamespaceSpecifier", e, t);
          }),
          (t.assertPrivateName = function(e, t) {
            void 0 === t && (t = {}), i("PrivateName", e, t);
          }),
          (t.assertBigIntLiteral = function(e, t) {
            void 0 === t && (t = {}), i("BigIntLiteral", e, t);
          }),
          (t.assertTSParameterProperty = function(e, t) {
            void 0 === t && (t = {}), i("TSParameterProperty", e, t);
          }),
          (t.assertTSDeclareFunction = function(e, t) {
            void 0 === t && (t = {}), i("TSDeclareFunction", e, t);
          }),
          (t.assertTSDeclareMethod = function(e, t) {
            void 0 === t && (t = {}), i("TSDeclareMethod", e, t);
          }),
          (t.assertTSQualifiedName = function(e, t) {
            void 0 === t && (t = {}), i("TSQualifiedName", e, t);
          }),
          (t.assertTSCallSignatureDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSCallSignatureDeclaration", e, t);
          }),
          (t.assertTSConstructSignatureDeclaration = function(e, t) {
            void 0 === t && (t = {}),
              i("TSConstructSignatureDeclaration", e, t);
          }),
          (t.assertTSPropertySignature = function(e, t) {
            void 0 === t && (t = {}), i("TSPropertySignature", e, t);
          }),
          (t.assertTSMethodSignature = function(e, t) {
            void 0 === t && (t = {}), i("TSMethodSignature", e, t);
          }),
          (t.assertTSIndexSignature = function(e, t) {
            void 0 === t && (t = {}), i("TSIndexSignature", e, t);
          }),
          (t.assertTSAnyKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSAnyKeyword", e, t);
          }),
          (t.assertTSNumberKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSNumberKeyword", e, t);
          }),
          (t.assertTSObjectKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSObjectKeyword", e, t);
          }),
          (t.assertTSBooleanKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSBooleanKeyword", e, t);
          }),
          (t.assertTSStringKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSStringKeyword", e, t);
          }),
          (t.assertTSSymbolKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSSymbolKeyword", e, t);
          }),
          (t.assertTSVoidKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSVoidKeyword", e, t);
          }),
          (t.assertTSUndefinedKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSUndefinedKeyword", e, t);
          }),
          (t.assertTSNullKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSNullKeyword", e, t);
          }),
          (t.assertTSNeverKeyword = function(e, t) {
            void 0 === t && (t = {}), i("TSNeverKeyword", e, t);
          }),
          (t.assertTSThisType = function(e, t) {
            void 0 === t && (t = {}), i("TSThisType", e, t);
          }),
          (t.assertTSFunctionType = function(e, t) {
            void 0 === t && (t = {}), i("TSFunctionType", e, t);
          }),
          (t.assertTSConstructorType = function(e, t) {
            void 0 === t && (t = {}), i("TSConstructorType", e, t);
          }),
          (t.assertTSTypeReference = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeReference", e, t);
          }),
          (t.assertTSTypePredicate = function(e, t) {
            void 0 === t && (t = {}), i("TSTypePredicate", e, t);
          }),
          (t.assertTSTypeQuery = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeQuery", e, t);
          }),
          (t.assertTSTypeLiteral = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeLiteral", e, t);
          }),
          (t.assertTSArrayType = function(e, t) {
            void 0 === t && (t = {}), i("TSArrayType", e, t);
          }),
          (t.assertTSTupleType = function(e, t) {
            void 0 === t && (t = {}), i("TSTupleType", e, t);
          }),
          (t.assertTSUnionType = function(e, t) {
            void 0 === t && (t = {}), i("TSUnionType", e, t);
          }),
          (t.assertTSIntersectionType = function(e, t) {
            void 0 === t && (t = {}), i("TSIntersectionType", e, t);
          }),
          (t.assertTSConditionalType = function(e, t) {
            void 0 === t && (t = {}), i("TSConditionalType", e, t);
          }),
          (t.assertTSInferType = function(e, t) {
            void 0 === t && (t = {}), i("TSInferType", e, t);
          }),
          (t.assertTSParenthesizedType = function(e, t) {
            void 0 === t && (t = {}), i("TSParenthesizedType", e, t);
          }),
          (t.assertTSTypeOperator = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeOperator", e, t);
          }),
          (t.assertTSIndexedAccessType = function(e, t) {
            void 0 === t && (t = {}), i("TSIndexedAccessType", e, t);
          }),
          (t.assertTSMappedType = function(e, t) {
            void 0 === t && (t = {}), i("TSMappedType", e, t);
          }),
          (t.assertTSLiteralType = function(e, t) {
            void 0 === t && (t = {}), i("TSLiteralType", e, t);
          }),
          (t.assertTSExpressionWithTypeArguments = function(e, t) {
            void 0 === t && (t = {}), i("TSExpressionWithTypeArguments", e, t);
          }),
          (t.assertTSInterfaceDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSInterfaceDeclaration", e, t);
          }),
          (t.assertTSInterfaceBody = function(e, t) {
            void 0 === t && (t = {}), i("TSInterfaceBody", e, t);
          }),
          (t.assertTSTypeAliasDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeAliasDeclaration", e, t);
          }),
          (t.assertTSAsExpression = function(e, t) {
            void 0 === t && (t = {}), i("TSAsExpression", e, t);
          }),
          (t.assertTSTypeAssertion = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeAssertion", e, t);
          }),
          (t.assertTSEnumDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSEnumDeclaration", e, t);
          }),
          (t.assertTSEnumMember = function(e, t) {
            void 0 === t && (t = {}), i("TSEnumMember", e, t);
          }),
          (t.assertTSModuleDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSModuleDeclaration", e, t);
          }),
          (t.assertTSModuleBlock = function(e, t) {
            void 0 === t && (t = {}), i("TSModuleBlock", e, t);
          }),
          (t.assertTSImportEqualsDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSImportEqualsDeclaration", e, t);
          }),
          (t.assertTSExternalModuleReference = function(e, t) {
            void 0 === t && (t = {}), i("TSExternalModuleReference", e, t);
          }),
          (t.assertTSNonNullExpression = function(e, t) {
            void 0 === t && (t = {}), i("TSNonNullExpression", e, t);
          }),
          (t.assertTSExportAssignment = function(e, t) {
            void 0 === t && (t = {}), i("TSExportAssignment", e, t);
          }),
          (t.assertTSNamespaceExportDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSNamespaceExportDeclaration", e, t);
          }),
          (t.assertTSTypeAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeAnnotation", e, t);
          }),
          (t.assertTSTypeParameterInstantiation = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeParameterInstantiation", e, t);
          }),
          (t.assertTSTypeParameterDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeParameterDeclaration", e, t);
          }),
          (t.assertTSTypeParameter = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeParameter", e, t);
          }),
          (t.assertExpression = function(e, t) {
            void 0 === t && (t = {}), i("Expression", e, t);
          }),
          (t.assertBinary = function(e, t) {
            void 0 === t && (t = {}), i("Binary", e, t);
          }),
          (t.assertScopable = function(e, t) {
            void 0 === t && (t = {}), i("Scopable", e, t);
          }),
          (t.assertBlockParent = function(e, t) {
            void 0 === t && (t = {}), i("BlockParent", e, t);
          }),
          (t.assertBlock = function(e, t) {
            void 0 === t && (t = {}), i("Block", e, t);
          }),
          (t.assertStatement = function(e, t) {
            void 0 === t && (t = {}), i("Statement", e, t);
          }),
          (t.assertTerminatorless = function(e, t) {
            void 0 === t && (t = {}), i("Terminatorless", e, t);
          }),
          (t.assertCompletionStatement = function(e, t) {
            void 0 === t && (t = {}), i("CompletionStatement", e, t);
          }),
          (t.assertConditional = function(e, t) {
            void 0 === t && (t = {}), i("Conditional", e, t);
          }),
          (t.assertLoop = function(e, t) {
            void 0 === t && (t = {}), i("Loop", e, t);
          }),
          (t.assertWhile = function(e, t) {
            void 0 === t && (t = {}), i("While", e, t);
          }),
          (t.assertExpressionWrapper = function(e, t) {
            void 0 === t && (t = {}), i("ExpressionWrapper", e, t);
          }),
          (t.assertFor = function(e, t) {
            void 0 === t && (t = {}), i("For", e, t);
          }),
          (t.assertForXStatement = function(e, t) {
            void 0 === t && (t = {}), i("ForXStatement", e, t);
          }),
          (t.assertFunction = function(e, t) {
            void 0 === t && (t = {}), i("Function", e, t);
          }),
          (t.assertFunctionParent = function(e, t) {
            void 0 === t && (t = {}), i("FunctionParent", e, t);
          }),
          (t.assertPureish = function(e, t) {
            void 0 === t && (t = {}), i("Pureish", e, t);
          }),
          (t.assertDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("Declaration", e, t);
          }),
          (t.assertPatternLike = function(e, t) {
            void 0 === t && (t = {}), i("PatternLike", e, t);
          }),
          (t.assertLVal = function(e, t) {
            void 0 === t && (t = {}), i("LVal", e, t);
          }),
          (t.assertTSEntityName = function(e, t) {
            void 0 === t && (t = {}), i("TSEntityName", e, t);
          }),
          (t.assertLiteral = function(e, t) {
            void 0 === t && (t = {}), i("Literal", e, t);
          }),
          (t.assertImmutable = function(e, t) {
            void 0 === t && (t = {}), i("Immutable", e, t);
          }),
          (t.assertUserWhitespacable = function(e, t) {
            void 0 === t && (t = {}), i("UserWhitespacable", e, t);
          }),
          (t.assertMethod = function(e, t) {
            void 0 === t && (t = {}), i("Method", e, t);
          }),
          (t.assertObjectMember = function(e, t) {
            void 0 === t && (t = {}), i("ObjectMember", e, t);
          }),
          (t.assertProperty = function(e, t) {
            void 0 === t && (t = {}), i("Property", e, t);
          }),
          (t.assertUnaryLike = function(e, t) {
            void 0 === t && (t = {}), i("UnaryLike", e, t);
          }),
          (t.assertPattern = function(e, t) {
            void 0 === t && (t = {}), i("Pattern", e, t);
          }),
          (t.assertClass = function(e, t) {
            void 0 === t && (t = {}), i("Class", e, t);
          }),
          (t.assertModuleDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ModuleDeclaration", e, t);
          }),
          (t.assertExportDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("ExportDeclaration", e, t);
          }),
          (t.assertModuleSpecifier = function(e, t) {
            void 0 === t && (t = {}), i("ModuleSpecifier", e, t);
          }),
          (t.assertFlow = function(e, t) {
            void 0 === t && (t = {}), i("Flow", e, t);
          }),
          (t.assertFlowType = function(e, t) {
            void 0 === t && (t = {}), i("FlowType", e, t);
          }),
          (t.assertFlowBaseAnnotation = function(e, t) {
            void 0 === t && (t = {}), i("FlowBaseAnnotation", e, t);
          }),
          (t.assertFlowDeclaration = function(e, t) {
            void 0 === t && (t = {}), i("FlowDeclaration", e, t);
          }),
          (t.assertFlowPredicate = function(e, t) {
            void 0 === t && (t = {}), i("FlowPredicate", e, t);
          }),
          (t.assertJSX = function(e, t) {
            void 0 === t && (t = {}), i("JSX", e, t);
          }),
          (t.assertPrivate = function(e, t) {
            void 0 === t && (t = {}), i("Private", e, t);
          }),
          (t.assertTSTypeElement = function(e, t) {
            void 0 === t && (t = {}), i("TSTypeElement", e, t);
          }),
          (t.assertTSType = function(e, t) {
            void 0 === t && (t = {}), i("TSType", e, t);
          }),
          (t.assertNumberLiteral = function(e, t) {
            console.trace(
              "The node type NumberLiteral has been renamed to NumericLiteral"
            ),
              i("NumberLiteral", e, t);
          }),
          (t.assertRegexLiteral = function(e, t) {
            console.trace(
              "The node type RegexLiteral has been renamed to RegExpLiteral"
            ),
              i("RegexLiteral", e, t);
          }),
          (t.assertRestProperty = function(e, t) {
            console.trace(
              "The node type RestProperty has been renamed to RestElement"
            ),
              i("RestProperty", e, t);
          }),
          (t.assertSpreadProperty = function(e, t) {
            console.trace(
              "The node type SpreadProperty has been renamed to SpreadElement"
            ),
              i("SpreadProperty", e, t);
          });
        var a,
          r = (a = n(76)) && a.__esModule ? a : { default: a };
        function i(e, t, n) {
          if (!(0, r.default)(e, t, n))
            throw new Error(
              'Expected type "' +
                e +
                '" with option ' +
                JSON.stringify(n) +
                ', but instead got "' +
                t.type +
                '".'
            );
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            if ("string" === e) return (0, a.stringTypeAnnotation)();
            if ("number" === e) return (0, a.numberTypeAnnotation)();
            if ("undefined" === e) return (0, a.voidTypeAnnotation)();
            if ("boolean" === e) return (0, a.booleanTypeAnnotation)();
            if ("function" === e)
              return (0, a.genericTypeAnnotation)(
                (0, a.identifier)("Function")
              );
            if ("object" === e)
              return (0, a.genericTypeAnnotation)((0, a.identifier)("Object"));
            if ("symbol" === e)
              return (0, a.genericTypeAnnotation)((0, a.identifier)("Symbol"));
            throw new Error("Invalid typeof value");
          });
        var a = n(8);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t = (0, i.default)(e);
            return 1 === t.length ? t[0] : (0, r.unionTypeAnnotation)(t);
          });
        var a,
          r = n(8),
          i = (a = n(165)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (0, r.default)(e);
          });
        var a,
          r = (a = n(37)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t = (0, r.default)(e);
            return (t.loc = null), t;
          });
        var a,
          r = (a = n(166)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n, a) {
            return (0, r.default)(e, t, [
              { type: a ? "CommentLine" : "CommentBlock", value: n },
            ]);
          });
        var a,
          r = (a = n(167)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        var a = n(339);
        e.exports = function(e) {
          return e && e.length ? a(e) : [];
        };
      },
      function(e, t, n) {
        var g = n(169),
          f = n(342),
          h = n(346),
          R = n(170),
          y = n(347),
          m = n(81);
        e.exports = function(e, t, n) {
          var a = -1,
            r = f,
            i = e.length,
            o = !0,
            s = [],
            d = s;
          if (n) (o = !1), (r = h);
          else if (200 <= i) {
            var u = t ? null : y(e);
            if (u) return m(u);
            (o = !1), (r = R), (d = new g());
          } else d = t ? [] : s;
          e: for (; ++a < i; ) {
            var l = e[a],
              c = t ? t(l) : l;
            if (((l = n || 0 !== l ? l : 0), o && c == c)) {
              for (var p = d.length; p--; ) if (d[p] === c) continue e;
              t && d.push(c), s.push(l);
            } else r(d, c, n) || (d !== s && d.push(c), s.push(l));
          }
          return s;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return this.__data__.set(e, "__lodash_hash_undefined__"), this;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return this.__data__.has(e);
        };
      },
      function(e, t, n) {
        var a = n(80);
        e.exports = function(e, t) {
          return !(null == e || !e.length) && -1 < a(e, t, 0);
        };
      },
      function(e, t) {
        e.exports = function(e, t, n, a) {
          for (var r = e.length, i = n + (a ? 1 : -1); a ? i-- : ++i < r; )
            if (t(e[i], i, e)) return i;
          return -1;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          return e != e;
        };
      },
      function(e, t) {
        e.exports = function(e, t, n) {
          for (var a = n - 1, r = e.length; ++a < r; ) if (e[a] === t) return a;
          return -1;
        };
      },
      function(e, t) {
        e.exports = function(e, t, n) {
          for (var a = -1, r = null == e ? 0 : e.length; ++a < r; )
            if (n(t, e[a])) return !0;
          return !1;
        };
      },
      function(e, t, n) {
        var a = n(160),
          r = n(348),
          i = n(81),
          o =
            a && 1 / i(new a([, -0]))[1] == 1 / 0
              ? function(e) {
                  return new a(e);
                }
              : r;
        e.exports = o;
      },
      function(e, t) {
        e.exports = function() {};
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(t) {
            return (
              a.COMMENT_KEYS.forEach(function(e) {
                t[e] = null;
              }),
              t
            );
          });
        var a = n(22);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TSTYPE_TYPES = t.TSTYPEELEMENT_TYPES = t.PRIVATE_TYPES = t.JSX_TYPES = t.FLOWPREDICATE_TYPES = t.FLOWDECLARATION_TYPES = t.FLOWBASEANNOTATION_TYPES = t.FLOWTYPE_TYPES = t.FLOW_TYPES = t.MODULESPECIFIER_TYPES = t.EXPORTDECLARATION_TYPES = t.MODULEDECLARATION_TYPES = t.CLASS_TYPES = t.PATTERN_TYPES = t.UNARYLIKE_TYPES = t.PROPERTY_TYPES = t.OBJECTMEMBER_TYPES = t.METHOD_TYPES = t.USERWHITESPACABLE_TYPES = t.IMMUTABLE_TYPES = t.LITERAL_TYPES = t.TSENTITYNAME_TYPES = t.LVAL_TYPES = t.PATTERNLIKE_TYPES = t.DECLARATION_TYPES = t.PUREISH_TYPES = t.FUNCTIONPARENT_TYPES = t.FUNCTION_TYPES = t.FORXSTATEMENT_TYPES = t.FOR_TYPES = t.EXPRESSIONWRAPPER_TYPES = t.WHILE_TYPES = t.LOOP_TYPES = t.CONDITIONAL_TYPES = t.COMPLETIONSTATEMENT_TYPES = t.TERMINATORLESS_TYPES = t.STATEMENT_TYPES = t.BLOCK_TYPES = t.BLOCKPARENT_TYPES = t.SCOPABLE_TYPES = t.BINARY_TYPES = t.EXPRESSION_TYPES = void 0);
        var a = n(13),
          r = a.FLIPPED_ALIAS_KEYS.Expression;
        t.EXPRESSION_TYPES = r;
        var i = a.FLIPPED_ALIAS_KEYS.Binary;
        t.BINARY_TYPES = i;
        var o = a.FLIPPED_ALIAS_KEYS.Scopable;
        t.SCOPABLE_TYPES = o;
        var s = a.FLIPPED_ALIAS_KEYS.BlockParent;
        t.BLOCKPARENT_TYPES = s;
        var d = a.FLIPPED_ALIAS_KEYS.Block;
        t.BLOCK_TYPES = d;
        var u = a.FLIPPED_ALIAS_KEYS.Statement;
        t.STATEMENT_TYPES = u;
        var l = a.FLIPPED_ALIAS_KEYS.Terminatorless;
        t.TERMINATORLESS_TYPES = l;
        var c = a.FLIPPED_ALIAS_KEYS.CompletionStatement;
        t.COMPLETIONSTATEMENT_TYPES = c;
        var p = a.FLIPPED_ALIAS_KEYS.Conditional;
        t.CONDITIONAL_TYPES = p;
        var g = a.FLIPPED_ALIAS_KEYS.Loop;
        t.LOOP_TYPES = g;
        var f = a.FLIPPED_ALIAS_KEYS.While;
        t.WHILE_TYPES = f;
        var h = a.FLIPPED_ALIAS_KEYS.ExpressionWrapper;
        t.EXPRESSIONWRAPPER_TYPES = h;
        var R = a.FLIPPED_ALIAS_KEYS.For;
        t.FOR_TYPES = R;
        var y = a.FLIPPED_ALIAS_KEYS.ForXStatement;
        t.FORXSTATEMENT_TYPES = y;
        var m = a.FLIPPED_ALIAS_KEYS.Function;
        t.FUNCTION_TYPES = m;
        var v = a.FLIPPED_ALIAS_KEYS.FunctionParent;
        t.FUNCTIONPARENT_TYPES = v;
        var b = a.FLIPPED_ALIAS_KEYS.Pureish;
        t.PUREISH_TYPES = b;
        var E = a.FLIPPED_ALIAS_KEYS.Declaration;
        t.DECLARATION_TYPES = E;
        var x = a.FLIPPED_ALIAS_KEYS.PatternLike;
        t.PATTERNLIKE_TYPES = x;
        var A = a.FLIPPED_ALIAS_KEYS.LVal;
        t.LVAL_TYPES = A;
        var S = a.FLIPPED_ALIAS_KEYS.TSEntityName;
        t.TSENTITYNAME_TYPES = S;
        var _ = a.FLIPPED_ALIAS_KEYS.Literal;
        t.LITERAL_TYPES = _;
        var T = a.FLIPPED_ALIAS_KEYS.Immutable;
        t.IMMUTABLE_TYPES = T;
        var P = a.FLIPPED_ALIAS_KEYS.UserWhitespacable;
        t.USERWHITESPACABLE_TYPES = P;
        var C = a.FLIPPED_ALIAS_KEYS.Method;
        t.METHOD_TYPES = C;
        var w = a.FLIPPED_ALIAS_KEYS.ObjectMember;
        t.OBJECTMEMBER_TYPES = w;
        var D = a.FLIPPED_ALIAS_KEYS.Property;
        t.PROPERTY_TYPES = D;
        var O = a.FLIPPED_ALIAS_KEYS.UnaryLike;
        t.UNARYLIKE_TYPES = O;
        var F = a.FLIPPED_ALIAS_KEYS.Pattern;
        t.PATTERN_TYPES = F;
        var k = a.FLIPPED_ALIAS_KEYS.Class;
        t.CLASS_TYPES = k;
        var j = a.FLIPPED_ALIAS_KEYS.ModuleDeclaration;
        t.MODULEDECLARATION_TYPES = j;
        var M = a.FLIPPED_ALIAS_KEYS.ExportDeclaration;
        t.EXPORTDECLARATION_TYPES = M;
        var I = a.FLIPPED_ALIAS_KEYS.ModuleSpecifier;
        t.MODULESPECIFIER_TYPES = I;
        var N = a.FLIPPED_ALIAS_KEYS.Flow;
        t.FLOW_TYPES = N;
        var B = a.FLIPPED_ALIAS_KEYS.FlowType;
        t.FLOWTYPE_TYPES = B;
        var L = a.FLIPPED_ALIAS_KEYS.FlowBaseAnnotation;
        t.FLOWBASEANNOTATION_TYPES = L;
        var U = a.FLIPPED_ALIAS_KEYS.FlowDeclaration;
        t.FLOWDECLARATION_TYPES = U;
        var V = a.FLIPPED_ALIAS_KEYS.FlowPredicate;
        t.FLOWPREDICATE_TYPES = V;
        var W = a.FLIPPED_ALIAS_KEYS.JSX;
        t.JSX_TYPES = W;
        var G = a.FLIPPED_ALIAS_KEYS.Private;
        t.PRIVATE_TYPES = G;
        var K = a.FLIPPED_ALIAS_KEYS.TSTypeElement;
        t.TSTYPEELEMENT_TYPES = K;
        var H = a.FLIPPED_ALIAS_KEYS.TSType;
        t.TSTYPE_TYPES = H;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (
              void 0 === t && (t = "body"), (e[t] = (0, r.default)(e[t], e))
            );
          });
        var a,
          r = (a = n(174)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              ("eval" !== (e = (0, r.default)(e)) && "arguments" !== e) ||
                (e = "_" + e),
              e
            );
          });
        var a,
          r = (a = n(175)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (
              void 0 === t && (t = e.key || e.property),
              !e.computed &&
                (0, a.isIdentifier)(t) &&
                (t = (0, r.stringLiteral)(t.name)),
              t
            );
          });
        var a = n(5),
          r = n(8);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            if (
              ((0, a.isExpressionStatement)(e) && (e = e.expression),
              (0, a.isExpression)(e))
            )
              return e;
            if (
              ((0, a.isClass)(e)
                ? (e.type = "ClassExpression")
                : (0, a.isFunction)(e) && (e.type = "FunctionExpression"),
              !(0, a.isExpression)(e))
            )
              throw new Error("cannot turn " + e.type + " to an expression");
            return e;
          });
        var a = n(5);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }), (t.default = s);
        var a = n(5),
          r = o(n(37)),
          i = o(n(176));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(e, t) {
          var n;
          return (
            void 0 === t && (t = e.key),
            "method" === e.kind
              ? s.increment() + ""
              : ((n = (0, a.isIdentifier)(t)
                  ? t.name
                  : (0, a.isStringLiteral)(t)
                    ? JSON.stringify(t.value)
                    : JSON.stringify((0, i.default)((0, r.default)(t)))),
                e.computed && (n = "[" + n + "]"),
                e.static && (n = "static:" + n),
                n)
          );
        }
        (s.uid = 0),
          (s.increment = function() {
            return s.uid >= Number.MAX_SAFE_INTEGER ? (s.uid = 0) : s.uid++;
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            if (e && e.length) {
              var n = [],
                a = (0, o.default)(e, t, n);
              if (a) {
                for (var r = 0; r < n.length; r++) {
                  var i = n[r];
                  t.push(i);
                }
                return a;
              }
            }
          });
        var a,
          o = (a = n(357)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function e(t, n, a) {
            var r = [],
              i = !0,
              o = t,
              s = Array.isArray(o),
              d = 0;
            for (o = s ? o : o[Symbol.iterator](); ; ) {
              var u;
              if (s) {
                if (d >= o.length) break;
                u = o[d++];
              } else {
                if ((d = o.next()).done) break;
                u = d.value;
              }
              var l = u;
              if (((i = !1), (0, x.isExpression)(l))) r.push(l);
              else if ((0, x.isExpressionStatement)(l)) r.push(l.expression);
              else if ((0, x.isVariableDeclaration)(l)) {
                if ("var" !== l.kind) return;
                var c = l.declarations,
                  p = Array.isArray(c),
                  g = 0;
                for (c = p ? c : c[Symbol.iterator](); ; ) {
                  var f;
                  if (p) {
                    if (g >= c.length) break;
                    f = c[g++];
                  } else {
                    if ((g = c.next()).done) break;
                    f = g.value;
                  }
                  var h = f,
                    R = (0, E.default)(h);
                  for (var y in R)
                    a.push({ kind: l.kind, id: (0, S.default)(R[y]) });
                  h.init &&
                    r.push((0, A.assignmentExpression)("=", h.id, h.init));
                }
                i = !0;
              } else if ((0, x.isIfStatement)(l)) {
                var m = l.consequent
                    ? e([l.consequent], n, a)
                    : n.buildUndefinedNode(),
                  v = l.alternate
                    ? e([l.alternate], n, a)
                    : n.buildUndefinedNode();
                if (!m || !v) return;
                r.push((0, A.conditionalExpression)(l.test, m, v));
              } else if ((0, x.isBlockStatement)(l)) {
                var b = e(l.body, n, a);
                if (!b) return;
                r.push(b);
              } else {
                if (!(0, x.isEmptyStatement)(l)) return;
                i = !0;
              }
            }
            return (
              i && r.push(n.buildUndefinedNode()),
              1 === r.length ? r[0] : (0, A.sequenceExpression)(r)
            );
          });
        var E = a(n(48)),
          x = n(5),
          A = n(8),
          S = a(n(37));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            if ((0, r.isStatement)(e)) return e;
            var n,
              a = !1;
            if ((0, r.isClass)(e)) (a = !0), (n = "ClassDeclaration");
            else if ((0, r.isFunction)(e))
              (a = !0), (n = "FunctionDeclaration");
            else if ((0, r.isAssignmentExpression)(e))
              return (0, i.expressionStatement)(e);
            if ((a && !e.id && (n = !1), n)) return (e.type = n), e;
            if (t) return !1;
            throw new Error("cannot turn " + e.type + " to a statement");
          });
        var r = n(5),
          i = n(8);
      },
      function(e, t, n) {
        "use strict";
        function u() {
          var e = a(n(360));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function l() {
          var e = a(n(361));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function e(t) {
            if (void 0 === t) return (0, p.identifier)("undefined");
            if (!0 === t || !1 === t) return (0, p.booleanLiteral)(t);
            if (null === t) return (0, p.nullLiteral)();
            if ("string" == typeof t) return (0, p.stringLiteral)(t);
            var n, a;
            if ("number" == typeof t)
              return (
                (n = Number.isFinite(t)
                  ? (0, p.numericLiteral)(Math.abs(t))
                  : ((a = Number.isNaN(t)
                      ? (0, p.numericLiteral)(0)
                      : (0, p.numericLiteral)(1)),
                    (0, p.binaryExpression)("/", a, (0, p.numericLiteral)(0)))),
                (t < 0 || Object.is(t, -0)) &&
                  (n = (0, p.unaryExpression)("-", n)),
                n
              );
            if ((0, l().default)(t)) {
              var r = t.source,
                i = t.toString().match(/\/([a-z]+|)$/)[1];
              return (0, p.regExpLiteral)(r, i);
            }
            if (Array.isArray(t)) return (0, p.arrayExpression)(t.map(e));
            if ((0, u().default)(t)) {
              var o = [];
              for (var s in t) {
                var d;
                (d = (0, c.default)(s)
                  ? (0, p.identifier)(s)
                  : (0, p.stringLiteral)(s)),
                  o.push((0, p.objectProperty)(d, e(t[s])));
              }
              return (0, p.objectExpression)(o);
            }
            throw new Error("don't know how to turn this value into a node");
          });
        var c = a(n(36)),
          p = n(8);
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        var a = n(16),
          r = n(72),
          i = n(12),
          o = Function.prototype,
          s = Object.prototype,
          d = o.toString,
          u = s.hasOwnProperty,
          l = d.call(Object);
        e.exports = function(e) {
          if (!i(e) || "[object Object]" != a(e)) return !1;
          var t = r(e);
          if (null === t) return !0;
          var n = u.call(t, "constructor") && t.constructor;
          return "function" == typeof n && n instanceof n && d.call(n) == l;
        };
      },
      function(e, t, n) {
        var a = n(362),
          r = n(29),
          i = n(45),
          o = i && i.isRegExp,
          s = o ? r(o) : a;
        e.exports = s;
      },
      function(e, t, n) {
        var a = n(16),
          r = n(12);
        e.exports = function(e) {
          return r(e) && "[object RegExp]" == a(e);
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            return (
              void 0 === n && (n = !1),
              (e.object = (0, a.memberExpression)(
                e.object,
                e.property,
                e.computed
              )),
              (e.property = t),
              (e.computed = !!n),
              e
            );
          });
        var a = n(8);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            if (!e || !t) return e;
            var n = g.INHERIT_KEYS.optional,
              a = Array.isArray(n),
              r = 0;
            for (n = a ? n : n[Symbol.iterator](); ; ) {
              var i;
              if (a) {
                if (r >= n.length) break;
                i = n[r++];
              } else {
                if ((r = n.next()).done) break;
                i = r.value;
              }
              var o = i;
              null == e[o] && (e[o] = t[o]);
            }
            for (var s in t) "_" === s[0] && "__clone" !== s && (e[s] = t[s]);
            var d = g.INHERIT_KEYS.force,
              u = Array.isArray(d),
              l = 0;
            for (d = u ? d : d[Symbol.iterator](); ; ) {
              var c;
              if (u) {
                if (l >= d.length) break;
                c = d[l++];
              } else {
                if ((l = d.next()).done) break;
                c = l.value;
              }
              var p = c;
              e[p] = t[p];
            }
            return (0, f.default)(e, t), e;
          });
        var a,
          g = n(22),
          f = (a = n(172)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (e.object = (0, a.memberExpression)(t, e.object)), e;
          });
        var a = n(8);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (0, r.default)(e, t, !0);
          });
        var a,
          r = (a = n(48)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            "function" == typeof t && (t = { enter: t });
            var a = t;
            !(function e(t, n, a, r, i) {
              var o = h.VISITOR_KEYS[t.type];
              if (o) {
                n && n(t, i, r);
                var s = o,
                  d = Array.isArray(s),
                  u = 0;
                for (s = d ? s : s[Symbol.iterator](); ; ) {
                  var l;
                  if (d) {
                    if (u >= s.length) break;
                    l = s[u++];
                  } else {
                    if ((u = s.next()).done) break;
                    l = u.value;
                  }
                  var c = l,
                    p = t[c];
                  if (Array.isArray(p))
                    for (var g = 0; g < p.length; g++) {
                      var f = p[g];
                      f &&
                        (i.push({ node: t, key: c, index: g }),
                        e(f, n, a, r, i),
                        i.pop());
                    }
                  else
                    p &&
                      (i.push({ node: t, key: c }), e(p, n, a, r, i), i.pop());
                }
                a && a(t, i, r);
              }
            })(e, a.enter, a.exit, n, []);
          });
        var h = n(13);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n = i.default.keys[t.type];
            if (n)
              for (var a = 0; a < n.length; a++) {
                var r = t[n[a]];
                if (Array.isArray(r)) {
                  if (0 <= r.indexOf(e)) return !0;
                } else if (r === e) return !0;
              }
            return !1;
          });
        var a,
          i = (a = n(48)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              (0, r.isFunctionDeclaration)(e) ||
              (0, r.isClassDeclaration)(e) ||
              (0, i.default)(e)
            );
          });
        var a,
          r = n(5),
          i = (a = n(179)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              !!(0, r.default)(e.type, "Immutable") ||
              (!!(0, i.isIdentifier)(e) && "undefined" === e.name)
            );
          });
        var a,
          r = (a = n(77)) && a.__esModule ? a : { default: a },
          i = n(5);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function e(t, n) {
            if (
              "object" != typeof t ||
              "object" != typeof n ||
              null == t ||
              null == n
            )
              return t === n;
            if (t.type !== n.type) return !1;
            for (
              var a = Object.keys(u.NODE_FIELDS[t.type] || t.type),
                r = u.VISITOR_KEYS[t.type],
                i = 0;
              i < a.length;
              i++
            ) {
              var o = a[i];
              if (typeof t[o] != typeof n[o]) return !1;
              if (Array.isArray(t[o])) {
                if (!Array.isArray(n[o])) return !1;
                if (t[o].length !== n[o].length) return !1;
                for (var s = 0; s < t[o].length; s++)
                  if (!e(t[o][s], n[o][s])) return !1;
              } else if ("object" != typeof t[o] || (r && r.includes(o))) {
                if (!e(t[o], n[o])) return !1;
              } else for (var d in t[o]) if (t[o][d] !== n[o][d]) return !1;
            }
            return !0;
          });
        var u = n(13);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            switch (t.type) {
              case "MemberExpression":
              case "JSXMemberExpression":
              case "OptionalMemberExpression":
                return t.property === e ? !!t.computed : t.object === e;
              case "VariableDeclarator":
                return t.init === e;
              case "ArrowFunctionExpression":
                return t.body === e;
              case "ExportSpecifier":
                return !t.source && t.local === e;
              case "ObjectProperty":
              case "ClassProperty":
              case "ClassPrivateProperty":
              case "ClassMethod":
              case "ObjectMethod":
                return t.key === e ? !!t.computed : t.value === e;
              case "ClassDeclaration":
              case "ClassExpression":
                return t.superClass === e;
              case "AssignmentExpression":
              case "AssignmentPattern":
                return t.right === e;
              case "LabeledStatement":
              case "CatchClause":
              case "RestElement":
                return !1;
              case "BreakStatement":
              case "ContinueStatement":
                return !1;
              case "FunctionDeclaration":
              case "FunctionExpression":
                return !1;
              case "ExportNamespaceSpecifier":
              case "ExportDefaultSpecifier":
                return !1;
              case "ImportDefaultSpecifier":
              case "ImportNamespaceSpecifier":
              case "ImportSpecifier":
              case "JSXAttribute":
                return !1;
              case "ObjectPattern":
              case "ArrayPattern":
              case "MetaProperty":
                return !1;
              case "ObjectTypeProperty":
                return t.key !== e;
            }
            return !0;
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            return (
              (!(0, a.isBlockStatement)(e) ||
                !(0, a.isFunction)(t, { body: e })) &&
              ((!(0, a.isBlockStatement)(e) ||
                !(0, a.isCatchClause)(t, { body: e })) &&
                (0, a.isScopable)(e))
            );
          });
        var a = n(5);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              (0, a.isImportDefaultSpecifier)(e) ||
              (0, a.isIdentifier)(e.imported || e.exported, { name: "default" })
            );
          });
        var a = n(5);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (0, r.default)(e) && !i.has(e);
          });
        var a,
          r = (a = n(36)) && a.__esModule ? a : { default: a },
          i = new Set([
            "abstract",
            "boolean",
            "byte",
            "char",
            "double",
            "enum",
            "final",
            "float",
            "goto",
            "implements",
            "int",
            "interface",
            "long",
            "native",
            "package",
            "private",
            "protected",
            "public",
            "short",
            "static",
            "synchronized",
            "throws",
            "transient",
            "volatile",
          ]);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            return (
              (0, a.isVariableDeclaration)(e, { kind: "var" }) &&
              !e[r.BLOCK_SCOPED_SYMBOL]
            );
          });
        var a = n(5),
          r = n(22);
      },
      function(n, i, a) {
        (function(t) {
          function e() {
            var e;
            try {
              e = i.storage.debug;
            } catch (e) {}
            return !e && void 0 !== t && "env" in t && (e = void 0), e;
          }
          ((i = n.exports = a(378)).log = function() {
            return (
              "object" == typeof console &&
              console.log &&
              Function.prototype.apply.call(console.log, console, arguments)
            );
          }),
            (i.formatArgs = function(e) {
              var t = this.useColors;
              if (
                ((e[0] =
                  (t ? "%c" : "") +
                  this.namespace +
                  (t ? " %c" : " ") +
                  e[0] +
                  (t ? "%c " : " ") +
                  "+" +
                  i.humanize(this.diff)),
                t)
              ) {
                var n = "color: " + this.color;
                e.splice(1, 0, n, "color: inherit");
                var a = 0,
                  r = 0;
                e[0].replace(/%[a-zA-Z%]/g, function(e) {
                  "%%" !== e && "%c" === e && (r = ++a);
                }),
                  e.splice(r, 0, n);
              }
            }),
            (i.save = function(e) {
              try {
                null == e
                  ? i.storage.removeItem("debug")
                  : (i.storage.debug = e);
              } catch (e) {}
            }),
            (i.load = e),
            (i.useColors = function() {
              return (
                !(
                  "undefined" == typeof window ||
                  !window.process ||
                  "renderer" !== window.process.type
                ) ||
                (("undefined" == typeof navigator ||
                  !navigator.userAgent ||
                  !navigator.userAgent
                    .toLowerCase()
                    .match(/(edge|trident)\/(\d+)/)) &&
                  (("undefined" != typeof document &&
                    document.documentElement &&
                    document.documentElement.style &&
                    document.documentElement.style.WebkitAppearance) ||
                    ("undefined" != typeof window &&
                      window.console &&
                      (window.console.firebug ||
                        (window.console.exception && window.console.table))) ||
                    ("undefined" != typeof navigator &&
                      navigator.userAgent &&
                      navigator.userAgent
                        .toLowerCase()
                        .match(/firefox\/(\d+)/) &&
                      31 <= parseInt(RegExp.$1, 10)) ||
                    ("undefined" != typeof navigator &&
                      navigator.userAgent &&
                      navigator.userAgent
                        .toLowerCase()
                        .match(/applewebkit\/(\d+)/))))
              );
            }),
            (i.storage =
              "undefined" != typeof chrome && void 0 !== chrome.storage
                ? chrome.storage.local
                : (function() {
                    try {
                      return window.localStorage;
                    } catch (e) {}
                  })()),
            (i.colors = [
              "#0000CC",
              "#0000FF",
              "#0033CC",
              "#0033FF",
              "#0066CC",
              "#0066FF",
              "#0099CC",
              "#0099FF",
              "#00CC00",
              "#00CC33",
              "#00CC66",
              "#00CC99",
              "#00CCCC",
              "#00CCFF",
              "#3300CC",
              "#3300FF",
              "#3333CC",
              "#3333FF",
              "#3366CC",
              "#3366FF",
              "#3399CC",
              "#3399FF",
              "#33CC00",
              "#33CC33",
              "#33CC66",
              "#33CC99",
              "#33CCCC",
              "#33CCFF",
              "#6600CC",
              "#6600FF",
              "#6633CC",
              "#6633FF",
              "#66CC00",
              "#66CC33",
              "#9900CC",
              "#9900FF",
              "#9933CC",
              "#9933FF",
              "#99CC00",
              "#99CC33",
              "#CC0000",
              "#CC0033",
              "#CC0066",
              "#CC0099",
              "#CC00CC",
              "#CC00FF",
              "#CC3300",
              "#CC3333",
              "#CC3366",
              "#CC3399",
              "#CC33CC",
              "#CC33FF",
              "#CC6600",
              "#CC6633",
              "#CC9900",
              "#CC9933",
              "#CCCC00",
              "#CCCC33",
              "#FF0000",
              "#FF0033",
              "#FF0066",
              "#FF0099",
              "#FF00CC",
              "#FF00FF",
              "#FF3300",
              "#FF3333",
              "#FF3366",
              "#FF3399",
              "#FF33CC",
              "#FF33FF",
              "#FF6600",
              "#FF6633",
              "#FF9900",
              "#FF9933",
              "#FFCC00",
              "#FFCC33",
            ]),
            (i.formatters.j = function(e) {
              try {
                return JSON.stringify(e);
              } catch (e) {
                return "[UnexpectedJSONParseError]: " + e.message;
              }
            }),
            i.enable(e());
        }.call(this, a(7)));
      },
      function(e, d, t) {
        function n(e) {
          var a;
          function s() {
            if (s.enabled) {
              var r = s,
                e = +new Date(),
                t = e - (a || e);
              (r.diff = t), (r.prev = a), (r.curr = e), (a = e);
              for (
                var i = new Array(arguments.length), n = 0;
                n < i.length;
                n++
              )
                i[n] = arguments[n];
              (i[0] = d.coerce(i[0])),
                "string" != typeof i[0] && i.unshift("%O");
              var o = 0;
              (i[0] = i[0].replace(/%([a-zA-Z%])/g, function(e, t) {
                if ("%%" === e) return e;
                o++;
                var n = d.formatters[t];
                if ("function" == typeof n) {
                  var a = i[o];
                  (e = n.call(r, a)), i.splice(o, 1), o--;
                }
                return e;
              })),
                d.formatArgs.call(r, i),
                (s.log || d.log || console.log.bind(console)).apply(r, i);
            }
          }
          return (
            (s.namespace = e),
            (s.enabled = d.enabled(e)),
            (s.useColors = d.useColors()),
            (s.color = (function(e) {
              var t,
                n = 0;
              for (t in e) (n = (n << 5) - n + e.charCodeAt(t)), (n |= 0);
              return d.colors[Math.abs(n) % d.colors.length];
            })(e)),
            (s.destroy = r),
            "function" == typeof d.init && d.init(s),
            d.instances.push(s),
            s
          );
        }
        function r() {
          var e = d.instances.indexOf(this);
          return -1 !== e && (d.instances.splice(e, 1), !0);
        }
        ((d = e.exports = n.debug = n.default = n).coerce = function(e) {
          return e instanceof Error ? e.stack || e.message : e;
        }),
          (d.disable = function() {
            d.enable("");
          }),
          (d.enable = function(e) {
            var t;
            d.save(e), (d.names = []), (d.skips = []);
            var n = ("string" == typeof e ? e : "").split(/[\s,]+/),
              a = n.length;
            for (t = 0; t < a; t++)
              n[t] &&
                ("-" === (e = n[t].replace(/\*/g, ".*?"))[0]
                  ? d.skips.push(new RegExp("^" + e.substr(1) + "$"))
                  : d.names.push(new RegExp("^" + e + "$")));
            for (t = 0; t < d.instances.length; t++) {
              var r = d.instances[t];
              r.enabled = d.enabled(r.namespace);
            }
          }),
          (d.enabled = function(e) {
            if ("*" === e[e.length - 1]) return !0;
            var t, n;
            for (t = 0, n = d.skips.length; t < n; t++)
              if (d.skips[t].test(e)) return !1;
            for (t = 0, n = d.names.length; t < n; t++)
              if (d.names[t].test(e)) return !0;
            return !1;
          }),
          (d.humanize = t(180)),
          (d.instances = []),
          (d.names = []),
          (d.skips = []),
          (d.formatters = {});
      },
      function(e, t, n) {
        var a = n(16),
          r = n(9),
          i = n(12);
        e.exports = function(e) {
          return (
            "string" == typeof e || (!r(e) && i(e) && "[object String]" == a(e))
          );
        };
      },
      function(e, t, n) {
        var a = n(381);
        e.exports = function(e) {
          return e
            ? (e = a(e)) === 1 / 0 || e === -1 / 0
              ? 17976931348623157e292 * (e < 0 ? -1 : 1)
              : e == e
                ? e
                : 0
            : 0 === e
              ? e
              : 0;
        };
      },
      function(e, t, n) {
        var a = n(17),
          r = n(38),
          i = /^\s+|\s+$/g,
          o = /^[-+]0x[0-9a-f]+$/i,
          s = /^0b[01]+$/i,
          d = /^0o[0-7]+$/i,
          u = parseInt;
        e.exports = function(e) {
          if ("number" == typeof e) return e;
          if (r(e)) return NaN;
          if (a(e)) {
            var t = "function" == typeof e.valueOf ? e.valueOf() : e;
            e = a(t) ? t + "" : t;
          }
          if ("string" != typeof e) return 0 === e ? e : +e;
          e = e.replace(i, "");
          var n = s.test(e);
          return n || d.test(e)
            ? u(e.slice(2), n ? 2 : 8)
            : o.test(e)
              ? NaN
              : +e;
        };
      },
      function(e, t, n) {
        var a = n(50);
        e.exports = function(t, e) {
          return a(e, function(e) {
            return t[e];
          });
        };
      },
      function(e, t) {
        var a = Math.floor;
        e.exports = function(e, t) {
          var n = "";
          if (!e || t < 1 || 9007199254740991 < t) return n;
          for (; t % 2 && (n += e), (t = a(t / 2)) && (e += e), t; );
          return n;
        };
      },
      function(e, t, n) {
        var a = n(26),
          r = n(50),
          i = n(9),
          o = n(38),
          s = a ? a.prototype : void 0,
          d = s ? s.toString : void 0;
        e.exports = function e(t) {
          if ("string" == typeof t) return t;
          if (i(t)) return r(t, e) + "";
          if (o(t)) return d ? d.call(t) : "";
          var n = t + "";
          return "0" == n && 1 / t == -1 / 0 ? "-0" : n;
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = r(n(84));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0),
          r(n(184));
        var o = {
            ReferencedIdentifier: function(e, t) {
              var n = e.node;
              n.name === t.oldName && (n.name = t.newName);
            },
            Scope: function(e, t) {
              e.scope.bindingIdentifierEquals(
                t.oldName,
                t.binding.identifier
              ) || e.skip();
            },
            "AssignmentExpression|Declaration": function(e, t) {
              var n = e.getOuterBindingIdentifiers();
              for (var a in n) a === t.oldName && (n[a].name = t.newName);
            },
          },
          i = (function() {
            function e(e, t, n) {
              (this.newName = n), (this.oldName = t), (this.binding = e);
            }
            var t = e.prototype;
            return (
              (t.maybeConvertFromExportDeclaration = function(e) {
                var t = e.parentPath;
                t.isExportDeclaration() &&
                  ((t.isExportDefaultDeclaration() &&
                    !t.get("declaration").node.id) ||
                    (0, a().default)(t));
              }),
              (t.maybeConvertFromClassFunctionDeclaration = function(e) {}),
              (t.maybeConvertFromClassFunctionExpression = function(e) {}),
              (t.rename = function(e) {
                var t = this.binding,
                  n = this.oldName,
                  a = this.newName,
                  r = t.scope,
                  i = t.path.find(function(e) {
                    return (
                      e.isDeclaration() ||
                      e.isFunctionExpression() ||
                      e.isClassExpression()
                    );
                  });
                i &&
                  i.getOuterBindingIdentifiers()[n] === t.identifier &&
                  this.maybeConvertFromExportDeclaration(i),
                  r.traverse(e || r.block, o, this),
                  e ||
                    (r.removeOwnBinding(n),
                    (r.bindings[a] = t),
                    (this.binding.identifier.name = a)),
                  t.type,
                  i &&
                    (this.maybeConvertFromClassFunctionDeclaration(i),
                    this.maybeConvertFromClassFunctionExpression(i));
              }),
              e
            );
          })();
        t.default = i;
      },
      function(e, t, n) {
        var a = n(51),
          c = n(34),
          p = n(39),
          g = n(46),
          f = Object.prototype,
          h = f.hasOwnProperty,
          r = a(function(e, t) {
            e = Object(e);
            var n = -1,
              a = t.length,
              r = 2 < a ? t[2] : void 0;
            for (r && p(t[0], t[1], r) && (a = 1); ++n < a; )
              for (var i = t[n], o = g(i), s = -1, d = o.length; ++s < d; ) {
                var u = o[s],
                  l = e[u];
                (void 0 === l || (c(l, f[u]) && !h.call(e, u))) &&
                  (e[u] = i[u]);
              }
            return e;
          });
        e.exports = r;
      },
      function(e, t, n) {
        var d = n(388),
          u = Math.max;
        e.exports = function(i, o, s) {
          return (
            (o = u(void 0 === o ? i.length - 1 : o, 0)),
            function() {
              for (
                var e = arguments, t = -1, n = u(e.length - o, 0), a = Array(n);
                ++t < n;

              )
                a[t] = e[o + t];
              t = -1;
              for (var r = Array(o + 1); ++t < o; ) r[t] = e[t];
              return (r[o] = s(a)), d(i, this, r);
            }
          );
        };
      },
      function(e, t) {
        e.exports = function(e, t, n) {
          switch (n.length) {
            case 0:
              return e.call(t);
            case 1:
              return e.call(t, n[0]);
            case 2:
              return e.call(t, n[0], n[1]);
            case 3:
              return e.call(t, n[0], n[1], n[2]);
          }
          return e.apply(t, n);
        };
      },
      function(e, t, n) {
        var a = n(390),
          r = n(392)(a);
        e.exports = r;
      },
      function(e, t, n) {
        var a = n(391),
          r = n(151),
          i = n(52),
          o = r
            ? function(e, t) {
                return r(e, "toString", {
                  configurable: !0,
                  enumerable: !1,
                  value: a(t),
                  writable: !0,
                });
              }
            : i;
        e.exports = o;
      },
      function(e, t) {
        e.exports = function(e) {
          return function() {
            return e;
          };
        };
      },
      function(e, t) {
        var i = Date.now;
        e.exports = function(n) {
          var a = 0,
            r = 0;
          return function() {
            var e = i(),
              t = 16 - (e - r);
            if (((r = e), 0 < t)) {
              if (800 <= ++a) return arguments[0];
            } else a = 0;
            return n.apply(void 0, arguments);
          };
        };
      },
      function(e) {
        e.exports = {
          builtin: {
            Array: !1,
            ArrayBuffer: !1,
            Atomics: !1,
            BigInt: !1,
            BigInt64Array: !1,
            BigUint64Array: !1,
            Boolean: !1,
            constructor: !1,
            DataView: !1,
            Date: !1,
            decodeURI: !1,
            decodeURIComponent: !1,
            encodeURI: !1,
            encodeURIComponent: !1,
            Error: !1,
            escape: !1,
            eval: !1,
            EvalError: !1,
            Float32Array: !1,
            Float64Array: !1,
            Function: !1,
            hasOwnProperty: !1,
            Infinity: !1,
            Int16Array: !1,
            Int32Array: !1,
            Int8Array: !1,
            isFinite: !1,
            isNaN: !1,
            isPrototypeOf: !1,
            JSON: !1,
            Map: !1,
            Math: !1,
            NaN: !1,
            Number: !1,
            Object: !1,
            parseFloat: !1,
            parseInt: !1,
            Promise: !1,
            propertyIsEnumerable: !1,
            Proxy: !1,
            RangeError: !1,
            ReferenceError: !1,
            Reflect: !1,
            RegExp: !1,
            Set: !1,
            SharedArrayBuffer: !1,
            String: !1,
            Symbol: !1,
            SyntaxError: !1,
            toLocaleString: !1,
            toString: !1,
            TypeError: !1,
            Uint16Array: !1,
            Uint32Array: !1,
            Uint8Array: !1,
            Uint8ClampedArray: !1,
            undefined: !1,
            unescape: !1,
            URIError: !1,
            valueOf: !1,
            WeakMap: !1,
            WeakSet: !1,
          },
          es5: {
            Array: !1,
            Boolean: !1,
            constructor: !1,
            Date: !1,
            decodeURI: !1,
            decodeURIComponent: !1,
            encodeURI: !1,
            encodeURIComponent: !1,
            Error: !1,
            escape: !1,
            eval: !1,
            EvalError: !1,
            Function: !1,
            hasOwnProperty: !1,
            Infinity: !1,
            isFinite: !1,
            isNaN: !1,
            isPrototypeOf: !1,
            JSON: !1,
            Math: !1,
            NaN: !1,
            Number: !1,
            Object: !1,
            parseFloat: !1,
            parseInt: !1,
            propertyIsEnumerable: !1,
            RangeError: !1,
            ReferenceError: !1,
            RegExp: !1,
            String: !1,
            SyntaxError: !1,
            toLocaleString: !1,
            toString: !1,
            TypeError: !1,
            undefined: !1,
            unescape: !1,
            URIError: !1,
            valueOf: !1,
          },
          es2015: {
            Array: !1,
            ArrayBuffer: !1,
            Boolean: !1,
            constructor: !1,
            DataView: !1,
            Date: !1,
            decodeURI: !1,
            decodeURIComponent: !1,
            encodeURI: !1,
            encodeURIComponent: !1,
            Error: !1,
            escape: !1,
            eval: !1,
            EvalError: !1,
            Float32Array: !1,
            Float64Array: !1,
            Function: !1,
            hasOwnProperty: !1,
            Infinity: !1,
            Int16Array: !1,
            Int32Array: !1,
            Int8Array: !1,
            isFinite: !1,
            isNaN: !1,
            isPrototypeOf: !1,
            JSON: !1,
            Map: !1,
            Math: !1,
            NaN: !1,
            Number: !1,
            Object: !1,
            parseFloat: !1,
            parseInt: !1,
            Promise: !1,
            propertyIsEnumerable: !1,
            Proxy: !1,
            RangeError: !1,
            ReferenceError: !1,
            Reflect: !1,
            RegExp: !1,
            Set: !1,
            String: !1,
            Symbol: !1,
            SyntaxError: !1,
            toLocaleString: !1,
            toString: !1,
            TypeError: !1,
            Uint16Array: !1,
            Uint32Array: !1,
            Uint8Array: !1,
            Uint8ClampedArray: !1,
            undefined: !1,
            unescape: !1,
            URIError: !1,
            valueOf: !1,
            WeakMap: !1,
            WeakSet: !1,
          },
          es2017: {
            Array: !1,
            ArrayBuffer: !1,
            Atomics: !1,
            Boolean: !1,
            constructor: !1,
            DataView: !1,
            Date: !1,
            decodeURI: !1,
            decodeURIComponent: !1,
            encodeURI: !1,
            encodeURIComponent: !1,
            Error: !1,
            escape: !1,
            eval: !1,
            EvalError: !1,
            Float32Array: !1,
            Float64Array: !1,
            Function: !1,
            hasOwnProperty: !1,
            Infinity: !1,
            Int16Array: !1,
            Int32Array: !1,
            Int8Array: !1,
            isFinite: !1,
            isNaN: !1,
            isPrototypeOf: !1,
            JSON: !1,
            Map: !1,
            Math: !1,
            NaN: !1,
            Number: !1,
            Object: !1,
            parseFloat: !1,
            parseInt: !1,
            Promise: !1,
            propertyIsEnumerable: !1,
            Proxy: !1,
            RangeError: !1,
            ReferenceError: !1,
            Reflect: !1,
            RegExp: !1,
            Set: !1,
            SharedArrayBuffer: !1,
            String: !1,
            Symbol: !1,
            SyntaxError: !1,
            toLocaleString: !1,
            toString: !1,
            TypeError: !1,
            Uint16Array: !1,
            Uint32Array: !1,
            Uint8Array: !1,
            Uint8ClampedArray: !1,
            undefined: !1,
            unescape: !1,
            URIError: !1,
            valueOf: !1,
            WeakMap: !1,
            WeakSet: !1,
          },
          browser: {
            AbortController: !1,
            AbortSignal: !1,
            addEventListener: !1,
            alert: !1,
            AnalyserNode: !1,
            Animation: !1,
            AnimationEffectReadOnly: !1,
            AnimationEffectTiming: !1,
            AnimationEffectTimingReadOnly: !1,
            AnimationEvent: !1,
            AnimationPlaybackEvent: !1,
            AnimationTimeline: !1,
            applicationCache: !1,
            ApplicationCache: !1,
            ApplicationCacheErrorEvent: !1,
            atob: !1,
            Attr: !1,
            Audio: !1,
            AudioBuffer: !1,
            AudioBufferSourceNode: !1,
            AudioContext: !1,
            AudioDestinationNode: !1,
            AudioListener: !1,
            AudioNode: !1,
            AudioParam: !1,
            AudioProcessingEvent: !1,
            AudioScheduledSourceNode: !1,
            "AudioWorkletGlobalScope ": !1,
            AudioWorkletNode: !1,
            AudioWorkletProcessor: !1,
            BarProp: !1,
            BaseAudioContext: !1,
            BatteryManager: !1,
            BeforeUnloadEvent: !1,
            BiquadFilterNode: !1,
            Blob: !1,
            BlobEvent: !1,
            blur: !1,
            BroadcastChannel: !1,
            btoa: !1,
            BudgetService: !1,
            ByteLengthQueuingStrategy: !1,
            Cache: !1,
            caches: !1,
            CacheStorage: !1,
            cancelAnimationFrame: !1,
            cancelIdleCallback: !1,
            CanvasCaptureMediaStreamTrack: !1,
            CanvasGradient: !1,
            CanvasPattern: !1,
            CanvasRenderingContext2D: !1,
            ChannelMergerNode: !1,
            ChannelSplitterNode: !1,
            CharacterData: !1,
            clearInterval: !1,
            clearTimeout: !1,
            clientInformation: !1,
            ClipboardEvent: !1,
            close: !1,
            closed: !1,
            CloseEvent: !1,
            Comment: !1,
            CompositionEvent: !1,
            confirm: !1,
            console: !1,
            ConstantSourceNode: !1,
            ConvolverNode: !1,
            CountQueuingStrategy: !1,
            createImageBitmap: !1,
            Credential: !1,
            CredentialsContainer: !1,
            crypto: !1,
            Crypto: !1,
            CryptoKey: !1,
            CSS: !1,
            CSSConditionRule: !1,
            CSSFontFaceRule: !1,
            CSSGroupingRule: !1,
            CSSImportRule: !1,
            CSSKeyframeRule: !1,
            CSSKeyframesRule: !1,
            CSSMediaRule: !1,
            CSSNamespaceRule: !1,
            CSSPageRule: !1,
            CSSRule: !1,
            CSSRuleList: !1,
            CSSStyleDeclaration: !1,
            CSSStyleRule: !1,
            CSSStyleSheet: !1,
            CSSSupportsRule: !1,
            CustomElementRegistry: !1,
            customElements: !1,
            CustomEvent: !1,
            DataTransfer: !1,
            DataTransferItem: !1,
            DataTransferItemList: !1,
            defaultstatus: !1,
            defaultStatus: !1,
            DelayNode: !1,
            DeviceMotionEvent: !1,
            DeviceOrientationEvent: !1,
            devicePixelRatio: !1,
            dispatchEvent: !1,
            document: !1,
            Document: !1,
            DocumentFragment: !1,
            DocumentType: !1,
            DOMError: !1,
            DOMException: !1,
            DOMImplementation: !1,
            DOMMatrix: !1,
            DOMMatrixReadOnly: !1,
            DOMParser: !1,
            DOMPoint: !1,
            DOMPointReadOnly: !1,
            DOMQuad: !1,
            DOMRect: !1,
            DOMRectReadOnly: !1,
            DOMStringList: !1,
            DOMStringMap: !1,
            DOMTokenList: !1,
            DragEvent: !1,
            DynamicsCompressorNode: !1,
            Element: !1,
            ErrorEvent: !1,
            event: !1,
            Event: !1,
            EventSource: !1,
            EventTarget: !1,
            external: !1,
            fetch: !1,
            File: !1,
            FileList: !1,
            FileReader: !1,
            find: !1,
            focus: !1,
            FocusEvent: !1,
            FontFace: !1,
            FontFaceSetLoadEvent: !1,
            FormData: !1,
            frameElement: !1,
            frames: !1,
            GainNode: !1,
            Gamepad: !1,
            GamepadButton: !1,
            GamepadEvent: !1,
            getComputedStyle: !1,
            getSelection: !1,
            HashChangeEvent: !1,
            Headers: !1,
            history: !1,
            History: !1,
            HTMLAllCollection: !1,
            HTMLAnchorElement: !1,
            HTMLAreaElement: !1,
            HTMLAudioElement: !1,
            HTMLBaseElement: !1,
            HTMLBodyElement: !1,
            HTMLBRElement: !1,
            HTMLButtonElement: !1,
            HTMLCanvasElement: !1,
            HTMLCollection: !1,
            HTMLContentElement: !1,
            HTMLDataElement: !1,
            HTMLDataListElement: !1,
            HTMLDetailsElement: !1,
            HTMLDialogElement: !1,
            HTMLDirectoryElement: !1,
            HTMLDivElement: !1,
            HTMLDListElement: !1,
            HTMLDocument: !1,
            HTMLElement: !1,
            HTMLEmbedElement: !1,
            HTMLFieldSetElement: !1,
            HTMLFontElement: !1,
            HTMLFormControlsCollection: !1,
            HTMLFormElement: !1,
            HTMLFrameElement: !1,
            HTMLFrameSetElement: !1,
            HTMLHeadElement: !1,
            HTMLHeadingElement: !1,
            HTMLHRElement: !1,
            HTMLHtmlElement: !1,
            HTMLIFrameElement: !1,
            HTMLImageElement: !1,
            HTMLInputElement: !1,
            HTMLLabelElement: !1,
            HTMLLegendElement: !1,
            HTMLLIElement: !1,
            HTMLLinkElement: !1,
            HTMLMapElement: !1,
            HTMLMarqueeElement: !1,
            HTMLMediaElement: !1,
            HTMLMenuElement: !1,
            HTMLMetaElement: !1,
            HTMLMeterElement: !1,
            HTMLModElement: !1,
            HTMLObjectElement: !1,
            HTMLOListElement: !1,
            HTMLOptGroupElement: !1,
            HTMLOptionElement: !1,
            HTMLOptionsCollection: !1,
            HTMLOutputElement: !1,
            HTMLParagraphElement: !1,
            HTMLParamElement: !1,
            HTMLPictureElement: !1,
            HTMLPreElement: !1,
            HTMLProgressElement: !1,
            HTMLQuoteElement: !1,
            HTMLScriptElement: !1,
            HTMLSelectElement: !1,
            HTMLShadowElement: !1,
            HTMLSlotElement: !1,
            HTMLSourceElement: !1,
            HTMLSpanElement: !1,
            HTMLStyleElement: !1,
            HTMLTableCaptionElement: !1,
            HTMLTableCellElement: !1,
            HTMLTableColElement: !1,
            HTMLTableElement: !1,
            HTMLTableRowElement: !1,
            HTMLTableSectionElement: !1,
            HTMLTemplateElement: !1,
            HTMLTextAreaElement: !1,
            HTMLTimeElement: !1,
            HTMLTitleElement: !1,
            HTMLTrackElement: !1,
            HTMLUListElement: !1,
            HTMLUnknownElement: !1,
            HTMLVideoElement: !1,
            IDBCursor: !1,
            IDBCursorWithValue: !1,
            IDBDatabase: !1,
            IDBFactory: !1,
            IDBIndex: !1,
            IDBKeyRange: !1,
            IDBObjectStore: !1,
            IDBOpenDBRequest: !1,
            IDBRequest: !1,
            IDBTransaction: !1,
            IDBVersionChangeEvent: !1,
            IdleDeadline: !1,
            IIRFilterNode: !1,
            Image: !1,
            ImageBitmap: !1,
            ImageBitmapRenderingContext: !1,
            ImageCapture: !1,
            ImageData: !1,
            indexedDB: !1,
            innerHeight: !1,
            innerWidth: !1,
            InputEvent: !1,
            IntersectionObserver: !1,
            IntersectionObserverEntry: !1,
            Intl: !1,
            isSecureContext: !1,
            KeyboardEvent: !1,
            KeyframeEffect: !1,
            KeyframeEffectReadOnly: !1,
            length: !1,
            localStorage: !1,
            location: !1,
            Location: !1,
            locationbar: !1,
            matchMedia: !1,
            MediaDeviceInfo: !1,
            MediaDevices: !1,
            MediaElementAudioSourceNode: !1,
            MediaEncryptedEvent: !1,
            MediaError: !1,
            MediaKeyMessageEvent: !1,
            MediaKeySession: !1,
            MediaKeyStatusMap: !1,
            MediaKeySystemAccess: !1,
            MediaList: !1,
            MediaQueryList: !1,
            MediaQueryListEvent: !1,
            MediaRecorder: !1,
            MediaSettingsRange: !1,
            MediaSource: !1,
            MediaStream: !1,
            MediaStreamAudioDestinationNode: !1,
            MediaStreamAudioSourceNode: !1,
            MediaStreamEvent: !1,
            MediaStreamTrack: !1,
            MediaStreamTrackEvent: !1,
            menubar: !1,
            MessageChannel: !1,
            MessageEvent: !1,
            MessagePort: !1,
            MIDIAccess: !1,
            MIDIConnectionEvent: !1,
            MIDIInput: !1,
            MIDIInputMap: !1,
            MIDIMessageEvent: !1,
            MIDIOutput: !1,
            MIDIOutputMap: !1,
            MIDIPort: !1,
            MimeType: !1,
            MimeTypeArray: !1,
            MouseEvent: !1,
            moveBy: !1,
            moveTo: !1,
            MutationEvent: !1,
            MutationObserver: !1,
            MutationRecord: !1,
            name: !1,
            NamedNodeMap: !1,
            NavigationPreloadManager: !1,
            navigator: !1,
            Navigator: !1,
            NetworkInformation: !1,
            Node: !1,
            NodeFilter: !1,
            NodeIterator: !1,
            NodeList: !1,
            Notification: !1,
            OfflineAudioCompletionEvent: !1,
            OfflineAudioContext: !1,
            offscreenBuffering: !1,
            OffscreenCanvas: !0,
            onabort: !0,
            onafterprint: !0,
            onanimationend: !0,
            onanimationiteration: !0,
            onanimationstart: !0,
            onappinstalled: !0,
            onauxclick: !0,
            onbeforeinstallprompt: !0,
            onbeforeprint: !0,
            onbeforeunload: !0,
            onblur: !0,
            oncancel: !0,
            oncanplay: !0,
            oncanplaythrough: !0,
            onchange: !0,
            onclick: !0,
            onclose: !0,
            oncontextmenu: !0,
            oncuechange: !0,
            ondblclick: !0,
            ondevicemotion: !0,
            ondeviceorientation: !0,
            ondeviceorientationabsolute: !0,
            ondrag: !0,
            ondragend: !0,
            ondragenter: !0,
            ondragleave: !0,
            ondragover: !0,
            ondragstart: !0,
            ondrop: !0,
            ondurationchange: !0,
            onemptied: !0,
            onended: !0,
            onerror: !0,
            onfocus: !0,
            ongotpointercapture: !0,
            onhashchange: !0,
            oninput: !0,
            oninvalid: !0,
            onkeydown: !0,
            onkeypress: !0,
            onkeyup: !0,
            onlanguagechange: !0,
            onload: !0,
            onloadeddata: !0,
            onloadedmetadata: !0,
            onloadstart: !0,
            onlostpointercapture: !0,
            onmessage: !0,
            onmessageerror: !0,
            onmousedown: !0,
            onmouseenter: !0,
            onmouseleave: !0,
            onmousemove: !0,
            onmouseout: !0,
            onmouseover: !0,
            onmouseup: !0,
            onmousewheel: !0,
            onoffline: !0,
            ononline: !0,
            onpagehide: !0,
            onpageshow: !0,
            onpause: !0,
            onplay: !0,
            onplaying: !0,
            onpointercancel: !0,
            onpointerdown: !0,
            onpointerenter: !0,
            onpointerleave: !0,
            onpointermove: !0,
            onpointerout: !0,
            onpointerover: !0,
            onpointerup: !0,
            onpopstate: !0,
            onprogress: !0,
            onratechange: !0,
            onrejectionhandled: !0,
            onreset: !0,
            onresize: !0,
            onscroll: !0,
            onsearch: !0,
            onseeked: !0,
            onseeking: !0,
            onselect: !0,
            onstalled: !0,
            onstorage: !0,
            onsubmit: !0,
            onsuspend: !0,
            ontimeupdate: !0,
            ontoggle: !0,
            ontransitionend: !0,
            onunhandledrejection: !0,
            onunload: !0,
            onvolumechange: !0,
            onwaiting: !0,
            onwheel: !0,
            open: !1,
            openDatabase: !1,
            opener: !1,
            Option: !1,
            origin: !1,
            OscillatorNode: !1,
            outerHeight: !1,
            outerWidth: !1,
            PageTransitionEvent: !1,
            pageXOffset: !1,
            pageYOffset: !1,
            PannerNode: !1,
            parent: !1,
            Path2D: !1,
            PaymentAddress: !1,
            PaymentRequest: !1,
            PaymentRequestUpdateEvent: !1,
            PaymentResponse: !1,
            performance: !1,
            Performance: !1,
            PerformanceEntry: !1,
            PerformanceLongTaskTiming: !1,
            PerformanceMark: !1,
            PerformanceMeasure: !1,
            PerformanceNavigation: !1,
            PerformanceNavigationTiming: !1,
            PerformanceObserver: !1,
            PerformanceObserverEntryList: !1,
            PerformancePaintTiming: !1,
            PerformanceResourceTiming: !1,
            PerformanceTiming: !1,
            PeriodicWave: !1,
            Permissions: !1,
            PermissionStatus: !1,
            personalbar: !1,
            PhotoCapabilities: !1,
            Plugin: !1,
            PluginArray: !1,
            PointerEvent: !1,
            PopStateEvent: !1,
            postMessage: !1,
            Presentation: !1,
            PresentationAvailability: !1,
            PresentationConnection: !1,
            PresentationConnectionAvailableEvent: !1,
            PresentationConnectionCloseEvent: !1,
            PresentationConnectionList: !1,
            PresentationReceiver: !1,
            PresentationRequest: !1,
            print: !1,
            ProcessingInstruction: !1,
            ProgressEvent: !1,
            PromiseRejectionEvent: !1,
            prompt: !1,
            PushManager: !1,
            PushSubscription: !1,
            PushSubscriptionOptions: !1,
            RadioNodeList: !1,
            Range: !1,
            ReadableStream: !1,
            registerProcessor: !1,
            RemotePlayback: !1,
            removeEventListener: !1,
            Request: !1,
            requestAnimationFrame: !1,
            requestIdleCallback: !1,
            resizeBy: !1,
            ResizeObserver: !1,
            ResizeObserverEntry: !1,
            resizeTo: !1,
            Response: !1,
            RTCCertificate: !1,
            RTCDataChannel: !1,
            RTCDataChannelEvent: !1,
            RTCDtlsTransport: !1,
            RTCIceCandidate: !1,
            RTCIceGatherer: !1,
            RTCIceTransport: !1,
            RTCPeerConnection: !1,
            RTCPeerConnectionIceEvent: !1,
            RTCRtpContributingSource: !1,
            RTCRtpReceiver: !1,
            RTCRtpSender: !1,
            RTCSctpTransport: !1,
            RTCSessionDescription: !1,
            RTCStatsReport: !1,
            RTCTrackEvent: !1,
            screen: !1,
            Screen: !1,
            screenLeft: !1,
            ScreenOrientation: !1,
            screenTop: !1,
            screenX: !1,
            screenY: !1,
            ScriptProcessorNode: !1,
            scroll: !1,
            scrollbars: !1,
            scrollBy: !1,
            scrollTo: !1,
            scrollX: !1,
            scrollY: !1,
            SecurityPolicyViolationEvent: !1,
            Selection: !1,
            self: !1,
            ServiceWorker: !1,
            ServiceWorkerContainer: !1,
            ServiceWorkerRegistration: !1,
            sessionStorage: !1,
            setInterval: !1,
            setTimeout: !1,
            ShadowRoot: !1,
            SharedWorker: !1,
            SourceBuffer: !1,
            SourceBufferList: !1,
            speechSynthesis: !1,
            SpeechSynthesisEvent: !1,
            SpeechSynthesisUtterance: !1,
            StaticRange: !1,
            status: !1,
            statusbar: !1,
            StereoPannerNode: !1,
            stop: !1,
            Storage: !1,
            StorageEvent: !1,
            StorageManager: !1,
            styleMedia: !1,
            StyleSheet: !1,
            StyleSheetList: !1,
            SubtleCrypto: !1,
            SVGAElement: !1,
            SVGAngle: !1,
            SVGAnimatedAngle: !1,
            SVGAnimatedBoolean: !1,
            SVGAnimatedEnumeration: !1,
            SVGAnimatedInteger: !1,
            SVGAnimatedLength: !1,
            SVGAnimatedLengthList: !1,
            SVGAnimatedNumber: !1,
            SVGAnimatedNumberList: !1,
            SVGAnimatedPreserveAspectRatio: !1,
            SVGAnimatedRect: !1,
            SVGAnimatedString: !1,
            SVGAnimatedTransformList: !1,
            SVGAnimateElement: !1,
            SVGAnimateMotionElement: !1,
            SVGAnimateTransformElement: !1,
            SVGAnimationElement: !1,
            SVGCircleElement: !1,
            SVGClipPathElement: !1,
            SVGComponentTransferFunctionElement: !1,
            SVGDefsElement: !1,
            SVGDescElement: !1,
            SVGDiscardElement: !1,
            SVGElement: !1,
            SVGEllipseElement: !1,
            SVGFEBlendElement: !1,
            SVGFEColorMatrixElement: !1,
            SVGFEComponentTransferElement: !1,
            SVGFECompositeElement: !1,
            SVGFEConvolveMatrixElement: !1,
            SVGFEDiffuseLightingElement: !1,
            SVGFEDisplacementMapElement: !1,
            SVGFEDistantLightElement: !1,
            SVGFEDropShadowElement: !1,
            SVGFEFloodElement: !1,
            SVGFEFuncAElement: !1,
            SVGFEFuncBElement: !1,
            SVGFEFuncGElement: !1,
            SVGFEFuncRElement: !1,
            SVGFEGaussianBlurElement: !1,
            SVGFEImageElement: !1,
            SVGFEMergeElement: !1,
            SVGFEMergeNodeElement: !1,
            SVGFEMorphologyElement: !1,
            SVGFEOffsetElement: !1,
            SVGFEPointLightElement: !1,
            SVGFESpecularLightingElement: !1,
            SVGFESpotLightElement: !1,
            SVGFETileElement: !1,
            SVGFETurbulenceElement: !1,
            SVGFilterElement: !1,
            SVGForeignObjectElement: !1,
            SVGGElement: !1,
            SVGGeometryElement: !1,
            SVGGradientElement: !1,
            SVGGraphicsElement: !1,
            SVGImageElement: !1,
            SVGLength: !1,
            SVGLengthList: !1,
            SVGLinearGradientElement: !1,
            SVGLineElement: !1,
            SVGMarkerElement: !1,
            SVGMaskElement: !1,
            SVGMatrix: !1,
            SVGMetadataElement: !1,
            SVGMPathElement: !1,
            SVGNumber: !1,
            SVGNumberList: !1,
            SVGPathElement: !1,
            SVGPatternElement: !1,
            SVGPoint: !1,
            SVGPointList: !1,
            SVGPolygonElement: !1,
            SVGPolylineElement: !1,
            SVGPreserveAspectRatio: !1,
            SVGRadialGradientElement: !1,
            SVGRect: !1,
            SVGRectElement: !1,
            SVGScriptElement: !1,
            SVGSetElement: !1,
            SVGStopElement: !1,
            SVGStringList: !1,
            SVGStyleElement: !1,
            SVGSVGElement: !1,
            SVGSwitchElement: !1,
            SVGSymbolElement: !1,
            SVGTextContentElement: !1,
            SVGTextElement: !1,
            SVGTextPathElement: !1,
            SVGTextPositioningElement: !1,
            SVGTitleElement: !1,
            SVGTransform: !1,
            SVGTransformList: !1,
            SVGTSpanElement: !1,
            SVGUnitTypes: !1,
            SVGUseElement: !1,
            SVGViewElement: !1,
            TaskAttributionTiming: !1,
            Text: !1,
            TextDecoder: !1,
            TextEncoder: !1,
            TextEvent: !1,
            TextMetrics: !1,
            TextTrack: !1,
            TextTrackCue: !1,
            TextTrackCueList: !1,
            TextTrackList: !1,
            TimeRanges: !1,
            toolbar: !1,
            top: !1,
            Touch: !1,
            TouchEvent: !1,
            TouchList: !1,
            TrackEvent: !1,
            TransitionEvent: !1,
            TreeWalker: !1,
            UIEvent: !1,
            URL: !1,
            URLSearchParams: !1,
            ValidityState: !1,
            visualViewport: !1,
            VisualViewport: !1,
            VTTCue: !1,
            WaveShaperNode: !1,
            WebAssembly: !1,
            WebGL2RenderingContext: !1,
            WebGLActiveInfo: !1,
            WebGLBuffer: !1,
            WebGLContextEvent: !1,
            WebGLFramebuffer: !1,
            WebGLProgram: !1,
            WebGLQuery: !1,
            WebGLRenderbuffer: !1,
            WebGLRenderingContext: !1,
            WebGLSampler: !1,
            WebGLShader: !1,
            WebGLShaderPrecisionFormat: !1,
            WebGLSync: !1,
            WebGLTexture: !1,
            WebGLTransformFeedback: !1,
            WebGLUniformLocation: !1,
            WebGLVertexArrayObject: !1,
            WebSocket: !1,
            WheelEvent: !1,
            window: !1,
            Window: !1,
            Worker: !1,
            WritableStream: !1,
            XMLDocument: !1,
            XMLHttpRequest: !1,
            XMLHttpRequestEventTarget: !1,
            XMLHttpRequestUpload: !1,
            XMLSerializer: !1,
            XPathEvaluator: !1,
            XPathExpression: !1,
            XPathResult: !1,
            XSLTProcessor: !1,
          },
          worker: {
            applicationCache: !1,
            atob: !1,
            Blob: !1,
            BroadcastChannel: !1,
            btoa: !1,
            Cache: !1,
            caches: !1,
            clearInterval: !1,
            clearTimeout: !1,
            close: !0,
            console: !1,
            fetch: !1,
            FileReaderSync: !1,
            FormData: !1,
            Headers: !1,
            IDBCursor: !1,
            IDBCursorWithValue: !1,
            IDBDatabase: !1,
            IDBFactory: !1,
            IDBIndex: !1,
            IDBKeyRange: !1,
            IDBObjectStore: !1,
            IDBOpenDBRequest: !1,
            IDBRequest: !1,
            IDBTransaction: !1,
            IDBVersionChangeEvent: !1,
            ImageData: !1,
            importScripts: !0,
            indexedDB: !1,
            location: !1,
            MessageChannel: !1,
            MessagePort: !1,
            name: !1,
            navigator: !1,
            Notification: !1,
            onclose: !0,
            onconnect: !0,
            onerror: !0,
            onlanguagechange: !0,
            onmessage: !0,
            onoffline: !0,
            ononline: !0,
            onrejectionhandled: !0,
            onunhandledrejection: !0,
            performance: !1,
            Performance: !1,
            PerformanceEntry: !1,
            PerformanceMark: !1,
            PerformanceMeasure: !1,
            PerformanceNavigation: !1,
            PerformanceResourceTiming: !1,
            PerformanceTiming: !1,
            postMessage: !0,
            Promise: !1,
            Request: !1,
            Response: !1,
            self: !0,
            ServiceWorkerRegistration: !1,
            setInterval: !1,
            setTimeout: !1,
            TextDecoder: !1,
            TextEncoder: !1,
            URL: !1,
            URLSearchParams: !1,
            WebSocket: !1,
            Worker: !1,
            XMLHttpRequest: !1,
          },
          node: {
            __dirname: !1,
            __filename: !1,
            Buffer: !1,
            clearImmediate: !1,
            clearInterval: !1,
            clearTimeout: !1,
            console: !1,
            exports: !0,
            global: !1,
            Intl: !1,
            module: !1,
            process: !1,
            require: !1,
            setImmediate: !1,
            setInterval: !1,
            setTimeout: !1,
            URL: !1,
            URLSearchParams: !1,
          },
          commonjs: { exports: !0, global: !1, module: !1, require: !1 },
          amd: { define: !1, require: !1 },
          mocha: {
            after: !1,
            afterEach: !1,
            before: !1,
            beforeEach: !1,
            context: !1,
            describe: !1,
            it: !1,
            mocha: !1,
            run: !1,
            setup: !1,
            specify: !1,
            suite: !1,
            suiteSetup: !1,
            suiteTeardown: !1,
            teardown: !1,
            test: !1,
            xcontext: !1,
            xdescribe: !1,
            xit: !1,
            xspecify: !1,
          },
          jasmine: {
            afterAll: !1,
            afterEach: !1,
            beforeAll: !1,
            beforeEach: !1,
            describe: !1,
            expect: !1,
            fail: !1,
            fdescribe: !1,
            fit: !1,
            it: !1,
            jasmine: !1,
            pending: !1,
            runs: !1,
            spyOn: !1,
            spyOnProperty: !1,
            waits: !1,
            waitsFor: !1,
            xdescribe: !1,
            xit: !1,
          },
          jest: {
            afterAll: !1,
            afterEach: !1,
            beforeAll: !1,
            beforeEach: !1,
            describe: !1,
            expect: !1,
            fdescribe: !1,
            fit: !1,
            it: !1,
            jest: !1,
            pit: !1,
            require: !1,
            test: !1,
            xdescribe: !1,
            xit: !1,
            xtest: !1,
          },
          qunit: {
            asyncTest: !1,
            deepEqual: !1,
            equal: !1,
            expect: !1,
            module: !1,
            notDeepEqual: !1,
            notEqual: !1,
            notOk: !1,
            notPropEqual: !1,
            notStrictEqual: !1,
            ok: !1,
            propEqual: !1,
            QUnit: !1,
            raises: !1,
            start: !1,
            stop: !1,
            strictEqual: !1,
            test: !1,
            throws: !1,
          },
          phantomjs: {
            console: !0,
            exports: !0,
            phantom: !0,
            require: !0,
            WebPage: !0,
          },
          couch: {
            emit: !1,
            exports: !1,
            getRow: !1,
            log: !1,
            module: !1,
            provides: !1,
            require: !1,
            respond: !1,
            send: !1,
            start: !1,
            sum: !1,
          },
          rhino: {
            defineClass: !1,
            deserialize: !1,
            gc: !1,
            help: !1,
            importClass: !1,
            importPackage: !1,
            java: !1,
            load: !1,
            loadClass: !1,
            Packages: !1,
            print: !1,
            quit: !1,
            readFile: !1,
            readUrl: !1,
            runCommand: !1,
            seal: !1,
            serialize: !1,
            spawn: !1,
            sync: !1,
            toint32: !1,
            version: !1,
          },
          nashorn: {
            __DIR__: !1,
            __FILE__: !1,
            __LINE__: !1,
            com: !1,
            edu: !1,
            exit: !1,
            java: !1,
            Java: !1,
            javafx: !1,
            JavaImporter: !1,
            javax: !1,
            JSAdapter: !1,
            load: !1,
            loadWithNewGlobal: !1,
            org: !1,
            Packages: !1,
            print: !1,
            quit: !1,
          },
          wsh: {
            ActiveXObject: !0,
            Enumerator: !0,
            GetObject: !0,
            ScriptEngine: !0,
            ScriptEngineBuildVersion: !0,
            ScriptEngineMajorVersion: !0,
            ScriptEngineMinorVersion: !0,
            VBArray: !0,
            WScript: !0,
            WSH: !0,
            XDomainRequest: !0,
          },
          jquery: { $: !1, jQuery: !1 },
          yui: { Y: !1, YUI: !1, YUI_config: !1 },
          shelljs: {
            cat: !1,
            cd: !1,
            chmod: !1,
            config: !1,
            cp: !1,
            dirs: !1,
            echo: !1,
            env: !1,
            error: !1,
            exec: !1,
            exit: !1,
            find: !1,
            grep: !1,
            ln: !1,
            ls: !1,
            mkdir: !1,
            mv: !1,
            popd: !1,
            pushd: !1,
            pwd: !1,
            rm: !1,
            sed: !1,
            set: !1,
            target: !1,
            tempdir: !1,
            test: !1,
            touch: !1,
            which: !1,
          },
          prototypejs: {
            $: !1,
            $$: !1,
            $A: !1,
            $break: !1,
            $continue: !1,
            $F: !1,
            $H: !1,
            $R: !1,
            $w: !1,
            Abstract: !1,
            Ajax: !1,
            Autocompleter: !1,
            Builder: !1,
            Class: !1,
            Control: !1,
            Draggable: !1,
            Draggables: !1,
            Droppables: !1,
            Effect: !1,
            Element: !1,
            Enumerable: !1,
            Event: !1,
            Field: !1,
            Form: !1,
            Hash: !1,
            Insertion: !1,
            ObjectRange: !1,
            PeriodicalExecuter: !1,
            Position: !1,
            Prototype: !1,
            Scriptaculous: !1,
            Selector: !1,
            Sortable: !1,
            SortableObserver: !1,
            Sound: !1,
            Template: !1,
            Toggle: !1,
            Try: !1,
          },
          meteor: {
            _: !1,
            $: !1,
            Accounts: !1,
            AccountsClient: !1,
            AccountsCommon: !1,
            AccountsServer: !1,
            App: !1,
            Assets: !1,
            Blaze: !1,
            check: !1,
            Cordova: !1,
            DDP: !1,
            DDPRateLimiter: !1,
            DDPServer: !1,
            Deps: !1,
            EJSON: !1,
            Email: !1,
            HTTP: !1,
            Log: !1,
            Match: !1,
            Meteor: !1,
            Mongo: !1,
            MongoInternals: !1,
            Npm: !1,
            Package: !1,
            Plugin: !1,
            process: !1,
            Random: !1,
            ReactiveDict: !1,
            ReactiveVar: !1,
            Router: !1,
            ServiceConfiguration: !1,
            Session: !1,
            share: !1,
            Spacebars: !1,
            Template: !1,
            Tinytest: !1,
            Tracker: !1,
            UI: !1,
            Utils: !1,
            WebApp: !1,
            WebAppInternals: !1,
          },
          mongo: {
            _isWindows: !1,
            _rand: !1,
            BulkWriteResult: !1,
            cat: !1,
            cd: !1,
            connect: !1,
            db: !1,
            getHostName: !1,
            getMemInfo: !1,
            hostname: !1,
            ISODate: !1,
            listFiles: !1,
            load: !1,
            ls: !1,
            md5sumFile: !1,
            mkdir: !1,
            Mongo: !1,
            NumberInt: !1,
            NumberLong: !1,
            ObjectId: !1,
            PlanCache: !1,
            print: !1,
            printjson: !1,
            pwd: !1,
            quit: !1,
            removeFile: !1,
            rs: !1,
            sh: !1,
            UUID: !1,
            version: !1,
            WriteResult: !1,
          },
          applescript: {
            $: !1,
            Application: !1,
            Automation: !1,
            console: !1,
            delay: !1,
            Library: !1,
            ObjC: !1,
            ObjectSpecifier: !1,
            Path: !1,
            Progress: !1,
            Ref: !1,
          },
          serviceworker: {
            Cache: !1,
            caches: !1,
            CacheStorage: !1,
            Client: !1,
            clients: !1,
            Clients: !1,
            ExtendableEvent: !1,
            ExtendableMessageEvent: !1,
            FetchEvent: !1,
            importScripts: !1,
            registration: !1,
            self: !1,
            ServiceWorker: !1,
            ServiceWorkerContainer: !1,
            ServiceWorkerGlobalScope: !1,
            ServiceWorkerMessageEvent: !1,
            ServiceWorkerRegistration: !1,
            skipWaiting: !1,
            WindowClient: !1,
          },
          atomtest: {
            advanceClock: !1,
            fakeClearInterval: !1,
            fakeClearTimeout: !1,
            fakeSetInterval: !1,
            fakeSetTimeout: !1,
            resetTimeouts: !1,
            waitsForPromise: !1,
          },
          embertest: {
            andThen: !1,
            click: !1,
            currentPath: !1,
            currentRouteName: !1,
            currentURL: !1,
            fillIn: !1,
            find: !1,
            findAll: !1,
            findWithAssert: !1,
            keyEvent: !1,
            pauseTest: !1,
            resumeTest: !1,
            triggerEvent: !1,
            visit: !1,
            wait: !1,
          },
          protractor: {
            $: !1,
            $$: !1,
            browser: !1,
            by: !1,
            By: !1,
            DartObject: !1,
            element: !1,
            protractor: !1,
          },
          "shared-node-browser": {
            clearInterval: !1,
            clearTimeout: !1,
            console: !1,
            setInterval: !1,
            setTimeout: !1,
            URL: !1,
            URLSearchParams: !1,
          },
          webextensions: { browser: !1, chrome: !1, opr: !1 },
          greasemonkey: {
            GM: !1,
            GM_addStyle: !1,
            GM_deleteValue: !1,
            GM_getResourceText: !1,
            GM_getResourceURL: !1,
            GM_getValue: !1,
            GM_info: !1,
            GM_listValues: !1,
            GM_log: !1,
            GM_openInTab: !1,
            GM_registerMenuCommand: !1,
            GM_setClipboard: !1,
            GM_setValue: !1,
            GM_xmlhttpRequest: !1,
            unsafeWindow: !1,
          },
          devtools: {
            $: !1,
            $_: !1,
            $$: !1,
            $0: !1,
            $1: !1,
            $2: !1,
            $3: !1,
            $4: !1,
            $x: !1,
            chrome: !1,
            clear: !1,
            copy: !1,
            debug: !1,
            dir: !1,
            dirxml: !1,
            getEventListeners: !1,
            inspect: !1,
            keys: !1,
            monitor: !1,
            monitorEvents: !1,
            profile: !1,
            profileEnd: !1,
            queryObjects: !1,
            table: !1,
            undebug: !1,
            unmonitor: !1,
            unmonitorEvents: !1,
            values: !1,
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(395)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (function() {
          function e(e, t) {
            (this._cachedMap = null),
              (this._code = t),
              (this._opts = e),
              (this._rawMappings = []);
          }
          var t = e.prototype;
          return (
            (t.get = function() {
              if (!this._cachedMap) {
                var t = (this._cachedMap = new (a()).default.SourceMapGenerator(
                    { sourceRoot: this._opts.sourceRoot }
                  )),
                  n = this._code;
                "string" == typeof n
                  ? t.setSourceContent(this._opts.sourceFileName, n)
                  : "object" == typeof n &&
                    Object.keys(n).forEach(function(e) {
                      t.setSourceContent(e, n[e]);
                    }),
                  this._rawMappings.forEach(t.addMapping, t);
              }
              return this._cachedMap.toJSON();
            }),
            (t.getRawMappings = function() {
              return this._rawMappings.slice();
            }),
            (t.mark = function(e, t, n, a, r, i, o) {
              (this._lastGenLine !== e && null === n) ||
                ((o ||
                  this._lastGenLine !== e ||
                  this._lastSourceLine !== n ||
                  this._lastSourceColumn !== a) &&
                  ((this._cachedMap = null),
                  (this._lastGenLine = e),
                  (this._lastSourceLine = n),
                  (this._lastSourceColumn = a),
                  this._rawMappings.push({
                    name: r || void 0,
                    generated: { line: e, column: t },
                    source: null == n ? void 0 : i || this._opts.sourceFileName,
                    original: null == n ? void 0 : { line: n, column: a },
                  })));
            }),
            e
          );
        })();
        t.default = r;
      },
      function(e, t, n) {
        (t.SourceMapGenerator = n(186).SourceMapGenerator),
          (t.SourceMapConsumer = n(398).SourceMapConsumer),
          (t.SourceNode = n(401).SourceNode);
      },
      function(e, t) {
        var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(
          ""
        );
        t.encode = function(e) {
          if (0 <= e && e < n.length) return n[e];
          throw new TypeError("Must be between 0 and 63: " + e);
        };
      },
      function(e, t, n) {
        var s = n(54),
          a = (function() {
            function e() {
              (this._array = []),
                (this._sorted = !0),
                (this._last = { generatedLine: -1, generatedColumn: 0 });
            }
            var t = e.prototype;
            return (
              (t.unsortedForEach = function(e, t) {
                this._array.forEach(e, t);
              }),
              (t.add = function(e) {
                var t, n, a, r, i, o;
                (t = this._last),
                  (n = e),
                  (a = t.generatedLine),
                  (r = n.generatedLine),
                  (i = t.generatedColumn),
                  (o = n.generatedColumn),
                  a < r ||
                  (r == a && i <= o) ||
                  s.compareByGeneratedPositionsInflated(t, n) <= 0
                    ? (this._last = e)
                    : (this._sorted = !1),
                  this._array.push(e);
              }),
              (t.toArray = function() {
                return (
                  this._sorted ||
                    (this._array.sort(s.compareByGeneratedPositionsInflated),
                    (this._sorted = !0)),
                  this._array
                );
              }),
              e
            );
          })();
        t.MappingList = a;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(14),
          r = n.n(a),
          i = n(33),
          s = n.n(i),
          o = n(19),
          d = n.n(o),
          c = n(54),
          l = n(399),
          p = n(188).ArraySet,
          u = (n(187), n(189)),
          g = n(400),
          f = Symbol("smcInternal"),
          h = (function() {
            function r(e, t) {
              return e == f
                ? Promise.resolve(this)
                : (function(e, t) {
                    var n = e;
                    "string" == typeof e && (n = c.parseSourceMapInput(e));
                    var a = null != n.sections ? new y(n, t) : new R(n, t);
                    return Promise.resolve(a);
                  })(e, t);
            }
            (r.initialize = function(e) {
              u.initialize(e["lib/mappings.wasm"]);
            }),
              (r.fromSourceMap = function(e, t) {
                return (n = e), (a = t), R.fromSourceMap(n, a);
                var n, a;
              }),
              (r.with = function(e, t, n) {
                var a = null;
                return new r(e, t)
                  .then(function(e) {
                    return n((a = e));
                  })
                  .then(
                    function(e) {
                      return a && a.destroy(), e;
                    },
                    function(e) {
                      throw (a && a.destroy(), e);
                    }
                  );
              });
            var e = r.prototype;
            return (
              (e._parseMappings = function(e, t) {
                throw new Error("Subclasses must implement _parseMappings");
              }),
              (e.eachMapping = function(e, t, n) {
                throw new Error("Subclasses must implement eachMapping");
              }),
              (e.allGeneratedPositionsFor = function(e) {
                throw new Error(
                  "Subclasses must implement allGeneratedPositionsFor"
                );
              }),
              (e.destroy = function() {
                throw new Error("Subclasses must implement destroy");
              }),
              r
            );
          })();
        (h.prototype._version = 3),
          (h.GENERATED_ORDER = 1),
          (h.ORIGINAL_ORDER = 2),
          (h.GREATEST_LOWER_BOUND = 1),
          (h.LEAST_UPPER_BOUND = 2);
        var R = (function(t) {
          function n(u, l) {
            var e;
            return (
              (e = t.call(this, f) || this).then(function(t) {
                var e = u;
                "string" == typeof u && (e = c.parseSourceMapInput(u));
                var n = c.getArg(e, "version"),
                  a = c.getArg(e, "sources"),
                  r = c.getArg(e, "names", []),
                  i = c.getArg(e, "sourceRoot", null),
                  o = c.getArg(e, "sourcesContent", null),
                  s = c.getArg(e, "mappings"),
                  d = c.getArg(e, "file", null);
                if (n != t._version)
                  throw new Error("Unsupported version: " + n);
                return (
                  i && (i = c.normalize(i)),
                  (a = a
                    .map(String)
                    .map(c.normalize)
                    .map(function(e) {
                      return i && c.isAbsolute(i) && c.isAbsolute(e)
                        ? c.relative(i, e)
                        : e;
                    })),
                  (t._names = p.fromArray(r.map(String), !0)),
                  (t._sources = p.fromArray(a, !0)),
                  (t._absoluteSources = t._sources.toArray().map(function(e) {
                    return c.computeSourceURL(i, e, l);
                  })),
                  (t.sourceRoot = i),
                  (t.sourcesContent = o),
                  (t._mappings = s),
                  (t._sourceMapURL = l),
                  (t.file = d),
                  (t._computedColumnSpans = !1),
                  (t._mappingsPtr = 0),
                  (t._wasm = null),
                  g().then(function(e) {
                    return (t._wasm = e), t;
                  })
                );
              }) || s()(e)
            );
          }
          d()(n, t);
          var e = n.prototype;
          return (
            (e._findSourceIndex = function(e) {
              var t = e;
              if (
                (null != this.sourceRoot &&
                  (t = c.relative(this.sourceRoot, t)),
                this._sources.has(t))
              )
                return this._sources.indexOf(t);
              for (var n = 0; n < this._absoluteSources.length; ++n)
                if (this._absoluteSources[n] == e) return n;
              return -1;
            }),
            (n.fromSourceMap = function(e, t) {
              return new n(e.toString());
            }),
            (e._getMappingsPtr = function() {
              return (
                0 === this._mappingsPtr &&
                  this._parseMappings(this._mappings, this.sourceRoot),
                this._mappingsPtr
              );
            }),
            (e._parseMappings = function(e, t) {
              for (
                var n = e.length,
                  a = this._wasm.exports.allocate_mappings(n),
                  r = new Uint8Array(this._wasm.exports.memory.buffer, a, n),
                  i = 0;
                i < n;
                i++
              )
                r[i] = e.charCodeAt(i);
              var o = this._wasm.exports.parse_mappings(a);
              if (!o) {
                var s = this._wasm.exports.get_last_error(),
                  d = "Error parsing mappings (code " + s + "): ";
                switch (s) {
                  case 1:
                    d +=
                      "the mappings contained a negative line, column, source index, or name index";
                    break;
                  case 2:
                    d += "the mappings contained a number larger than 2**32";
                    break;
                  case 3:
                    d += "reached EOF while in the middle of parsing a VLQ";
                    break;
                  case 4:
                    d += "invalid base 64 character while parsing a VLQ";
                    break;
                  default:
                    d += "unknown error code";
                }
                throw new Error(d);
              }
              this._mappingsPtr = o;
            }),
            (e.eachMapping = function(t, e, n) {
              var a = this,
                r = e || null,
                i = n || h.GENERATED_ORDER,
                o = this.sourceRoot;
              this._wasm.withMappingCallback(
                function(e) {
                  null !== e.source &&
                    ((e.source = a._sources.at(e.source)),
                    (e.source = c.computeSourceURL(
                      o,
                      e.source,
                      a._sourceMapURL
                    )),
                    null !== e.name && (e.name = a._names.at(e.name))),
                    t.call(r, e);
                },
                function() {
                  switch (i) {
                    case h.GENERATED_ORDER:
                      a._wasm.exports.by_generated_location(
                        a._getMappingsPtr()
                      );
                      break;
                    case h.ORIGINAL_ORDER:
                      a._wasm.exports.by_original_location(a._getMappingsPtr());
                      break;
                    default:
                      throw new Error("Unknown order of iteration.");
                  }
                }
              );
            }),
            (e.allGeneratedPositionsFor = function(e) {
              var n = this,
                t = c.getArg(e, "source"),
                a = c.getArg(e, "line"),
                r = e.column || 0;
              if ((t = this._findSourceIndex(t)) < 0) return [];
              if (a < 1) throw new Error("Line numbers must be >= 1");
              if (r < 0) throw new Error("Column numbers must be >= 0");
              var i = [];
              return (
                this._wasm.withMappingCallback(
                  function(e) {
                    var t = e.lastGeneratedColumn;
                    n._computedColumnSpans && null === t && (t = 1 / 0),
                      i.push({
                        line: e.generatedLine,
                        column: e.generatedColumn,
                        lastColumn: t,
                      });
                  },
                  function() {
                    n._wasm.exports.all_generated_locations_for(
                      n._getMappingsPtr(),
                      t,
                      a - 1,
                      "column" in e,
                      r
                    );
                  }
                ),
                i
              );
            }),
            (e.destroy = function() {
              0 !== this._mappingsPtr &&
                (this._wasm.exports.free_mappings(this._mappingsPtr),
                (this._mappingsPtr = 0));
            }),
            (e.computeColumnSpans = function() {
              this._computedColumnSpans ||
                (this._wasm.exports.compute_column_spans(
                  this._getMappingsPtr()
                ),
                (this._computedColumnSpans = !0));
            }),
            (e.originalPositionFor = function(e) {
              var t = this,
                n = {
                  generatedLine: c.getArg(e, "line"),
                  generatedColumn: c.getArg(e, "column"),
                };
              if (n.generatedLine < 1)
                throw new Error("Line numbers must be >= 1");
              if (n.generatedColumn < 0)
                throw new Error("Column numbers must be >= 0");
              var a,
                r = c.getArg(e, "bias", h.GREATEST_LOWER_BOUND);
              if (
                (null == r && (r = h.GREATEST_LOWER_BOUND),
                this._wasm.withMappingCallback(
                  function(e) {
                    return (a = e);
                  },
                  function() {
                    t._wasm.exports.original_location_for(
                      t._getMappingsPtr(),
                      n.generatedLine - 1,
                      n.generatedColumn,
                      r
                    );
                  }
                ),
                a && a.generatedLine === n.generatedLine)
              ) {
                var i = c.getArg(a, "source", null);
                null !== i &&
                  ((i = this._sources.at(i)),
                  (i = c.computeSourceURL(
                    this.sourceRoot,
                    i,
                    this._sourceMapURL
                  )));
                var o = c.getArg(a, "name", null);
                return (
                  null !== o && (o = this._names.at(o)),
                  {
                    source: i,
                    line: c.getArg(a, "originalLine", null),
                    column: c.getArg(a, "originalColumn", null),
                    name: o,
                  }
                );
              }
              return { source: null, line: null, column: null, name: null };
            }),
            (e.hasContentsOfAllSources = function() {
              return (
                !!this.sourcesContent &&
                this.sourcesContent.length >= this._sources.size() &&
                !this.sourcesContent.some(function(e) {
                  return null == e;
                })
              );
            }),
            (e.sourceContentFor = function(e, t) {
              if (!this.sourcesContent) return null;
              var n = this._findSourceIndex(e);
              if (0 <= n) return this.sourcesContent[n];
              var a,
                r = e;
              if (
                (null != this.sourceRoot &&
                  (r = c.relative(this.sourceRoot, r)),
                null != this.sourceRoot && (a = c.urlParse(this.sourceRoot)))
              ) {
                var i = r.replace(/^file:\/\//, "");
                if ("file" == a.scheme && this._sources.has(i))
                  return this.sourcesContent[this._sources.indexOf(i)];
                if ((!a.path || "/" == a.path) && this._sources.has("/" + r))
                  return this.sourcesContent[this._sources.indexOf("/" + r)];
              }
              if (t) return null;
              throw new Error('"' + r + '" is not in the SourceMap.');
            }),
            (e.generatedPositionFor = function(e) {
              var t = this,
                n = c.getArg(e, "source");
              if ((n = this._findSourceIndex(n)) < 0)
                return { line: null, column: null, lastColumn: null };
              var a = {
                source: n,
                originalLine: c.getArg(e, "line"),
                originalColumn: c.getArg(e, "column"),
              };
              if (a.originalLine < 1)
                throw new Error("Line numbers must be >= 1");
              if (a.originalColumn < 0)
                throw new Error("Column numbers must be >= 0");
              var r,
                i = c.getArg(e, "bias", h.GREATEST_LOWER_BOUND);
              if (
                (null == i && (i = h.GREATEST_LOWER_BOUND),
                this._wasm.withMappingCallback(
                  function(e) {
                    return (r = e);
                  },
                  function() {
                    t._wasm.exports.generated_location_for(
                      t._getMappingsPtr(),
                      a.source,
                      a.originalLine - 1,
                      a.originalColumn,
                      i
                    );
                  }
                ),
                r && r.source === a.source)
              ) {
                var o = r.lastGeneratedColumn;
                return (
                  this._computedColumnSpans && null === o && (o = 1 / 0),
                  {
                    line: c.getArg(r, "generatedLine", null),
                    column: c.getArg(r, "generatedColumn", null),
                    lastColumn: o,
                  }
                );
              }
              return { line: null, column: null, lastColumn: null };
            }),
            r()(n, [
              {
                key: "sources",
                get: function() {
                  return this._absoluteSources.slice();
                },
              },
            ]),
            n
          );
        })((exports.SourceMapConsumer = h));
        (R.prototype.consumer = h), (exports.BasicSourceMapConsumer = R);
        var y = (function(t) {
          function e(i, o) {
            var e;
            return (
              (e = t.call(this, f) || this).then(function(t) {
                var e = i;
                "string" == typeof i && (e = c.parseSourceMapInput(i));
                var n = c.getArg(e, "version"),
                  a = c.getArg(e, "sections");
                if (n != t._version)
                  throw new Error("Unsupported version: " + n);
                (t._sources = new p()),
                  (t._names = new p()),
                  (t.__generatedMappings = null),
                  (t.__originalMappings = null),
                  (t.__generatedMappingsUnsorted = null),
                  (t.__originalMappingsUnsorted = null);
                var r = { line: -1, column: 0 };
                return Promise.all(
                  a.map(function(e) {
                    if (e.url)
                      throw new Error(
                        "Support for url field in sections not implemented."
                      );
                    var t = c.getArg(e, "offset"),
                      n = c.getArg(t, "line"),
                      a = c.getArg(t, "column");
                    if (n < r.line || (n === r.line && a < r.column))
                      throw new Error(
                        "Section offsets must be ordered and non-overlapping."
                      );
                    return (
                      (r = t),
                      new h(c.getArg(e, "map"), o).then(function(e) {
                        return {
                          generatedOffset: {
                            generatedLine: n + 1,
                            generatedColumn: a + 1,
                          },
                          consumer: e,
                        };
                      })
                    );
                  })
                ).then(function(e) {
                  return (t._sections = e), t;
                });
              }) || s()(e)
            );
          }
          d()(e, t);
          var n = e.prototype;
          return (
            (n._sortGeneratedMappings = function() {
              var e = this._generatedMappingsUnsorted;
              e.sort(c.compareByGeneratedPositionsDeflated),
                (this.__generatedMappings = e);
            }),
            (n._sortOriginalMappings = function() {
              var e = this._originalMappingsUnsorted;
              e.sort(c.compareByOriginalPositions),
                (this.__originalMappings = e);
            }),
            (n.originalPositionFor = function(e) {
              var t = {
                  generatedLine: c.getArg(e, "line"),
                  generatedColumn: c.getArg(e, "column"),
                },
                n = l.search(t, this._sections, function(e, t) {
                  return (
                    e.generatedLine - t.generatedOffset.generatedLine ||
                    e.generatedColumn - t.generatedOffset.generatedColumn
                  );
                }),
                a = this._sections[n];
              return a
                ? a.consumer.originalPositionFor({
                    line:
                      t.generatedLine - (a.generatedOffset.generatedLine - 1),
                    column:
                      t.generatedColumn -
                      (a.generatedOffset.generatedLine === t.generatedLine
                        ? a.generatedOffset.generatedColumn - 1
                        : 0),
                    bias: e.bias,
                  })
                : { source: null, line: null, column: null, name: null };
            }),
            (n.hasContentsOfAllSources = function() {
              return this._sections.every(function(e) {
                return e.consumer.hasContentsOfAllSources();
              });
            }),
            (n.sourceContentFor = function(e, t) {
              for (var n = 0; n < this._sections.length; n++) {
                var a = this._sections[n].consumer.sourceContentFor(e, !0);
                if (a) return a;
              }
              if (t) return null;
              throw new Error('"' + e + '" is not in the SourceMap.');
            }),
            (n.generatedPositionFor = function(e) {
              for (var t = 0; t < this._sections.length; t++) {
                var n = this._sections[t];
                if (-1 !== n.consumer._findSourceIndex(c.getArg(e, "source"))) {
                  var a = n.consumer.generatedPositionFor(e);
                  if (a)
                    return {
                      line: a.line + (n.generatedOffset.generatedLine - 1),
                      column:
                        a.column +
                        (n.generatedOffset.generatedLine === a.line
                          ? n.generatedOffset.generatedColumn - 1
                          : 0),
                    };
                }
              }
              return { line: null, column: null };
            }),
            (n._parseMappings = function(e, t) {
              for (
                var d = this,
                  u = (this.__generatedMappingsUnsorted = []),
                  l = (this.__originalMappingsUnsorted = []),
                  n = function(e) {
                    var t = d._sections[e],
                      n = [];
                    t.consumer.eachMapping(function(e) {
                      return n.push(e);
                    });
                    for (var a = 0; a < n.length; a++) {
                      var r = n[a],
                        i = c.computeSourceURL(
                          t.consumer.sourceRoot,
                          null,
                          d._sourceMapURL
                        );
                      d._sources.add(i), (i = d._sources.indexOf(i));
                      var o = null;
                      r.name &&
                        (d._names.add(r.name), (o = d._names.indexOf(r.name)));
                      var s = {
                        source: i,
                        generatedLine:
                          r.generatedLine +
                          (t.generatedOffset.generatedLine - 1),
                        generatedColumn:
                          r.generatedColumn +
                          (t.generatedOffset.generatedLine === r.generatedLine
                            ? t.generatedOffset.generatedColumn - 1
                            : 0),
                        originalLine: r.originalLine,
                        originalColumn: r.originalColumn,
                        name: o,
                      };
                      u.push(s), "number" == typeof s.originalLine && l.push(s);
                    }
                  },
                  a = 0;
                a < this._sections.length;
                a++
              )
                n(a);
            }),
            (n.eachMapping = function(e, t, n) {
              var a,
                r = t || null;
              switch (n || h.GENERATED_ORDER) {
                case h.GENERATED_ORDER:
                  a = this._generatedMappings;
                  break;
                case h.ORIGINAL_ORDER:
                  a = this._originalMappings;
                  break;
                default:
                  throw new Error("Unknown order of iteration.");
              }
              var i = this.sourceRoot;
              a.map(function(e) {
                var t = null;
                return (
                  null !== e.source &&
                    ((t = this._sources.at(e.source)),
                    (t = c.computeSourceURL(i, t, this._sourceMapURL))),
                  {
                    source: t,
                    generatedLine: e.generatedLine,
                    generatedColumn: e.generatedColumn,
                    originalLine: e.originalLine,
                    originalColumn: e.originalColumn,
                    name: null === e.name ? null : this._names.at(e.name),
                  }
                );
              }, this).forEach(e, r);
            }),
            (n._findMapping = function(e, t, n, a, r, i) {
              if (e[n] <= 0)
                throw new TypeError(
                  "Line must be greater than or equal to 1, got " + e[n]
                );
              if (e[a] < 0)
                throw new TypeError(
                  "Column must be greater than or equal to 0, got " + e[a]
                );
              return l.search(e, t, r, i);
            }),
            (n.allGeneratedPositionsFor = function(e) {
              var t = c.getArg(e, "line"),
                n = {
                  source: c.getArg(e, "source"),
                  originalLine: t,
                  originalColumn: c.getArg(e, "column", 0),
                };
              if (((n.source = this._findSourceIndex(n.source)), n.source < 0))
                return [];
              if (n.originalLine < 1)
                throw new Error("Line numbers must be >= 1");
              if (n.originalColumn < 0)
                throw new Error("Column numbers must be >= 0");
              var a = [],
                r = this._findMapping(
                  n,
                  this._originalMappings,
                  "originalLine",
                  "originalColumn",
                  c.compareByOriginalPositions,
                  l.LEAST_UPPER_BOUND
                );
              if (0 <= r) {
                var i = this._originalMappings[r];
                if (void 0 === e.column)
                  for (var o = i.originalLine; i && i.originalLine === o; ) {
                    var s = i.lastGeneratedColumn;
                    this._computedColumnSpans && null === s && (s = 1 / 0),
                      a.push({
                        line: c.getArg(i, "generatedLine", null),
                        column: c.getArg(i, "generatedColumn", null),
                        lastColumn: s,
                      }),
                      (i = this._originalMappings[++r]);
                  }
                else
                  for (
                    var d = i.originalColumn;
                    i && i.originalLine === t && i.originalColumn == d;

                  ) {
                    var u = i.lastGeneratedColumn;
                    this._computedColumnSpans && null === u && (u = 1 / 0),
                      a.push({
                        line: c.getArg(i, "generatedLine", null),
                        column: c.getArg(i, "generatedColumn", null),
                        lastColumn: u,
                      }),
                      (i = this._originalMappings[++r]);
                  }
              }
              return a;
            }),
            (n.destroy = function() {
              for (var e = 0; e < this._sections.length; e++)
                this._sections[e].consumer.destroy();
            }),
            r()(e, [
              {
                key: "_generatedMappings",
                get: function() {
                  return (
                    this.__generatedMappings || this._sortGeneratedMappings(),
                    this.__generatedMappings
                  );
                },
              },
              {
                key: "_originalMappings",
                get: function() {
                  return (
                    this.__originalMappings || this._sortOriginalMappings(),
                    this.__originalMappings
                  );
                },
              },
              {
                key: "_generatedMappingsUnsorted",
                get: function() {
                  return (
                    this.__generatedMappingsUnsorted ||
                      this._parseMappings(this._mappings, this.sourceRoot),
                    this.__generatedMappingsUnsorted
                  );
                },
              },
              {
                key: "_originalMappingsUnsorted",
                get: function() {
                  return (
                    this.__originalMappingsUnsorted ||
                      this._parseMappings(this._mappings, this.sourceRoot),
                    this.__originalMappingsUnsorted
                  );
                },
              },
              {
                key: "sources",
                get: function() {
                  for (var e = [], t = 0; t < this._sections.length; t++)
                    for (
                      var n = 0;
                      n < this._sections[t].consumer.sources.length;
                      n++
                    )
                      e.push(this._sections[t].consumer.sources[n]);
                  return e;
                },
              },
            ]),
            e
          );
        })(h);
        exports.IndexedSourceMapConsumer = y;
      },
      function(e, u) {
        (u.GREATEST_LOWER_BOUND = 1),
          (u.LEAST_UPPER_BOUND = 2),
          (u.search = function(e, t, n, a) {
            if (0 === t.length) return -1;
            var r = (function e(t, n, a, r, i, o) {
              var s = Math.floor((n - t) / 2) + t,
                d = i(a, r[s], !0);
              return 0 === d
                ? s
                : 0 < d
                  ? 1 < n - s
                    ? e(s, n, a, r, i, o)
                    : o == u.LEAST_UPPER_BOUND
                      ? n < r.length
                        ? n
                        : -1
                      : s
                  : 1 < s - t
                    ? e(t, s, a, r, i, o)
                    : o == u.LEAST_UPPER_BOUND
                      ? s
                      : t < 0
                        ? -1
                        : t;
            })(-1, t.length, e, t, n, a || u.GREATEST_LOWER_BOUND);
            if (r < 0) return -1;
            for (; 0 <= r - 1 && 0 === n(t[r], t[r - 1], !0); ) --r;
            return r;
          });
      },
      function(e, t, n) {
        var a = n(189),
          r = null;
        e.exports = function() {
          if (r) return r;
          var c = [];
          return (r = a()
            .then(function(e) {
              return WebAssembly.instantiate(e, {
                env: {
                  mapping_callback: function(e, t, n, a, r, i, o, s, d, u) {
                    var l = new function() {
                      (this.generatedLine = 0),
                        (this.generatedColumn = 0),
                        (this.lastGeneratedColumn = null),
                        (this.source = null),
                        (this.originalLine = null),
                        (this.originalColumn = null),
                        (this.name = null);
                    }();
                    (l.generatedLine = e + 1),
                      (l.generatedColumn = t),
                      n && (l.lastGeneratedColumn = a - 1),
                      r &&
                        ((l.source = i),
                        (l.originalLine = o + 1),
                        (l.originalColumn = s),
                        d && (l.name = u)),
                      c[c.length - 1](l);
                  },
                  start_all_generated_locations_for: function() {
                    console.time("all_generated_locations_for");
                  },
                  end_all_generated_locations_for: function() {
                    console.timeEnd("all_generated_locations_for");
                  },
                  start_compute_column_spans: function() {
                    console.time("compute_column_spans");
                  },
                  end_compute_column_spans: function() {
                    console.timeEnd("compute_column_spans");
                  },
                  start_generated_location_for: function() {
                    console.time("generated_location_for");
                  },
                  end_generated_location_for: function() {
                    console.timeEnd("generated_location_for");
                  },
                  start_original_location_for: function() {
                    console.time("original_location_for");
                  },
                  end_original_location_for: function() {
                    console.timeEnd("original_location_for");
                  },
                  start_parse_mappings: function() {
                    console.time("parse_mappings");
                  },
                  end_parse_mappings: function() {
                    console.timeEnd("parse_mappings");
                  },
                  start_sort_by_generated_location: function() {
                    console.time("sort_by_generated_location");
                  },
                  end_sort_by_generated_location: function() {
                    console.timeEnd("sort_by_generated_location");
                  },
                  start_sort_by_original_location: function() {
                    console.time("sort_by_original_location");
                  },
                  end_sort_by_original_location: function() {
                    console.timeEnd("sort_by_original_location");
                  },
                },
              });
            })
            .then(function(e) {
              return {
                exports: e.instance.exports,
                withMappingCallback: function(e, t) {
                  c.push(e);
                  try {
                    t();
                  } finally {
                    c.pop();
                  }
                },
              };
            })
            .then(null, function(e) {
              throw ((r = null), e);
            }));
        };
      },
      function(e, t, n) {
        var a = n(186).SourceMapGenerator,
          f = n(54),
          h = /(\r?\n)/,
          o = "$$$isSourceNode$$$",
          r = (function() {
            function g(e, t, n, a, r) {
              (this.children = []),
                (this.sourceContents = {}),
                (this.line = null == e ? null : e),
                (this.column = null == t ? null : t),
                (this.source = null == n ? null : n),
                (this.name = null == r ? null : r),
                (this[o] = !0),
                null != a && this.add(a);
            }
            g.fromStringWithSourceMap = function(e, n, a) {
              var r,
                i = new g(),
                o = e.split(h),
                s = 0,
                d = function() {
                  return e() + (e() || "");
                  function e() {
                    return s < o.length ? o[s++] : void 0;
                  }
                },
                u = 1,
                l = 0,
                c = null;
              return (
                n.eachMapping(function(e) {
                  if (null !== c) {
                    if (!(u < e.generatedLine)) {
                      var t = (r = o[s] || "").substr(0, e.generatedColumn - l);
                      return (
                        (o[s] = r.substr(e.generatedColumn - l)),
                        (l = e.generatedColumn),
                        p(c, t),
                        void (c = e)
                      );
                    }
                    p(c, d()), u++, (l = 0);
                  }
                  for (; u < e.generatedLine; ) i.add(d()), u++;
                  l < e.generatedColumn &&
                    ((r = o[s] || ""),
                    i.add(r.substr(0, e.generatedColumn)),
                    (o[s] = r.substr(e.generatedColumn)),
                    (l = e.generatedColumn)),
                    (c = e);
                }, this),
                s < o.length && (c && p(c, d()), i.add(o.splice(s).join(""))),
                n.sources.forEach(function(e) {
                  var t = n.sourceContentFor(e);
                  null != t &&
                    (null != a && (e = f.join(a, e)), i.setSourceContent(e, t));
                }),
                i
              );
              function p(e, t) {
                if (null === e || void 0 === e.source) i.add(t);
                else {
                  var n = a ? f.join(a, e.source) : e.source;
                  i.add(new g(e.originalLine, e.originalColumn, n, t, e.name));
                }
              }
            };
            var e = g.prototype;
            return (
              (e.add = function(e) {
                if (Array.isArray(e))
                  e.forEach(function(e) {
                    this.add(e);
                  }, this);
                else {
                  if (!e[o] && "string" != typeof e)
                    throw new TypeError(
                      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                        e
                    );
                  e && this.children.push(e);
                }
                return this;
              }),
              (e.prepend = function(e) {
                if (Array.isArray(e))
                  for (var t = e.length - 1; 0 <= t; t--) this.prepend(e[t]);
                else {
                  if (!e[o] && "string" != typeof e)
                    throw new TypeError(
                      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                        e
                    );
                  this.children.unshift(e);
                }
                return this;
              }),
              (e.walk = function(e) {
                for (var t, n = 0, a = this.children.length; n < a; n++)
                  (t = this.children[n])[o]
                    ? t.walk(e)
                    : "" !== t &&
                      e(t, {
                        source: this.source,
                        line: this.line,
                        column: this.column,
                        name: this.name,
                      });
              }),
              (e.join = function(e) {
                var t,
                  n,
                  a = this.children.length;
                if (0 < a) {
                  for (t = [], n = 0; n < a - 1; n++)
                    t.push(this.children[n]), t.push(e);
                  t.push(this.children[n]), (this.children = t);
                }
                return this;
              }),
              (e.replaceRight = function(e, t) {
                var n = this.children[this.children.length - 1];
                return (
                  n[o]
                    ? n.replaceRight(e, t)
                    : "string" == typeof n
                      ? (this.children[this.children.length - 1] = n.replace(
                          e,
                          t
                        ))
                      : this.children.push("".replace(e, t)),
                  this
                );
              }),
              (e.setSourceContent = function(e, t) {
                this.sourceContents[f.toSetString(e)] = t;
              }),
              (e.walkSourceContents = function(e) {
                for (var t = 0, n = this.children.length; t < n; t++)
                  this.children[t][o] && this.children[t].walkSourceContents(e);
                for (
                  var a = Object.keys(this.sourceContents), r = 0, i = a.length;
                  r < i;
                  r++
                )
                  e(f.fromSetString(a[r]), this.sourceContents[a[r]]);
              }),
              (e.toString = function() {
                var t = "";
                return (
                  this.walk(function(e) {
                    t += e;
                  }),
                  t
                );
              }),
              (e.toStringWithSourceMap = function(e) {
                var r = { code: "", line: 1, column: 0 },
                  i = new a(e),
                  o = !1,
                  s = null,
                  d = null,
                  u = null,
                  l = null;
                return (
                  this.walk(function(e, t) {
                    (r.code += e),
                      null !== t.source && null !== t.line && null !== t.column
                        ? ((s === t.source &&
                            d === t.line &&
                            u === t.column &&
                            l === t.name) ||
                            i.addMapping({
                              source: t.source,
                              original: { line: t.line, column: t.column },
                              generated: { line: r.line, column: r.column },
                              name: t.name,
                            }),
                          (s = t.source),
                          (d = t.line),
                          (u = t.column),
                          (l = t.name),
                          (o = !0))
                        : o &&
                          (i.addMapping({
                            generated: { line: r.line, column: r.column },
                          }),
                          (s = null),
                          (o = !1));
                    for (var n = 0, a = e.length; n < a; n++)
                      10 === e.charCodeAt(n)
                        ? (r.line++,
                          (r.column = 0),
                          n + 1 === a
                            ? ((s = null), (o = !1))
                            : o &&
                              i.addMapping({
                                source: t.source,
                                original: { line: t.line, column: t.column },
                                generated: { line: r.line, column: r.column },
                                name: t.name,
                              }))
                        : r.column++;
                  }),
                  this.walkSourceContents(function(e, t) {
                    i.setSourceContent(e, t);
                  }),
                  { code: r.code, map: i }
                );
              }),
              g
            );
          })();
        t.SourceNode = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = l(n(403));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = l(n(183));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = l(n(404)),
          d = o(n(190));
        function u() {
          var e = o(n(4));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        var i = o(n(408));
        function o(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var c = /e/i,
          p = /\.0+$/,
          g = /^0[box]/,
          f = (function() {
            function e(e, t) {
              (this.inForStatementInitCounter = 0),
                (this._printStack = []),
                (this._indent = 0),
                (this._insideAux = !1),
                (this._printedCommentStarts = {}),
                (this._parenPushNewlineState = null),
                (this._noLineTerminator = !1),
                (this._printAuxAfterOnNextUserNode = !1),
                (this._printedComments = new WeakSet()),
                (this._endsWithInteger = !1),
                (this._endsWithWord = !1),
                (this.format = e || {}),
                (this._buf = new r.default(t));
            }
            var t = e.prototype;
            return (
              (t.generate = function(e) {
                return (
                  this.print(e), this._maybeAddAuxComment(), this._buf.get()
                );
              }),
              (t.indent = function() {
                this.format.compact || this.format.concise || this._indent++;
              }),
              (t.dedent = function() {
                this.format.compact || this.format.concise || this._indent--;
              }),
              (t.semicolon = function(e) {
                void 0 === e && (e = !1),
                  this._maybeAddAuxComment(),
                  this._append(";", !e);
              }),
              (t.rightBrace = function() {
                this.format.minified && this._buf.removeLastSemicolon(),
                  this.token("}");
              }),
              (t.space = function(e) {
                void 0 === e && (e = !1),
                  this.format.compact ||
                    (((this._buf.hasContent() &&
                      !this.endsWith(" ") &&
                      !this.endsWith("\n")) ||
                      e) &&
                      this._space());
              }),
              (t.word = function(e) {
                (this._endsWithWord ||
                  (this.endsWith("/") && 0 === e.indexOf("/"))) &&
                  this._space(),
                  this._maybeAddAuxComment(),
                  this._append(e),
                  (this._endsWithWord = !0);
              }),
              (t.number = function(e) {
                this.word(e),
                  (this._endsWithInteger =
                    (0, a().default)(+e) &&
                    !g.test(e) &&
                    !c.test(e) &&
                    !p.test(e) &&
                    "." !== e[e.length - 1]);
              }),
              (t.token = function(e) {
                (("--" === e && this.endsWith("!")) ||
                  ("+" === e[0] && this.endsWith("+")) ||
                  ("-" === e[0] && this.endsWith("-")) ||
                  ("." === e[0] && this._endsWithInteger)) &&
                  this._space(),
                  this._maybeAddAuxComment(),
                  this._append(e);
              }),
              (t.newline = function(e) {
                if (!this.format.retainLines && !this.format.compact)
                  if (this.format.concise) this.space();
                  else if (
                    !(
                      this.endsWith("\n\n") ||
                      ("number" != typeof e && (e = 1),
                      (e = Math.min(2, e)),
                      (this.endsWith("{\n") || this.endsWith(":\n")) && e--,
                      e <= 0)
                    )
                  )
                    for (var t = 0; t < e; t++) this._newline();
              }),
              (t.endsWith = function(e) {
                return this._buf.endsWith(e);
              }),
              (t.removeTrailingNewline = function() {
                this._buf.removeTrailingNewline();
              }),
              (t.exactSource = function(e, t) {
                this._catchUp("start", e), this._buf.exactSource(e, t);
              }),
              (t.source = function(e, t) {
                this._catchUp(e, t), this._buf.source(e, t);
              }),
              (t.withSource = function(e, t, n) {
                this._catchUp(e, t), this._buf.withSource(e, t, n);
              }),
              (t._space = function() {
                this._append(" ", !0);
              }),
              (t._newline = function() {
                this._append("\n", !0);
              }),
              (t._append = function(e, t) {
                void 0 === t && (t = !1),
                  this._maybeAddParen(e),
                  this._maybeIndent(e),
                  t ? this._buf.queue(e) : this._buf.append(e),
                  (this._endsWithWord = !1),
                  (this._endsWithInteger = !1);
              }),
              (t._maybeIndent = function(e) {
                this._indent &&
                  this.endsWith("\n") &&
                  "\n" !== e[0] &&
                  this._buf.queue(this._getIndent());
              }),
              (t._maybeAddParen = function(e) {
                var t = this._parenPushNewlineState;
                if (t) {
                  var n;
                  for (
                    this._parenPushNewlineState = null, n = 0;
                    n < e.length && " " === e[n];
                    n++
                  );
                  if (n !== e.length) {
                    var a = e[n];
                    if ("\n" !== a) {
                      if ("/" !== a) return;
                      if (n + 1 === e.length) return;
                      var r = e[n + 1];
                      if ("/" !== r && "*" !== r) return;
                    }
                    this.token("("), this.indent(), (t.printed = !0);
                  }
                }
              }),
              (t._catchUp = function(e, t) {
                if (this.format.retainLines) {
                  var n = t ? t[e] : null;
                  if (n && null !== n.line)
                    for (
                      var a = n.line - this._buf.getCurrentLine(), r = 0;
                      r < a;
                      r++
                    )
                      this._newline();
                }
              }),
              (t._getIndent = function() {
                return (0, s().default)(this.format.indent.style, this._indent);
              }),
              (t.startTerminatorless = function(e) {
                return (
                  void 0 === e && (e = !1),
                  e
                    ? ((this._noLineTerminator = !0), null)
                    : (this._parenPushNewlineState = { printed: !1 })
                );
              }),
              (t.endTerminatorless = function(e) {
                (this._noLineTerminator = !1),
                  e &&
                    e.printed &&
                    (this.dedent(), this.newline(), this.token(")"));
              }),
              (t.print = function(e, t) {
                var n = this;
                if (e) {
                  var a = this.format.concise;
                  if ((e._compact && (this.format.concise = !0), !this[e.type]))
                    throw new ReferenceError(
                      "unknown node of type " +
                        JSON.stringify(e.type) +
                        " with constructor " +
                        JSON.stringify(e && e.constructor.name)
                    );
                  this._printStack.push(e);
                  var r = this._insideAux;
                  (this._insideAux = !e.loc),
                    this._maybeAddAuxComment(this._insideAux && !r);
                  var i = d.needsParens(e, t, this._printStack);
                  this.format.retainFunctionParens &&
                    "FunctionExpression" === e.type &&
                    e.extra &&
                    e.extra.parenthesized &&
                    (i = !0),
                    i && this.token("("),
                    this._printLeadingComments(e, t);
                  var o = u().isProgram(e) || u().isFile(e) ? null : e.loc;
                  this.withSource("start", o, function() {
                    n[e.type](e, t);
                  }),
                    this._printTrailingComments(e, t),
                    i && this.token(")"),
                    this._printStack.pop(),
                    (this.format.concise = a),
                    (this._insideAux = r);
                }
              }),
              (t._maybeAddAuxComment = function(e) {
                e && this._printAuxBeforeComment(),
                  this._insideAux || this._printAuxAfterComment();
              }),
              (t._printAuxBeforeComment = function() {
                if (!this._printAuxAfterOnNextUserNode) {
                  this._printAuxAfterOnNextUserNode = !0;
                  var e = this.format.auxiliaryCommentBefore;
                  e && this._printComment({ type: "CommentBlock", value: e });
                }
              }),
              (t._printAuxAfterComment = function() {
                if (this._printAuxAfterOnNextUserNode) {
                  this._printAuxAfterOnNextUserNode = !1;
                  var e = this.format.auxiliaryCommentAfter;
                  e && this._printComment({ type: "CommentBlock", value: e });
                }
              }),
              (t.getPossibleRaw = function(e) {
                var t = e.extra;
                if (
                  t &&
                  null != t.raw &&
                  null != t.rawValue &&
                  e.value === t.rawValue
                )
                  return t.raw;
              }),
              (t.printJoin = function(e, t, n) {
                if ((void 0 === n && (n = {}), e && e.length)) {
                  n.indent && this.indent();
                  for (
                    var a = { addNewlines: n.addNewlines }, r = 0;
                    r < e.length;
                    r++
                  ) {
                    var i = e[r];
                    i &&
                      (n.statement && this._printNewline(!0, i, t, a),
                      this.print(i, t),
                      n.iterator && n.iterator(i, r),
                      n.separator && r < e.length - 1 && n.separator.call(this),
                      n.statement && this._printNewline(!1, i, t, a));
                  }
                  n.indent && this.dedent();
                }
              }),
              (t.printAndIndentOnComments = function(e, t) {
                var n = e.leadingComments && 0 < e.leadingComments.length;
                n && this.indent(), this.print(e, t), n && this.dedent();
              }),
              (t.printBlock = function(e) {
                var t = e.body;
                u().isEmptyStatement(t) || this.space(), this.print(t, e);
              }),
              (t._printTrailingComments = function(e, t) {
                this._printComments(this._getComments(!1, e, t));
              }),
              (t._printLeadingComments = function(e, t) {
                this._printComments(this._getComments(!0, e, t));
              }),
              (t.printInnerComments = function(e, t) {
                void 0 === t && (t = !0),
                  e.innerComments &&
                    e.innerComments.length &&
                    (t && this.indent(),
                    this._printComments(e.innerComments),
                    t && this.dedent());
              }),
              (t.printSequence = function(e, t, n) {
                return (
                  void 0 === n && (n = {}),
                  (n.statement = !0),
                  this.printJoin(e, t, n)
                );
              }),
              (t.printList = function(e, t, n) {
                return (
                  void 0 === n && (n = {}),
                  null == n.separator && (n.separator = h),
                  this.printJoin(e, t, n)
                );
              }),
              (t._printNewline = function(e, t, n, a) {
                if (!this.format.retainLines && !this.format.compact)
                  if (this.format.concise) this.space();
                  else {
                    var r = 0;
                    this._buf.hasContent() &&
                      (e || r++,
                      a.addNewlines && (r += a.addNewlines(e, t) || 0),
                      (e ? d.needsWhitespaceBefore : d.needsWhitespaceAfter)(
                        t,
                        n
                      ) && r++),
                      this.newline(r);
                  }
              }),
              (t._getComments = function(e, t) {
                return (
                  (t && (e ? t.leadingComments : t.trailingComments)) || []
                );
              }),
              (t._printComment = function(e) {
                var t = this;
                if (
                  this.format.shouldPrintComment(e.value) &&
                  !e.ignore &&
                  !this._printedComments.has(e)
                ) {
                  if ((this._printedComments.add(e), null != e.start)) {
                    if (this._printedCommentStarts[e.start]) return;
                    this._printedCommentStarts[e.start] = !0;
                  }
                  var n = "CommentBlock" === e.type;
                  this.newline(
                    this._buf.hasContent() && !this._noLineTerminator && n
                      ? 1
                      : 0
                  ),
                    this.endsWith("[") || this.endsWith("{") || this.space();
                  var a =
                    n || this._noLineTerminator
                      ? "/*" + e.value + "*/"
                      : "//" + e.value + "\n";
                  if (n && this.format.indent.adjustMultilineComment) {
                    var r = e.loc && e.loc.start.column;
                    if (r) {
                      var i = new RegExp("\\n\\s{1," + r + "}", "g");
                      a = a.replace(i, "\n");
                    }
                    var o = Math.max(
                      this._getIndent().length,
                      this._buf.getCurrentColumn()
                    );
                    a = a.replace(/\n(?!$)/g, "\n" + (0, s().default)(" ", o));
                  }
                  this.endsWith("/") && this._space(),
                    this.withSource("start", e.loc, function() {
                      t._append(a);
                    }),
                    this.newline(n && !this._noLineTerminator ? 1 : 0);
                }
              }),
              (t._printComments = function(e) {
                if (e && e.length) {
                  var t = e,
                    n = Array.isArray(t),
                    a = 0;
                  for (t = n ? t : t[Symbol.iterator](); ; ) {
                    var r;
                    if (n) {
                      if (a >= t.length) break;
                      r = t[a++];
                    } else {
                      if ((a = t.next()).done) break;
                      r = a.value;
                    }
                    var i = r;
                    this._printComment(i);
                  }
                }
              }),
              e
            );
          })();
        function h() {
          this.token(","), this.space();
        }
        (t.default = f), Object.assign(f.prototype, i);
      },
      function(e, t, n) {
        var a = n(49);
        e.exports = function(e) {
          return "number" == typeof e && e == a(e);
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(405)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var s = /^[ \t]+$/,
          r = (function() {
            function e(e) {
              (this._map = null),
                (this._buf = []),
                (this._last = ""),
                (this._queue = []),
                (this._position = { line: 1, column: 0 }),
                (this._sourcePosition = {
                  identifierName: null,
                  line: null,
                  column: null,
                  filename: null,
                }),
                (this._disallowedPop = null),
                (this._map = e);
            }
            var t = e.prototype;
            return (
              (t.get = function() {
                this._flush();
                var e = this._map,
                  t = {
                    code: (0, a().default)(this._buf.join("")),
                    map: null,
                    rawMappings: e && e.getRawMappings(),
                  };
                return (
                  e &&
                    Object.defineProperty(t, "map", {
                      configurable: !0,
                      enumerable: !0,
                      get: function() {
                        return (this.map = e.get());
                      },
                      set: function(e) {
                        Object.defineProperty(this, "map", {
                          value: e,
                          writable: !0,
                        });
                      },
                    }),
                  t
                );
              }),
              (t.append = function(e) {
                this._flush();
                var t = this._sourcePosition,
                  n = t.line,
                  a = t.column,
                  r = t.filename,
                  i = t.identifierName,
                  o = t.force;
                this._append(e, n, a, i, r, o);
              }),
              (t.queue = function(e) {
                if ("\n" === e)
                  for (; 0 < this._queue.length && s.test(this._queue[0][0]); )
                    this._queue.shift();
                var t = this._sourcePosition,
                  n = t.line,
                  a = t.column,
                  r = t.filename,
                  i = t.identifierName,
                  o = t.force;
                this._queue.unshift([e, n, a, i, r, o]);
              }),
              (t._flush = function() {
                for (var e; (e = this._queue.pop()); )
                  this._append.apply(this, e);
              }),
              (t._append = function(e, t, n, a, r, i) {
                this._map &&
                  "\n" !== e[0] &&
                  this._map.mark(
                    this._position.line,
                    this._position.column,
                    t,
                    n,
                    a,
                    r,
                    i
                  ),
                  this._buf.push(e),
                  (this._last = e[e.length - 1]);
                for (var o = 0; o < e.length; o++)
                  "\n" === e[o]
                    ? (this._position.line++, (this._position.column = 0))
                    : this._position.column++;
              }),
              (t.removeTrailingNewline = function() {
                0 < this._queue.length &&
                  "\n" === this._queue[0][0] &&
                  this._queue.shift();
              }),
              (t.removeLastSemicolon = function() {
                0 < this._queue.length &&
                  ";" === this._queue[0][0] &&
                  this._queue.shift();
              }),
              (t.endsWith = function(e) {
                if (1 === e.length) {
                  var t;
                  if (0 < this._queue.length) {
                    var n = this._queue[0][0];
                    t = n[n.length - 1];
                  } else t = this._last;
                  return t === e;
                }
                var a =
                  this._last +
                  this._queue.reduce(function(e, t) {
                    return t[0] + e;
                  }, "");
                return e.length <= a.length && a.slice(-e.length) === e;
              }),
              (t.hasContent = function() {
                return 0 < this._queue.length || !!this._last;
              }),
              (t.exactSource = function(e, t) {
                this.source("start", e, !0),
                  t(),
                  this.source("end", e),
                  this._disallowPop("start", e);
              }),
              (t.source = function(e, t, n) {
                (e && !t) ||
                  this._normalizePosition(e, t, this._sourcePosition, n);
              }),
              (t.withSource = function(e, t, n) {
                if (!this._map) return n();
                var a = this._sourcePosition.line,
                  r = this._sourcePosition.column,
                  i = this._sourcePosition.filename,
                  o = this._sourcePosition.identifierName;
                this.source(e, t),
                  n(),
                  (this._sourcePosition.force &&
                    this._sourcePosition.line === a &&
                    this._sourcePosition.column === r &&
                    this._sourcePosition.filename === i) ||
                    (this._disallowedPop &&
                      this._disallowedPop.line === a &&
                      this._disallowedPop.column === r &&
                      this._disallowedPop.filename === i) ||
                    ((this._sourcePosition.line = a),
                    (this._sourcePosition.column = r),
                    (this._sourcePosition.filename = i),
                    (this._sourcePosition.identifierName = o),
                    (this._sourcePosition.force = !1),
                    (this._disallowedPop = null));
              }),
              (t._disallowPop = function(e, t) {
                (e && !t) ||
                  (this._disallowedPop = this._normalizePosition(e, t));
              }),
              (t._normalizePosition = function(e, t, n, a) {
                var r = t ? t[e] : null;
                void 0 === n &&
                  (n = {
                    identifierName: null,
                    line: null,
                    column: null,
                    filename: null,
                    force: !1,
                  });
                var i = n.line,
                  o = n.column,
                  s = n.filename;
                return (
                  (n.identifierName =
                    ("start" === e && t && t.identifierName) || null),
                  (n.line = r ? r.line : null),
                  (n.column = r ? r.column : null),
                  (n.filename = (t && t.filename) || null),
                  (a || n.line !== i || n.column !== o || n.filename !== s) &&
                    (n.force = a),
                  n
                );
              }),
              (t.getCurrentColumn = function() {
                var e = this._queue.reduce(function(e, t) {
                    return t[0] + e;
                  }, ""),
                  t = e.lastIndexOf("\n");
                return -1 === t
                  ? this._position.column + e.length
                  : e.length - 1 - t;
              }),
              (t.getCurrentLine = function() {
                for (
                  var e = this._queue.reduce(function(e, t) {
                      return t[0] + e;
                    }, ""),
                    t = 0,
                    n = 0;
                  n < e.length;
                  n++
                )
                  "\n" === e[n] && t++;
                return this._position.line + t;
              }),
              e
            );
          })();
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        e.exports = function(e) {
          for (var t = e.length; /[\s\uFEFF\u00A0]/.test(e[t - 1]); ) t--;
          return e.slice(0, t);
        };
      },
      function(e, t, n) {
        "use strict";
        function o() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s(e, t) {
          return (
            void 0 === t && (t = {}),
            o().isMemberExpression(e)
              ? (s(e.object, t), e.computed && s(e.property, t))
              : o().isBinary(e) || o().isAssignmentExpression(e)
                ? (s(e.left, t), s(e.right, t))
                : o().isCallExpression(e)
                  ? ((t.hasCall = !0), s(e.callee, t))
                  : o().isFunction(e)
                    ? (t.hasFunction = !0)
                    : o().isIdentifier(e) &&
                      (t.hasHelper = t.hasHelper || d(e.callee)),
            t
          );
        }
        function d(e) {
          return o().isMemberExpression(e)
            ? d(e.object) || d(e.property)
            : o().isIdentifier(e)
              ? "require" === e.name || "_" === e.name[0]
              : o().isCallExpression(e)
                ? d(e.callee)
                : !(!o().isBinary(e) && !o().isAssignmentExpression(e)) &&
                  ((o().isIdentifier(e.left) && d(e.left)) || d(e.right));
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.list = t.nodes = void 0);
        var a = {
          AssignmentExpression: function(e) {
            var t = s(e.right);
            if ((t.hasCall && t.hasHelper) || t.hasFunction)
              return { before: t.hasFunction, after: !0 };
          },
          SwitchCase: function(e, t) {
            return {
              before: e.consequent.length || t.cases[0] === e,
              after: !e.consequent.length && t.cases[t.cases.length - 1] === e,
            };
          },
          LogicalExpression: function(e) {
            if (o().isFunction(e.left) || o().isFunction(e.right))
              return { after: !0 };
          },
          Literal: function(e) {
            if ("use strict" === e.value) return { after: !0 };
          },
          CallExpression: function(e) {
            if (o().isFunction(e.callee) || d(e))
              return { before: !0, after: !0 };
          },
          VariableDeclaration: function(e) {
            for (var t = 0; t < e.declarations.length; t++) {
              var n = e.declarations[t],
                a =
                  d(n.id) &&
                  ((i = n.init),
                  !(
                    o().isLiteral(i) ||
                    o().isObjectExpression(i) ||
                    o().isArrayExpression(i) ||
                    o().isIdentifier(i) ||
                    o().isMemberExpression(i)
                  ));
              if (!a) {
                var r = s(n.init);
                a = (d(n.init) && r.hasCall) || r.hasFunction;
              }
              if (a) return { before: !0, after: !0 };
            }
            var i;
          },
          IfStatement: function(e) {
            if (o().isBlockStatement(e.consequent))
              return { before: !0, after: !0 };
          },
        };
        ((t.nodes = a).ObjectProperty = a.ObjectTypeProperty = a.ObjectMethod = function(
          e,
          t
        ) {
          if (t.properties[0] === e) return { before: !0 };
        }),
          (a.ObjectTypeCallProperty = function(e, t) {
            if (
              !(
                t.callProperties[0] !== e ||
                (t.properties && t.properties.length)
              )
            )
              return { before: !0 };
          }),
          (a.ObjectTypeIndexer = function(e, t) {
            if (
              !(
                t.indexers[0] !== e ||
                (t.properties && t.properties.length) ||
                (t.callProperties && t.callProperties.length)
              )
            )
              return { before: !0 };
          }),
          (a.ObjectTypeInternalSlot = function(e, t) {
            if (
              !(
                t.internalSlots[0] !== e ||
                (t.properties && t.properties.length) ||
                (t.callProperties && t.callProperties.length) ||
                (t.indexers && t.indexers.length)
              )
            )
              return { before: !0 };
          }),
          (t.list = {
            VariableDeclaration: function(e) {
              return e.declarations.map(function(e) {
                return e.init;
              });
            },
            ArrayExpression: function(e) {
              return e.elements;
            },
            ObjectExpression: function(e) {
              return e.properties;
            },
          }),
          [
            ["Function", !0],
            ["Class", !0],
            ["Loop", !0],
            ["LabeledStatement", !0],
            ["SwitchStatement", !0],
            ["TryStatement", !0],
          ].forEach(function(e) {
            var t = e[0],
              n = e[1];
            "boolean" == typeof n && (n = { after: n, before: n }),
              [t].concat(o().FLIPPED_ALIAS_KEYS[t] || []).forEach(function(e) {
                a[e] = function() {
                  return n;
                };
              });
          });
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.FunctionTypeAnnotation = t.NullableTypeAnnotation = function(
            e,
            t
          ) {
            return l().isArrayTypeAnnotation(t);
          }),
          (t.UpdateExpression = function(e, t) {
            return (
              l().isMemberExpression(t, { object: e }) ||
              l().isCallExpression(t, { callee: e }) ||
              l().isNewExpression(t, { callee: e }) ||
              s(e, t)
            );
          }),
          (t.ObjectExpression = function(e, t, n) {
            return i(n, { considerArrow: !0 });
          }),
          (t.DoExpression = function(e, t, n) {
            return i(n);
          }),
          (t.Binary = function(e, t) {
            if (
              "**" === e.operator &&
              l().isBinaryExpression(t, { operator: "**" })
            )
              return t.left === e;
            if (s(e, t)) return !0;
            if (
              ((l().isCallExpression(t) || l().isNewExpression(t)) &&
                t.callee === e) ||
              l().isUnaryLike(t) ||
              (l().isMemberExpression(t) && t.object === e) ||
              l().isAwaitExpression(t)
            )
              return !0;
            if (l().isBinary(t)) {
              var n = t.operator,
                a = o[n],
                r = e.operator,
                i = o[r];
              if (
                (a === i && t.right === e && !l().isLogicalExpression(t)) ||
                i < a
              )
                return !0;
            }
            return !1;
          }),
          (t.IntersectionTypeAnnotation = t.UnionTypeAnnotation = function(
            e,
            t
          ) {
            return (
              l().isArrayTypeAnnotation(t) ||
              l().isNullableTypeAnnotation(t) ||
              l().isIntersectionTypeAnnotation(t) ||
              l().isUnionTypeAnnotation(t)
            );
          }),
          (t.TSAsExpression = function() {
            return !0;
          }),
          (t.TSTypeAssertion = function() {
            return !0;
          }),
          (t.BinaryExpression = function(e, t) {
            return (
              "in" === e.operator &&
              (l().isVariableDeclarator(t) || l().isFor(t))
            );
          }),
          (t.SequenceExpression = function(e, t) {
            return !(
              l().isForStatement(t) ||
              l().isThrowStatement(t) ||
              l().isReturnStatement(t) ||
              (l().isIfStatement(t) && t.test === e) ||
              (l().isWhileStatement(t) && t.test === e) ||
              (l().isForInStatement(t) && t.right === e) ||
              (l().isSwitchStatement(t) && t.discriminant === e) ||
              (l().isExpressionStatement(t) && t.expression === e)
            );
          }),
          (t.AwaitExpression = t.YieldExpression = function(e, t) {
            return (
              l().isBinary(t) ||
              l().isUnaryLike(t) ||
              l().isCallExpression(t) ||
              l().isMemberExpression(t) ||
              l().isNewExpression(t) ||
              (l().isConditionalExpression(t) && e === t.test) ||
              s(e, t)
            );
          }),
          (t.ClassExpression = function(e, t, n) {
            return i(n, { considerDefaultExports: !0 });
          }),
          (t.UnaryLike = a),
          (t.FunctionExpression = function(e, t, n) {
            return i(n, { considerDefaultExports: !0 });
          }),
          (t.ArrowFunctionExpression = function(e, t) {
            return l().isExportDeclaration(t) || r(e, t);
          }),
          (t.ConditionalExpression = r),
          (t.AssignmentExpression = function(e) {
            return !!l().isObjectPattern(e.left) || r.apply(void 0, arguments);
          }),
          (t.NewExpression = function(e, t) {
            return s(e, t);
          });
        var o = {
            "||": 0,
            "&&": 1,
            "|": 2,
            "^": 3,
            "&": 4,
            "==": 5,
            "===": 5,
            "!=": 5,
            "!==": 5,
            "<": 6,
            ">": 6,
            "<=": 6,
            ">=": 6,
            in: 6,
            instanceof: 6,
            ">>": 7,
            "<<": 7,
            ">>>": 7,
            "+": 8,
            "-": 8,
            "*": 9,
            "/": 9,
            "%": 9,
            "**": 10,
          },
          s = function(e, t) {
            return (
              (l().isClassDeclaration(t) || l().isClassExpression(t)) &&
              t.superClass === e
            );
          };
        function a(e, t) {
          return (
            l().isMemberExpression(t, { object: e }) ||
            l().isCallExpression(t, { callee: e }) ||
            l().isNewExpression(t, { callee: e }) ||
            l().isBinaryExpression(t, { operator: "**", left: e }) ||
            s(e, t)
          );
        }
        function r(e, t) {
          return (
            !!(
              l().isUnaryLike(t) ||
              l().isBinary(t) ||
              l().isConditionalExpression(t, { test: e }) ||
              l().isAwaitExpression(t) ||
              l().isTaggedTemplateExpression(t) ||
              l().isTSTypeAssertion(t) ||
              l().isTSAsExpression(t)
            ) || a(e, t)
          );
        }
        function i(e, t) {
          for (
            var n = void 0 === t ? {} : t,
              a = n.considerArrow,
              r = void 0 !== a && a,
              i = n.considerDefaultExports,
              o = void 0 !== i && i,
              s = e.length - 1,
              d = e[s],
              u = e[--s];
            0 < s;

          ) {
            if (
              l().isExpressionStatement(u, { expression: d }) ||
              l().isTaggedTemplateExpression(u) ||
              (o && l().isExportDefaultDeclaration(u, { declaration: d })) ||
              (r && l().isArrowFunctionExpression(u, { body: d }))
            )
              return !0;
            if (
              !(
                l().isCallExpression(u, { callee: d }) ||
                (l().isSequenceExpression(u) && u.expressions[0] === d) ||
                l().isMemberExpression(u, { object: d }) ||
                l().isConditional(u, { test: d }) ||
                l().isBinary(u, { left: d }) ||
                l().isAssignmentExpression(u, { left: d })
              )
            )
              return !1;
            (d = u), (u = e[--s]);
          }
          return !1;
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 });
        var a = n(409);
        Object.keys(a).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return a[e];
              },
            });
        });
        var r = n(410);
        Object.keys(r).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return r[e];
              },
            });
        });
        var i = n(411);
        Object.keys(i).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return i[e];
              },
            });
        });
        var o = n(412);
        Object.keys(o).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return o[e];
              },
            });
        });
        var s = n(413);
        Object.keys(s).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return s[e];
              },
            });
        });
        var d = n(191);
        Object.keys(d).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return d[e];
              },
            });
        });
        var u = n(86);
        Object.keys(u).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return u[e];
              },
            });
        });
        var l = n(418);
        Object.keys(l).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return l[e];
              },
            });
        });
        var c = n(419);
        Object.keys(c).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return c[e];
              },
            });
        });
        var p = n(420);
        Object.keys(p).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return p[e];
              },
            });
        });
        var g = n(421);
        Object.keys(g).forEach(function(e) {
          "default" !== e &&
            "__esModule" !== e &&
            Object.defineProperty(t, e, {
              enumerable: !0,
              get: function() {
                return g[e];
              },
            });
        });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TaggedTemplateExpression = function(e) {
            this.print(e.tag, e),
              this.print(e.typeParameters, e),
              this.print(e.quasi, e);
          }),
          (t.TemplateElement = function(e, t) {
            var n = t.quasis[0] === e,
              a = t.quasis[t.quasis.length - 1] === e,
              r = (n ? "`" : "}") + e.value.raw + (a ? "`" : "${");
            this.token(r);
          }),
          (t.TemplateLiteral = function(e) {
            for (var t = e.quasis, n = 0; n < t.length; n++)
              this.print(t[n], e),
                n + 1 < t.length && this.print(e.expressions[n], e);
          });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = i(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.UnaryExpression = function(e) {
            "void" === e.operator ||
            "delete" === e.operator ||
            "typeof" === e.operator
              ? (this.word(e.operator), this.space())
              : this.token(e.operator),
              this.print(e.argument, e);
          }),
          (t.DoExpression = function(e) {
            this.word("do"), this.space(), this.print(e.body, e);
          }),
          (t.ParenthesizedExpression = function(e) {
            this.token("("), this.print(e.expression, e), this.token(")");
          }),
          (t.UpdateExpression = function(e) {
            e.prefix
              ? (this.token(e.operator), this.print(e.argument, e))
              : (this.startTerminatorless(!0),
                this.print(e.argument, e),
                this.endTerminatorless(),
                this.token(e.operator));
          }),
          (t.ConditionalExpression = function(e) {
            this.print(e.test, e),
              this.space(),
              this.token("?"),
              this.space(),
              this.print(e.consequent, e),
              this.space(),
              this.token(":"),
              this.space(),
              this.print(e.alternate, e);
          }),
          (t.NewExpression = function(e, t) {
            this.word("new"),
              this.space(),
              this.print(e.callee, e),
              (!this.format.minified ||
                0 !== e.arguments.length ||
                e.optional ||
                a().isCallExpression(t, { callee: e }) ||
                a().isMemberExpression(t) ||
                a().isNewExpression(t)) &&
                (this.print(e.typeArguments, e),
                this.print(e.typeParameters, e),
                e.optional && this.token("?."),
                this.token("("),
                this.printList(e.arguments, e),
                this.token(")"));
          }),
          (t.SequenceExpression = function(e) {
            this.printList(e.expressions, e);
          }),
          (t.ThisExpression = function() {
            this.word("this");
          }),
          (t.Super = function() {
            this.word("super");
          }),
          (t.Decorator = function(e) {
            this.token("@"), this.print(e.expression, e), this.newline();
          }),
          (t.OptionalMemberExpression = function(e) {
            if (
              (this.print(e.object, e),
              !e.computed && a().isMemberExpression(e.property))
            )
              throw new TypeError(
                "Got a MemberExpression for MemberExpression property"
              );
            var t = e.computed;
            a().isLiteral(e.property) &&
              "number" == typeof e.property.value &&
              (t = !0),
              e.optional && this.token("?."),
              t
                ? (this.token("["), this.print(e.property, e), this.token("]"))
                : (e.optional || this.token("."), this.print(e.property, e));
          }),
          (t.OptionalCallExpression = function(e) {
            this.print(e.callee, e),
              this.print(e.typeArguments, e),
              this.print(e.typeParameters, e),
              e.optional && this.token("?."),
              this.token("("),
              this.printList(e.arguments, e),
              this.token(")");
          }),
          (t.CallExpression = function(e) {
            this.print(e.callee, e),
              this.print(e.typeArguments, e),
              this.print(e.typeParameters, e),
              this.token("("),
              this.printList(e.arguments, e),
              this.token(")");
          }),
          (t.Import = function() {
            this.word("import");
          }),
          (t.EmptyStatement = function() {
            this.semicolon(!0);
          }),
          (t.ExpressionStatement = function(e) {
            this.print(e.expression, e), this.semicolon();
          }),
          (t.AssignmentPattern = function(e) {
            this.print(e.left, e),
              e.left.optional && this.token("?"),
              this.print(e.left.typeAnnotation, e),
              this.space(),
              this.token("="),
              this.space(),
              this.print(e.right, e);
          }),
          (t.LogicalExpression = t.BinaryExpression = t.AssignmentExpression = function(
            e,
            t
          ) {
            var n =
              this.inForStatementInitCounter &&
              "in" === e.operator &&
              !r.needsParens(e, t);
            n && this.token("("),
              this.print(e.left, e),
              this.space(),
              "in" === e.operator || "instanceof" === e.operator
                ? this.word(e.operator)
                : this.token(e.operator),
              this.space(),
              this.print(e.right, e),
              n && this.token(")");
          }),
          (t.BindExpression = function(e) {
            this.print(e.object, e), this.token("::"), this.print(e.callee, e);
          }),
          (t.MemberExpression = function(e) {
            if (
              (this.print(e.object, e),
              !e.computed && a().isMemberExpression(e.property))
            )
              throw new TypeError(
                "Got a MemberExpression for MemberExpression property"
              );
            var t = e.computed;
            a().isLiteral(e.property) &&
              "number" == typeof e.property.value &&
              (t = !0),
              t
                ? (this.token("["), this.print(e.property, e), this.token("]"))
                : (this.token("."), this.print(e.property, e));
          }),
          (t.MetaProperty = function(e) {
            this.print(e.meta, e), this.token("."), this.print(e.property, e);
          }),
          (t.PrivateName = function(e) {
            this.token("#"), this.print(e.id, e);
          }),
          (t.AwaitExpression = t.YieldExpression = void 0);
        var r = i(n(190));
        function i(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function o(n) {
          return function(e) {
            if ((this.word(n), e.delegate && this.token("*"), e.argument)) {
              this.space();
              var t = this.startTerminatorless();
              this.print(e.argument, e), this.endTerminatorless(t);
            }
          };
        }
        var s = o("yield");
        t.YieldExpression = s;
        var d = o("await");
        t.AwaitExpression = d;
      },
      function(e, t, n) {
        "use strict";
        function d() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.WithStatement = function(e) {
            this.word("with"),
              this.space(),
              this.token("("),
              this.print(e.object, e),
              this.token(")"),
              this.printBlock(e);
          }),
          (t.IfStatement = function(e) {
            this.word("if"),
              this.space(),
              this.token("("),
              this.print(e.test, e),
              this.token(")"),
              this.space();
            var t =
              e.alternate &&
              d().isIfStatement(
                (function e(t) {
                  return d().isStatement(t.body) ? e(t.body) : t;
                })(e.consequent)
              );
            t && (this.token("{"), this.newline(), this.indent()),
              this.printAndIndentOnComments(e.consequent, e),
              t && (this.dedent(), this.newline(), this.token("}")),
              e.alternate &&
                (this.endsWith("}") && this.space(),
                this.word("else"),
                this.space(),
                this.printAndIndentOnComments(e.alternate, e));
          }),
          (t.ForStatement = function(e) {
            this.word("for"),
              this.space(),
              this.token("("),
              this.inForStatementInitCounter++,
              this.print(e.init, e),
              this.inForStatementInitCounter--,
              this.token(";"),
              e.test && (this.space(), this.print(e.test, e)),
              this.token(";"),
              e.update && (this.space(), this.print(e.update, e)),
              this.token(")"),
              this.printBlock(e);
          }),
          (t.WhileStatement = function(e) {
            this.word("while"),
              this.space(),
              this.token("("),
              this.print(e.test, e),
              this.token(")"),
              this.printBlock(e);
          }),
          (t.DoWhileStatement = function(e) {
            this.word("do"),
              this.space(),
              this.print(e.body, e),
              this.space(),
              this.word("while"),
              this.space(),
              this.token("("),
              this.print(e.test, e),
              this.token(")"),
              this.semicolon();
          }),
          (t.LabeledStatement = function(e) {
            this.print(e.label, e),
              this.token(":"),
              this.space(),
              this.print(e.body, e);
          }),
          (t.TryStatement = function(e) {
            this.word("try"),
              this.space(),
              this.print(e.block, e),
              this.space(),
              e.handlers
                ? this.print(e.handlers[0], e)
                : this.print(e.handler, e),
              e.finalizer &&
                (this.space(),
                this.word("finally"),
                this.space(),
                this.print(e.finalizer, e));
          }),
          (t.CatchClause = function(e) {
            this.word("catch"),
              this.space(),
              e.param &&
                (this.token("("),
                this.print(e.param, e),
                this.token(")"),
                this.space()),
              this.print(e.body, e);
          }),
          (t.SwitchStatement = function(n) {
            this.word("switch"),
              this.space(),
              this.token("("),
              this.print(n.discriminant, n),
              this.token(")"),
              this.space(),
              this.token("{"),
              this.printSequence(n.cases, n, {
                indent: !0,
                addNewlines: function(e, t) {
                  if (!e && n.cases[n.cases.length - 1] === t) return -1;
                },
              }),
              this.token("}");
          }),
          (t.SwitchCase = function(e) {
            e.test
              ? (this.word("case"), this.space(), this.print(e.test, e))
              : this.word("default"),
              this.token(":"),
              e.consequent.length &&
                (this.newline(),
                this.printSequence(e.consequent, e, { indent: !0 }));
          }),
          (t.DebuggerStatement = function() {
            this.word("debugger"), this.semicolon();
          }),
          (t.VariableDeclaration = function(e, t) {
            e.declare && (this.word("declare"), this.space()),
              this.word(e.kind),
              this.space();
            var n,
              a = !1;
            if (!d().isFor(t)) {
              var r = e.declarations,
                i = Array.isArray(r),
                o = 0;
              for (r = i ? r : r[Symbol.iterator](); ; ) {
                var s;
                if (i) {
                  if (o >= r.length) break;
                  s = r[o++];
                } else {
                  if ((o = r.next()).done) break;
                  s = o.value;
                }
                s.init && (a = !0);
              }
            }
            a && (n = "const" === e.kind ? g : p),
              this.printList(e.declarations, e, { separator: n }),
              (!d().isFor(t) || (t.left !== e && t.init !== e)) &&
                this.semicolon();
          }),
          (t.VariableDeclarator = function(e) {
            this.print(e.id, e),
              e.definite && this.token("!"),
              this.print(e.id.typeAnnotation, e),
              e.init &&
                (this.space(),
                this.token("="),
                this.space(),
                this.print(e.init, e));
          }),
          (t.ThrowStatement = t.BreakStatement = t.ReturnStatement = t.ContinueStatement = t.ForOfStatement = t.ForInStatement = void 0);
        var a = function(t) {
            return function(e) {
              this.word("for"),
                this.space(),
                "of" === t && e.await && (this.word("await"), this.space()),
                this.token("("),
                this.print(e.left, e),
                this.space(),
                this.word(t),
                this.space(),
                this.print(e.right, e),
                this.token(")"),
                this.printBlock(e);
            };
          },
          r = a("in");
        t.ForInStatement = r;
        var i = a("of");
        function o(r, i) {
          return (
            void 0 === i && (i = "label"),
            function(e) {
              this.word(r);
              var t = e[i];
              if (t) {
                this.space();
                var n = "label" == i,
                  a = this.startTerminatorless(n);
                this.print(t, e), this.endTerminatorless(a);
              }
              this.semicolon();
            }
          );
        }
        t.ForOfStatement = i;
        var s = o("continue");
        t.ContinueStatement = s;
        var u = o("return", "argument");
        t.ReturnStatement = u;
        var l = o("break");
        t.BreakStatement = l;
        var c = o("throw", "argument");
        function p() {
          if ((this.token(","), this.newline(), this.endsWith("\n")))
            for (var e = 0; e < 4; e++) this.space(!0);
        }
        function g() {
          if ((this.token(","), this.newline(), this.endsWith("\n")))
            for (var e = 0; e < 6; e++) this.space(!0);
        }
        t.ThrowStatement = c;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.ClassExpression = t.ClassDeclaration = function(e, t) {
            (this.format.decoratorsBeforeExport &&
              (a().isExportDefaultDeclaration(t) ||
                a().isExportNamedDeclaration(t))) ||
              this.printJoin(e.decorators, e),
              e.declare && (this.word("declare"), this.space()),
              e.abstract && (this.word("abstract"), this.space()),
              this.word("class"),
              e.id && (this.space(), this.print(e.id, e)),
              this.print(e.typeParameters, e),
              e.superClass &&
                (this.space(),
                this.word("extends"),
                this.space(),
                this.print(e.superClass, e),
                this.print(e.superTypeParameters, e)),
              e.implements &&
                (this.space(),
                this.word("implements"),
                this.space(),
                this.printList(e.implements, e)),
              this.space(),
              this.print(e.body, e);
          }),
          (t.ClassBody = function(e) {
            this.token("{"),
              this.printInnerComments(e),
              0 === e.body.length
                ? this.token("}")
                : (this.newline(),
                  this.indent(),
                  this.printSequence(e.body, e),
                  this.dedent(),
                  this.endsWith("\n") || this.newline(),
                  this.rightBrace());
          }),
          (t.ClassProperty = function(e) {
            this.printJoin(e.decorators, e),
              e.accessibility && (this.word(e.accessibility), this.space()),
              e.static && (this.word("static"), this.space()),
              e.abstract && (this.word("abstract"), this.space()),
              e.readonly && (this.word("readonly"), this.space()),
              e.computed
                ? (this.token("["), this.print(e.key, e), this.token("]"))
                : (this._variance(e), this.print(e.key, e)),
              e.optional && this.token("?"),
              e.definite && this.token("!"),
              this.print(e.typeAnnotation, e),
              e.value &&
                (this.space(),
                this.token("="),
                this.space(),
                this.print(e.value, e)),
              this.semicolon();
          }),
          (t.ClassPrivateProperty = function(e) {
            e.static && (this.word("static"), this.space()),
              this.print(e.key, e),
              this.print(e.typeAnnotation, e),
              e.value &&
                (this.space(),
                this.token("="),
                this.space(),
                this.print(e.value, e)),
              this.semicolon();
          }),
          (t.ClassMethod = function(e) {
            this._classMethodHead(e), this.space(), this.print(e.body, e);
          }),
          (t._classMethodHead = function(e) {
            this.printJoin(e.decorators, e),
              e.accessibility && (this.word(e.accessibility), this.space()),
              e.abstract && (this.word("abstract"), this.space()),
              e.static && (this.word("static"), this.space()),
              this._methodHead(e);
          });
      },
      function(e, t, n) {
        "use strict";
        function r() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t._params = function(e) {
            this.print(e.typeParameters, e),
              this.token("("),
              this._parameters(e.params, e),
              this.token(")"),
              this.print(e.returnType, e);
          }),
          (t._parameters = function(e, t) {
            for (var n = 0; n < e.length; n++)
              this._param(e[n], t),
                n < e.length - 1 && (this.token(","), this.space());
          }),
          (t._param = function(e, t) {
            this.printJoin(e.decorators, e),
              this.print(e, t),
              e.optional && this.token("?"),
              this.print(e.typeAnnotation, e);
          }),
          (t._methodHead = function(e) {
            var t = e.kind,
              n = e.key;
            ("get" !== t && "set" !== t) || (this.word(t), this.space()),
              e.async && (this.word("async"), this.space()),
              ("method" !== t && "init" !== t) ||
                (e.generator && this.token("*")),
              e.computed
                ? (this.token("["), this.print(n, e), this.token("]"))
                : this.print(n, e),
              e.optional && this.token("?"),
              this._params(e);
          }),
          (t._predicate = function(e) {
            e.predicate &&
              (e.returnType || this.token(":"),
              this.space(),
              this.print(e.predicate, e));
          }),
          (t._functionHead = function(e) {
            e.async && (this.word("async"), this.space()),
              this.word("function"),
              e.generator && this.token("*"),
              this.space(),
              e.id && this.print(e.id, e),
              this._params(e),
              this._predicate(e);
          }),
          (t.FunctionDeclaration = t.FunctionExpression = function(e) {
            this._functionHead(e), this.space(), this.print(e.body, e);
          }),
          (t.ArrowFunctionExpression = function(e) {
            e.async && (this.word("async"), this.space());
            var t,
              n,
              a = e.params[0];
            1 !== e.params.length ||
            !r().isIdentifier(a) ||
            ((n = a),
            (t = e).typeParameters ||
              t.returnType ||
              n.typeAnnotation ||
              n.optional ||
              n.trailingComments)
              ? this._params(e)
              : this.print(a, e),
              this._predicate(e),
              this.space(),
              this.token("=>"),
              this.space(),
              this.print(e.body, e);
          });
      },
      function(r, e, t) {
        "use strict";
        (function(e) {
          var t = {},
            a = t.hasOwnProperty,
            B = function(e, t) {
              for (var n in e) a.call(e, n) && t(n, e[n]);
            },
            L = t.toString,
            U = Array.isArray,
            V = e.isBuffer,
            W = {
              '"': '\\"',
              "'": "\\'",
              "\\": "\\\\",
              "\b": "\\b",
              "\f": "\\f",
              "\n": "\\n",
              "\r": "\\r",
              "\t": "\\t",
            },
            G = /["'\\\b\f\n\r\t]/,
            K = /[0-9]/,
            H = /[ !#-&\(-\[\]-~]/,
            n = function i(e, o) {
              var n,
                t = function() {
                  (y = R),
                    ++o.indentLevel,
                    (R = o.indent.repeat(o.indentLevel));
                },
                a = {
                  escapeEverything: !1,
                  minimal: !1,
                  isScriptContext: !1,
                  quotes: "single",
                  wrap: !1,
                  es6: !1,
                  json: !1,
                  compact: !0,
                  lowercaseHex: !1,
                  numbers: "decimal",
                  indent: "\t",
                  indentLevel: 0,
                  __inline1__: !1,
                  __inline2__: !1,
                },
                r = o && o.json;
              r && ((a.quotes = "double"), (a.wrap = !0)),
                "single" !=
                  ((n = a),
                  o &&
                    B(o, function(e, t) {
                      n[e] = t;
                    }),
                  (o = n)).quotes &&
                  "double" != o.quotes &&
                  "backtick" != o.quotes &&
                  (o.quotes = "single");
              var s,
                d,
                u,
                l,
                c,
                p,
                g =
                  "double" == o.quotes
                    ? '"'
                    : "backtick" == o.quotes
                      ? "`"
                      : "'",
                f = o.compact,
                h = o.lowercaseHex,
                R = o.indent.repeat(o.indentLevel),
                y = "",
                m = o.__inline1__,
                v = o.__inline2__,
                b = f ? "" : "\n",
                E = !0,
                x = "binary" == o.numbers,
                A = "octal" == o.numbers,
                S = "decimal" == o.numbers,
                _ = "hexadecimal" == o.numbers;
              if (
                (r && e && "function" == typeof e.toJSON && (e = e.toJSON()),
                "string" != typeof (p = e) && "[object String]" != L.call(p))
              ) {
                if (((c = e), "[object Map]" == L.call(c)))
                  return 0 == e.size
                    ? "new Map()"
                    : (f || ((o.__inline1__ = !0), (o.__inline2__ = !1)),
                      "new Map(" + i(Array.from(e), o) + ")");
                if (((l = e), "[object Set]" == L.call(l)))
                  return 0 == e.size
                    ? "new Set()"
                    : "new Set(" + i(Array.from(e), o) + ")";
                if (V(e))
                  return 0 == e.length
                    ? "Buffer.from([])"
                    : "Buffer.from(" + i(Array.from(e), o) + ")";
                if (U(e))
                  return (
                    (s = []),
                    (o.wrap = !0),
                    m && ((o.__inline1__ = !1), (o.__inline2__ = !0)),
                    v || t(),
                    (function(e, t) {
                      for (var n = e.length, a = -1; ++a < n; )
                        (r = e[a]),
                          (E = !1),
                          v && (o.__inline2__ = !1),
                          s.push((f || v ? "" : R) + i(r, o));
                      var r;
                    })(e),
                    E
                      ? "[]"
                      : v
                        ? "[" + s.join(", ") + "]"
                        : "[" + b + s.join("," + b) + b + (f ? "" : y) + "]"
                  );
                if (
                  "number" != typeof (u = e) &&
                  "[object Number]" != L.call(u)
                )
                  return (
                    (d = e),
                    "[object Object]" == L.call(d)
                      ? ((s = []),
                        (o.wrap = !0),
                        t(),
                        B(e, function(e, t) {
                          (E = !1),
                            s.push(
                              (f ? "" : R) +
                                i(e, o) +
                                ":" +
                                (f ? "" : " ") +
                                i(t, o)
                            );
                        }),
                        E
                          ? "{}"
                          : "{" + b + s.join("," + b) + b + (f ? "" : y) + "}")
                      : r
                        ? JSON.stringify(e) || "null"
                        : String(e)
                  );
                if (r) return JSON.stringify(e);
                if (S) return String(e);
                if (_) {
                  var T = e.toString(16);
                  return h || (T = T.toUpperCase()), "0x" + T;
                }
                if (x) return "0b" + e.toString(2);
                if (A) return "0o" + e.toString(8);
              }
              var P = e,
                C = -1,
                w = P.length;
              for (s = ""; ++C < w; ) {
                var D = P.charAt(C);
                if (o.es6) {
                  var O = P.charCodeAt(C);
                  if (55296 <= O && O <= 56319 && C + 1 < w) {
                    var F = P.charCodeAt(C + 1);
                    if (56320 <= F && F <= 57343) {
                      var k = (1024 * (O - 55296) + F - 56320 + 65536).toString(
                        16
                      );
                      h || (k = k.toUpperCase()), (s += "\\u{" + k + "}"), ++C;
                      continue;
                    }
                  }
                }
                if (!o.escapeEverything) {
                  if (H.test(D)) {
                    s += D;
                    continue;
                  }
                  if ('"' == D) {
                    s += g == D ? '\\"' : D;
                    continue;
                  }
                  if ("`" == D) {
                    s += g == D ? "\\`" : D;
                    continue;
                  }
                  if ("'" == D) {
                    s += g == D ? "\\'" : D;
                    continue;
                  }
                }
                if ("\0" != D || r || K.test(P.charAt(C + 1)))
                  if (G.test(D)) s += W[D];
                  else {
                    var j = D.charCodeAt(0);
                    if (o.minimal && 8232 != j && 8233 != j) s += D;
                    else {
                      var M = j.toString(16);
                      h || (M = M.toUpperCase());
                      var I = 2 < M.length || r,
                        N =
                          "\\" +
                          (I ? "u" : "x") +
                          ("0000" + M).slice(I ? -4 : -2);
                      s += N;
                    }
                  }
                else s += "\\0";
              }
              return (
                o.wrap && (s = g + s + g),
                "`" == g && (s = s.replace(/\$\{/g, "\\${")),
                o.isScriptContext
                  ? s
                      .replace(/<\/(script|style)/gi, "<\\/$1")
                      .replace(/<!--/g, r ? "\\u003C!--" : "\\x3C!--")
                  : s
              );
            };
          (n.version = "2.5.1"), (r.exports = n);
        }.call(this, t(192).Buffer));
      },
      function(e, t, n) {
        "use strict";
        (t.byteLength = function(e) {
          var t = c(e),
            n = t[0],
            a = t[1];
          return (3 * (n + a)) / 4 - a;
        }),
          (t.toByteArray = function(e) {
            for (
              var t,
                n = c(e),
                a = n[0],
                r = n[1],
                i = new l((3 * (a + r)) / 4 - r),
                o = 0,
                s = 0 < r ? a - 4 : a,
                d = 0;
              d < s;
              d += 4
            )
              (t =
                (u[e.charCodeAt(d)] << 18) |
                (u[e.charCodeAt(d + 1)] << 12) |
                (u[e.charCodeAt(d + 2)] << 6) |
                u[e.charCodeAt(d + 3)]),
                (i[o++] = (t >> 16) & 255),
                (i[o++] = (t >> 8) & 255),
                (i[o++] = 255 & t);
            return (
              2 === r &&
                ((t =
                  (u[e.charCodeAt(d)] << 2) | (u[e.charCodeAt(d + 1)] >> 4)),
                (i[o++] = 255 & t)),
              1 === r &&
                ((t =
                  (u[e.charCodeAt(d)] << 10) |
                  (u[e.charCodeAt(d + 1)] << 4) |
                  (u[e.charCodeAt(d + 2)] >> 2)),
                (i[o++] = (t >> 8) & 255),
                (i[o++] = 255 & t)),
              i
            );
          }),
          (t.fromByteArray = function(e) {
            for (
              var t, n = e.length, a = n % 3, r = [], i = 0, o = n - a;
              i < o;
              i += 16383
            )
              r.push(d(e, i, o < i + 16383 ? o : i + 16383));
            return (
              1 === a
                ? ((t = e[n - 1]), r.push(s[t >> 2] + s[(t << 4) & 63] + "=="))
                : 2 === a &&
                  ((t = (e[n - 2] << 8) + e[n - 1]),
                  r.push(
                    s[t >> 10] + s[(t >> 4) & 63] + s[(t << 2) & 63] + "="
                  )),
              r.join("")
            );
          });
        for (
          var s = [],
            u = [],
            l = "undefined" != typeof Uint8Array ? Uint8Array : Array,
            a =
              "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            r = 0,
            i = a.length;
          r < i;
          ++r
        )
          (s[r] = a[r]), (u[a.charCodeAt(r)] = r);
        function c(e) {
          var t = e.length;
          if (0 < t % 4)
            throw new Error("Invalid string. Length must be a multiple of 4");
          var n = e.indexOf("=");
          return -1 === n && (n = t), [n, n === t ? 0 : 4 - (n % 4)];
        }
        function d(e, t, n) {
          for (var a, r = [], i = t; i < n; i += 3)
            (a =
              ((e[i] << 16) & 16711680) +
              ((e[i + 1] << 8) & 65280) +
              (255 & e[i + 2])),
              r.push(
                s[((o = a) >> 18) & 63] +
                  s[(o >> 12) & 63] +
                  s[(o >> 6) & 63] +
                  s[63 & o]
              );
          var o;
          return r.join("");
        }
        (u["-".charCodeAt(0)] = 62), (u["_".charCodeAt(0)] = 63);
      },
      function(e, t) {
        (t.read = function(e, t, n, a, r) {
          var i,
            o,
            s = 8 * r - a - 1,
            d = (1 << s) - 1,
            u = d >> 1,
            l = -7,
            c = n ? r - 1 : 0,
            p = n ? -1 : 1,
            g = e[t + c];
          for (
            c += p, i = g & ((1 << -l) - 1), g >>= -l, l += s;
            0 < l;
            i = 256 * i + e[t + c], c += p, l -= 8
          );
          for (
            o = i & ((1 << -l) - 1), i >>= -l, l += a;
            0 < l;
            o = 256 * o + e[t + c], c += p, l -= 8
          );
          if (0 === i) i = 1 - u;
          else {
            if (i === d) return o ? NaN : (1 / 0) * (g ? -1 : 1);
            (o += Math.pow(2, a)), (i -= u);
          }
          return (g ? -1 : 1) * o * Math.pow(2, i - a);
        }),
          (t.write = function(e, t, n, a, r, i) {
            var o,
              s,
              d,
              u = 8 * i - r - 1,
              l = (1 << u) - 1,
              c = l >> 1,
              p = 23 === r ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
              g = a ? 0 : i - 1,
              f = a ? 1 : -1,
              h = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
            for (
              t = Math.abs(t),
                isNaN(t) || t === 1 / 0
                  ? ((s = isNaN(t) ? 1 : 0), (o = l))
                  : ((o = Math.floor(Math.log(t) / Math.LN2)),
                    t * (d = Math.pow(2, -o)) < 1 && (o--, (d *= 2)),
                    2 <=
                      (t += 1 <= o + c ? p / d : p * Math.pow(2, 1 - c)) * d &&
                      (o++, (d /= 2)),
                    l <= o + c
                      ? ((s = 0), (o = l))
                      : 1 <= o + c
                        ? ((s = (t * d - 1) * Math.pow(2, r)), (o += c))
                        : ((s = t * Math.pow(2, c - 1) * Math.pow(2, r)),
                          (o = 0)));
              8 <= r;
              e[n + g] = 255 & s, g += f, s /= 256, r -= 8
            );
            for (
              o = (o << r) | s, u += r;
              0 < u;
              e[n + g] = 255 & o, g += f, o /= 256, u -= 8
            );
            e[n + g - f] |= 128 * h;
          });
      },
      function(e, t) {
        var n = {}.toString;
        e.exports =
          Array.isArray ||
          function(e) {
            return "[object Array]" == n.call(e);
          };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.AnyTypeAnnotation = function() {
            this.word("any");
          }),
          (t.ArrayTypeAnnotation = function(e) {
            this.print(e.elementType, e), this.token("["), this.token("]");
          }),
          (t.BooleanTypeAnnotation = function() {
            this.word("boolean");
          }),
          (t.BooleanLiteralTypeAnnotation = function(e) {
            this.word(e.value ? "true" : "false");
          }),
          (t.NullLiteralTypeAnnotation = function() {
            this.word("null");
          }),
          (t.DeclareClass = function(e, t) {
            a().isDeclareExportDeclaration(t) ||
              (this.word("declare"), this.space()),
              this.word("class"),
              this.space(),
              this._interfaceish(e);
          }),
          (t.DeclareFunction = function(e, t) {
            a().isDeclareExportDeclaration(t) ||
              (this.word("declare"), this.space()),
              this.word("function"),
              this.space(),
              this.print(e.id, e),
              this.print(e.id.typeAnnotation.typeAnnotation, e),
              e.predicate && (this.space(), this.print(e.predicate, e)),
              this.semicolon();
          }),
          (t.InferredPredicate = function() {
            this.token("%"), this.word("checks");
          }),
          (t.DeclaredPredicate = function(e) {
            this.token("%"),
              this.word("checks"),
              this.token("("),
              this.print(e.value, e),
              this.token(")");
          }),
          (t.DeclareInterface = function(e) {
            this.word("declare"), this.space(), this.InterfaceDeclaration(e);
          }),
          (t.DeclareModule = function(e) {
            this.word("declare"),
              this.space(),
              this.word("module"),
              this.space(),
              this.print(e.id, e),
              this.space(),
              this.print(e.body, e);
          }),
          (t.DeclareModuleExports = function(e) {
            this.word("declare"),
              this.space(),
              this.word("module"),
              this.token("."),
              this.word("exports"),
              this.print(e.typeAnnotation, e);
          }),
          (t.DeclareTypeAlias = function(e) {
            this.word("declare"), this.space(), this.TypeAlias(e);
          }),
          (t.DeclareOpaqueType = function(e, t) {
            a().isDeclareExportDeclaration(t) ||
              (this.word("declare"), this.space()),
              this.OpaqueType(e);
          }),
          (t.DeclareVariable = function(e, t) {
            a().isDeclareExportDeclaration(t) ||
              (this.word("declare"), this.space()),
              this.word("var"),
              this.space(),
              this.print(e.id, e),
              this.print(e.id.typeAnnotation, e),
              this.semicolon();
          }),
          (t.DeclareExportDeclaration = function(e) {
            this.word("declare"),
              this.space(),
              this.word("export"),
              this.space(),
              e.default && (this.word("default"), this.space()),
              function(e) {
                if (e.declaration) {
                  var t = e.declaration;
                  this.print(t, e), a().isStatement(t) || this.semicolon();
                } else
                  this.token("{"),
                    e.specifiers.length &&
                      (this.space(),
                      this.printList(e.specifiers, e),
                      this.space()),
                    this.token("}"),
                    e.source &&
                      (this.space(),
                      this.word("from"),
                      this.space(),
                      this.print(e.source, e)),
                    this.semicolon();
              }.apply(this, arguments);
          }),
          (t.DeclareExportAllDeclaration = function() {
            this.word("declare"),
              this.space(),
              r.ExportAllDeclaration.apply(this, arguments);
          }),
          (t.ExistsTypeAnnotation = function() {
            this.token("*");
          }),
          (t.FunctionTypeAnnotation = function(e, t) {
            this.print(e.typeParameters, e),
              this.token("("),
              this.printList(e.params, e),
              e.rest &&
                (e.params.length && (this.token(","), this.space()),
                this.token("..."),
                this.print(e.rest, e)),
              this.token(")"),
              "ObjectTypeCallProperty" === t.type ||
              "DeclareFunction" === t.type ||
              ("ObjectTypeProperty" === t.type && t.method)
                ? this.token(":")
                : (this.space(), this.token("=>")),
              this.space(),
              this.print(e.returnType, e);
          }),
          (t.FunctionTypeParam = function(e) {
            this.print(e.name, e),
              e.optional && this.token("?"),
              e.name && (this.token(":"), this.space()),
              this.print(e.typeAnnotation, e);
          }),
          (t.GenericTypeAnnotation = t.ClassImplements = t.InterfaceExtends = function(
            e
          ) {
            this.print(e.id, e), this.print(e.typeParameters, e);
          }),
          (t._interfaceish = function(e) {
            this.print(e.id, e),
              this.print(e.typeParameters, e),
              e.extends.length &&
                (this.space(),
                this.word("extends"),
                this.space(),
                this.printList(e.extends, e)),
              e.mixins &&
                e.mixins.length &&
                (this.space(),
                this.word("mixins"),
                this.space(),
                this.printList(e.mixins, e)),
              e.implements &&
                e.implements.length &&
                (this.space(),
                this.word("implements"),
                this.space(),
                this.printList(e.implements, e)),
              this.space(),
              this.print(e.body, e);
          }),
          (t._variance = function(e) {
            e.variance &&
              ("plus" === e.variance.kind
                ? this.token("+")
                : "minus" === e.variance.kind && this.token("-"));
          }),
          (t.InterfaceDeclaration = function(e) {
            this.word("interface"), this.space(), this._interfaceish(e);
          }),
          (t.InterfaceTypeAnnotation = function(e) {
            this.word("interface"),
              e.extends &&
                e.extends.length &&
                (this.space(),
                this.word("extends"),
                this.space(),
                this.printList(e.extends, e)),
              this.space(),
              this.print(e.body, e);
          }),
          (t.IntersectionTypeAnnotation = function(e) {
            this.printJoin(e.types, e, { separator: o });
          }),
          (t.MixedTypeAnnotation = function() {
            this.word("mixed");
          }),
          (t.EmptyTypeAnnotation = function() {
            this.word("empty");
          }),
          (t.NullableTypeAnnotation = function(e) {
            this.token("?"), this.print(e.typeAnnotation, e);
          }),
          (t.NumberTypeAnnotation = function() {
            this.word("number");
          }),
          (t.StringTypeAnnotation = function() {
            this.word("string");
          }),
          (t.ThisTypeAnnotation = function() {
            this.word("this");
          }),
          (t.TupleTypeAnnotation = function(e) {
            this.token("["), this.printList(e.types, e), this.token("]");
          }),
          (t.TypeofTypeAnnotation = function(e) {
            this.word("typeof"), this.space(), this.print(e.argument, e);
          }),
          (t.TypeAlias = function(e) {
            this.word("type"),
              this.space(),
              this.print(e.id, e),
              this.print(e.typeParameters, e),
              this.space(),
              this.token("="),
              this.space(),
              this.print(e.right, e),
              this.semicolon();
          }),
          (t.TypeAnnotation = function(e) {
            this.token(":"),
              this.space(),
              e.optional && this.token("?"),
              this.print(e.typeAnnotation, e);
          }),
          (t.TypeParameterDeclaration = t.TypeParameterInstantiation = function(
            e
          ) {
            this.token("<"), this.printList(e.params, e, {}), this.token(">");
          }),
          (t.TypeParameter = function(e) {
            this._variance(e),
              this.word(e.name),
              e.bound && this.print(e.bound, e),
              e.default &&
                (this.space(),
                this.token("="),
                this.space(),
                this.print(e.default, e));
          }),
          (t.OpaqueType = function(e) {
            this.word("opaque"),
              this.space(),
              this.word("type"),
              this.space(),
              this.print(e.id, e),
              this.print(e.typeParameters, e),
              e.supertype &&
                (this.token(":"), this.space(), this.print(e.supertype, e)),
              e.impltype &&
                (this.space(),
                this.token("="),
                this.space(),
                this.print(e.impltype, e)),
              this.semicolon();
          }),
          (t.ObjectTypeAnnotation = function(e) {
            var t = this;
            e.exact ? this.token("{|") : this.token("{");
            var n = e.properties.concat(
              e.callProperties || [],
              e.indexers || [],
              e.internalSlots || []
            );
            n.length &&
              (this.space(),
              this.printJoin(n, e, {
                addNewlines: function(e) {
                  if (e && !n[0]) return 1;
                },
                indent: !0,
                statement: !0,
                iterator: function() {
                  1 !== n.length && (t.token(","), t.space());
                },
              }),
              this.space()),
              e.exact ? this.token("|}") : this.token("}");
          }),
          (t.ObjectTypeInternalSlot = function(e) {
            e.static && (this.word("static"), this.space()),
              this.token("["),
              this.token("["),
              this.print(e.id, e),
              this.token("]"),
              this.token("]"),
              e.optional && this.token("?"),
              e.method || (this.token(":"), this.space()),
              this.print(e.value, e);
          }),
          (t.ObjectTypeCallProperty = function(e) {
            e.static && (this.word("static"), this.space()),
              this.print(e.value, e);
          }),
          (t.ObjectTypeIndexer = function(e) {
            e.static && (this.word("static"), this.space()),
              this._variance(e),
              this.token("["),
              e.id && (this.print(e.id, e), this.token(":"), this.space()),
              this.print(e.key, e),
              this.token("]"),
              this.token(":"),
              this.space(),
              this.print(e.value, e);
          }),
          (t.ObjectTypeProperty = function(e) {
            e.proto && (this.word("proto"), this.space()),
              e.static && (this.word("static"), this.space()),
              this._variance(e),
              this.print(e.key, e),
              e.optional && this.token("?"),
              e.method || (this.token(":"), this.space()),
              this.print(e.value, e);
          }),
          (t.ObjectTypeSpreadProperty = function(e) {
            this.token("..."), this.print(e.argument, e);
          }),
          (t.QualifiedTypeIdentifier = function(e) {
            this.print(e.qualification, e),
              this.token("."),
              this.print(e.id, e);
          }),
          (t.UnionTypeAnnotation = function(e) {
            this.printJoin(e.types, e, { separator: s });
          }),
          (t.TypeCastExpression = function(e) {
            this.token("("),
              this.print(e.expression, e),
              this.print(e.typeAnnotation, e),
              this.token(")");
          }),
          (t.Variance = function(e) {
            "plus" === e.kind ? this.token("+") : this.token("-");
          }),
          (t.VoidTypeAnnotation = function() {
            this.word("void");
          }),
          Object.defineProperty(t, "NumberLiteralTypeAnnotation", {
            enumerable: !0,
            get: function() {
              return i.NumericLiteral;
            },
          }),
          Object.defineProperty(t, "StringLiteralTypeAnnotation", {
            enumerable: !0,
            get: function() {
              return i.StringLiteral;
            },
          });
        var r = n(191),
          i = n(86);
        function o() {
          this.space(), this.token("&"), this.space();
        }
        function s() {
          this.space(), this.token("|"), this.space();
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.File = function(e) {
            e.program && this.print(e.program.interpreter, e),
              this.print(e.program, e);
          }),
          (t.Program = function(e) {
            this.printInnerComments(e, !1),
              this.printSequence(e.directives, e),
              e.directives && e.directives.length && this.newline(),
              this.printSequence(e.body, e);
          }),
          (t.BlockStatement = function(e) {
            this.token("{"), this.printInnerComments(e);
            var t = e.directives && e.directives.length;
            e.body.length || t
              ? (this.newline(),
                this.printSequence(e.directives, e, { indent: !0 }),
                t && this.newline(),
                this.printSequence(e.body, e, { indent: !0 }),
                this.removeTrailingNewline(),
                this.source("end", e.loc),
                this.endsWith("\n") || this.newline(),
                this.rightBrace())
              : (this.source("end", e.loc), this.token("}"));
          }),
          (t.Noop = function() {}),
          (t.Directive = function(e) {
            this.print(e.value, e), this.semicolon();
          }),
          (t.InterpreterDirective = function(e) {
            this.token("#!" + e.value + "\n");
          }),
          Object.defineProperty(t, "DirectiveLiteral", {
            enumerable: !0,
            get: function() {
              return a.StringLiteral;
            },
          });
        var a = n(86);
      },
      function(e, t, n) {
        "use strict";
        function a() {
          this.space();
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.JSXAttribute = function(e) {
            this.print(e.name, e),
              e.value && (this.token("="), this.print(e.value, e));
          }),
          (t.JSXIdentifier = function(e) {
            this.word(e.name);
          }),
          (t.JSXNamespacedName = function(e) {
            this.print(e.namespace, e), this.token(":"), this.print(e.name, e);
          }),
          (t.JSXMemberExpression = function(e) {
            this.print(e.object, e), this.token("."), this.print(e.property, e);
          }),
          (t.JSXSpreadAttribute = function(e) {
            this.token("{"),
              this.token("..."),
              this.print(e.argument, e),
              this.token("}");
          }),
          (t.JSXExpressionContainer = function(e) {
            this.token("{"), this.print(e.expression, e), this.token("}");
          }),
          (t.JSXSpreadChild = function(e) {
            this.token("{"),
              this.token("..."),
              this.print(e.expression, e),
              this.token("}");
          }),
          (t.JSXText = function(e) {
            var t = this.getPossibleRaw(e);
            null != t ? this.token(t) : this.token(e.value);
          }),
          (t.JSXElement = function(e) {
            var t = e.openingElement;
            if ((this.print(t, e), !t.selfClosing)) {
              this.indent();
              var n = e.children,
                a = Array.isArray(n),
                r = 0;
              for (n = a ? n : n[Symbol.iterator](); ; ) {
                var i;
                if (a) {
                  if (r >= n.length) break;
                  i = n[r++];
                } else {
                  if ((r = n.next()).done) break;
                  i = r.value;
                }
                var o = i;
                this.print(o, e);
              }
              this.dedent(), this.print(e.closingElement, e);
            }
          }),
          (t.JSXOpeningElement = function(e) {
            this.token("<"),
              this.print(e.name, e),
              this.print(e.typeParameters, e),
              0 < e.attributes.length &&
                (this.space(),
                this.printJoin(e.attributes, e, { separator: a })),
              e.selfClosing
                ? (this.space(), this.token("/>"))
                : this.token(">");
          }),
          (t.JSXClosingElement = function(e) {
            this.token("</"), this.print(e.name, e), this.token(">");
          }),
          (t.JSXEmptyExpression = function(e) {
            this.printInnerComments(e);
          }),
          (t.JSXFragment = function(e) {
            this.print(e.openingFragment, e), this.indent();
            var t = e.children,
              n = Array.isArray(t),
              a = 0;
            for (t = n ? t : t[Symbol.iterator](); ; ) {
              var r;
              if (n) {
                if (a >= t.length) break;
                r = t[a++];
              } else {
                if ((a = t.next()).done) break;
                r = a.value;
              }
              var i = r;
              this.print(i, e);
            }
            this.dedent(), this.print(e.closingFragment, e);
          }),
          (t.JSXOpeningFragment = function() {
            this.token("<"), this.token(">");
          }),
          (t.JSXClosingFragment = function() {
            this.token("</"), this.token(">");
          });
      },
      function(e, t, n) {
        "use strict";
        function r(e, t) {
          !0 !== t && e.token(t);
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.TSTypeAnnotation = function(e) {
            this.token(":"),
              this.space(),
              e.optional && this.token("?"),
              this.print(e.typeAnnotation, e);
          }),
          (t.TSTypeParameterDeclaration = t.TSTypeParameterInstantiation = function(
            e
          ) {
            this.token("<"), this.printList(e.params, e, {}), this.token(">");
          }),
          (t.TSTypeParameter = function(e) {
            this.word(e.name),
              e.constraint &&
                (this.space(),
                this.word("extends"),
                this.space(),
                this.print(e.constraint, e)),
              e.default &&
                (this.space(),
                this.token("="),
                this.space(),
                this.print(e.default, e));
          }),
          (t.TSParameterProperty = function(e) {
            e.accessibility && (this.word(e.accessibility), this.space()),
              e.readonly && (this.word("readonly"), this.space()),
              this._param(e.parameter);
          }),
          (t.TSDeclareFunction = function(e) {
            e.declare && (this.word("declare"), this.space()),
              this._functionHead(e),
              this.token(";");
          }),
          (t.TSDeclareMethod = function(e) {
            this._classMethodHead(e), this.token(";");
          }),
          (t.TSQualifiedName = function(e) {
            this.print(e.left, e), this.token("."), this.print(e.right, e);
          }),
          (t.TSCallSignatureDeclaration = function(e) {
            this.tsPrintSignatureDeclarationBase(e);
          }),
          (t.TSConstructSignatureDeclaration = function(e) {
            this.word("new"),
              this.space(),
              this.tsPrintSignatureDeclarationBase(e);
          }),
          (t.TSPropertySignature = function(e) {
            var t = e.readonly,
              n = e.initializer;
            t && (this.word("readonly"), this.space()),
              this.tsPrintPropertyOrMethodName(e),
              this.print(e.typeAnnotation, e),
              n &&
                (this.space(), this.token("="), this.space(), this.print(n, e)),
              this.token(";");
          }),
          (t.tsPrintPropertyOrMethodName = function(e) {
            e.computed && this.token("["),
              this.print(e.key, e),
              e.computed && this.token("]"),
              e.optional && this.token("?");
          }),
          (t.TSMethodSignature = function(e) {
            this.tsPrintPropertyOrMethodName(e),
              this.tsPrintSignatureDeclarationBase(e),
              this.token(";");
          }),
          (t.TSIndexSignature = function(e) {
            e.readonly && (this.word("readonly"), this.space()),
              this.token("["),
              this._parameters(e.parameters, e),
              this.token("]"),
              this.print(e.typeAnnotation, e),
              this.token(";");
          }),
          (t.TSAnyKeyword = function() {
            this.word("any");
          }),
          (t.TSNumberKeyword = function() {
            this.word("number");
          }),
          (t.TSObjectKeyword = function() {
            this.word("object");
          }),
          (t.TSBooleanKeyword = function() {
            this.word("boolean");
          }),
          (t.TSStringKeyword = function() {
            this.word("string");
          }),
          (t.TSSymbolKeyword = function() {
            this.word("symbol");
          }),
          (t.TSVoidKeyword = function() {
            this.word("void");
          }),
          (t.TSUndefinedKeyword = function() {
            this.word("undefined");
          }),
          (t.TSNullKeyword = function() {
            this.word("null");
          }),
          (t.TSNeverKeyword = function() {
            this.word("never");
          }),
          (t.TSThisType = function() {
            this.word("this");
          }),
          (t.TSFunctionType = function(e) {
            this.tsPrintFunctionOrConstructorType(e);
          }),
          (t.TSConstructorType = function(e) {
            this.word("new"),
              this.space(),
              this.tsPrintFunctionOrConstructorType(e);
          }),
          (t.tsPrintFunctionOrConstructorType = function(e) {
            var t = e.typeParameters,
              n = e.parameters;
            this.print(t, e),
              this.token("("),
              this._parameters(n, e),
              this.token(")"),
              this.space(),
              this.token("=>"),
              this.space(),
              this.print(e.typeAnnotation.typeAnnotation, e);
          }),
          (t.TSTypeReference = function(e) {
            this.print(e.typeName, e), this.print(e.typeParameters, e);
          }),
          (t.TSTypePredicate = function(e) {
            this.print(e.parameterName),
              this.space(),
              this.word("is"),
              this.space(),
              this.print(e.typeAnnotation.typeAnnotation);
          }),
          (t.TSTypeQuery = function(e) {
            this.word("typeof"), this.space(), this.print(e.exprName);
          }),
          (t.TSTypeLiteral = function(e) {
            this.tsPrintTypeLiteralOrInterfaceBody(e.members, e);
          }),
          (t.tsPrintTypeLiteralOrInterfaceBody = function(e, t) {
            this.tsPrintBraced(e, t);
          }),
          (t.tsPrintBraced = function(e, t) {
            if ((this.token("{"), e.length)) {
              this.indent(), this.newline();
              var n = e,
                a = Array.isArray(n),
                r = 0;
              for (n = a ? n : n[Symbol.iterator](); ; ) {
                var i;
                if (a) {
                  if (r >= n.length) break;
                  i = n[r++];
                } else {
                  if ((r = n.next()).done) break;
                  i = r.value;
                }
                var o = i;
                this.print(o, t), this.newline();
              }
              this.dedent(), this.rightBrace();
            } else this.token("}");
          }),
          (t.TSArrayType = function(e) {
            this.print(e.elementType), this.token("[]");
          }),
          (t.TSTupleType = function(e) {
            this.token("["), this.printList(e.elementTypes, e), this.token("]");
          }),
          (t.TSUnionType = function(e) {
            this.tsPrintUnionOrIntersectionType(e, "|");
          }),
          (t.TSIntersectionType = function(e) {
            this.tsPrintUnionOrIntersectionType(e, "&");
          }),
          (t.tsPrintUnionOrIntersectionType = function(e, t) {
            this.printJoin(e.types, e, {
              separator: function() {
                this.space(), this.token(t), this.space();
              },
            });
          }),
          (t.TSConditionalType = function(e) {
            this.print(e.checkType),
              this.space(),
              this.word("extends"),
              this.space(),
              this.print(e.extendsType),
              this.space(),
              this.token("?"),
              this.space(),
              this.print(e.trueType),
              this.space(),
              this.token(":"),
              this.space(),
              this.print(e.falseType);
          }),
          (t.TSInferType = function(e) {
            this.token("infer"), this.space(), this.print(e.typeParameter);
          }),
          (t.TSParenthesizedType = function(e) {
            this.token("("), this.print(e.typeAnnotation, e), this.token(")");
          }),
          (t.TSTypeOperator = function(e) {
            this.token(e.operator),
              this.space(),
              this.print(e.typeAnnotation, e);
          }),
          (t.TSIndexedAccessType = function(e) {
            this.print(e.objectType, e),
              this.token("["),
              this.print(e.indexType, e),
              this.token("]");
          }),
          (t.TSMappedType = function(e) {
            var t = e.readonly,
              n = e.typeParameter,
              a = e.optional;
            this.token("{"),
              this.space(),
              t && (r(this, t), this.word("readonly"), this.space()),
              this.token("["),
              this.word(n.name),
              this.space(),
              this.word("in"),
              this.space(),
              this.print(n.constraint, n),
              this.token("]"),
              a && (r(this, a), this.token("?")),
              this.token(":"),
              this.space(),
              this.print(e.typeAnnotation, e),
              this.space(),
              this.token("}");
          }),
          (t.TSLiteralType = function(e) {
            this.print(e.literal, e);
          }),
          (t.TSExpressionWithTypeArguments = function(e) {
            this.print(e.expression, e), this.print(e.typeParameters, e);
          }),
          (t.TSInterfaceDeclaration = function(e) {
            var t = e.declare,
              n = e.id,
              a = e.typeParameters,
              r = e.extends,
              i = e.body;
            t && (this.word("declare"), this.space()),
              this.word("interface"),
              this.space(),
              this.print(n, e),
              this.print(a, e),
              r &&
                (this.space(),
                this.word("extends"),
                this.space(),
                this.printList(r, e)),
              this.space(),
              this.print(i, e);
          }),
          (t.TSInterfaceBody = function(e) {
            this.tsPrintTypeLiteralOrInterfaceBody(e.body, e);
          }),
          (t.TSTypeAliasDeclaration = function(e) {
            var t = e.declare,
              n = e.id,
              a = e.typeParameters,
              r = e.typeAnnotation;
            t && (this.word("declare"), this.space()),
              this.word("type"),
              this.space(),
              this.print(n, e),
              this.print(a, e),
              this.space(),
              this.token("="),
              this.space(),
              this.print(r, e),
              this.token(";");
          }),
          (t.TSAsExpression = function(e) {
            var t = e.expression,
              n = e.typeAnnotation;
            this.print(t, e),
              this.space(),
              this.word("as"),
              this.space(),
              this.print(n, e);
          }),
          (t.TSTypeAssertion = function(e) {
            var t = e.typeAnnotation,
              n = e.expression;
            this.token("<"),
              this.print(t, e),
              this.token(">"),
              this.space(),
              this.print(n, e);
          }),
          (t.TSEnumDeclaration = function(e) {
            var t = e.declare,
              n = e.const,
              a = e.id,
              r = e.members;
            t && (this.word("declare"), this.space()),
              n && (this.word("const"), this.space()),
              this.word("enum"),
              this.space(),
              this.print(a, e),
              this.space(),
              this.tsPrintBraced(r, e);
          }),
          (t.TSEnumMember = function(e) {
            var t = e.id,
              n = e.initializer;
            this.print(t, e),
              n &&
                (this.space(), this.token("="), this.space(), this.print(n, e)),
              this.token(",");
          }),
          (t.TSModuleDeclaration = function(e) {
            var t = e.declare,
              n = e.id;
            if (
              (t && (this.word("declare"), this.space()),
              e.global ||
                (this.word("Identifier" === n.type ? "namespace" : "module"),
                this.space()),
              this.print(n, e),
              e.body)
            ) {
              for (var a = e.body; "TSModuleDeclaration" === a.type; )
                this.token("."), this.print(a.id, a), (a = a.body);
              this.space(), this.print(a, e);
            } else this.token(";");
          }),
          (t.TSModuleBlock = function(e) {
            this.tsPrintBraced(e.body, e);
          }),
          (t.TSImportEqualsDeclaration = function(e) {
            var t = e.isExport,
              n = e.id,
              a = e.moduleReference;
            t && (this.word("export"), this.space()),
              this.word("import"),
              this.space(),
              this.print(n, e),
              this.space(),
              this.token("="),
              this.space(),
              this.print(a, e),
              this.token(";");
          }),
          (t.TSExternalModuleReference = function(e) {
            this.token("require("),
              this.print(e.expression, e),
              this.token(")");
          }),
          (t.TSNonNullExpression = function(e) {
            this.print(e.expression, e), this.token("!");
          }),
          (t.TSExportAssignment = function(e) {
            this.word("export"),
              this.space(),
              this.token("="),
              this.space(),
              this.print(e.expression, e),
              this.token(";");
          }),
          (t.TSNamespaceExportDeclaration = function(e) {
            this.word("export"),
              this.space(),
              this.word("as"),
              this.space(),
              this.word("namespace"),
              this.space(),
              this.print(e.id, e);
          }),
          (t.tsPrintSignatureDeclarationBase = function(e) {
            var t = e.typeParameters,
              n = e.parameters;
            this.print(t, e),
              this.token("("),
              this._parameters(n, e),
              this.token(")"),
              this.print(e.typeAnnotation, e);
          });
      },
      function(e, t, n) {
        "use strict";
        function c() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        var a;
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.findParent = function(e) {
            for (var t = this; (t = t.parentPath); ) if (e(t)) return t;
            return null;
          }),
          (t.find = function(e) {
            var t = this;
            do {
              if (e(t)) return t;
            } while ((t = t.parentPath));
            return null;
          }),
          (t.getFunctionParent = function() {
            return this.findParent(function(e) {
              return e.isFunction();
            });
          }),
          (t.getStatementParent = function() {
            var e = this;
            do {
              if (
                !e.parentPath ||
                (Array.isArray(e.container) && e.isStatement())
              )
                break;
              e = e.parentPath;
            } while (e);
            if (e && (e.isProgram() || e.isFile()))
              throw new Error(
                "File/Program node, we can't possibly find a statement parent to this"
              );
            return e;
          }),
          (t.getEarliestCommonAncestorFrom = function(e) {
            return this.getDeepestCommonAncestorFrom(e, function(e, t, n) {
              var a,
                r = c().VISITOR_KEYS[e.type],
                i = n,
                o = Array.isArray(i),
                s = 0;
              for (i = o ? i : i[Symbol.iterator](); ; ) {
                var d;
                if (o) {
                  if (s >= i.length) break;
                  d = i[s++];
                } else {
                  if ((s = i.next()).done) break;
                  d = s.value;
                }
                var u = d[t + 1];
                if (a)
                  if (u.listKey && a.listKey === u.listKey && u.key < a.key)
                    a = u;
                  else {
                    var l = r.indexOf(a.parentKey);
                    r.indexOf(u.parentKey) < l && (a = u);
                  }
                else a = u;
              }
              return a;
            });
          }),
          (t.getDeepestCommonAncestorFrom = function(e, t) {
            var n = this;
            if (!e.length) return this;
            if (1 === e.length) return e[0];
            var a,
              r,
              i = 1 / 0,
              o = e.map(function(e) {
                for (var t = []; t.unshift(e), (e = e.parentPath) && e !== n; );
                return t.length < i && (i = t.length), t;
              }),
              s = o[0];
            e: for (var d = 0; d < i; d++) {
              var u = s[d],
                l = o,
                c = Array.isArray(l),
                p = 0;
              for (l = c ? l : l[Symbol.iterator](); ; ) {
                var g;
                if (c) {
                  if (p >= l.length) break;
                  g = l[p++];
                } else {
                  if ((p = l.next()).done) break;
                  g = p.value;
                }
                if (g[d] !== u) break e;
              }
              (a = d), (r = u);
            }
            if (r) return t ? t(r, a, o) : r;
            throw new Error("Couldn't find intersection");
          }),
          (t.getAncestry = function() {
            for (var e = this, t = []; t.push(e), (e = e.parentPath); );
            return t;
          }),
          (t.isAncestor = function(e) {
            return e.isDescendant(this);
          }),
          (t.isDescendant = function(t) {
            return !!this.findParent(function(e) {
              return e === t;
            });
          }),
          (t.inType = function() {
            for (var e = this; e; ) {
              var t = arguments,
                n = Array.isArray(t),
                a = 0;
              for (t = n ? t : t[Symbol.iterator](); ; ) {
                var r;
                if (n) {
                  if (a >= t.length) break;
                  r = t[a++];
                } else {
                  if ((a = t.next()).done) break;
                  r = a.value;
                }
                var i = r;
                if (e.node.type === i) return !0;
              }
              e = e.parentPath;
            }
            return !1;
          }),
          (a = n(25)) && a.__esModule;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getTypeAnnotation = function() {
            if (this.typeAnnotation) return this.typeAnnotation;
            var e = this._getTypeAnnotation() || s().anyTypeAnnotation();
            return (
              s().isTypeAnnotation(e) && (e = e.typeAnnotation),
              (this.typeAnnotation = e)
            );
          }),
          (t._getTypeAnnotation = function() {
            var e = this.node;
            if (e) {
              if (e.typeAnnotation) return e.typeAnnotation;
              var t = r[e.type];
              return t
                ? t.call(this, e)
                : (t = r[this.parentPath.type]) && t.validParent
                  ? this.parentPath.getTypeAnnotation()
                  : void 0;
            }
            if ("init" === this.key && this.parentPath.isVariableDeclarator()) {
              var n = this.parentPath.parentPath,
                a = n.parentPath;
              return "left" === n.key && a.isForInStatement()
                ? s().stringTypeAnnotation()
                : "left" === n.key && a.isForOfStatement()
                  ? s().anyTypeAnnotation()
                  : s().voidTypeAnnotation();
            }
          }),
          (t.isBaseType = function(e, t) {
            return d(e, this.getTypeAnnotation(), t);
          }),
          (t.couldBeBaseType = function(e) {
            var t = this.getTypeAnnotation();
            if (s().isAnyTypeAnnotation(t)) return !0;
            if (s().isUnionTypeAnnotation(t)) {
              var n = t.types,
                a = Array.isArray(n),
                r = 0;
              for (n = a ? n : n[Symbol.iterator](); ; ) {
                var i;
                if (a) {
                  if (r >= n.length) break;
                  i = n[r++];
                } else {
                  if ((r = n.next()).done) break;
                  i = r.value;
                }
                var o = i;
                if (s().isAnyTypeAnnotation(o) || d(e, o, !0)) return !0;
              }
              return !1;
            }
            return d(e, t, !0);
          }),
          (t.baseTypeStrictlyMatches = function(e) {
            var t = this.getTypeAnnotation();
            if (
              ((e = e.getTypeAnnotation()),
              !s().isAnyTypeAnnotation(t) && s().isFlowBaseAnnotation(t))
            )
              return e.type === t.type;
          }),
          (t.isGenericType = function(e) {
            var t = this.getTypeAnnotation();
            return (
              s().isGenericTypeAnnotation(t) &&
              s().isIdentifier(t.id, { name: e })
            );
          });
        var r = a(n(424));
        function s() {
          var e = a(n(4));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function a(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function d(e, t, n) {
          if ("string" === e) return s().isStringTypeAnnotation(t);
          if ("number" === e) return s().isNumberTypeAnnotation(t);
          if ("boolean" === e) return s().isBooleanTypeAnnotation(t);
          if ("any" === e) return s().isAnyTypeAnnotation(t);
          if ("mixed" === e) return s().isMixedTypeAnnotation(t);
          if ("empty" === e) return s().isEmptyTypeAnnotation(t);
          if ("void" === e) return s().isVoidTypeAnnotation(t);
          if (n) return !1;
          throw new Error("Unknown base type " + e);
        }
      },
      function(e, t, n) {
        "use strict";
        function r() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.VariableDeclarator = function() {
            if (this.get("id").isIdentifier()) {
              var e = this.get("init"),
                t = e.getTypeAnnotation();
              return (
                t &&
                  "AnyTypeAnnotation" === t.type &&
                  e.isCallExpression() &&
                  e.get("callee").isIdentifier({ name: "Array" }) &&
                  !e.scope.hasBinding("Array", !0) &&
                  (t = s()),
                t
              );
            }
          }),
          (t.TypeCastExpression = o),
          (t.NewExpression = function(e) {
            if (this.get("callee").isIdentifier())
              return r().genericTypeAnnotation(e.callee);
          }),
          (t.TemplateLiteral = function() {
            return r().stringTypeAnnotation();
          }),
          (t.UnaryExpression = function(e) {
            var t = e.operator;
            return "void" === t
              ? r().voidTypeAnnotation()
              : 0 <= r().NUMBER_UNARY_OPERATORS.indexOf(t)
                ? r().numberTypeAnnotation()
                : 0 <= r().STRING_UNARY_OPERATORS.indexOf(t)
                  ? r().stringTypeAnnotation()
                  : 0 <= r().BOOLEAN_UNARY_OPERATORS.indexOf(t)
                    ? r().booleanTypeAnnotation()
                    : void 0;
          }),
          (t.BinaryExpression = function(e) {
            var t = e.operator;
            if (0 <= r().NUMBER_BINARY_OPERATORS.indexOf(t))
              return r().numberTypeAnnotation();
            if (0 <= r().BOOLEAN_BINARY_OPERATORS.indexOf(t))
              return r().booleanTypeAnnotation();
            if ("+" === t) {
              var n = this.get("right"),
                a = this.get("left");
              return a.isBaseType("number") && n.isBaseType("number")
                ? r().numberTypeAnnotation()
                : a.isBaseType("string") || n.isBaseType("string")
                  ? r().stringTypeAnnotation()
                  : r().unionTypeAnnotation([
                      r().stringTypeAnnotation(),
                      r().numberTypeAnnotation(),
                    ]);
            }
          }),
          (t.LogicalExpression = function() {
            return r().createUnionTypeAnnotation([
              this.get("left").getTypeAnnotation(),
              this.get("right").getTypeAnnotation(),
            ]);
          }),
          (t.ConditionalExpression = function() {
            return r().createUnionTypeAnnotation([
              this.get("consequent").getTypeAnnotation(),
              this.get("alternate").getTypeAnnotation(),
            ]);
          }),
          (t.SequenceExpression = function() {
            return this.get("expressions")
              .pop()
              .getTypeAnnotation();
          }),
          (t.AssignmentExpression = function() {
            return this.get("right").getTypeAnnotation();
          }),
          (t.UpdateExpression = function(e) {
            var t = e.operator;
            if ("++" === t || "--" === t) return r().numberTypeAnnotation();
          }),
          (t.StringLiteral = function() {
            return r().stringTypeAnnotation();
          }),
          (t.NumericLiteral = function() {
            return r().numberTypeAnnotation();
          }),
          (t.BooleanLiteral = function() {
            return r().booleanTypeAnnotation();
          }),
          (t.NullLiteral = function() {
            return r().nullLiteralTypeAnnotation();
          }),
          (t.RegExpLiteral = function() {
            return r().genericTypeAnnotation(r().identifier("RegExp"));
          }),
          (t.ObjectExpression = function() {
            return r().genericTypeAnnotation(r().identifier("Object"));
          }),
          (t.ArrayExpression = s),
          (t.RestElement = d),
          (t.ClassDeclaration = t.ClassExpression = t.FunctionDeclaration = t.ArrowFunctionExpression = t.FunctionExpression = function() {
            return r().genericTypeAnnotation(r().identifier("Function"));
          }),
          (t.CallExpression = function() {
            var e = this.node.callee;
            return l(e)
              ? r().arrayTypeAnnotation(r().stringTypeAnnotation())
              : u(e) || c(e)
                ? r().arrayTypeAnnotation(r().anyTypeAnnotation())
                : p(e)
                  ? r().arrayTypeAnnotation(
                      r().tupleTypeAnnotation([
                        r().stringTypeAnnotation(),
                        r().anyTypeAnnotation(),
                      ])
                    )
                  : g(this.get("callee"));
          }),
          (t.TaggedTemplateExpression = function() {
            return g(this.get("tag"));
          }),
          Object.defineProperty(t, "Identifier", {
            enumerable: !0,
            get: function() {
              return i.default;
            },
          });
        var a,
          i = (a = n(425)) && a.__esModule ? a : { default: a };
        function o(e) {
          return e.typeAnnotation;
        }
        function s() {
          return r().genericTypeAnnotation(r().identifier("Array"));
        }
        function d() {
          return s();
        }
        d.validParent = o.validParent = !0;
        var u = r().buildMatchMemberExpression("Array.from"),
          l = r().buildMatchMemberExpression("Object.keys"),
          c = r().buildMatchMemberExpression("Object.values"),
          p = r().buildMatchMemberExpression("Object.entries");
        function g(e) {
          if ((e = e.resolve()).isFunction()) {
            if (e.is("async"))
              return e.is("generator")
                ? r().genericTypeAnnotation(r().identifier("AsyncIterator"))
                : r().genericTypeAnnotation(r().identifier("Promise"));
            if (e.node.returnType) return e.node.returnType;
          }
        }
      },
      function(e, t, n) {
        "use strict";
        function g() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (g = function() {
              return e;
            }),
            e
          );
        }
        function f(e, n, a) {
          var t = e.constantViolations.slice();
          return (
            t.unshift(e.path),
            t.filter(function(e) {
              var t = (e = e.resolve())._guessExecutionStatusRelativeTo(n);
              return a && "function" === t && a.push(e), "before" === t;
            })
          );
        }
        function h(e, t) {
          var n,
            a,
            r,
            i = t.node.operator,
            o = t.get("right").resolve(),
            s = t.get("left").resolve();
          if (
            (s.isIdentifier({ name: e })
              ? (n = o)
              : o.isIdentifier({ name: e }) && (n = s),
            n)
          )
            return "===" === i
              ? n.getTypeAnnotation()
              : 0 <= g().BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(i)
                ? g().numberTypeAnnotation()
                : void 0;
          if (
            ("===" === i || "==" === i) &&
            (s.isUnaryExpression({ operator: "typeof" })
              ? ((a = s), (r = o))
              : o.isUnaryExpression({ operator: "typeof" }) &&
                ((a = o), (r = s)),
            a &&
              a.get("argument").isIdentifier({ name: e }) &&
              (r = r.resolve()).isLiteral())
          ) {
            var d = r.node.value;
            if ("string" == typeof d)
              return g().createTypeAnnotationBasedOnTypeof(d);
          }
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            if (this.isReferenced()) {
              var t = this.scope.getBinding(e.name);
              return t
                ? t.identifier.typeAnnotation
                  ? t.identifier.typeAnnotation
                  : (function(e, t, n) {
                      var a = [],
                        r = [],
                        i = f(e, t, r),
                        o = (function e(t, n, a) {
                          var r = (function(e, t, n) {
                            for (var a; (a = t.parentPath); ) {
                              if (
                                a.isIfStatement() ||
                                a.isConditionalExpression()
                              ) {
                                if ("test" === t.key) return;
                                return a;
                              }
                              if (
                                a.isFunction() &&
                                a.parentPath.scope.getBinding(n) !== e
                              )
                                return;
                              t = a;
                            }
                          })(t, n, a);
                          if (r) {
                            for (
                              var i = [r.get("test")], o = [], s = 0;
                              s < i.length;
                              s++
                            ) {
                              var d = i[s];
                              if (d.isLogicalExpression())
                                "&&" === d.node.operator &&
                                  (i.push(d.get("left")),
                                  i.push(d.get("right")));
                              else if (d.isBinaryExpression()) {
                                var u = h(a, d);
                                u && o.push(u);
                              }
                            }
                            return o.length
                              ? {
                                  typeAnnotation: g().createUnionTypeAnnotation(
                                    o
                                  ),
                                  ifStatement: r,
                                }
                              : e(r, a);
                          }
                        })(e, t, n);
                      if (o) {
                        var s = f(e, o.ifStatement);
                        (i = i.filter(function(e) {
                          return s.indexOf(e) < 0;
                        })),
                          a.push(o.typeAnnotation);
                      }
                      if (i.length) {
                        var d = (i = i.concat(r)),
                          u = Array.isArray(d),
                          l = 0;
                        for (d = u ? d : d[Symbol.iterator](); ; ) {
                          var c;
                          if (u) {
                            if (l >= d.length) break;
                            c = d[l++];
                          } else {
                            if ((l = d.next()).done) break;
                            c = l.value;
                          }
                          var p = c;
                          a.push(p.getTypeAnnotation());
                        }
                      }
                      if (a.length) return g().createUnionTypeAnnotation(a);
                    })(t, this, e.name)
                : "undefined" === e.name
                  ? g().voidTypeAnnotation()
                  : "NaN" === e.name || "Infinity" === e.name
                    ? g().numberTypeAnnotation()
                    : void e.name;
            }
          });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(55);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.replaceWithMultiple = function(e) {
            this.resync(),
              (e = this._verifyNodeList(e)),
              p().inheritLeadingComments(e[0], this.node),
              p().inheritTrailingComments(e[e.length - 1], this.node),
              (this.node = this.container[this.key] = null);
            var t = this.insertAfter(e);
            return this.node ? this.requeue() : this.remove(), t;
          }),
          (t.replaceWithSourceString = function(t) {
            this.resync();
            try {
              (t = "(" + t + ")"), (t = (0, o().parse)(t));
            } catch (e) {
              var n = e.loc;
              throw (n &&
                ((e.message +=
                  " - make sure this is an expression.\n" +
                  (0, a().codeFrameColumns)(t, {
                    start: { line: n.line, column: n.column + 1 },
                  })),
                (e.code = "BABEL_REPLACE_SOURCE_ERROR")),
              e);
            }
            return (
              (t = t.program.body[0].expression),
              r.default.removeProperties(t),
              this.replaceWith(t)
            );
          }),
          (t.replaceWith = function(e) {
            if ((this.resync(), this.removed))
              throw new Error(
                "You can't replace this node, we've already removed it"
              );
            if ((e instanceof i.default && (e = e.node), !e))
              throw new Error(
                "You passed `path.replaceWith()` a falsy node, use `path.remove()` instead"
              );
            if (this.node === e) return [this];
            if (this.isProgram() && !p().isProgram(e))
              throw new Error(
                "You can only replace a Program root node with another Program node"
              );
            if (Array.isArray(e))
              throw new Error(
                "Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`"
              );
            if ("string" == typeof e)
              throw new Error(
                "Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`"
              );
            var t = "";
            if (
              (this.isNodeType("Statement") &&
                p().isExpression(e) &&
                (this.canHaveVariableDeclarationOrExpression() ||
                  this.canSwapBetweenExpressionAndStatement(e) ||
                  this.parentPath.isExportDefaultDeclaration() ||
                  ((e = p().expressionStatement(e)), (t = "expression"))),
              this.isNodeType("Expression") &&
                p().isStatement(e) &&
                !this.canHaveVariableDeclarationOrExpression() &&
                !this.canSwapBetweenExpressionAndStatement(e))
            )
              return this.replaceExpressionWithStatements([e]);
            var n = this.node;
            return (
              n && (p().inheritsComments(e, n), p().removeComments(n)),
              this._replaceWith(e),
              (this.type = e.type),
              this.setScope(),
              this.requeue(),
              [t ? this.get(t) : this]
            );
          }),
          (t._replaceWith = function(e) {
            if (!this.container) throw new ReferenceError("Container is falsy");
            this.inList
              ? p().validate(this.parent, this.key, [e])
              : p().validate(this.parent, this.key, e),
              this.debug("Replace with " + (e && e.type)),
              (this.node = this.container[this.key] = e);
          }),
          (t.replaceExpressionWithStatements = function(e) {
            this.resync();
            var t = p().toSequenceExpression(e, this.scope);
            if (t) return this.replaceWith(t)[0].get("expressions");
            var n = p().arrowFunctionExpression([], p().blockStatement(e));
            this.replaceWith(p().callExpression(n, [])), this.traverse(g);
            var a = this.get("callee").getCompletionRecords(),
              r = Array.isArray(a),
              i = 0;
            for (a = r ? a : a[Symbol.iterator](); ; ) {
              var o;
              if (r) {
                if (i >= a.length) break;
                o = a[i++];
              } else {
                if ((i = a.next()).done) break;
                o = i.value;
              }
              var s = o;
              if (s.isExpressionStatement()) {
                var d = s.findParent(function(e) {
                  return e.isLoop();
                });
                if (d) {
                  var u = d.getData("expressionReplacementReturnUid");
                  if (u) u = p().identifier(u.name);
                  else {
                    var l = this.get("callee");
                    (u = l.scope.generateDeclaredUidIdentifier("ret")),
                      l
                        .get("body")
                        .pushContainer(
                          "body",
                          p().returnStatement(p().cloneNode(u))
                        ),
                      d.setData("expressionReplacementReturnUid", u);
                  }
                  s.get("expression").replaceWith(
                    p().assignmentExpression(
                      "=",
                      p().cloneNode(u),
                      s.node.expression
                    )
                  );
                } else s.replaceWith(p().returnStatement(s.node.expression));
              }
            }
            var c = this.get("callee");
            return c.arrowFunctionToExpression(), c.get("body.body");
          }),
          (t.replaceInline = function(e) {
            if ((this.resync(), Array.isArray(e))) {
              if (Array.isArray(this.container)) {
                e = this._verifyNodeList(e);
                var t = this._containerInsertAfter(e);
                return this.remove(), t;
              }
              return this.replaceWithMultiple(e);
            }
            return this.replaceWith(e);
          });
        var r = s(n(10)),
          i = s(n(25));
        function o() {
          var e = n(87);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function p() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var g = {
          Function: function(e) {
            e.skip();
          },
          VariableDeclaration: function(e) {
            if ("var" === e.node.kind) {
              var t = e.getBindingIdentifiers();
              for (var n in t) e.scope.push({ id: t[n] });
              var a = [],
                r = e.node.declarations,
                i = Array.isArray(r),
                o = 0;
              for (r = i ? r : r[Symbol.iterator](); ; ) {
                var s;
                if (i) {
                  if (o >= r.length) break;
                  s = r[o++];
                } else {
                  if ((o = r.next()).done) break;
                  s = o.value;
                }
                var d = s;
                d.init &&
                  a.push(
                    p().expressionStatement(
                      p().assignmentExpression("=", d.id, d.init)
                    )
                  );
              }
              e.replaceWithMultiple(a);
            }
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function o() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(428));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = r(n(75));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function a() {
          var e = r(n(429));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.shouldHighlight = c),
          (t.getChalk = p),
          (t.default = function(e, t) {
            if ((void 0 === t && (t = {}), c(t))) {
              var n = p(t),
                a = {
                  keyword: (r = n).cyan,
                  capitalized: r.yellow,
                  jsx_tag: r.yellow,
                  punctuator: r.yellow,
                  number: r.magenta,
                  string: r.green,
                  regex: r.magenta,
                  comment: r.grey,
                  invalid: r.white.bgRed.bold,
                };
              return (
                (i = a),
                e.replace(o().default, function() {
                  for (
                    var e = arguments.length, t = new Array(e), n = 0;
                    n < e;
                    n++
                  )
                    t[n] = arguments[n];
                  var a = (function(e) {
                      var t = e.slice(-2),
                        n = t[0],
                        a = t[1],
                        r = (0, o().matchToToken)(e);
                      if ("name" === r.type) {
                        if (s().default.keyword.isReservedWordES6(r.value))
                          return "keyword";
                        if (
                          u.test(r.value) &&
                          ("<" === a[n - 1] || "</" == a.substr(n - 2, 2))
                        )
                          return "jsx_tag";
                        if (r.value[0] !== r.value[0].toLowerCase())
                          return "capitalized";
                      }
                      return "punctuator" === r.type && l.test(r.value)
                        ? "bracket"
                        : "invalid" !== r.type ||
                          ("@" !== r.value && "#" !== r.value)
                          ? r.type
                          : "punctuator";
                    })(t),
                    r = i[a];
                  return r
                    ? t[0]
                        .split(d)
                        .map(function(e) {
                          return r(e);
                        })
                        .join("\n")
                    : t[0];
                })
              );
            }
            var i, r;
            return e;
          });
        var d = /\r\n|[\n\r\u2028\u2029]/,
          u = /^[a-z][\w-]*$/i,
          l = /^[()[\]{}]$/;
        function c(e) {
          return a().default.supportsColor || e.forceColor;
        }
        function p(e) {
          var t = a().default;
          return (
            e.forceColor &&
              (t = new (a()).default.constructor({ enabled: !0, level: 1 })),
            t
          );
        }
      },
      function(e, t) {
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g),
          (t.matchToToken = function(e) {
            var t = { type: "invalid", value: e[0], closed: void 0 };
            return (
              e[1]
                ? ((t.type = "string"), (t.closed = !(!e[3] && !e[4])))
                : e[5]
                  ? (t.type = "comment")
                  : e[6]
                    ? ((t.type = "comment"), (t.closed = !!e[7]))
                    : e[8]
                      ? (t.type = "regex")
                      : e[9]
                        ? (t.type = "number")
                        : e[10]
                          ? (t.type = "name")
                          : e[11]
                            ? (t.type = "punctuator")
                            : e[12] && (t.type = "whitespace"),
              t
            );
          });
      },
      function(x, e, A) {
        "use strict";
        (function(e) {
          var n = A(430),
            l = A(431),
            a = A(435).stdout,
            i = A(436),
            c =
              "win32" === e.platform &&
              !(e.env.TERM || "").toLowerCase().startsWith("xterm"),
            r = ["ansi", "ansi", "ansi256", "ansi16m"],
            t = new Set(["gray"]),
            o = Object.create(null);
          function s(e, t) {
            t = t || {};
            var n = a ? a.level : 0;
            (e.level = void 0 === t.level ? n : t.level),
              (e.enabled = "enabled" in t ? t.enabled : 0 < e.level);
          }
          function d(e) {
            if (!this || !(this instanceof d) || this.template) {
              var t = {};
              return (
                s(t, e),
                (t.template = function() {
                  var e = [].slice.call(arguments);
                  return function(e, t) {
                    if (!Array.isArray(t))
                      return [].slice.call(arguments, 1).join(" ");
                    for (
                      var n = [].slice.call(arguments, 2),
                        a = [t.raw[0]],
                        r = 1;
                      r < t.length;
                      r++
                    )
                      a.push(String(n[r - 1]).replace(/[{}\\]/g, "\\$&")),
                        a.push(String(t.raw[r]));
                    return i(e, a.join(""));
                  }.apply(null, [t.template].concat(e));
                }),
                Object.setPrototypeOf(t, d.prototype),
                Object.setPrototypeOf(t.template, t),
                (t.template.constructor = d),
                t.template
              );
            }
            s(this, e);
          }
          c && (l.blue.open = "[94m");
          for (
            var u = Object.keys(l),
              p = function() {
                var t = u[g];
                (l[t].closeRe = new RegExp(n(l[t].close), "g")),
                  (o[t] = {
                    get: function() {
                      var e = l[t];
                      return E.call(
                        this,
                        this._styles ? this._styles.concat(e) : [e],
                        this._empty,
                        t
                      );
                    },
                  });
              },
              g = 0;
            g < u.length;
            g++
          )
            p();
          (o.visible = {
            get: function() {
              return E.call(this, this._styles || [], !0, "visible");
            },
          }),
            (l.color.closeRe = new RegExp(n(l.color.close), "g"));
          for (
            var f = Object.keys(l.color.ansi),
              h = function() {
                var n = f[R];
                if (t.has(n)) return "continue";
                o[n] = {
                  get: function() {
                    var t = this.level;
                    return function() {
                      var e = {
                        open: l.color[r[t]][n].apply(null, arguments),
                        close: l.color.close,
                        closeRe: l.color.closeRe,
                      };
                      return E.call(
                        this,
                        this._styles ? this._styles.concat(e) : [e],
                        this._empty,
                        n
                      );
                    };
                  },
                };
              },
              R = 0;
            R < f.length;
            R++
          )
            h();
          l.bgColor.closeRe = new RegExp(n(l.bgColor.close), "g");
          for (
            var y = Object.keys(l.bgColor.ansi),
              m = function() {
                var n = y[v];
                if (t.has(n)) return "continue";
                var e = "bg" + n[0].toUpperCase() + n.slice(1);
                o[e] = {
                  get: function() {
                    var t = this.level;
                    return function() {
                      var e = {
                        open: l.bgColor[r[t]][n].apply(null, arguments),
                        close: l.bgColor.close,
                        closeRe: l.bgColor.closeRe,
                      };
                      return E.call(
                        this,
                        this._styles ? this._styles.concat(e) : [e],
                        this._empty,
                        n
                      );
                    };
                  },
                };
              },
              v = 0;
            v < y.length;
            v++
          )
            m();
          var b = Object.defineProperties(function() {}, o);
          function E(e, t, n) {
            var a = function e() {
              return function() {
                var e = arguments,
                  t = e.length,
                  n = String(arguments[0]);
                if (0 === t) return "";
                if (1 < t) for (var a = 1; a < t; a++) n += " " + e[a];
                if (!this.enabled || this.level <= 0 || !n)
                  return this._empty ? "" : n;
                var r = l.dim.open;
                c && this.hasGrey && (l.dim.open = "");
                var i = this._styles.slice().reverse(),
                  o = Array.isArray(i),
                  s = 0;
                for (i = o ? i : i[Symbol.iterator](); ; ) {
                  var d;
                  if (o) {
                    if (s >= i.length) break;
                    d = i[s++];
                  } else {
                    if ((s = i.next()).done) break;
                    d = s.value;
                  }
                  var u = d;
                  n = (n =
                    u.open + n.replace(u.closeRe, u.open) + u.close).replace(
                    /\r?\n/g,
                    u.close + "$&" + u.open
                  );
                }
                return (l.dim.open = r), n;
              }.apply(e, arguments);
            };
            (a._styles = e), (a._empty = t);
            var r = this;
            return (
              Object.defineProperty(a, "level", {
                enumerable: !0,
                get: function() {
                  return r.level;
                },
                set: function(e) {
                  r.level = e;
                },
              }),
              Object.defineProperty(a, "enabled", {
                enumerable: !0,
                get: function() {
                  return r.enabled;
                },
                set: function(e) {
                  r.enabled = e;
                },
              }),
              (a.hasGrey = this.hasGrey || "gray" === n || "grey" === n),
              (a.__proto__ = b),
              a
            );
          }
          Object.defineProperties(d.prototype, o),
            (x.exports = d()),
            (x.exports.supportsColor = a),
            (x.exports.default = x.exports);
        }.call(this, A(7)));
      },
      function(e, t, n) {
        "use strict";
        var a = /[|\\{}()[\]^$+*?.]/g;
        e.exports = function(e) {
          if ("string" != typeof e) throw new TypeError("Expected a string");
          return e.replace(a, "\\$&");
        };
      },
      function(e, t, n) {
        "use strict";
        (function(e) {
          var R = n(432),
            y = function(e, t) {
              return function() {
                return "[" + (e.apply(R, arguments) + t) + "m";
              };
            },
            m = function(t, n) {
              return function() {
                var e = t.apply(R, arguments);
                return "[" + (38 + n) + ";5;" + e + "m";
              };
            },
            v = function(t, n) {
              return function() {
                var e = t.apply(R, arguments);
                return (
                  "[" + (38 + n) + ";2;" + e[0] + ";" + e[1] + ";" + e[2] + "m"
                );
              };
            };
          Object.defineProperty(e, "exports", {
            enumerable: !0,
            get: function() {
              var e = new Map(),
                t = {
                  modifier: {
                    reset: [0, 0],
                    bold: [1, 22],
                    dim: [2, 22],
                    italic: [3, 23],
                    underline: [4, 24],
                    inverse: [7, 27],
                    hidden: [8, 28],
                    strikethrough: [9, 29],
                  },
                  color: {
                    black: [30, 39],
                    red: [31, 39],
                    green: [32, 39],
                    yellow: [33, 39],
                    blue: [34, 39],
                    magenta: [35, 39],
                    cyan: [36, 39],
                    white: [37, 39],
                    gray: [90, 39],
                    redBright: [91, 39],
                    greenBright: [92, 39],
                    yellowBright: [93, 39],
                    blueBright: [94, 39],
                    magentaBright: [95, 39],
                    cyanBright: [96, 39],
                    whiteBright: [97, 39],
                  },
                  bgColor: {
                    bgBlack: [40, 49],
                    bgRed: [41, 49],
                    bgGreen: [42, 49],
                    bgYellow: [43, 49],
                    bgBlue: [44, 49],
                    bgMagenta: [45, 49],
                    bgCyan: [46, 49],
                    bgWhite: [47, 49],
                    bgBlackBright: [100, 49],
                    bgRedBright: [101, 49],
                    bgGreenBright: [102, 49],
                    bgYellowBright: [103, 49],
                    bgBlueBright: [104, 49],
                    bgMagentaBright: [105, 49],
                    bgCyanBright: [106, 49],
                    bgWhiteBright: [107, 49],
                  },
                };
              t.color.grey = t.color.gray;
              for (var n = Object.keys(t), a = 0; a < n.length; a++) {
                for (
                  var r = n[a], i = t[r], o = Object.keys(i), s = 0;
                  s < o.length;
                  s++
                ) {
                  var d = o[s],
                    u = i[d];
                  (t[d] = { open: "[" + u[0] + "m", close: "[" + u[1] + "m" }),
                    (i[d] = t[d]),
                    e.set(u[0], u[1]);
                }
                Object.defineProperty(t, r, { value: i, enumerable: !1 }),
                  Object.defineProperty(t, "codes", {
                    value: e,
                    enumerable: !1,
                  });
              }
              var l = function(e) {
                  return e;
                },
                c = function(e, t, n) {
                  return [e, t, n];
                };
              (t.color.close = "[39m"),
                (t.bgColor.close = "[49m"),
                (t.color.ansi = { ansi: y(l, 0) }),
                (t.color.ansi256 = { ansi256: m(l, 0) }),
                (t.color.ansi16m = { rgb: v(c, 0) }),
                (t.bgColor.ansi = { ansi: y(l, 10) }),
                (t.bgColor.ansi256 = { ansi256: m(l, 10) }),
                (t.bgColor.ansi16m = { rgb: v(c, 10) });
              for (var p = Object.keys(R), g = 0; g < p.length; g++) {
                var f = p[g];
                if ("object" == typeof R[f]) {
                  var h = R[f];
                  "ansi16" === f && (f = "ansi"),
                    "ansi16" in h &&
                      ((t.color.ansi[f] = y(h.ansi16, 0)),
                      (t.bgColor.ansi[f] = y(h.ansi16, 10))),
                    "ansi256" in h &&
                      ((t.color.ansi256[f] = m(h.ansi256, 0)),
                      (t.bgColor.ansi256[f] = m(h.ansi256, 10))),
                    "rgb" in h &&
                      ((t.color.ansi16m[f] = v(h.rgb, 0)),
                      (t.bgColor.ansi16m[f] = v(h.rgb, 10)));
                }
              }
              return t;
            },
          });
        }.call(this, n(28)(e)));
      },
      function(e, t, n) {
        var a = n(193),
          r = n(434),
          d = {};
        Object.keys(a).forEach(function(o) {
          (d[o] = {}),
            Object.defineProperty(d[o], "channels", { value: a[o].channels }),
            Object.defineProperty(d[o], "labels", { value: a[o].labels });
          var s = r(o);
          Object.keys(s).forEach(function(e) {
            var t,
              n,
              r,
              a,
              i = s[e];
            (d[o][e] = ((a = function(e) {
              if (null == e) return e;
              1 < arguments.length &&
                (e = Array.prototype.slice.call(arguments));
              var t = r(e);
              if ("object" == typeof t)
                for (var n = t.length, a = 0; a < n; a++)
                  t[a] = Math.round(t[a]);
              return t;
            }),
            "conversion" in (r = i) && (a.conversion = r.conversion),
            a)),
              (d[o][e].raw = ((n = function(e) {
                return null == e
                  ? e
                  : (1 < arguments.length &&
                      (e = Array.prototype.slice.call(arguments)),
                    t(e));
              }),
              "conversion" in (t = i) && (n.conversion = t.conversion),
              n));
          });
        }),
          (e.exports = d);
      },
      function(e, t, n) {
        "use strict";
        e.exports = {
          aliceblue: [240, 248, 255],
          antiquewhite: [250, 235, 215],
          aqua: [0, 255, 255],
          aquamarine: [127, 255, 212],
          azure: [240, 255, 255],
          beige: [245, 245, 220],
          bisque: [255, 228, 196],
          black: [0, 0, 0],
          blanchedalmond: [255, 235, 205],
          blue: [0, 0, 255],
          blueviolet: [138, 43, 226],
          brown: [165, 42, 42],
          burlywood: [222, 184, 135],
          cadetblue: [95, 158, 160],
          chartreuse: [127, 255, 0],
          chocolate: [210, 105, 30],
          coral: [255, 127, 80],
          cornflowerblue: [100, 149, 237],
          cornsilk: [255, 248, 220],
          crimson: [220, 20, 60],
          cyan: [0, 255, 255],
          darkblue: [0, 0, 139],
          darkcyan: [0, 139, 139],
          darkgoldenrod: [184, 134, 11],
          darkgray: [169, 169, 169],
          darkgreen: [0, 100, 0],
          darkgrey: [169, 169, 169],
          darkkhaki: [189, 183, 107],
          darkmagenta: [139, 0, 139],
          darkolivegreen: [85, 107, 47],
          darkorange: [255, 140, 0],
          darkorchid: [153, 50, 204],
          darkred: [139, 0, 0],
          darksalmon: [233, 150, 122],
          darkseagreen: [143, 188, 143],
          darkslateblue: [72, 61, 139],
          darkslategray: [47, 79, 79],
          darkslategrey: [47, 79, 79],
          darkturquoise: [0, 206, 209],
          darkviolet: [148, 0, 211],
          deeppink: [255, 20, 147],
          deepskyblue: [0, 191, 255],
          dimgray: [105, 105, 105],
          dimgrey: [105, 105, 105],
          dodgerblue: [30, 144, 255],
          firebrick: [178, 34, 34],
          floralwhite: [255, 250, 240],
          forestgreen: [34, 139, 34],
          fuchsia: [255, 0, 255],
          gainsboro: [220, 220, 220],
          ghostwhite: [248, 248, 255],
          gold: [255, 215, 0],
          goldenrod: [218, 165, 32],
          gray: [128, 128, 128],
          green: [0, 128, 0],
          greenyellow: [173, 255, 47],
          grey: [128, 128, 128],
          honeydew: [240, 255, 240],
          hotpink: [255, 105, 180],
          indianred: [205, 92, 92],
          indigo: [75, 0, 130],
          ivory: [255, 255, 240],
          khaki: [240, 230, 140],
          lavender: [230, 230, 250],
          lavenderblush: [255, 240, 245],
          lawngreen: [124, 252, 0],
          lemonchiffon: [255, 250, 205],
          lightblue: [173, 216, 230],
          lightcoral: [240, 128, 128],
          lightcyan: [224, 255, 255],
          lightgoldenrodyellow: [250, 250, 210],
          lightgray: [211, 211, 211],
          lightgreen: [144, 238, 144],
          lightgrey: [211, 211, 211],
          lightpink: [255, 182, 193],
          lightsalmon: [255, 160, 122],
          lightseagreen: [32, 178, 170],
          lightskyblue: [135, 206, 250],
          lightslategray: [119, 136, 153],
          lightslategrey: [119, 136, 153],
          lightsteelblue: [176, 196, 222],
          lightyellow: [255, 255, 224],
          lime: [0, 255, 0],
          limegreen: [50, 205, 50],
          linen: [250, 240, 230],
          magenta: [255, 0, 255],
          maroon: [128, 0, 0],
          mediumaquamarine: [102, 205, 170],
          mediumblue: [0, 0, 205],
          mediumorchid: [186, 85, 211],
          mediumpurple: [147, 112, 219],
          mediumseagreen: [60, 179, 113],
          mediumslateblue: [123, 104, 238],
          mediumspringgreen: [0, 250, 154],
          mediumturquoise: [72, 209, 204],
          mediumvioletred: [199, 21, 133],
          midnightblue: [25, 25, 112],
          mintcream: [245, 255, 250],
          mistyrose: [255, 228, 225],
          moccasin: [255, 228, 181],
          navajowhite: [255, 222, 173],
          navy: [0, 0, 128],
          oldlace: [253, 245, 230],
          olive: [128, 128, 0],
          olivedrab: [107, 142, 35],
          orange: [255, 165, 0],
          orangered: [255, 69, 0],
          orchid: [218, 112, 214],
          palegoldenrod: [238, 232, 170],
          palegreen: [152, 251, 152],
          paleturquoise: [175, 238, 238],
          palevioletred: [219, 112, 147],
          papayawhip: [255, 239, 213],
          peachpuff: [255, 218, 185],
          peru: [205, 133, 63],
          pink: [255, 192, 203],
          plum: [221, 160, 221],
          powderblue: [176, 224, 230],
          purple: [128, 0, 128],
          rebeccapurple: [102, 51, 153],
          red: [255, 0, 0],
          rosybrown: [188, 143, 143],
          royalblue: [65, 105, 225],
          saddlebrown: [139, 69, 19],
          salmon: [250, 128, 114],
          sandybrown: [244, 164, 96],
          seagreen: [46, 139, 87],
          seashell: [255, 245, 238],
          sienna: [160, 82, 45],
          silver: [192, 192, 192],
          skyblue: [135, 206, 235],
          slateblue: [106, 90, 205],
          slategray: [112, 128, 144],
          slategrey: [112, 128, 144],
          snow: [255, 250, 250],
          springgreen: [0, 255, 127],
          steelblue: [70, 130, 180],
          tan: [210, 180, 140],
          teal: [0, 128, 128],
          thistle: [216, 191, 216],
          tomato: [255, 99, 71],
          turquoise: [64, 224, 208],
          violet: [238, 130, 238],
          wheat: [245, 222, 179],
          white: [255, 255, 255],
          whitesmoke: [245, 245, 245],
          yellow: [255, 255, 0],
          yellowgreen: [154, 205, 50],
        };
      },
      function(e, t, n) {
        var u = n(193);
        function i(t, n) {
          return function(e) {
            return n(t(e));
          };
        }
        function s(e, t) {
          for (
            var n = [t[e].parent, e], a = u[t[e].parent][e], r = t[e].parent;
            t[r].parent;

          )
            n.unshift(t[r].parent),
              (a = i(u[t[r].parent][r], a)),
              (r = t[r].parent);
          return (a.conversion = n), a;
        }
        e.exports = function(e) {
          for (
            var t = (function(e) {
                var t = (function() {
                    for (
                      var e = {}, t = Object.keys(u), n = t.length, a = 0;
                      a < n;
                      a++
                    )
                      e[t[a]] = { distance: -1, parent: null };
                    return e;
                  })(),
                  n = [e];
                for (t[e].distance = 0; n.length; )
                  for (
                    var a = n.pop(), r = Object.keys(u[a]), i = r.length, o = 0;
                    o < i;
                    o++
                  ) {
                    var s = r[o],
                      d = t[s];
                    -1 === d.distance &&
                      ((d.distance = t[a].distance + 1),
                      (d.parent = a),
                      n.unshift(s));
                  }
                return t;
              })(e),
              n = {},
              a = Object.keys(t),
              r = a.length,
              i = 0;
            i < r;
            i++
          ) {
            var o = a[i];
            null !== t[o].parent && (n[o] = s(o, t));
          }
          return n;
        };
      },
      function(e, t, n) {
        "use strict";
        e.exports = { stdout: !1, stderr: !1 };
      },
      function(e, t, n) {
        "use strict";
        var a = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi,
          c = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g,
          u = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/,
          l = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi,
          r = new Map([
            ["n", "\n"],
            ["r", "\r"],
            ["t", "\t"],
            ["b", "\b"],
            ["f", "\f"],
            ["v", "\v"],
            ["0", "\0"],
            ["\\", "\\"],
            ["e", ""],
            ["a", ""],
          ]);
        function p(e) {
          return ("u" === e[0] && 5 === e.length) ||
            ("x" === e[0] && 3 === e.length)
            ? String.fromCharCode(parseInt(e.slice(1), 16))
            : r.get(e) || e;
        }
        function g(e, t) {
          var n,
            a = [],
            r = t.trim().split(/\s*,\s*/g),
            i = Array.isArray(r),
            o = 0;
          for (r = i ? r : r[Symbol.iterator](); ; ) {
            var s;
            if (i) {
              if (o >= r.length) break;
              s = r[o++];
            } else {
              if ((o = r.next()).done) break;
              s = o.value;
            }
            var d = s;
            if (isNaN(d)) {
              if (!(n = d.match(u)))
                throw new Error(
                  "Invalid Chalk template style argument: " +
                    d +
                    " (in style '" +
                    e +
                    "')"
                );
              a.push(
                n[2].replace(l, function(e, t, n) {
                  return t ? p(t) : n;
                })
              );
            } else a.push(Number(d));
          }
          return a;
        }
        function f(e, t) {
          var n = {},
            a = t,
            r = Array.isArray(a),
            i = 0;
          for (a = r ? a : a[Symbol.iterator](); ; ) {
            var o;
            if (r) {
              if (i >= a.length) break;
              o = a[i++];
            } else {
              if ((i = a.next()).done) break;
              o = i.value;
            }
            var s = o,
              d = s.styles,
              u = Array.isArray(d),
              l = 0;
            for (d = u ? d : d[Symbol.iterator](); ; ) {
              var c;
              if (u) {
                if (l >= d.length) break;
                c = d[l++];
              } else {
                if ((l = d.next()).done) break;
                c = l.value;
              }
              var p = c;
              n[p[0]] = s.inverse ? null : p.slice(1);
            }
          }
          for (var g = e, f = Object.keys(n), h = 0; h < f.length; h++) {
            var R = f[h];
            if (Array.isArray(n[R])) {
              if (!(R in g)) throw new Error("Unknown Chalk style: " + R);
              g = 0 < n[R].length ? g[R].apply(g, n[R]) : g[R];
            }
          }
          return g;
        }
        e.exports = function(s, e) {
          var d = [],
            u = [],
            l = [];
          if (
            (e.replace(a, function(e, t, n, a, r, i) {
              if (t) l.push(p(t));
              else if (a) {
                var o = l.join("");
                (l = []),
                  u.push(0 === d.length ? o : f(s, d)(o)),
                  d.push({
                    inverse: n,
                    styles: (function(e) {
                      c.lastIndex = 0;
                      for (var t, n = []; null !== (t = c.exec(e)); ) {
                        var a = t[1];
                        if (t[2]) {
                          var r = g(a, t[2]);
                          n.push([a].concat(r));
                        } else n.push([a]);
                      }
                      return n;
                    })(a),
                  });
              } else if (r) {
                if (0 === d.length)
                  throw new Error(
                    "Found extraneous } in Chalk template literal"
                  );
                u.push(f(s, d)(l.join(""))), (l = []), d.pop();
              } else l.push(i);
            }),
            u.push(l.join("")),
            0 < d.length)
          ) {
            var t =
              "Chalk template literal is missing " +
              d.length +
              " closing bracket" +
              (1 === d.length ? "" : "s") +
              " (`}`)";
            throw new Error(t);
          }
          return u.join("");
        };
      },
      function(e, t, n) {
        "use strict";
        (function(Y) {
          Object.defineProperty(t, "__esModule", { value: !0 }),
            (t.evaluateTruthy = function() {
              var e = this.evaluate();
              if (e.confident) return !!e.value;
            }),
            (t.evaluate = function() {
              var e = { confident: !0, deoptPath: null, seen: new Map() },
                t = $(this, e);
              return (
                e.confident || (t = void 0),
                { confident: e.confident, deopt: e.deoptPath, value: t }
              );
            });
          var J = ["String", "Number", "Math"],
            X = ["random"];
          function z(e, t) {
            t.confident && ((t.deoptPath = e), (t.confident = !1));
          }
          function $(e, t) {
            var n = e.node,
              a = t.seen;
            if (a.has(n)) {
              var r = a.get(n);
              return r.resolved ? r.value : void z(e, t);
            }
            var i = { resolved: !1 };
            a.set(n, i);
            var o = (function(e, t) {
              if (t.confident) {
                var n = e.node;
                if (e.isSequenceExpression()) {
                  var a = e.get("expressions");
                  return $(a[a.length - 1], t);
                }
                if (
                  e.isStringLiteral() ||
                  e.isNumericLiteral() ||
                  e.isBooleanLiteral()
                )
                  return n.value;
                if (e.isNullLiteral()) return null;
                if (e.isTemplateLiteral()) return Q(e, n.quasis, t);
                if (
                  e.isTaggedTemplateExpression() &&
                  e.get("tag").isMemberExpression()
                ) {
                  var r = e.get("tag.object"),
                    i = r.node.name,
                    o = e.get("tag.property");
                  if (
                    r.isIdentifier() &&
                    "String" === i &&
                    !e.scope.getBinding(i, !0) &&
                    o.isIdentifier &&
                    "raw" === o.node.name
                  )
                    return Q(e, n.quasi.quasis, t, !0);
                }
                if (e.isConditionalExpression()) {
                  var s = $(e.get("test"), t);
                  if (!t.confident) return;
                  return $(s ? e.get("consequent") : e.get("alternate"), t);
                }
                if (e.isExpressionWrapper()) return $(e.get("expression"), t);
                if (
                  e.isMemberExpression() &&
                  !e.parentPath.isCallExpression({ callee: n })
                ) {
                  var d = e.get("property"),
                    u = e.get("object");
                  if (u.isLiteral() && d.isIdentifier()) {
                    var l = u.node.value,
                      c = typeof l;
                    if ("number" === c || "string" === c) return l[d.node.name];
                  }
                }
                if (e.isReferencedIdentifier()) {
                  var p = e.scope.getBinding(n.name);
                  if (p && 0 < p.constantViolations.length) return z(p.path, t);
                  if (p && e.node.start < p.path.node.end) return z(p.path, t);
                  if (p && p.hasValue) return p.value;
                  if ("undefined" === n.name) return p ? z(p.path, t) : void 0;
                  if ("Infinity" === n.name) return p ? z(p.path, t) : 1 / 0;
                  if ("NaN" === n.name) return p ? z(p.path, t) : NaN;
                  var g = e.resolve();
                  return g === e ? z(e, t) : $(g, t);
                }
                if (e.isUnaryExpression({ prefix: !0 })) {
                  if ("void" === n.operator) return;
                  var f = e.get("argument");
                  if (
                    "typeof" === n.operator &&
                    (f.isFunction() || f.isClass())
                  )
                    return "function";
                  var h = $(f, t);
                  if (!t.confident) return;
                  switch (n.operator) {
                    case "!":
                      return !h;
                    case "+":
                      return +h;
                    case "-":
                      return -h;
                    case "~":
                      return ~h;
                    case "typeof":
                      return typeof h;
                  }
                }
                if (e.isArrayExpression()) {
                  var R = [],
                    y = e.get("elements"),
                    m = Array.isArray(y),
                    v = 0;
                  for (y = m ? y : y[Symbol.iterator](); ; ) {
                    var b;
                    if (m) {
                      if (v >= y.length) break;
                      b = y[v++];
                    } else {
                      if ((v = y.next()).done) break;
                      b = v.value;
                    }
                    var E = b,
                      x = E.evaluate();
                    if (!x.confident) return z(E, t);
                    R.push(x.value);
                  }
                  return R;
                }
                if (e.isObjectExpression()) {
                  var A = {},
                    S = e.get("properties"),
                    _ = Array.isArray(S),
                    T = 0;
                  for (S = _ ? S : S[Symbol.iterator](); ; ) {
                    var P;
                    if (_) {
                      if (T >= S.length) break;
                      P = S[T++];
                    } else {
                      if ((T = S.next()).done) break;
                      P = T.value;
                    }
                    var C = P;
                    if (C.isObjectMethod() || C.isSpreadElement())
                      return z(C, t);
                    var w = C.get("key"),
                      D = w;
                    if (C.node.computed) {
                      if (!(D = D.evaluate()).confident) return z(w, t);
                      D = D.value;
                    } else D = D.isIdentifier() ? D.node.name : D.node.value;
                    var O = C.get("value"),
                      F = O.evaluate();
                    if (!F.confident) return z(O, t);
                    (F = F.value), (A[D] = F);
                  }
                  return A;
                }
                if (e.isLogicalExpression()) {
                  var k = t.confident,
                    j = $(e.get("left"), t),
                    M = t.confident;
                  t.confident = k;
                  var I = $(e.get("right"), t),
                    N = t.confident;
                  switch (((t.confident = M && N), n.operator)) {
                    case "||":
                      if (j && M) return (t.confident = !0), j;
                      if (!t.confident) return;
                      return j || I;
                    case "&&":
                      if (
                        (((!j && M) || (!I && N)) && (t.confident = !0),
                        !t.confident)
                      )
                        return;
                      return j && I;
                  }
                }
                if (e.isBinaryExpression()) {
                  var B = $(e.get("left"), t);
                  if (!t.confident) return;
                  var L = $(e.get("right"), t);
                  if (!t.confident) return;
                  switch (n.operator) {
                    case "-":
                      return B - L;
                    case "+":
                      return B + L;
                    case "/":
                      return B / L;
                    case "*":
                      return B * L;
                    case "%":
                      return B % L;
                    case "**":
                      return Math.pow(B, L);
                    case "<":
                      return B < L;
                    case ">":
                      return L < B;
                    case "<=":
                      return B <= L;
                    case ">=":
                      return L <= B;
                    case "==":
                      return B == L;
                    case "!=":
                      return B != L;
                    case "===":
                      return B === L;
                    case "!==":
                      return B !== L;
                    case "|":
                      return B | L;
                    case "&":
                      return B & L;
                    case "^":
                      return B ^ L;
                    case "<<":
                      return B << L;
                    case ">>":
                      return B >> L;
                    case ">>>":
                      return B >>> L;
                  }
                }
                if (e.isCallExpression()) {
                  var U,
                    V,
                    W = e.get("callee");
                  if (
                    (W.isIdentifier() &&
                      !e.scope.getBinding(W.node.name, !0) &&
                      0 <= J.indexOf(W.node.name) &&
                      (V = Y[n.callee.name]),
                    W.isMemberExpression())
                  ) {
                    var G = W.get("object"),
                      K = W.get("property");
                    if (
                      (G.isIdentifier() &&
                        K.isIdentifier() &&
                        0 <= J.indexOf(G.node.name) &&
                        X.indexOf(K.node.name) < 0 &&
                        (V = (U = Y[G.node.name])[K.node.name]),
                      G.isLiteral() && K.isIdentifier())
                    ) {
                      var H = typeof G.node.value;
                      ("string" !== H && "number" !== H) ||
                        (V = (U = G.node.value)[K.node.name]);
                    }
                  }
                  if (V) {
                    var q = e.get("arguments").map(function(e) {
                      return $(e, t);
                    });
                    if (!t.confident) return;
                    return V.apply(U, q);
                  }
                }
                z(e, t);
              }
            })(e, t);
            return t.confident && ((i.resolved = !0), (i.value = o)), o;
          }
          function Q(e, t, n, a) {
            void 0 === a && (a = !1);
            var r = "",
              i = 0,
              o = e.get("expressions"),
              s = t,
              d = Array.isArray(s),
              u = 0;
            for (s = d ? s : s[Symbol.iterator](); ; ) {
              var l;
              if (d) {
                if (u >= s.length) break;
                l = s[u++];
              } else {
                if ((u = s.next()).done) break;
                l = u.value;
              }
              var c = l;
              if (!n.confident) break;
              r += a ? c.value.raw : c.value.cooked;
              var p = o[i++];
              p && (r += String($(p, n)));
            }
            if (n.confident) return r;
          }
        }.call(this, n(21)));
      },
      function(e, t, n) {
        "use strict";
        function S() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (S = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e,
            t = (e = n(23)) && e.__esModule ? e : { default: e };
          return (
            (d = function() {
              return t;
            }),
            t
          );
        }
        function u(e, t, n) {
          void 0 === t && (t = !1), void 0 === n && (n = !0);
          var g = e.findParent(function(e) {
              return (
                (e.isFunction() && !e.isArrowFunctionExpression()) ||
                e.isProgram() ||
                e.isClassProperty({ static: !1 })
              );
            }),
            a = g && "constructor" === g.node.kind;
          if (g.isClassProperty())
            throw e.buildCodeFrameError(
              "Unable to transform arrow inside class property"
            );
          var r,
            i,
            o,
            s,
            d,
            u,
            l,
            c,
            p,
            f = ((i = []),
            (o = []),
            (s = []),
            (d = []),
            (u = []),
            e.traverse({
              ClassProperty: function(e) {
                e.node.static || e.skip();
              },
              Function: function(e) {
                e.isArrowFunctionExpression() || e.skip();
              },
              ThisExpression: function(e) {
                i.push(e);
              },
              JSXIdentifier: function(e) {
                "this" === e.node.name &&
                  (e.parentPath.isJSXMemberExpression({ object: e.node }) ||
                    e.parentPath.isJSXOpeningElement({ name: e.node })) &&
                  i.push(e);
              },
              CallExpression: function(e) {
                e.get("callee").isSuper() && u.push(e);
              },
              MemberExpression: function(e) {
                e.get("object").isSuper() && d.push(e);
              },
              ReferencedIdentifier: function(e) {
                "arguments" === e.node.name && o.push(e);
              },
              MetaProperty: function(e) {
                e.get("meta").isIdentifier({ name: "new" }) &&
                  e.get("property").isIdentifier({ name: "target" }) &&
                  s.push(e);
              },
            }),
            {
              thisPaths: i,
              argumentsPaths: o,
              newTargetPaths: s,
              superProps: d,
              superCalls: u,
            }),
            h = f.thisPaths,
            R = f.argumentsPaths,
            y = f.newTargetPaths,
            m = f.superProps,
            v = f.superCalls;
          if (a && 0 < v.length) {
            if (!n)
              throw v[0].buildCodeFrameError(
                "Unable to handle nested super() usage in arrow"
              );
            var b = [];
            g.traverse({
              Function: function(e) {
                e.isArrowFunctionExpression() || e.skip();
              },
              ClassProperty: function(e) {
                e.node.static || e.skip();
              },
              CallExpression: function(e) {
                e.get("callee").isSuper() && b.push(e);
              },
            });
            var E = T((l = g), "supercall", function() {
              var e = l.scope.generateUidIdentifier("args");
              return S().arrowFunctionExpression(
                [S().restElement(e)],
                S().callExpression(S().super(), [
                  S().spreadElement(S().identifier(e.name)),
                ])
              );
            });
            b.forEach(function(e) {
              var t = S().identifier(E);
              (t.loc = e.node.callee.loc), e.get("callee").replaceWith(t);
            });
          }
          if (
            ((0 < h.length || t) &&
              ((p = a),
              (r = T((c = g), "this", function(t) {
                if (!p || !_(c)) return S().thisExpression();
                var n = new WeakSet();
                c.traverse({
                  Function: function(e) {
                    e.isArrowFunctionExpression() || e.skip();
                  },
                  ClassProperty: function(e) {
                    e.node.static || e.skip();
                  },
                  CallExpression: function(e) {
                    e.get("callee").isSuper() &&
                      (n.has(e.node) ||
                        (n.add(e.node),
                        e.replaceWith(
                          S().assignmentExpression(
                            "=",
                            S().identifier(t),
                            e.node
                          )
                        )));
                  },
                });
              })),
              (!t || (a && _(g))) &&
                (h.forEach(function(e) {
                  var t = e.isJSX() ? S().jsxIdentifier(r) : S().identifier(r);
                  (t.loc = e.node.loc), e.replaceWith(t);
                }),
                t && (r = null))),
            0 < R.length)
          ) {
            var x = T(g, "arguments", function() {
              return S().identifier("arguments");
            });
            R.forEach(function(e) {
              var t = S().identifier(x);
              (t.loc = e.node.loc), e.replaceWith(t);
            });
          }
          if (0 < y.length) {
            var A = T(g, "newtarget", function() {
              return S().metaProperty(
                S().identifier("new"),
                S().identifier("target")
              );
            });
            y.forEach(function(e) {
              var t = S().identifier(A);
              (t.loc = e.node.loc), e.replaceWith(t);
            });
          }
          if (0 < m.length) {
            if (!n)
              throw m[0].buildCodeFrameError(
                "Unable to handle nested super.prop usage"
              );
            m.reduce(function(e, t) {
              return e.concat(
                (function(e) {
                  if (
                    e.parentPath.isAssignmentExpression() &&
                    "=" !== e.parentPath.node.operator
                  ) {
                    var t = e.parentPath,
                      n = t.node.operator.slice(0, -1),
                      a = t.node.right;
                    if (((t.node.operator = "="), e.node.computed)) {
                      var r = e.scope.generateDeclaredUidIdentifier("tmp");
                      t
                        .get("left")
                        .replaceWith(
                          S().memberExpression(
                            e.node.object,
                            S().assignmentExpression("=", r, e.node.property),
                            !0
                          )
                        ),
                        t
                          .get("right")
                          .replaceWith(
                            S().binaryExpression(
                              n,
                              S().memberExpression(
                                e.node.object,
                                S().identifier(r.name),
                                !0
                              ),
                              a
                            )
                          );
                    } else
                      t
                        .get("left")
                        .replaceWith(
                          S().memberExpression(e.node.object, e.node.property)
                        ),
                        t
                          .get("right")
                          .replaceWith(
                            S().binaryExpression(
                              n,
                              S().memberExpression(
                                e.node.object,
                                S().identifier(e.node.property.name)
                              ),
                              a
                            )
                          );
                    return [t.get("left"), t.get("right").get("left")];
                  }
                  if (e.parentPath.isUpdateExpression()) {
                    var i = e.parentPath,
                      o = e.scope.generateDeclaredUidIdentifier("tmp"),
                      s = e.node.computed
                        ? e.scope.generateDeclaredUidIdentifier("prop")
                        : null,
                      d = [
                        S().assignmentExpression(
                          "=",
                          o,
                          S().memberExpression(
                            e.node.object,
                            s
                              ? S().assignmentExpression(
                                  "=",
                                  s,
                                  e.node.property
                                )
                              : e.node.property,
                            e.node.computed
                          )
                        ),
                        S().assignmentExpression(
                          "=",
                          S().memberExpression(
                            e.node.object,
                            s ? S().identifier(s.name) : e.node.property,
                            e.node.computed
                          ),
                          S().binaryExpression(
                            "+",
                            S().identifier(o.name),
                            S().numericLiteral(1)
                          )
                        ),
                      ];
                    return (
                      e.parentPath.node.prefix ||
                        d.push(S().identifier(o.name)),
                      i.replaceWith(S().sequenceExpression(d)),
                      [
                        i.get("expressions.0.right"),
                        i.get("expressions.1.left"),
                      ]
                    );
                  }
                  return [e];
                })(t)
              );
            }, []).forEach(function(e) {
              var r,
                i,
                o,
                s,
                d,
                t = e.node.computed ? "" : e.get("property").node.name;
              if (e.parentPath.isCallExpression({ callee: e.node })) {
                var n = T(
                  (s = g),
                  "superprop_call:" + ((d = t) || ""),
                  function() {
                    var e,
                      t = s.scope.generateUidIdentifier("args"),
                      n = [S().restElement(t)];
                    if (d)
                      e = S().callExpression(
                        S().memberExpression(S().super(), S().identifier(d)),
                        [S().spreadElement(S().identifier(t.name))]
                      );
                    else {
                      var a = s.scope.generateUidIdentifier("prop");
                      n.unshift(a),
                        (e = S().callExpression(
                          S().memberExpression(
                            S().super(),
                            S().identifier(a.name),
                            !0
                          ),
                          [S().spreadElement(S().identifier(t.name))]
                        ));
                    }
                    return S().arrowFunctionExpression(n, e);
                  }
                );
                if (e.node.computed) {
                  var a = e.get("property").node;
                  e.replaceWith(S().identifier(n)),
                    e.parentPath.node.arguments.unshift(a);
                } else e.replaceWith(S().identifier(n));
              } else {
                var u = e.parentPath.isAssignmentExpression({ left: e.node }),
                  l = T(
                    (r = g),
                    "superprop_" +
                      ((i = u) ? "set" : "get") +
                      ":" +
                      ((o = t) || ""),
                    function() {
                      var e,
                        t = [];
                      if (o)
                        e = S().memberExpression(
                          S().super(),
                          S().identifier(o)
                        );
                      else {
                        var n = r.scope.generateUidIdentifier("prop");
                        t.unshift(n),
                          (e = S().memberExpression(
                            S().super(),
                            S().identifier(n.name),
                            !0
                          ));
                      }
                      if (i) {
                        var a = r.scope.generateUidIdentifier("value");
                        t.push(a),
                          (e = S().assignmentExpression(
                            "=",
                            e,
                            S().identifier(a.name)
                          ));
                      }
                      return S().arrowFunctionExpression(t, e);
                    }
                  ),
                  c = [];
                if ((e.node.computed && c.push(e.get("property").node), u)) {
                  var p = e.parentPath.node.right;
                  c.push(p),
                    e.parentPath.replaceWith(
                      S().callExpression(S().identifier(l), c)
                    );
                } else e.replaceWith(S().callExpression(S().identifier(l), c));
              }
            });
          }
          return r;
        }
        function _(e) {
          return e.isClassMethod() && !!e.parentPath.parentPath.node.superClass;
        }
        function T(e, t, n) {
          var a = "binding:" + t,
            r = e.getData(a);
          if (!r) {
            var i = e.scope.generateUidIdentifier(t);
            (r = i.name), e.setData(a, r), e.scope.push({ id: i, init: n(r) });
          }
          return r;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.toComputedKey = function() {
            var e,
              t = this.node;
            if (this.isMemberExpression()) e = t.property;
            else {
              if (!this.isProperty() && !this.isMethod())
                throw new ReferenceError("todo");
              e = t.key;
            }
            return (
              t.computed ||
                (S().isIdentifier(e) && (e = S().stringLiteral(e.name))),
              e
            );
          }),
          (t.ensureBlock = function() {
            var e = this.get("body"),
              t = e.node;
            if (Array.isArray(e))
              throw new Error("Can't convert array path to a block statement");
            if (!t) throw new Error("Can't convert node without a body");
            if (e.isBlockStatement()) return t;
            var n,
              a,
              r = [],
              i = "body";
            e.isStatement()
              ? ((a = "body"), (n = 0), r.push(e.node))
              : ((i += ".body.0"),
                this.isFunction()
                  ? ((n = "argument"), r.push(S().returnStatement(e.node)))
                  : ((n = "expression"),
                    r.push(S().expressionStatement(e.node)))),
              (this.node.body = S().blockStatement(r));
            var o = this.get(i);
            return e.setup(o, a ? o.node[a] : o.node, a, n), this.node;
          }),
          (t.arrowFunctionToShadowed = function() {
            this.isArrowFunctionExpression() &&
              this.arrowFunctionToExpression();
          }),
          (t.unwrapFunctionEnvironment = function() {
            if (
              !this.isArrowFunctionExpression() &&
              !this.isFunctionExpression() &&
              !this.isFunctionDeclaration()
            )
              throw this.buildCodeFrameError(
                "Can only unwrap the environment of a function."
              );
            u(this);
          }),
          (t.arrowFunctionToExpression = function(e) {
            var t = void 0 === e ? {} : e,
              n = t.allowInsertArrow,
              a = void 0 === n || n,
              r = t.specCompliant,
              i = void 0 !== r && r;
            if (!this.isArrowFunctionExpression())
              throw this.buildCodeFrameError(
                "Cannot convert non-arrow function to a function expression."
              );
            var o = u(this, i, a);
            if (
              (this.ensureBlock(), (this.node.type = "FunctionExpression"), i)
            ) {
              var s = o
                ? null
                : this.parentPath.scope.generateUidIdentifier("arrowCheckId");
              s &&
                this.parentPath.scope.push({
                  id: s,
                  init: S().objectExpression([]),
                }),
                this.get("body").unshiftContainer(
                  "body",
                  S().expressionStatement(
                    S().callExpression(this.hub.addHelper("newArrowCheck"), [
                      S().thisExpression(),
                      s ? S().identifier(s.name) : S().identifier(o),
                    ])
                  )
                ),
                this.replaceWith(
                  S().callExpression(
                    S().memberExpression(
                      (0, d().default)(this, !0) || this.node,
                      S().identifier("bind")
                    ),
                    [s ? S().identifier(s.name) : S().thisExpression()]
                  )
                );
            }
          });
      },
      function(e, t, n) {
        "use strict";
        function r() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            for (var t = e.params, n = 0; n < t.length; n++) {
              var a = t[n];
              if (r().isAssignmentPattern(a) || r().isRestElement(a)) return n;
            }
            return t.length;
          });
      },
      function(e, t, n) {
        "use strict";
        function a(t) {
          return {
            code: function(e) {
              return "/* @gerhobbelt/babel-template */;\n" + e;
            },
            validate: function() {},
            unwrap: function(e) {
              return t(e.program.body.slice(1));
            },
          };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.program = t.expression = t.statement = t.statements = t.smart = void 0);
        var r = a(function(e) {
          return 1 < e.length ? e : e[0];
        });
        t.smart = r;
        var i = a(function(e) {
          return e;
        });
        t.statements = i;
        var o = a(function(e) {
          if (0 === e.length) throw new Error("Found nothing to return.");
          if (1 < e.length)
            throw new Error("Found multiple statements but wanted one");
          return e[0];
        });
        t.statement = o;
        var s = {
          code: function(e) {
            return "(\n" + e + "\n)";
          },
          validate: function(e) {
            var t = e.program;
            if (1 < t.body.length)
              throw new Error("Found multiple statements but wanted one");
            if (0 === t.body[0].expression.start)
              throw new Error("Parse result included parens.");
          },
          unwrap: function(e) {
            return e.program.body[0].expression;
          },
        };
        (t.expression = s),
          (t.program = {
            code: function(e) {
              return e;
            },
            validate: function() {},
            unwrap: function(e) {
              return e.program;
            },
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function i(o, e) {
            var s = new WeakMap(),
              d = new WeakMap(),
              u = e || (0, l.validate)(null);
            return Object.assign(
              function(e) {
                for (
                  var t = arguments.length,
                    n = new Array(1 < t ? t - 1 : 0),
                    a = 1;
                  a < t;
                  a++
                )
                  n[a - 1] = arguments[a];
                if ("string" == typeof e) {
                  if (1 < n.length) throw new Error("Unexpected extra params.");
                  return f(
                    (0, c.default)(o, e, (0, l.merge)(u, (0, l.validate)(n[0])))
                  );
                }
                if (Array.isArray(e)) {
                  var r = s.get(e);
                  return (
                    r || ((r = (0, p.default)(o, e, u)), s.set(e, r)), f(r(n))
                  );
                }
                if ("object" == typeof e && e) {
                  if (0 < n.length) throw new Error("Unexpected extra params.");
                  return i(o, (0, l.merge)(u, (0, l.validate)(e)));
                }
                throw new Error("Unexpected template param " + typeof e);
              },
              {
                ast: function(e) {
                  for (
                    var t = arguments.length,
                      n = new Array(1 < t ? t - 1 : 0),
                      a = 1;
                    a < t;
                    a++
                  )
                    n[a - 1] = arguments[a];
                  if ("string" == typeof e) {
                    if (1 < n.length)
                      throw new Error("Unexpected extra params.");
                    return (0, c.default)(
                      o,
                      e,
                      (0, l.merge)((0, l.merge)(u, (0, l.validate)(n[0])), g)
                    )();
                  }
                  if (Array.isArray(e)) {
                    var r = d.get(e);
                    return (
                      r ||
                        ((r = (0, p.default)(o, e, (0, l.merge)(u, g))),
                        d.set(e, r)),
                      r(n)()
                    );
                  }
                  throw new Error("Unexpected template param " + typeof e);
                },
              }
            );
          });
        var l = n(88),
          c = a(n(442)),
          p = a(n(443));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var g = (0, l.validate)({ placeholderPattern: !1 });
        function f(t) {
          var n = "";
          try {
            throw new Error();
          } catch (t) {
            t.stack &&
              (n = t.stack
                .split("\n")
                .slice(3)
                .join("\n"));
          }
          return function(e) {
            try {
              return t(e);
            } catch (e) {
              throw ((e.stack += "\n    =============\n" + n), e);
            }
          };
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(n, a, r) {
            var i;
            return (
              (a = n.code(a)),
              function(e) {
                var t = (0, o.normalizeReplacements)(e);
                return (
                  i || (i = (0, s.default)(n, a, r)),
                  n.unwrap((0, d.default)(i, t))
                );
              }
            );
          });
        var o = n(88),
          s = a(n(194)),
          d = a(n(195));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(a, e, t) {
            var n = (function(e, t, n) {
                var a,
                  r,
                  i,
                  o = "";
                do {
                  var s = u(t, (o += "$"));
                  (a = s.names),
                    (r = new Set(a)),
                    (i = (0, d.default)(e, e.code(s.code), {
                      parser: n.parser,
                      placeholderWhitelist: new Set(
                        s.names.concat(
                          n.placeholderWhitelist
                            ? Array.from(n.placeholderWhitelist)
                            : []
                        )
                      ),
                      placeholderPattern: n.placeholderPattern,
                      preserveComments: n.preserveComments,
                    }));
                } while (
                  i.placeholders.some(function(e) {
                    return e.isDuplicate && r.has(e.name);
                  })
                );
                return { metadata: i, names: a };
              })(a, e, t),
              r = n.metadata,
              i = n.names;
            return function(e) {
              var n = e.reduce(function(e, t, n) {
                return (e[i[n]] = t), e;
              }, {});
              return function(e) {
                var t = (0, o.normalizeReplacements)(e);
                return (
                  t &&
                    Object.keys(t).forEach(function(e) {
                      if (Object.prototype.hasOwnProperty.call(n, e))
                        throw new Error("Unexpected replacement overlap.");
                    }),
                  a.unwrap((0, s.default)(r, t ? Object.assign(t, n) : n))
                );
              };
            };
          });
        var o = n(88),
          d = a(n(194)),
          s = a(n(195));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function u(e, t) {
          for (var n = [], a = e[0], r = 1; r < e.length; r++) {
            var i = "" + t + (r - 1);
            n.push(i), (a += i + e[r]);
          }
          return { names: n, code: a };
        }
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(82)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        function h() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          var t = this.node && this.node[e];
          return t && Array.isArray(t) ? !!t.length : !!t;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.matchesPattern = function(e, t) {
            return h().matchesPattern(this.node, e, t);
          }),
          (t.has = r),
          (t.isStatic = function() {
            return this.scope.isStatic(this.node);
          }),
          (t.isnt = function(e) {
            return !this.has(e);
          }),
          (t.equals = function(e, t) {
            return this.node[e] === t;
          }),
          (t.isNodeType = function(e) {
            return h().isType(this.type, e);
          }),
          (t.canHaveVariableDeclarationOrExpression = function() {
            return (
              ("init" === this.key || "left" === this.key) &&
              this.parentPath.isFor()
            );
          }),
          (t.canSwapBetweenExpressionAndStatement = function(e) {
            return (
              !(
                "body" !== this.key ||
                !this.parentPath.isArrowFunctionExpression()
              ) &&
              (this.isExpression()
                ? h().isBlockStatement(e)
                : !!this.isBlockStatement() && h().isExpression(e))
            );
          }),
          (t.isCompletionRecord = function(e) {
            var t = this,
              n = !0;
            do {
              var a = t.container;
              if (t.isFunction() && !n) return !!e;
              if (((n = !1), Array.isArray(a) && t.key !== a.length - 1))
                return !1;
            } while ((t = t.parentPath) && !t.isProgram());
            return !0;
          }),
          (t.isStatementOrBlock = function() {
            return (
              !this.parentPath.isLabeledStatement() &&
              !h().isBlockStatement(this.container) &&
              (0, a().default)(h().STATEMENT_OR_BLOCK_KEYS, this.key)
            );
          }),
          (t.referencesImport = function(e, t) {
            if (!this.isReferencedIdentifier()) return !1;
            var n = this.scope.getBinding(this.node.name);
            if (!n || "module" !== n.kind) return !1;
            var a = n.path,
              r = a.parentPath;
            return (
              !!r.isImportDeclaration() &&
              (r.node.source.value === e &&
                (!t ||
                  (!(!a.isImportDefaultSpecifier() || "default" !== t) ||
                    (!(!a.isImportNamespaceSpecifier() || "*" !== t) ||
                      !(
                        !a.isImportSpecifier() || a.node.imported.name !== t
                      )))))
            );
          }),
          (t.getSource = function() {
            var e = this.node;
            if (e.end) {
              var t = this.hub.getCode();
              if (t) return t.slice(e.start, e.end);
            }
            return "";
          }),
          (t.willIMaybeExecuteBefore = function(e) {
            return "after" !== this._guessExecutionStatusRelativeTo(e);
          }),
          (t._guessExecutionStatusRelativeTo = function(e) {
            var t = e.scope.getFunctionParent() || e.scope.getProgramParent(),
              n = this.scope.getFunctionParent() || e.scope.getProgramParent();
            if (t.node !== n.node) {
              var a = this._guessExecutionStatusRelativeToDifferentFunctions(t);
              if (a) return a;
              e = t.path;
            }
            var r = e.getAncestry();
            if (0 <= r.indexOf(this)) return "after";
            var i,
              o,
              s,
              d = this.getAncestry();
            for (s = 0; s < d.length; s++) {
              var u = d[s];
              if (0 <= (o = r.indexOf(u))) {
                i = u;
                break;
              }
            }
            if (!i) return "before";
            var l = r[o - 1],
              c = d[s - 1];
            if (!l || !c) return "before";
            if (l.listKey && l.container === c.container)
              return l.key > c.key ? "before" : "after";
            var p = h().VISITOR_KEYS[i.type],
              g = p.indexOf(l.key);
            return p.indexOf(c.key) < g ? "before" : "after";
          }),
          (t._guessExecutionStatusRelativeToDifferentFunctions = function(e) {
            var t = e.path;
            if (t.isFunctionDeclaration()) {
              var n = t.scope.getBinding(t.node.id.name);
              if (!n.references) return "before";
              var a,
                r = n.referencePaths,
                i = r,
                o = Array.isArray(i),
                s = 0;
              for (i = o ? i : i[Symbol.iterator](); ; ) {
                var d;
                if (o) {
                  if (s >= i.length) break;
                  d = i[s++];
                } else {
                  if ((s = i.next()).done) break;
                  d = s.value;
                }
                var u = d;
                if ("callee" !== u.key || !u.parentPath.isCallExpression())
                  return;
              }
              var l = r,
                c = Array.isArray(l),
                p = 0;
              for (l = c ? l : l[Symbol.iterator](); ; ) {
                var g;
                if (c) {
                  if (p >= l.length) break;
                  g = l[p++];
                } else {
                  if ((p = l.next()).done) break;
                  g = p.value;
                }
                var f = g;
                if (
                  !!!f.find(function(e) {
                    return e.node === t.node;
                  })
                ) {
                  var h = this._guessExecutionStatusRelativeTo(f);
                  if (a) {
                    if (a !== h) return;
                  } else a = h;
                }
              }
              return a;
            }
          }),
          (t.resolve = function(e, t) {
            return this._resolve(e, t) || this;
          }),
          (t._resolve = function(e, t) {
            if (!(t && 0 <= t.indexOf(this)))
              if (((t = t || []).push(this), this.isVariableDeclarator())) {
                if (this.get("id").isIdentifier())
                  return this.get("init").resolve(e, t);
              } else if (this.isReferencedIdentifier()) {
                var n = this.scope.getBinding(this.node.name);
                if (!n) return;
                if (!n.constant) return;
                if ("module" === n.kind) return;
                if (n.path !== this) {
                  var a = n.path.resolve(e, t);
                  if (
                    this.find(function(e) {
                      return e.node === a.node;
                    })
                  )
                    return;
                  return a;
                }
              } else {
                if (this.isTypeCastExpression())
                  return this.get("expression").resolve(e, t);
                if (e && this.isMemberExpression()) {
                  var r = this.toComputedKey();
                  if (!h().isLiteral(r)) return;
                  var i = r.value,
                    o = this.get("object").resolve(e, t);
                  if (o.isObjectExpression()) {
                    var s = o.get("properties"),
                      d = Array.isArray(s),
                      u = 0;
                    for (s = d ? s : s[Symbol.iterator](); ; ) {
                      var l;
                      if (d) {
                        if (u >= s.length) break;
                        l = s[u++];
                      } else {
                        if ((u = s.next()).done) break;
                        l = u.value;
                      }
                      var c = l;
                      if (c.isProperty()) {
                        var p = c.get("key"),
                          g = c.isnt("computed") && p.isIdentifier({ name: i });
                        if ((g = g || p.isLiteral({ value: i })))
                          return c.get("value").resolve(e, t);
                      }
                    }
                  } else if (o.isArrayExpression() && !isNaN(+i)) {
                    var f = o.get("elements")[i];
                    if (f) return f.resolve(e, t);
                  }
                }
              }
          }),
          (t.isConstantExpression = function() {
            if (this.isIdentifier()) {
              var e = this.scope.getBinding(this.node.name);
              return !!e && e.constant;
            }
            return this.isLiteral()
              ? !this.isRegExpLiteral() &&
                  (!this.isTemplateLiteral() ||
                    this.get("expressions").every(function(e) {
                      return e.isConstantExpression();
                    }))
              : this.isUnaryExpression()
                ? "void" === this.get("operator").node &&
                  this.get("argument").isConstantExpression()
                : !!this.isBinaryExpression() &&
                  (this.get("left").isConstantExpression() &&
                    this.get("right").isConstantExpression());
          }),
          (t.isInStrictMode = function() {
            return !!(this.isProgram() ? this : this.parentPath).find(function(
              e
            ) {
              if (e.isProgram({ sourceType: "module" })) return !0;
              if (e.isClass()) return !0;
              if (!e.isProgram() && !e.isFunction()) return !1;
              if (
                e.isArrowFunctionExpression() &&
                !e.get("body").isBlockStatement()
              )
                return !1;
              var t = e.node;
              e.isFunction() && (t = t.body);
              var n = t.directives,
                a = Array.isArray(n),
                r = 0;
              for (n = a ? n : n[Symbol.iterator](); ; ) {
                var i;
                if (a) {
                  if (r >= n.length) break;
                  i = n[r++];
                } else {
                  if ((r = n.next()).done) break;
                  i = r.value;
                }
                if ("use strict" === i.value.value) return !0;
              }
            });
          }),
          (t.is = void 0);
        var i = r;
        t.is = i;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.call = function(e) {
            var t = this.opts;
            return (
              this.debug(e),
              !(!this.node || !this._call(t[e])) ||
                (!!this.node &&
                  this._call(t[this.node.type] && t[this.node.type][e]))
            );
          }),
          (t._call = function(e) {
            if (!e) return !1;
            var t = e,
              n = Array.isArray(t),
              a = 0;
            for (t = n ? t : t[Symbol.iterator](); ; ) {
              var r;
              if (n) {
                if (a >= t.length) break;
                r = t[a++];
              } else {
                if ((a = t.next()).done) break;
                r = a.value;
              }
              var i = r;
              if (i) {
                var o = this.node;
                if (!o) return !0;
                var s = i.call(this.state, this, this.state);
                if (s && "object" == typeof s && "function" == typeof s.then)
                  throw new Error(
                    "You appear to be using a plugin with an async traversal visitor, which your current version of Babel does not support.If you're using a published plugin, you may need to upgrade your @gerhobbelt/babel-core version."
                  );
                if (s)
                  throw new Error(
                    "Unexpected return value from visitor method " + i
                  );
                if (this.node !== o) return !0;
                if (this.shouldStop || this.shouldSkip || this.removed)
                  return !0;
              }
            }
            return !1;
          }),
          (t.isBlacklisted = function() {
            var e = this.opts.blacklist;
            return e && -1 < e.indexOf(this.node.type);
          }),
          (t.visit = function() {
            return (
              !!this.node &&
              (!this.isBlacklisted() &&
                ((!this.opts.shouldSkip || !this.opts.shouldSkip(this)) &&
                  (this.call("enter") || this.shouldSkip
                    ? this.debug("Skip...")
                    : (this.debug("Recursing into..."),
                      r.default.node(
                        this.node,
                        this.opts,
                        this.scope,
                        this.state,
                        this,
                        this.skipKeys
                      ),
                      this.call("exit")),
                  this.shouldStop)))
            );
          }),
          (t.skip = function() {
            this.shouldSkip = !0;
          }),
          (t.skipKey = function(e) {
            this.skipKeys[e] = !0;
          }),
          (t.stop = function() {
            (this.shouldStop = !0), (this.shouldSkip = !0);
          }),
          (t.setScope = function() {
            if (!this.opts || !this.opts.noScope) {
              for (var e, t = this.parentPath; t && !e; ) {
                if (t.opts && t.opts.noScope) return;
                (e = t.scope), (t = t.parentPath);
              }
              (this.scope = this.getScope(e)), this.scope && this.scope.init();
            }
          }),
          (t.setContext = function(e) {
            return (
              (this.shouldSkip = !1),
              (this.shouldStop = !1),
              (this.removed = !1),
              (this.skipKeys = {}),
              e &&
                ((this.context = e),
                (this.state = e.state),
                (this.opts = e.opts)),
              this.setScope(),
              this
            );
          }),
          (t.resync = function() {
            this.removed ||
              (this._resyncParent(), this._resyncList(), this._resyncKey());
          }),
          (t._resyncParent = function() {
            this.parentPath && (this.parent = this.parentPath.node);
          }),
          (t._resyncKey = function() {
            if (this.container && this.node !== this.container[this.key]) {
              if (Array.isArray(this.container)) {
                for (var e = 0; e < this.container.length; e++)
                  if (this.container[e] === this.node) return this.setKey(e);
              } else
                for (var t in this.container)
                  if (this.container[t] === this.node) return this.setKey(t);
              this.key = null;
            }
          }),
          (t._resyncList = function() {
            if (this.parent && this.inList) {
              var e = this.parent[this.listKey];
              this.container !== e && (this.container = e || null);
            }
          }),
          (t._resyncRemoved = function() {
            (null != this.key &&
              this.container &&
              this.container[this.key] === this.node) ||
              this._markRemoved();
          }),
          (t.popContext = function() {
            this.contexts.pop(),
              0 < this.contexts.length
                ? this.setContext(this.contexts[this.contexts.length - 1])
                : this.setContext(void 0);
          }),
          (t.pushContext = function(e) {
            this.contexts.push(e), this.setContext(e);
          }),
          (t.setup = function(e, t, n, a) {
            (this.inList = !!n),
              (this.listKey = n),
              (this.parentKey = n || a),
              (this.container = t),
              (this.parentPath = e || this.parentPath),
              this.setKey(a);
          }),
          (t.setKey = function(e) {
            (this.key = e),
              (this.node = this.container[this.key]),
              (this.type = this.node && this.node.type);
          }),
          (t.requeue = function(e) {
            if ((void 0 === e && (e = this), !e.removed)) {
              var t = this.contexts,
                n = Array.isArray(t),
                a = 0;
              for (t = n ? t : t[Symbol.iterator](); ; ) {
                var r;
                if (n) {
                  if (a >= t.length) break;
                  r = t[a++];
                } else {
                  if ((a = t.next()).done) break;
                  r = a.value;
                }
                r.maybeQueue(e);
              }
            }
          }),
          (t._getQueueContexts = function() {
            for (
              var e = this, t = this.contexts;
              !t.length && (e = e.parentPath);

            )
              t = e.contexts;
            return t;
          });
        var a,
          r = (a = n(10)) && a.__esModule ? a : { default: a };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.remove = function() {
            this._assertUnremoved(),
              this.resync(),
              this._removeFromScope(),
              this._callRemovalHooks() ||
                (this.shareCommentsWithSiblings(), this._remove()),
              this._markRemoved();
          }),
          (t._removeFromScope = function() {
            var t = this,
              e = this.getBindingIdentifiers();
            Object.keys(e).forEach(function(e) {
              return t.scope.removeBinding(e);
            });
          }),
          (t._callRemovalHooks = function() {
            var e = r.hooks,
              t = Array.isArray(e),
              n = 0;
            for (e = t ? e : e[Symbol.iterator](); ; ) {
              var a;
              if (t) {
                if (n >= e.length) break;
                a = e[n++];
              } else {
                if ((n = e.next()).done) break;
                a = n.value;
              }
              if (a(this, this.parentPath)) return !0;
            }
          }),
          (t._remove = function() {
            Array.isArray(this.container)
              ? (this.container.splice(this.key, 1),
                this.updateSiblingKeys(this.key, -1))
              : this._replaceWith(null);
          }),
          (t._markRemoved = function() {
            (this.shouldSkip = !0), (this.removed = !0), (this.node = null);
          }),
          (t._assertUnremoved = function() {
            if (this.removed)
              throw this.buildCodeFrameError(
                "NodePath has been removed so is read-only."
              );
          });
        var r = n(447);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hooks = void 0),
          (t.hooks = [
            function(e, t) {
              if (
                ("test" === e.key && (t.isWhile() || t.isSwitchCase())) ||
                ("declaration" === e.key && t.isExportDeclaration()) ||
                ("body" === e.key && t.isLabeledStatement()) ||
                ("declarations" === e.listKey &&
                  t.isVariableDeclaration() &&
                  1 === t.node.declarations.length) ||
                ("expression" === e.key && t.isExpressionStatement())
              )
                return t.remove(), !0;
            },
            function(e, t) {
              if (t.isSequenceExpression() && 1 === t.node.expressions.length)
                return t.replaceWith(t.node.expressions[0]), !0;
            },
            function(e, t) {
              if (t.isBinary())
                return (
                  "left" === e.key
                    ? t.replaceWith(t.node.right)
                    : t.replaceWith(t.node.left),
                  !0
                );
            },
            function(e, t) {
              if (
                (t.isIfStatement() &&
                  ("consequent" === e.key || "alternate" === e.key)) ||
                ("body" === e.key &&
                  (t.isLoop() || t.isArrowFunctionExpression()))
              )
                return e.replaceWith({ type: "BlockStatement", body: [] }), !0;
            },
          ]);
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.insertBefore = function(e) {
            this._assertUnremoved(), (e = this._verifyNodeList(e));
            var t = this.parentPath;
            if (
              t.isExpressionStatement() ||
              t.isLabeledStatement() ||
              t.isExportNamedDeclaration() ||
              (t.isExportDefaultDeclaration() && this.isDeclaration())
            )
              return t.insertBefore(e);
            if (
              (this.isNodeType("Expression") &&
                "params" !== this.listKey &&
                "arguments" !== this.listKey) ||
              (t.isForStatement() && "init" === this.key)
            )
              return (
                this.node && e.push(this.node),
                this.replaceExpressionWithStatements(e)
              );
            if (Array.isArray(this.container))
              return this._containerInsertBefore(e);
            if (this.isStatementOrBlock()) {
              var n =
                this.node &&
                (!this.isExpressionStatement() || null != this.node.expression);
              return (
                this.replaceWith(s().blockStatement(n ? [this.node] : [])),
                this.unshiftContainer("body", e)
              );
            }
            throw new Error(
              "We don't know what to do with this node type. We were previously a Statement but we can't fit in here?"
            );
          }),
          (t._containerInsert = function(e, t) {
            var n;
            this.updateSiblingKeys(e, t.length);
            var a = [];
            (n = this.container).splice.apply(n, [e, 0].concat(t));
            for (var r = 0; r < t.length; r++) {
              var i = e + r,
                o = this.getSibling(i);
              a.push(o),
                this.context &&
                  this.context.queue &&
                  o.pushContext(this.context);
            }
            for (var s = this._getQueueContexts(), d = 0; d < a.length; d++) {
              var u = a[d];
              u.setScope(), u.debug("Inserted.");
              var l = s,
                c = Array.isArray(l),
                p = 0;
              for (l = c ? l : l[Symbol.iterator](); ; ) {
                var g;
                if (c) {
                  if (p >= l.length) break;
                  g = l[p++];
                } else {
                  if ((p = l.next()).done) break;
                  g = p.value;
                }
                g.maybeQueue(u, !0);
              }
            }
            return a;
          }),
          (t._containerInsertBefore = function(e) {
            return this._containerInsert(this.key, e);
          }),
          (t._containerInsertAfter = function(e) {
            return this._containerInsert(this.key + 1, e);
          }),
          (t.insertAfter = function(e) {
            this._assertUnremoved(), (e = this._verifyNodeList(e));
            var t = this.parentPath;
            if (
              t.isExpressionStatement() ||
              t.isLabeledStatement() ||
              t.isExportNamedDeclaration() ||
              (t.isExportDefaultDeclaration() && this.isDeclaration())
            )
              return t.insertAfter(e);
            if (
              this.isNodeType("Expression") ||
              (t.isForStatement() && "init" === this.key)
            ) {
              if (this.node) {
                var n = this.scope;
                t.isMethod({ computed: !0, key: this.node }) && (n = n.parent);
                var a = n.generateDeclaredUidIdentifier();
                e.unshift(
                  s().expressionStatement(
                    s().assignmentExpression("=", s().cloneNode(a), this.node)
                  )
                ),
                  e.push(s().expressionStatement(s().cloneNode(a)));
              }
              return this.replaceExpressionWithStatements(e);
            }
            if (Array.isArray(this.container))
              return this._containerInsertAfter(e);
            if (this.isStatementOrBlock()) {
              var r =
                this.node &&
                (!this.isExpressionStatement() || null != this.node.expression);
              return (
                this.replaceWith(s().blockStatement(r ? [this.node] : [])),
                this.pushContainer("body", e)
              );
            }
            throw new Error(
              "We don't know what to do with this node type. We were previously a Statement but we can't fit in here?"
            );
          }),
          (t.updateSiblingKeys = function(e, t) {
            if (this.parent)
              for (var n = i.path.get(this.parent), a = 0; a < n.length; a++) {
                var r = n[a];
                r.key >= e && (r.key += t);
              }
          }),
          (t._verifyNodeList = function(e) {
            if (!e) return [];
            e.constructor !== Array && (e = [e]);
            for (var t = 0; t < e.length; t++) {
              var n = e[t],
                a = void 0;
              if (
                (n
                  ? "object" != typeof n
                    ? (a = "contains a non-object node")
                    : n.type
                      ? n instanceof o.default &&
                        (a = "has a NodePath when it expected a raw object")
                      : (a = "without a type")
                  : (a = "has falsy node"),
                a)
              ) {
                var r = Array.isArray(n) ? "array" : typeof n;
                throw new Error(
                  "Node list " +
                    a +
                    " with the index of " +
                    t +
                    " and type of " +
                    r
                );
              }
            }
            return e;
          }),
          (t.unshiftContainer = function(e, t) {
            return (
              this._assertUnremoved(),
              (t = this._verifyNodeList(t)),
              o.default
                .get({
                  parentPath: this,
                  parent: this.node,
                  container: this.node[e],
                  listKey: e,
                  key: 0,
                })
                .insertBefore(t)
            );
          }),
          (t.pushContainer = function(e, t) {
            this._assertUnremoved(), (t = this._verifyNodeList(t));
            var n = this.node[e];
            return o.default
              .get({
                parentPath: this,
                parent: this.node,
                container: n,
                listKey: e,
                key: n.length,
              })
              .replaceWithMultiple(t);
          }),
          (t.hoist = function(e) {
            return (
              void 0 === e && (e = this.scope), new a.default(this, e).run()
            );
          });
        var i = n(53),
          a = r(n(449)),
          o = r(n(25));
        function s() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        function i() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = {
            ReferencedIdentifier: function(e, t) {
              if (
                !e.isJSXIdentifier() ||
                !i().react.isCompatTag(e.node.name) ||
                e.parentPath.isJSXMemberExpression()
              ) {
                if ("this" === e.node.name) {
                  var n = e.scope;
                  do {
                    if (
                      n.path.isFunction() &&
                      !n.path.isArrowFunctionExpression()
                    )
                      break;
                  } while ((n = n.parent));
                  n && t.breakOnScopePaths.push(n.path);
                }
                var a = e.scope.getBinding(e.node.name);
                a &&
                  a === t.scope.getBinding(e.node.name) &&
                  (t.bindings[e.node.name] = a);
              }
            },
          },
          a = (function() {
            function e(e, t) {
              (this.breakOnScopePaths = []),
                (this.bindings = {}),
                (this.scopes = []),
                (this.scope = t),
                (this.path = e),
                (this.attachAfter = !1);
            }
            var t = e.prototype;
            return (
              (t.isCompatibleScope = function(e) {
                for (var t in this.bindings) {
                  var n = this.bindings[t];
                  if (!e.bindingIdentifierEquals(t, n.identifier)) return !1;
                }
                return !0;
              }),
              (t.getCompatibleScopes = function() {
                var e = this.path.scope;
                do {
                  if (!this.isCompatibleScope(e)) break;
                  if (
                    (this.scopes.push(e),
                    0 <= this.breakOnScopePaths.indexOf(e.path))
                  )
                    break;
                } while ((e = e.parent));
              }),
              (t.getAttachmentPath = function() {
                var e = this._getAttachmentPath();
                if (e) {
                  var t = e.scope;
                  if (
                    (t.path === e && (t = e.scope.parent),
                    t.path.isProgram() || t.path.isFunction())
                  )
                    for (var n in this.bindings)
                      if (t.hasOwnBinding(n)) {
                        var a = this.bindings[n];
                        if (
                          "param" !== a.kind &&
                          "params" !== a.path.parentKey &&
                          this.getAttachmentParentForPath(a.path).key >= e.key
                        ) {
                          (this.attachAfter = !0), (e = a.path);
                          var r = a.constantViolations,
                            i = Array.isArray(r),
                            o = 0;
                          for (r = i ? r : r[Symbol.iterator](); ; ) {
                            var s;
                            if (i) {
                              if (o >= r.length) break;
                              s = r[o++];
                            } else {
                              if ((o = r.next()).done) break;
                              s = o.value;
                            }
                            var d = s;
                            this.getAttachmentParentForPath(d).key > e.key &&
                              (e = d);
                          }
                        }
                      }
                  return e;
                }
              }),
              (t._getAttachmentPath = function() {
                var e = this.scopes.pop();
                if (e)
                  if (e.path.isFunction()) {
                    if (!this.hasOwnParamBindings(e))
                      return this.getNextScopeAttachmentParent();
                    if (this.scope === e) return;
                    for (
                      var t = e.path.get("body").get("body"), n = 0;
                      n < t.length;
                      n++
                    )
                      if (!t[n].node._blockHoist) return t[n];
                  } else if (e.path.isProgram())
                    return this.getNextScopeAttachmentParent();
              }),
              (t.getNextScopeAttachmentParent = function() {
                var e = this.scopes.pop();
                if (e) return this.getAttachmentParentForPath(e.path);
              }),
              (t.getAttachmentParentForPath = function(e) {
                do {
                  if (
                    !e.parentPath ||
                    (Array.isArray(e.container) && e.isStatement())
                  )
                    return e;
                } while ((e = e.parentPath));
              }),
              (t.hasOwnParamBindings = function(e) {
                for (var t in this.bindings)
                  if (e.hasOwnBinding(t)) {
                    var n = this.bindings[t];
                    if ("param" === n.kind && n.constant) return !0;
                  }
                return !1;
              }),
              (t.run = function() {
                this.path.traverse(o, this), this.getCompatibleScopes();
                var e = this.getAttachmentPath();
                if (
                  e &&
                  e.getFunctionParent() !== this.path.getFunctionParent()
                ) {
                  var t = e.scope.generateUidIdentifier("ref"),
                    n = i().variableDeclarator(t, this.path.node),
                    a = e[this.attachAfter ? "insertAfter" : "insertBefore"]([
                      e.isVariableDeclarator()
                        ? n
                        : i().variableDeclaration("var", [n]),
                    ])[0],
                    r = this.path.parentPath;
                  return (
                    r.isJSXElement() &&
                      this.path.container === r.node.children &&
                      (t = i().JSXExpressionContainer(t)),
                    this.path.replaceWith(i().cloneNode(t)),
                    e.isVariableDeclarator()
                      ? a.get("init")
                      : a.get("declarations.0.init")
                  );
                }
              }),
              e
            );
          })();
        t.default = a;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.getOpposite = function() {
            return "left" === this.key
              ? this.getSibling("right")
              : "right" === this.key
                ? this.getSibling("left")
                : void 0;
          }),
          (t.getCompletionRecords = function() {
            var e = [];
            if (this.isIfStatement())
              (e = r(this.get("consequent"), e)),
                (e = r(this.get("alternate"), e));
            else if (this.isDoExpression() || this.isFor() || this.isWhile())
              e = r(this.get("body"), e);
            else if (this.isProgram() || this.isBlockStatement())
              e = r(this.get("body").pop(), e);
            else {
              if (this.isFunction())
                return this.get("body").getCompletionRecords();
              this.isTryStatement()
                ? ((e = r(this.get("block"), e)),
                  (e = r(this.get("handler"), e)),
                  (e = r(this.get("finalizer"), e)))
                : this.isCatchClause()
                  ? (e = r(this.get("body"), e))
                  : e.push(this);
            }
            return e;
          }),
          (t.getSibling = function(e) {
            return s.default.get({
              parentPath: this.parentPath,
              parent: this.parent,
              container: this.container,
              listKey: this.listKey,
              key: e,
            });
          }),
          (t.getPrevSibling = function() {
            return this.getSibling(this.key - 1);
          }),
          (t.getNextSibling = function() {
            return this.getSibling(this.key + 1);
          }),
          (t.getAllNextSiblings = function() {
            for (var e = this.key, t = this.getSibling(++e), n = []; t.node; )
              n.push(t), (t = this.getSibling(++e));
            return n;
          }),
          (t.getAllPrevSiblings = function() {
            for (var e = this.key, t = this.getSibling(--e), n = []; t.node; )
              n.push(t), (t = this.getSibling(--e));
            return n;
          }),
          (t.get = function(e, t) {
            !0 === t && (t = this.context);
            var n = e.split(".");
            return 1 === n.length ? this._getKey(e, t) : this._getPattern(n, t);
          }),
          (t._getKey = function(n, a) {
            var r = this,
              i = this.node,
              o = i[n];
            return Array.isArray(o)
              ? o.map(function(e, t) {
                  return s.default
                    .get({
                      listKey: n,
                      parentPath: r,
                      parent: i,
                      container: o,
                      key: t,
                    })
                    .setContext(a);
                })
              : s.default
                  .get({ parentPath: this, parent: i, container: i, key: n })
                  .setContext(a);
          }),
          (t._getPattern = function(e, t) {
            var n = this,
              a = e,
              r = Array.isArray(a),
              i = 0;
            for (a = r ? a : a[Symbol.iterator](); ; ) {
              var o;
              if (r) {
                if (i >= a.length) break;
                o = a[i++];
              } else {
                if ((i = a.next()).done) break;
                o = i.value;
              }
              var s = o;
              n =
                "." === s
                  ? n.parentPath
                  : Array.isArray(n)
                    ? n[s]
                    : n.get(s, t);
            }
            return n;
          }),
          (t.getBindingIdentifiers = function(e) {
            return l().getBindingIdentifiers(this.node, e);
          }),
          (t.getOuterBindingIdentifiers = function(e) {
            return l().getOuterBindingIdentifiers(this.node, e);
          }),
          (t.getBindingIdentifierPaths = function(e, t) {
            void 0 === e && (e = !1), void 0 === t && (t = !1);
            for (var n = [].concat(this), a = Object.create(null); n.length; ) {
              var r = n.shift();
              if (r && r.node) {
                var i = l().getBindingIdentifiers.keys[r.node.type];
                if (r.isIdentifier())
                  if (e) {
                    (a[r.node.name] = a[r.node.name] || []).push(r);
                  } else a[r.node.name] = r;
                else if (r.isExportDeclaration()) {
                  var o = r.get("declaration");
                  o.isDeclaration() && n.push(o);
                } else {
                  if (t) {
                    if (r.isFunctionDeclaration()) {
                      n.push(r.get("id"));
                      continue;
                    }
                    if (r.isFunctionExpression()) continue;
                  }
                  if (i)
                    for (var s = 0; s < i.length; s++) {
                      var d = i[s],
                        u = r.get(d);
                      (Array.isArray(u) || u.node) && (n = n.concat(u));
                    }
                }
              }
            }
            return a;
          }),
          (t.getOuterBindingIdentifierPaths = function(e) {
            return this.getBindingIdentifierPaths(e, !0);
          });
        var a,
          s = (a = n(25)) && a.__esModule ? a : { default: a };
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function r(e, t) {
          return e ? t.concat(e.getCompletionRecords()) : t;
        }
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.shareCommentsWithSiblings = function() {
            if ("string" != typeof this.key) {
              var e = this.node;
              if (e) {
                var t = e.trailingComments,
                  n = e.leadingComments;
                if (t || n) {
                  var a = this.getSibling(this.key - 1),
                    r = this.getSibling(this.key + 1),
                    i = Boolean(a.node),
                    o = Boolean(r.node);
                  (i && o) ||
                    (i
                      ? a.addComments("trailing", t)
                      : o && r.addComments("leading", n));
                }
              }
            }
          }),
          (t.addComment = function(e, t, n) {
            a().addComment(this.node, e, t, n);
          }),
          (t.addComments = function(e, t) {
            a().addComments(this.node, e, t);
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.explode = u),
          (t.verify = k),
          (t.merge = function(e, t, n) {
            void 0 === t && (t = []);
            for (var a = {}, r = 0; r < e.length; r++) {
              var i = e[r],
                o = t[r];
              for (var s in (u(i), i)) {
                var d = i[s];
                (o || n) && (d = l(d, o, n)), N((a[s] = a[s] || {}), d);
              }
            }
            return a;
          });
        var D = a(n(141));
        function O() {
          var e = a(n(4));
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e,
            t = (e = n(144)) && e.__esModule ? e : { default: e };
          return (
            (F = function() {
              return t;
            }),
            t
          );
        }
        function a(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function u(e) {
          if (e._exploded) return e;
          for (var t in ((e._exploded = !0), e))
            if (!I(t)) {
              var n = t.split("|");
              if (1 !== n.length) {
                var a = e[t];
                delete e[t];
                var r = n,
                  i = Array.isArray(r),
                  o = 0;
                for (r = i ? r : r[Symbol.iterator](); ; ) {
                  var s;
                  if (i) {
                    if (o >= r.length) break;
                    s = r[o++];
                  } else {
                    if ((o = r.next()).done) break;
                    s = o.value;
                  }
                  e[s] = a;
                }
              }
            }
          k(e),
            delete e.__esModule,
            (function(e) {
              for (var t in e)
                if (!I(t)) {
                  var n = e[t];
                  "function" == typeof n && (e[t] = { enter: n });
                }
            })(e),
            j(e);
          for (var d = Object.keys(e), u = 0; u < d.length; u++) {
            var l = d[u];
            if (!I(l)) {
              var c = D[l];
              if (c) {
                var p = e[l];
                for (var g in p) p[g] = M(c, p[g]);
                if ((delete e[l], c.types)) {
                  var f = c.types,
                    h = Array.isArray(f),
                    R = 0;
                  for (f = h ? f : f[Symbol.iterator](); ; ) {
                    var y;
                    if (h) {
                      if (R >= f.length) break;
                      y = f[R++];
                    } else {
                      if ((R = f.next()).done) break;
                      y = R.value;
                    }
                    var m = y;
                    e[m] ? N(e[m], p) : (e[m] = p);
                  }
                } else N(e, p);
              }
            }
          }
          for (var v in e)
            if (!I(v)) {
              var b = e[v],
                E = O().FLIPPED_ALIAS_KEYS[v],
                x = O().DEPRECATED_KEYS[v];
              if (
                (x &&
                  (console.trace(
                    "Visitor defined for " +
                      v +
                      " but it has been renamed to " +
                      x
                  ),
                  (E = [x])),
                E)
              ) {
                delete e[v];
                var A = E,
                  S = Array.isArray(A),
                  _ = 0;
                for (A = S ? A : A[Symbol.iterator](); ; ) {
                  var T;
                  if (S) {
                    if (_ >= A.length) break;
                    T = A[_++];
                  } else {
                    if ((_ = A.next()).done) break;
                    T = _.value;
                  }
                  var P = T,
                    C = e[P];
                  C ? N(C, b) : (e[P] = (0, F().default)(b));
                }
              }
            }
          for (var w in e) I(w) || j(e[w]);
          return e;
        }
        function k(e) {
          if (!e._verified) {
            if ("function" == typeof e)
              throw new Error(
                "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?"
              );
            for (var t in e)
              if ((("enter" !== t && "exit" !== t) || r(t, e[t]), !I(t))) {
                if (O().TYPES.indexOf(t) < 0)
                  throw new Error(
                    "You gave us a visitor for the node type " +
                      t +
                      " but it's not a valid type"
                  );
                var n = e[t];
                if ("object" == typeof n)
                  for (var a in n) {
                    if ("enter" !== a && "exit" !== a)
                      throw new Error(
                        "You passed `traverse()` a visitor object with the property " +
                          t +
                          " that has the invalid property " +
                          a
                      );
                    r(t + "." + a, n[a]);
                  }
              }
            e._verified = !0;
          }
        }
        function r(e, t) {
          var n = [].concat(t),
            a = Array.isArray(n),
            r = 0;
          for (n = a ? n : n[Symbol.iterator](); ; ) {
            var i;
            if (a) {
              if (r >= n.length) break;
              i = n[r++];
            } else {
              if ((r = n.next()).done) break;
              i = r.value;
            }
            if ("function" != typeof i)
              throw new TypeError(
                "Non-function found defined in " + e + " with type " + typeof i
              );
          }
        }
        function l(t, a, r) {
          var i = {},
            e = function(n) {
              var e = t[n];
              if (!Array.isArray(e)) return "continue";
              (e = e.map(function(t) {
                var e = t;
                return (
                  a &&
                    (e = function(e) {
                      return t.call(a, e, a);
                    }),
                  r && (e = r(a.key, n, e)),
                  e
                );
              })),
                (i[n] = e);
            };
          for (var n in t) e(n);
          return i;
        }
        function j(e) {
          e.enter && !Array.isArray(e.enter) && (e.enter = [e.enter]),
            e.exit && !Array.isArray(e.exit) && (e.exit = [e.exit]);
        }
        function M(t, n) {
          var e = function(e) {
            if (t.checkPath(e)) return n.apply(this, arguments);
          };
          return (
            (e.toString = function() {
              return n.toString();
            }),
            e
          );
        }
        function I(e) {
          return (
            "_" === e[0] ||
            "enter" === e ||
            "exit" === e ||
            "shouldSkip" === e ||
            "blacklist" === e ||
            "noScope" === e ||
            "skipKeys" === e
          );
        }
        function N(e, t) {
          for (var n in t) e[n] = [].concat(e[n] || [], t[n]);
        }
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a = (function() {
          function e() {}
          var t = e.prototype;
          return (
            (t.getCode = function() {}),
            (t.getScope = function() {}),
            (t.addHelper = function() {
              throw new Error("Helpers are not supported by the default hub.");
            }),
            (t.buildError = function(e, t, n) {
              return void 0 === n && (n = TypeError), new n(t);
            }),
            e
          );
        })();
        t.default = a;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function i() {
          var e = r()([
            '\n  export default function _classStaticPrivateFieldSpecSet(\n    receiver, classConstructor, privateClass, privateId, value\n  ) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n    privateClass[privateId] = value;\n    return value;\n  }\n',
          ]);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = r()([
            '\n  export default function _classStaticPrivateFieldSpecGet(\n    receiver, classConstructor, privateClass, privateId\n  ) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n    return privateClass[privateId];\n  }\n',
          ]);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = r()([
            '\n  export default function _classStaticPrivateFieldLooseBase(receiver, classConstructor) {\n    if (receiver !== classConstructor) {\n      throw new TypeError("Private static access of wrong provenance");\n    }\n    return classConstructor;\n  }\n',
          ]);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = r()([
            '\n  export default function _classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n      throw new TypeError("attempted to set private field on non-instance");\n    }\n    var descriptor = privateMap.get(receiver);\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError("attempted to set read only private field");\n    }\n    descriptor.value = value;\n    return value;\n  }\n',
          ]);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e = r()([
            '\n  export default function _classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n      throw new TypeError("attempted to get private field on non-instance");\n    }\n    return privateMap.get(receiver).value;\n  }\n',
          ]);
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function l() {
          var e = r()([
            '\n  export default function _classPrivateFieldBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError("attempted to use private field on non-instance");\n    }\n    return receiver;\n  }\n',
          ]);
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function c() {
          var e = r()([
            '\n  var id = 0;\n  export default function _classPrivateFieldKey(name) {\n    return "__private_" + (id++) + "_" + name;\n  }\n',
          ]);
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        function p() {
          var e = r()([
            "\n    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){\n        var desc = {};\n        Object['ke' + 'ys'](descriptor).forEach(function(key){\n            desc[key] = descriptor[key];\n        });\n        desc.enumerable = !!desc.enumerable;\n        desc.configurable = !!desc.configurable;\n        if ('value' in desc || desc.initializer){\n            desc.writable = true;\n        }\n\n        desc = decorators.slice().reverse().reduce(function(desc, decorator){\n            return decorator(target, property, desc) || desc;\n        }, desc);\n\n        if (context && desc.initializer !== void 0){\n            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n            desc.initializer = undefined;\n        }\n\n        if (desc.initializer === void 0){\n            // This is a hack to avoid this being processed by 'transform-runtime'.\n            // See issue #9.\n            Object['define' + 'Property'](target, property, desc);\n            desc = null;\n        }\n\n        return desc;\n    }\n",
          ]);
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        function g() {
          var e = r()([
            "\n    export default function _initializerDefineProperty(target, property, descriptor, context){\n        if (!descriptor) return;\n\n        Object.defineProperty(target, property, {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n            writable: descriptor.writable,\n            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,\n        });\n    }\n",
          ]);
          return (
            (g = function() {
              return e;
            }),
            e
          );
        }
        function f() {
          var e = r()([
            "\n    export default function _initializerWarningHelper(descriptor, context){\n        throw new Error(\n          'Decorating class property failed. Please ensure that ' +\n          'proposal-class-properties is enabled and set to use loose mode. ' +\n          'To use proposal-class-properties in spec mode with decorators, wait for ' +\n          'the next major version of decorators in stage 2.'\n        );\n    }\n",
          ]);
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        function h() {
          var e = r()([
            '\n  export default function _toPropertyKey(key) {\n    if (typeof key === "symbol") {\n      return key;\n    } else {\n      return String(key);\n    }\n  }\n',
          ]);
          return (
            (h = function() {
              return e;
            }),
            e
          );
        }
        function R() {
          var e = r()([
            "\n  export default function _skipFirstGeneratorNext(fn) {\n    return function () {\n      var it = fn.apply(this, arguments);\n      it.next();\n      return it;\n    }\n  }\n",
          ]);
          return (
            (R = function() {
              return e;
            }),
            e
          );
        }
        function y() {
          var e = r()([
            '\n  export default function _nonIterableRest() {\n    throw new TypeError("Invalid attempt to destructure non-iterable instance");\n  }\n',
          ]);
          return (
            (y = function() {
              return e;
            }),
            e
          );
        }
        function m() {
          var e = r()([
            '\n  export default function _nonIterableSpread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance");\n  }\n',
          ]);
          return (
            (m = function() {
              return e;
            }),
            e
          );
        }
        function v() {
          var e = r()([
            "\n  export default function _iterableToArrayLimitLoose(arr, i) {\n    var _arr = [];\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n      if (i && _arr.length === i) break;\n    }\n    return _arr;\n  }\n",
          ]);
          return (
            (v = function() {
              return e;
            }),
            e
          );
        }
        function b() {
          var e = r()(
            [
              '\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of `for...of` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliancy is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"] != null) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n',
            ],
            [
              '\n  export default function _iterableToArrayLimit(arr, i) {\n    // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n    // iterators etc. variable names have been minimised to reduce the size of this massive\n    // helper. sometimes spec compliancy is annoying :(\n    //\n    // _n = _iteratorNormalCompletion\n    // _d = _didIteratorError\n    // _e = _iteratorError\n    // _i = _iterator\n    // _s = _step\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i["return"] != null) _i["return"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n',
            ]
          );
          return (
            (b = function() {
              return e;
            }),
            e
          );
        }
        function E() {
          var e = r()([
            '\n  export default function _iterableToArray(iter) {\n    if (\n      Symbol.iterator in Object(iter) ||\n      Object.prototype.toString.call(iter) === "[object Arguments]"\n    ) return Array.from(iter);\n  }\n',
          ]);
          return (
            (E = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = r()([
            "\n  export default function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n",
          ]);
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        function A() {
          var e = r()([
            "\n  export default function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    }\n  }\n",
          ]);
          return (
            (A = function() {
              return e;
            }),
            e
          );
        }
        function S() {
          var e = r()([
            '\n  import arrayWithoutHoles from "arrayWithoutHoles";\n  import iterableToArray from "iterableToArray";\n  import nonIterableSpread from "nonIterableSpread";\n\n  export default function _toConsumableArray(arr) {\n    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n  }\n',
          ]);
          return (
            (S = function() {
              return e;
            }),
            e
          );
        }
        function _() {
          var e = r()([
            '\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArray from "iterableToArray";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _toArray(arr) {\n    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n  }\n',
          ]);
          return (
            (_ = function() {
              return e;
            }),
            e
          );
        }
        function T() {
          var e = r()([
            '\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArrayLimitLoose from "iterableToArrayLimitLoose";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _slicedToArrayLoose(arr, i) {\n    return arrayWithHoles(arr) || iterableToArrayLimitLoose(arr, i) || nonIterableRest();\n  }\n',
          ]);
          return (
            (T = function() {
              return e;
            }),
            e
          );
        }
        function P() {
          var e = r()([
            '\n  import arrayWithHoles from "arrayWithHoles";\n  import iterableToArrayLimit from "iterableToArrayLimit";\n  import nonIterableRest from "nonIterableRest";\n\n  export default function _slicedToArray(arr, i) {\n    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n  }\n',
          ]);
          return (
            (P = function() {
              return e;
            }),
            e
          );
        }
        function C() {
          var e = r()(["\n  export default {};\n"]);
          return (
            (C = function() {
              return e;
            }),
            e
          );
        }
        function w() {
          var e = r()(
            [
              '\n  export default function _classNameTDZError(name) {\n    throw new Error("Class \\"" + name + "\\" cannot be referenced in computed property keys.");\n  }\n',
            ],
            [
              '\n  export default function _classNameTDZError(name) {\n    throw new Error("Class \\\\"" + name + "\\\\" cannot be referenced in computed property keys.");\n  }\n',
            ]
          );
          return (
            (w = function() {
              return e;
            }),
            e
          );
        }
        function D() {
          var e = r()(
            [
              '\n  export default function _readOnlyError(name) {\n    throw new Error("\\"" + name + "\\" is read-only");\n  }\n',
            ],
            [
              '\n  export default function _readOnlyError(name) {\n    throw new Error("\\\\"" + name + "\\\\" is read-only");\n  }\n',
            ]
          );
          return (
            (D = function() {
              return e;
            }),
            e
          );
        }
        function O() {
          var e = r()([
            '\n  import undef from "temporalUndefined";\n\n  export default function _temporalRef(val, name) {\n    if (val === undef) {\n      throw new ReferenceError(name + " is not defined - temporal dead zone");\n    } else {\n      return val;\n    }\n  }\n',
          ]);
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e = r()([
            "\n  export default function _taggedTemplateLiteralLoose(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    strings.raw = raw;\n    return strings;\n  }\n",
          ]);
          return (
            (F = function() {
              return e;
            }),
            e
          );
        }
        function k() {
          var e = r()([
            "\n  export default function _taggedTemplateLiteral(strings, raw) {\n    if (!raw) { raw = strings.slice(0); }\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  }\n",
          ]);
          return (
            (k = function() {
              return e;
            }),
            e
          );
        }
        function j() {
          var e = r()([
            '\n  import getPrototypeOf from "getPrototypeOf";\n  import superPropBase from "superPropBase";\n  import defineProperty from "defineProperty";\n\n  function set(target, property, value, receiver) {\n    if (typeof Reflect !== "undefined" && Reflect.set) {\n      set = Reflect.set;\n    } else {\n      set = function set(target, property, value, receiver) {\n        var base = superPropBase(target, property);\n        var desc;\n\n        if (base) {\n          desc = Object.getOwnPropertyDescriptor(base, property);\n          if (desc.set) {\n            desc.set.call(receiver, value);\n            return true;\n          } else if (!desc.writable) {\n            // Both getter and non-writable fall into this.\n            return false;\n          }\n        }\n\n        // Without a super that defines the property, spec boils down to\n        // "define on receiver" for some reason.\n        desc = Object.getOwnPropertyDescriptor(receiver, property);\n        if (desc) {\n          if (!desc.writable) {\n            // Setter, getter, and non-writable fall into this.\n            return false;\n          }\n\n          desc.value = value;\n          Object.defineProperty(receiver, property, desc);\n        } else {\n          // Avoid setters that may be defined on Sub\'s prototype, but not on\n          // the instance.\n          defineProperty(receiver, property, value);\n        }\n\n        return true;\n      };\n    }\n\n    return set(target, property, value, receiver);\n  }\n\n  export default function _set(target, property, value, receiver, isStrict) {\n    var s = set(target, property, value, receiver || target);\n    if (!s && isStrict) {\n      throw new Error(\'failed to set property\');\n    }\n\n    return value;\n  }\n',
          ]);
          return (
            (j = function() {
              return e;
            }),
            e
          );
        }
        function M() {
          var e = r()([
            '\n  import getPrototypeOf from "getPrototypeOf";\n  import superPropBase from "superPropBase";\n\n  export default function _get(target, property, receiver) {\n    if (typeof Reflect !== "undefined" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = superPropBase(target, property);\n\n        if (!base) return;\n\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n    return _get(target, property, receiver || target);\n  }\n',
          ]);
          return (
            (M = function() {
              return e;
            }),
            e
          );
        }
        function I() {
          var e = r()([
            '\n  import getPrototypeOf from "getPrototypeOf";\n\n  export default function _superPropBase(object, property) {\n    // Yes, this throws if object is null to being with, that\'s on purpose.\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = getPrototypeOf(object);\n      if (object === null) break;\n    }\n    return object;\n  }\n',
          ]);
          return (
            (I = function() {
              return e;
            }),
            e
          );
        }
        function N() {
          var e = r()([
            '\n  import assertThisInitialized from "assertThisInitialized";\n\n  export default function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === "object" || typeof call === "function")) {\n      return call;\n    }\n    return assertThisInitialized(self);\n  }\n',
          ]);
          return (
            (N = function() {
              return e;
            }),
            e
          );
        }
        function B() {
          var e = r()([
            "\n  export default function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n",
          ]);
          return (
            (B = function() {
              return e;
            }),
            e
          );
        }
        function L() {
          var e = r()([
            '\n  import objectWithoutPropertiesLoose from "objectWithoutPropertiesLoose";\n\n  export default function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n',
          ]);
          return (
            (L = function() {
              return e;
            }),
            e
          );
        }
        function U() {
          var e = r()([
            "\n  export default function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n",
          ]);
          return (
            (U = function() {
              return e;
            }),
            e
          );
        }
        function V() {
          var e = r()([
            '\n  export default function _objectDestructuringEmpty(obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  }\n',
          ]);
          return (
            (V = function() {
              return e;
            }),
            e
          );
        }
        function W() {
          var e = r()([
            '\n  export default function _newArrowCheck(innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  }\n',
          ]);
          return (
            (W = function() {
              return e;
            }),
            e
          );
        }
        function G() {
          var e = r()([
            "\n  export default function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = Object.defineProperty && Object.getOwnPropertyDescriptor\n              ? Object.getOwnPropertyDescriptor(obj, key)\n              : {};\n            if (desc.get || desc.set) {\n              Object.defineProperty(newObj, key, desc);\n            } else {\n              newObj[key] = obj[key];\n            }\n          }\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  }\n",
          ]);
          return (
            (G = function() {
              return e;
            }),
            e
          );
        }
        function K() {
          var e = r()([
            "\n  export default function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  }\n",
          ]);
          return (
            (K = function() {
              return e;
            }),
            e
          );
        }
        function H() {
          var e = r()([
            '\n  export default function _instanceof(left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  }\n',
          ]);
          return (
            (H = function() {
              return e;
            }),
            e
          );
        }
        function q() {
          var e = r()([
            '\n  import getPrototypeOf from "getPrototypeOf";\n  import setPrototypeOf from "setPrototypeOf";\n  import isNativeFunction from "isNativeFunction";\n  import construct from "construct";\n\n  export default function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === "function" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !isNativeFunction(Class)) return Class;\n      if (typeof Class !== "function") {\n        throw new TypeError("Super expression must either be null or a function");\n      }\n      if (typeof _cache !== "undefined") {\n        if (_cache.has(Class)) return _cache.get(Class);\n        _cache.set(Class, Wrapper);\n      }\n      function Wrapper() {\n        return construct(Class, arguments, getPrototypeOf(this).constructor)\n      }\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true,\n        }\n      });\n\n      return setPrototypeOf(Wrapper, Class);\n    }\n\n    return _wrapNativeSuper(Class)\n  }\n',
          ]);
          return (
            (q = function() {
              return e;
            }),
            e
          );
        }
        function Y() {
          var e = r()([
            '\n  export default function _isNativeFunction(fn) {\n    // Note: This function returns "true" for core-js functions.\n    return Function.toString.call(fn).indexOf("[native code]") !== -1;\n  }\n',
          ]);
          return (
            (Y = function() {
              return e;
            }),
            e
          );
        }
        function J() {
          var e = r()([
            "\n  import setPrototypeOf from \"setPrototypeOf\";\n\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n    // core-js@3\n    if (Reflect.construct.sham) return false;\n\n    // Proxy can't be polyfilled. Every browser implemented\n    // proxies before or at the same time as Reflect.construct,\n    // so if they support Proxy they also support Reflect.construct.\n    if (typeof Proxy === \"function\") return true;\n\n    // Since Reflect.construct can't be properly polyfilled, some\n    // implementations (e.g. core-js@2) don't set the correct internal slots.\n    // Those polyfills don't allow us to subclass built-ins, so we need to\n    // use our fallback implementation.\n    try {\n      // If the internal slots aren't set, this throws an error similar to\n      //   TypeError: this is not a Date object.\n      // Date#toString is generic in ES2015 [1] and it doesn't throw, so we also\n      // check Map#get (which on the other hand doesn't exist in ES5 browsers).\n      //\n      // [1]: https://github.com/tc39/ecma262/issues/1268#issuecomment-410104832\n\n      Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n      if (typeof Map === \"function\") {\n        Map.prototype.get.call(Reflect.construct(Map, [], function() {}));\n      }\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  export default function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      // NOTE: If Parent !== Class, the correct __proto__ is set *after*\n      //       calling the constructor.\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n    // Avoid issues with Class being present but undefined when it wasn't\n    // present in the original call.\n    return _construct.apply(null, arguments);\n  }\n",
          ]);
          return (
            (J = function() {
              return e;
            }),
            e
          );
        }
        function X() {
          var e = r()([
            "\n  export default function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n",
          ]);
          return (
            (X = function() {
              return e;
            }),
            e
          );
        }
        function z() {
          var e = r()([
            "\n  export default function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf\n      ? Object.getPrototypeOf\n      : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o);\n        };\n    return _getPrototypeOf(o);\n  }\n",
          ]);
          return (
            (z = function() {
              return e;
            }),
            e
          );
        }
        function $() {
          var e = r()([
            "\n  export default function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n",
          ]);
          return (
            ($ = function() {
              return e;
            }),
            e
          );
        }
        function Q() {
          var e = r()([
            '\n  import setPrototypeOf from "setPrototypeOf";\n\n  export default function _inherits(subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n',
          ]);
          return (
            (Q = function() {
              return e;
            }),
            e
          );
        }
        function Z() {
          var e = r()([
            "\n  import defineProperty from \"defineProperty\";\n\n  export default function _objectSpread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = (arguments[i] != null) ? arguments[i] : {};\n      var ownKeys = Object.keys(source);\n      if (typeof Object.getOwnPropertySymbols === 'function') {\n        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n      }\n      ownKeys.forEach(function(key) {\n        defineProperty(target, key, source[key]);\n      });\n    }\n    return target;\n  }\n",
          ]);
          return (
            (Z = function() {
              return e;
            }),
            e
          );
        }
        function ee() {
          var e = r()([
            "\n  export default function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n",
          ]);
          return (
            (ee = function() {
              return e;
            }),
            e
          );
        }
        function te() {
          var e = r()([
            "\n  export default function _defineProperty(obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n",
          ]);
          return (
            (te = function() {
              return e;
            }),
            e
          );
        }
        function ne() {
          var e = r()([
            "\n  export default function _defaults(obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  }\n",
          ]);
          return (
            (ne = function() {
              return e;
            }),
            e
          );
        }
        function ae() {
          var e = r()([
            '\n  export default function _defineEnumerableProperties(obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n\n    // Symbols are not enumerated over by for-in loops. If native\n    // Symbols are available, fetch all of the descs object\'s own\n    // symbol properties and define them on our target object too.\n    if (Object.getOwnPropertySymbols) {\n      var objectSymbols = Object.getOwnPropertySymbols(descs);\n      for (var i = 0; i < objectSymbols.length; i++) {\n        var sym = objectSymbols[i];\n        var desc = descs[sym];\n        desc.configurable = desc.enumerable = true;\n        if ("value" in desc) desc.writable = true;\n        Object.defineProperty(obj, sym, desc);\n      }\n    }\n    return obj;\n  }\n',
          ]);
          return (
            (ae = function() {
              return e;
            }),
            e
          );
        }
        function re() {
          var e = r()([
            '\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i ++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ("value" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  export default function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n',
          ]);
          return (
            (re = function() {
              return e;
            }),
            e
          );
        }
        function ie() {
          var e = r()([
            '\n  export default function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  }\n',
          ]);
          return (
            (ie = function() {
              return e;
            }),
            e
          );
        }
        function oe() {
          var e = r()([
            '\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n\n  export default function _asyncToGenerator(fn) {\n    return function () {\n      var self = this, args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n        }\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n        }\n\n        _next(undefined);\n      });\n    };\n  }\n',
          ]);
          return (
            (oe = function() {
              return e;
            }),
            e
          );
        }
        function se() {
          var e = r()([
            '\n  export default function _asyncGeneratorDelegate(inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    if (typeof Symbol === "function" && Symbol.iterator) {\n      iter[Symbol.iterator] = function () { return this; };\n    }\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  }\n',
          ]);
          return (
            (se = function() {
              return e;
            }),
            e
          );
        }
        function de() {
          var e = r()([
            '\n  import AwaitValue from "AwaitValue";\n\n  export default function _awaitAsyncGenerator(value) {\n    return new AwaitValue(value);\n  }\n',
          ]);
          return (
            (de = function() {
              return e;
            }),
            e
          );
        }
        function ue() {
          var e = r()([
            '\n  import AsyncGenerator from "AsyncGenerator";\n\n  export default function _wrapAsyncGenerator(fn) {\n    return function () {\n      return new AsyncGenerator(fn.apply(this, arguments));\n    };\n  }\n',
          ]);
          return (
            (ue = function() {
              return e;
            }),
            e
          );
        }
        function le() {
          var e = r()([
            '\n  import AwaitValue from "AwaitValue";\n\n  export default function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null,\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg)\n        var value = result.value;\n        var wrappedAwait = value instanceof AwaitValue;\n\n        Promise.resolve(wrappedAwait ? value.wrapped : value).then(\n          function (arg) {\n            if (wrappedAwait) {\n              resume("next", arg);\n              return\n            }\n\n            settle(result.done ? "return" : "normal", arg);\n          },\n          function (err) { resume("throw", err); });\n      } catch (err) {\n        settle("throw", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case "return":\n          front.resolve({ value: value, done: true });\n          break;\n        case "throw":\n          front.reject(value);\n          break;\n        default:\n          front.resolve({ value: value, done: false });\n          break;\n      }\n\n      front = front.next;\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    // Hide "return" method if generator return is not supported\n    if (typeof gen.return !== "function") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === "function" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n  AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n  AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n',
          ]);
          return (
            (le = function() {
              return e;
            }),
            e
          );
        }
        function ce() {
          var e = r()([
            "\n  export default function _AwaitValue(value) {\n    this.wrapped = value;\n  }\n",
          ]);
          return (
            (ce = function() {
              return e;
            }),
            e
          );
        }
        function pe() {
          var e = r()([
            '\n  export default function _asyncIterator(iterable) {\n    var method\n    if (typeof Symbol === "function") {\n      if (Symbol.asyncIterator) {\n        method = iterable[Symbol.asyncIterator]\n        if (method != null) return method.call(iterable);\n      }\n      if (Symbol.iterator) {\n        method = iterable[Symbol.iterator]\n        if (method != null) return method.call(iterable);\n      }\n    }\n    throw new TypeError("Object is not async iterable");\n  }\n',
          ]);
          return (
            (pe = function() {
              return e;
            }),
            e
          );
        }
        function ge() {
          var e = r()([
            '\n  var REACT_ELEMENT_TYPE;\n\n  export default function _createRawReactElement(type, props, key, children) {\n    if (!REACT_ELEMENT_TYPE) {\n      REACT_ELEMENT_TYPE = (\n        typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")\n      ) || 0xeac7;\n    }\n\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      // If we\'re going to assign props.children, we create a new object now\n      // to avoid mutating defaultProps.\n      props = {\n        children: void 0,\n      };\n    }\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = new Array(childrenLength);\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n      props.children = childArray;\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : \'\' + key,\n      ref: null,\n      props: props,\n      _owner: null,\n    };\n  }\n',
          ]);
          return (
            (ge = function() {
              return e;
            }),
            e
          );
        }
        function fe() {
          var e = r()([
            '\n  export default function _typeof(obj) {\n    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n      _typeof = function (obj) { return typeof obj; };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype\n          ? "symbol"\n          : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n',
          ]);
          return (
            (fe = function() {
              return e;
            }),
            e
          );
        }
        function he() {
          var e,
            t = (e = n(24)) && e.__esModule ? e : { default: e };
          return (
            (he = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = void 0);
        var Re = Object.create(null),
          ye = Re;
        exports.default = ye;
        var me = function(t) {
          return function(e) {
            return {
              minVersion: t,
              ast: function() {
                return he().default.program.ast(e);
              },
            };
          };
        };
        (Re.typeof = me("7.0.0-beta.0")(fe())),
          (Re.jsx = me("7.0.0-beta.0")(ge())),
          (Re.asyncIterator = me("7.0.0-beta.0")(pe())),
          (Re.AwaitValue = me("7.0.0-beta.0")(ce())),
          (Re.AsyncGenerator = me("7.0.0-beta.0")(le())),
          (Re.wrapAsyncGenerator = me("7.0.0-beta.0")(ue())),
          (Re.awaitAsyncGenerator = me("7.0.0-beta.0")(de())),
          (Re.asyncGeneratorDelegate = me("7.0.0-beta.0")(se())),
          (Re.asyncToGenerator = me("7.0.0-beta.0")(oe())),
          (Re.classCallCheck = me("7.0.0-beta.0")(ie())),
          (Re.createClass = me("7.0.0-beta.0")(re())),
          (Re.defineEnumerableProperties = me("7.0.0-beta.0")(ae())),
          (Re.defaults = me("7.0.0-beta.0")(ne())),
          (Re.defineProperty = me("7.0.0-beta.0")(te())),
          (Re.extends = me("7.0.0-beta.0")(ee())),
          (Re.objectSpread = me("7.0.0-beta.0")(Z())),
          (Re.inherits = me("7.0.0-beta.0")(Q())),
          (Re.inheritsLoose = me("7.0.0-beta.0")($())),
          (Re.getPrototypeOf = me("7.0.0-beta.0")(z())),
          (Re.setPrototypeOf = me("7.0.0-beta.0")(X())),
          (Re.construct = me("7.0.0-beta.0")(J())),
          (Re.isNativeFunction = me("7.0.0-beta.0")(Y())),
          (Re.wrapNativeSuper = me("7.0.0-beta.0")(q())),
          (Re.instanceof = me("7.0.0-beta.0")(H())),
          (Re.interopRequireDefault = me("7.0.0-beta.0")(K())),
          (Re.interopRequireWildcard = me("7.0.0-beta.0")(G())),
          (Re.newArrowCheck = me("7.0.0-beta.0")(W())),
          (Re.objectDestructuringEmpty = me("7.0.0-beta.0")(V())),
          (Re.objectWithoutPropertiesLoose = me("7.0.0-beta.0")(U())),
          (Re.objectWithoutProperties = me("7.0.0-beta.0")(L())),
          (Re.assertThisInitialized = me("7.0.0-beta.0")(B())),
          (Re.possibleConstructorReturn = me("7.0.0-beta.0")(N())),
          (Re.superPropBase = me("7.0.0-beta.0")(I())),
          (Re.get = me("7.0.0-beta.0")(M())),
          (Re.set = me("7.0.0-beta.0")(j())),
          (Re.taggedTemplateLiteral = me("7.0.0-beta.0")(k())),
          (Re.taggedTemplateLiteralLoose = me("7.0.0-beta.0")(F())),
          (Re.temporalRef = me("7.0.0-beta.0")(O())),
          (Re.readOnlyError = me("7.0.0-beta.0")(D())),
          (Re.classNameTDZError = me("7.0.0-beta.0")(w())),
          (Re.temporalUndefined = me("7.0.0-beta.0")(C())),
          (Re.slicedToArray = me("7.0.0-beta.0")(P())),
          (Re.slicedToArrayLoose = me("7.0.0-beta.0")(T())),
          (Re.toArray = me("7.0.0-beta.0")(_())),
          (Re.toConsumableArray = me("7.0.0-beta.0")(S())),
          (Re.arrayWithoutHoles = me("7.0.0-beta.0")(A())),
          (Re.arrayWithHoles = me("7.0.0-beta.0")(x())),
          (Re.iterableToArray = me("7.0.0-beta.0")(E())),
          (Re.iterableToArrayLimit = me("7.0.0-beta.0")(b())),
          (Re.iterableToArrayLimitLoose = me("7.0.0-beta.0")(v())),
          (Re.nonIterableSpread = me("7.0.0-beta.0")(m())),
          (Re.nonIterableRest = me("7.0.0-beta.0")(y())),
          (Re.skipFirstGeneratorNext = me("7.0.0-beta.0")(R())),
          (Re.toPropertyKey = me("7.0.0-beta.0")(h())),
          (Re.initializerWarningHelper = me("7.0.0-beta.0")(f())),
          (Re.initializerDefineProperty = me("7.0.0-beta.0")(g())),
          (Re.applyDecoratedDescriptor = me("7.0.0-beta.0")(p())),
          (Re.classPrivateFieldLooseKey = me("7.0.0-beta.0")(c())),
          (Re.classPrivateFieldLooseBase = me("7.0.0-beta.0")(l())),
          (Re.classPrivateFieldGet = me("7.0.0-beta.0")(u())),
          (Re.classPrivateFieldSet = me("7.0.0-beta.0")(d())),
          (Re.classStaticPrivateFieldLooseBase = me("7.0.0-beta.0")(s())),
          (Re.classStaticPrivateFieldSpecGet = me("7.0.0-beta.0")(o())),
          (Re.classStaticPrivateFieldSpecSet = me("7.0.0-beta.0")(i()));
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function i() {
          var e = r()([
            '\n    (function (root, factory) {\n      if (typeof define === "function" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === "object") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  ',
          ]);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = c(n(140));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = l(n(85));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = l(n(24));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e = c(n(4));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function l(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function c(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = function(e, t) {
            void 0 === t && (t = "global");
            var n,
              a = { global: g, module: f, umd: h, var: R }[t];
            if (!a) throw new Error("Unsupported output type " + t);
            return (n = a(e)), (0, o().default)(n).code;
          });
        var p = function(e) {
          return d().default(i())(e);
        };
        function g(e) {
          var t = u().identifier("babelHelpers"),
            n = [],
            a = u().functionExpression(
              null,
              [u().identifier("global")],
              u().blockStatement(n)
            ),
            r = u().program([
              u().expressionStatement(
                u().callExpression(a, [
                  u().conditionalExpression(
                    u().binaryExpression(
                      "===",
                      u().unaryExpression("typeof", u().identifier("global")),
                      u().stringLiteral("undefined")
                    ),
                    u().identifier("self"),
                    u().identifier("global")
                  ),
                ])
              ),
            ]);
          return (
            n.push(
              u().variableDeclaration("var", [
                u().variableDeclarator(
                  t,
                  u().assignmentExpression(
                    "=",
                    u().memberExpression(u().identifier("global"), t),
                    u().objectExpression([])
                  )
                ),
              ])
            ),
            y(n, t, e),
            r
          );
        }
        function f(e) {
          var t = [],
            n = y(t, null, e);
          return (
            t.unshift(
              u().exportNamedDeclaration(
                null,
                Object.keys(n).map(function(e) {
                  return u().exportSpecifier(
                    u().cloneNode(n[e]),
                    u().identifier(e)
                  );
                })
              )
            ),
            u().program(t, [], "module")
          );
        }
        function h(e) {
          var t = u().identifier("babelHelpers"),
            n = [];
          return (
            n.push(
              u().variableDeclaration("var", [
                u().variableDeclarator(t, u().identifier("global")),
              ])
            ),
            y(n, t, e),
            u().program([
              p({
                FACTORY_PARAMETERS: u().identifier("global"),
                BROWSER_ARGUMENTS: u().assignmentExpression(
                  "=",
                  u().memberExpression(u().identifier("root"), t),
                  u().objectExpression([])
                ),
                COMMON_ARGUMENTS: u().identifier("exports"),
                AMD_ARGUMENTS: u().arrayExpression([
                  u().stringLiteral("exports"),
                ]),
                FACTORY_BODY: n,
                UMD_ROOT: u().identifier("this"),
              }),
            ])
          );
        }
        function R(e) {
          var t = u().identifier("babelHelpers"),
            n = [];
          n.push(
            u().variableDeclaration("var", [
              u().variableDeclarator(t, u().objectExpression([])),
            ])
          );
          var a = u().program(n);
          return y(n, t, e), n.push(u().expressionStatement(t)), a;
        }
        function y(a, t, r) {
          var i = function(e) {
              return t
                ? u().memberExpression(t, u().identifier(e))
                : u().identifier("_" + e);
            },
            o = {};
          return (
            s().list.forEach(function(e) {
              if (!(r && r.indexOf(e) < 0)) {
                var t = (o[e] = i(e)),
                  n = s().get(e, i, t).nodes;
                a.push.apply(a, n);
              }
            }),
            o
          );
        }
      },
      function(e) {
        e.exports = {
          _from: "@gerhobbelt/babel-core@7.0.0-14",
          _id: "@gerhobbelt/babel-core@7.0.0-14",
          _inBundle: !1,
          _integrity:
            "sha512-Xce9uAKrQkvMdBFuGRDhIJ+qxXx37LpXc+hcD/1ko5GRFEdnYmKebBtKkuPI8oHoaKp2Zv13qEYzlibL0kPycQ==",
          _location: "/@gerhobbelt/babel-core",
          _phantomChildren: { ms: "2.0.0" },
          _requested: {
            type: "version",
            registry: !0,
            raw: "@gerhobbelt/babel-core@7.0.0-14",
            name: "@gerhobbelt/babel-core",
            escapedName: "@gerhobbelt%2fbabel-core",
            scope: "@gerhobbelt",
            rawSpec: "7.0.0-14",
            saveSpec: null,
            fetchSpec: "7.0.0-14",
          },
          _requiredBy: [
            "#DEV:/",
            "/@gerhobbelt/babel-helper-transform-fixture-test-runner",
          ],
          _resolved:
            "https://registry.npmjs.org/@gerhobbelt/babel-core/-/babel-core-7.0.0-14.tgz",
          _shasum: "9d3d0562f0b48a462bbd6234d8d89970c8b13e89",
          _spec: "@gerhobbelt/babel-core@7.0.0-14",
          _where:
            "W:\\Users\\Ger\\Projects\\sites\\library.visyond.gov\\80\\lib\\js\\babel",
          author: { name: "Sebastian McKenzie", email: "sebmck@gmail.com" },
          browser: {
            "./lib/config/files/index.js":
              "./lib/config/files/index-browser.js",
            "./lib/transform-file.js": "./lib/transform-file-browser.js",
          },
          bundleDependencies: !1,
          dependencies: {
            "@gerhobbelt/babel-code-frame": "7.0.0-14",
            "@gerhobbelt/babel-generator": "7.0.0-14",
            "@gerhobbelt/babel-helpers": "7.0.0-14",
            "@gerhobbelt/babel-parser": "7.0.0-14",
            "@gerhobbelt/babel-template": "7.0.0-14",
            "@gerhobbelt/babel-traverse": "7.0.0-14",
            "@gerhobbelt/babel-types": "7.0.0-14",
            "@gerhobbelt/json5": "2.0.1-37",
            "convert-source-map": "^1.5.1",
            debug: "^3.1.0",
            lodash: "^4.17.10",
            resolve: "^1.8.1",
            semver: "^5.5.1",
            "source-map": "^0.7.3",
          },
          deprecated: !1,
          description: "Babel compiler core.",
          devDependencies: {
            "@gerhobbelt/babel-helper-transform-fixture-test-runner":
              "7.0.0-14",
            "@gerhobbelt/babel-register": "7.0.0-14",
          },
          engines: { node: ">=6.9.0" },
          homepage: "https://babeljs.io/",
          keywords: [
            "6to5",
            "babel",
            "classes",
            "const",
            "es6",
            "harmony",
            "let",
            "modules",
            "transpile",
            "transpiler",
            "var",
            "babel-core",
            "compiler",
          ],
          license: "MIT",
          main: "lib/index.js",
          name: "@gerhobbelt/babel-core",
          publishConfig: { access: "public" },
          repository: {
            type: "git",
            url:
              "https://github.com/babel/babel/tree/master/packages/babel-core",
          },
          version: "7.0.0-14",
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t = (0, s.default)(e);
            if (!t) return null;
            var n = t.options,
              p = t.context,
              g = {},
              f = [[]];
            try {
              var a = n.plugins,
                r = n.presets;
              if (!a || !r)
                throw new Error(
                  "Assertion failure - plugins and presets exist"
                );
              if (
                (function e(t, n) {
                  var a = t.plugins.reduce(function(e, t) {
                      return !1 !== t.options && e.push(R(t, p)), e;
                    }, []),
                    r = t.presets.reduce(function(e, t) {
                      return (
                        !1 !== t.options &&
                          e.push({ preset: m(t, p), pass: t.ownPass ? [] : n }),
                        e
                      );
                    }, []);
                  if (0 < r.length) {
                    f.splice.apply(
                      f,
                      [1, 0].concat(
                        r
                          .map(function(e) {
                            return e.pass;
                          })
                          .filter(function(e) {
                            return e !== n;
                          })
                      )
                    );
                    var i = r,
                      o = Array.isArray(i),
                      s = 0;
                    for (i = o ? i : i[Symbol.iterator](); ; ) {
                      var d;
                      if (o) {
                        if (s >= i.length) break;
                        d = i[s++];
                      } else {
                        if ((s = i.next()).done) break;
                        d = s.value;
                      }
                      var u = d,
                        l = u.preset,
                        c = u.pass;
                      if (!l) return !0;
                      if (e({ plugins: l.plugins, presets: l.presets }, c))
                        return !0;
                      l.options.forEach(function(e) {
                        (0, h.mergeOptions)(g, e);
                      });
                    }
                  }
                  0 < a.length && n.unshift.apply(n, a);
                })(
                  {
                    plugins: a.map(function(e) {
                      var t = (0, o.getItemDescriptor)(e);
                      if (!t)
                        throw new Error(
                          "Assertion failure - must be config item"
                        );
                      return t;
                    }),
                    presets: r.map(function(e) {
                      var t = (0, o.getItemDescriptor)(e);
                      if (!t)
                        throw new Error(
                          "Assertion failure - must be config item"
                        );
                      return t;
                    }),
                  },
                  f[0]
                )
              )
                return null;
            } catch (e) {
              throw (/^\[BABEL\]/.test(e.message) ||
                (e.message =
                  "[BABEL] " + (p.filename || "unknown") + ": " + e.message),
              e);
            }
            var i = g;
            return (
              (0, h.mergeOptions)(i, n),
              (i.plugins = f[0]),
              (i.presets = f
                .slice(1)
                .filter(function(e) {
                  return 0 < e.length;
                })
                .map(function(e) {
                  return { plugins: e };
                })),
              (i.passPerPreset = 0 < i.presets.length),
              { options: i, passes: f }
            );
          });
        var h = n(199),
          d = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(3)),
          l = g(n(90)),
          o = n(56),
          a = n(200);
        function c() {
          var e = g(n(10));
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        var r = n(57),
          i = n(91),
          p = n(462),
          u = g(n(463)),
          s = g(n(203));
        function g(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var f = (0, r.makeWeakCache)(function(e, t) {
          var n = e.value,
            a = e.options,
            r = e.dirname,
            i = e.alias;
          if (!1 === a) throw new Error("Assertion failure");
          a = a || {};
          var o = n;
          if ("function" == typeof n) {
            var s = Object.assign({}, d, (0, u.default)(t));
            try {
              o = n(s, a, r);
            } catch (e) {
              throw (i &&
                (e.message += " (While processing: " + JSON.stringify(i) + ")"),
              e);
            }
          }
          if (!o || "object" != typeof o)
            throw new Error("Plugin/Preset did not return an object.");
          if ("function" == typeof o.then)
            throw new Error(
              "You appear to be using an async plugin, which your current version of Babel does not support.If you're using a published plugin, you may need to upgrade your @gerhobbelt/babel-core version."
            );
          return { value: o, options: a, dirname: r, alias: i };
        });
        function R(e, t) {
          if (e.value instanceof l.default) {
            if (e.options)
              throw new Error(
                "Passed options to an existing Plugin instance will not work."
              );
            return e.value;
          }
          return y(f(e, t), t);
        }
        var y = (0, r.makeWeakCache)(function(e, t) {
            var n = e.value,
              a = e.options,
              r = e.dirname,
              i = e.alias,
              o = (0, p.validatePluginObject)(n),
              s = Object.assign({}, o);
            if (
              (s.visitor &&
                (s.visitor = c().default.explode(Object.assign({}, s.visitor))),
              s.inherits)
            ) {
              var d = {
                  name: void 0,
                  alias: i + "$inherits",
                  value: s.inherits,
                  options: a,
                  dirname: r,
                },
                u = t.invalidate(function(e) {
                  return R(d, e);
                });
              (s.pre = b(u.pre, s.pre)),
                (s.post = b(u.post, s.post)),
                (s.manipulateOptions = b(
                  u.manipulateOptions,
                  s.manipulateOptions
                )),
                (s.visitor = c().default.visitors.merge([
                  u.visitor || {},
                  s.visitor || {},
                ]));
            }
            return new l.default(s, a, i);
          }),
          m = function(e, t) {
            return (0, a.buildPresetChain)(v(f(e, t)), t);
          },
          v = (0, r.makeWeakCache)(function(e) {
            var t = e.value,
              n = e.dirname,
              a = e.alias;
            return {
              options: (0, i.validate)("preset", t),
              alias: a,
              dirname: n,
            };
          });
        function b(e, t) {
          var s = [e, t].filter(Boolean);
          return s.length <= 1
            ? s[0]
            : function() {
                for (
                  var e = arguments.length, t = new Array(e), n = 0;
                  n < e;
                  n++
                )
                  t[n] = arguments[n];
                var a = s,
                  r = Array.isArray(a),
                  i = 0;
                for (a = r ? a : a[Symbol.iterator](); ; ) {
                  var o;
                  if (r) {
                    if (i >= a.length) break;
                    o = a[i++];
                  } else {
                    if ((i = a.next()).done) break;
                    o = i.value;
                  }
                  o.apply(this, t);
                }
              };
        }
      },
      function(e, d, t) {
        function n(e) {
          var a;
          function s() {
            if (s.enabled) {
              var r = s,
                e = +new Date(),
                t = e - (a || e);
              (r.diff = t), (r.prev = a), (r.curr = e), (a = e);
              for (
                var i = new Array(arguments.length), n = 0;
                n < i.length;
                n++
              )
                i[n] = arguments[n];
              (i[0] = d.coerce(i[0])),
                "string" != typeof i[0] && i.unshift("%O");
              var o = 0;
              (i[0] = i[0].replace(/%([a-zA-Z%])/g, function(e, t) {
                if ("%%" === e) return e;
                o++;
                var n = d.formatters[t];
                if ("function" == typeof n) {
                  var a = i[o];
                  (e = n.call(r, a)), i.splice(o, 1), o--;
                }
                return e;
              })),
                d.formatArgs.call(r, i),
                (s.log || d.log || console.log.bind(console)).apply(r, i);
            }
          }
          return (
            (s.namespace = e),
            (s.enabled = d.enabled(e)),
            (s.useColors = d.useColors()),
            (s.color = (function(e) {
              var t,
                n = 0;
              for (t in e) (n = (n << 5) - n + e.charCodeAt(t)), (n |= 0);
              return d.colors[Math.abs(n) % d.colors.length];
            })(e)),
            (s.destroy = r),
            "function" == typeof d.init && d.init(s),
            d.instances.push(s),
            s
          );
        }
        function r() {
          var e = d.instances.indexOf(this);
          return -1 !== e && (d.instances.splice(e, 1), !0);
        }
        ((d = e.exports = n.debug = n.default = n).coerce = function(e) {
          return e instanceof Error ? e.stack || e.message : e;
        }),
          (d.disable = function() {
            d.enable("");
          }),
          (d.enable = function(e) {
            var t;
            d.save(e), (d.names = []), (d.skips = []);
            var n = ("string" == typeof e ? e : "").split(/[\s,]+/),
              a = n.length;
            for (t = 0; t < a; t++)
              n[t] &&
                ("-" === (e = n[t].replace(/\*/g, ".*?"))[0]
                  ? d.skips.push(new RegExp("^" + e.substr(1) + "$"))
                  : d.names.push(new RegExp("^" + e + "$")));
            for (t = 0; t < d.instances.length; t++) {
              var r = d.instances[t];
              r.enabled = d.enabled(r.namespace);
            }
          }),
          (d.enabled = function(e) {
            if ("*" === e[e.length - 1]) return !0;
            var t, n;
            for (t = 0, n = d.skips.length; t < n; t++)
              if (d.skips[t].test(e)) return !1;
            for (t = 0, n = d.names.length; t < n; t++)
              if (d.names[t].test(e)) return !0;
            return !1;
          }),
          (d.humanize = t(180)),
          (d.instances = []),
          (d.names = []),
          (d.skips = []),
          (d.formatters = {});
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0),
          (t.default = {
            auxiliaryComment: {
              message:
                "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`",
            },
            blacklist: {
              message:
                "Put the specific transforms you want in the `plugins` option",
            },
            breakConfig: {
              message: "This is not a necessary option in Babel 6",
            },
            experimental: {
              message:
                "Put the specific transforms you want in the `plugins` option",
            },
            externalHelpers: {
              message:
                "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/",
            },
            extra: { message: "" },
            jsxPragma: {
              message:
                "use the `pragma` option in the `react-jsx` plugin. Check out http://babeljs.io/docs/plugins/transform-react-jsx/",
            },
            loose: {
              message:
                "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option.",
            },
            metadataUsedHelpers: {
              message: "Not required anymore as this is enabled by default",
            },
            modules: {
              message:
                "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules",
            },
            nonStandard: {
              message:
                "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/",
            },
            optional: {
              message:
                "Put the specific transforms you want in the `plugins` option",
            },
            sourceMapName: {
              message:
                "The `sourceMapName` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves.",
            },
            stage: {
              message:
                "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets",
            },
            whitelist: {
              message:
                "Put the specific transforms you want in the `plugins` option",
            },
            resolveModuleSource: {
              version: 6,
              message:
                "Use `babel-plugin-module-resolver@3`'s 'resolvePath' options",
            },
            metadata: {
              version: 6,
              message:
                "Generated plugin metadata is always included in the output result",
            },
            sourceMapTarget: {
              version: 6,
              message:
                "The `sourceMapTarget` option has been removed because it makes more sense for the tooling that calls Babel to assign `map.file` themselves.",
            },
          });
      },
      function(e, t, n) {
        "use strict";
        function r() {
          var e = a(n(6));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = a(n(461));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var a = r()
              .default.resolve(t, e)
              .split(r().default.sep);
            return new RegExp(
              ["^"]
                .concat(
                  a.map(function(e, t) {
                    var n = t === a.length - 1;
                    return "**" === e
                      ? n
                        ? p
                        : c
                      : "*" === e
                        ? n
                          ? l
                          : u
                        : 0 === e.indexOf("*.")
                          ? d + (0, i().default)(e.slice(1)) + (n ? s : o)
                          : (0, i().default)(e) + (n ? s : o);
                  })
                )
                .join("")
            );
          });
        var o = "\\" + r().default.sep,
          s = "(?:" + o + "|$)",
          d = "[^" + o + "]+",
          u = "(?:" + d + o + ")",
          l = "(?:" + d + s + ")",
          c = u + "*?",
          p = u + "*?" + l + "?";
      },
      function(e, t, n) {
        var a = n(83),
          r = /[\\^$.*+?()[\]{}|]/g,
          i = RegExp(r.source);
        e.exports = function(e) {
          return (e = a(e)) && i.test(e) ? e.replace(r, "\\$&") : e;
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.validatePluginObject = function(n) {
            return (
              Object.keys(n).forEach(function(e) {
                var t = r[e];
                if (!t)
                  throw new Error("." + e + " is not a valid Plugin property");
                t(e, n[e]);
              }),
              n
            );
          });
        var a = n(202),
          r = {
            name: a.assertString,
            manipulateOptions: a.assertFunction,
            pre: a.assertFunction,
            post: a.assertFunction,
            inherits: a.assertFunction,
            visitor: function(e, t) {
              var n = (0, a.assertObject)(e, t);
              if (
                n &&
                (Object.keys(n).forEach(function(e) {
                  return (function(t, e) {
                    if (e && "object" == typeof e)
                      Object.keys(e).forEach(function(e) {
                        if ("enter" !== e && "exit" !== e)
                          throw new Error(
                            '.visitor["' +
                              t +
                              '"] may only have .enter and/or .exit handlers.'
                          );
                      });
                    else if ("function" != typeof e)
                      throw new Error(
                        '.visitor["' + t + '"] must be a function'
                      );
                    return e;
                  })(e, n[e]);
                }),
                n.enter || n.exit)
              )
                throw new Error(
                  "." +
                    e +
                    ' cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.'
                );
              return n;
            },
            parserOverride: a.assertFunction,
            generatorOverride: a.assertFunction,
          };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(196)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(n) {
            return {
              version: r.version,
              cache: n.simple(),
              env: function(e) {
                return n.using(function(t) {
                  return void 0 === e
                    ? t.envName
                    : "function" == typeof e
                      ? (0, i.assertSimpleType)(e(t.envName))
                      : (Array.isArray(e) || (e = [e]),
                        e.some(function(e) {
                          if ("string" != typeof e)
                            throw new Error("Unexpected non-string value");
                          return e === t.envName;
                        }));
                });
              },
              async: function() {
                return !1;
              },
              caller: function(t) {
                return n.using(function(e) {
                  return (0, i.assertSimpleType)(t(e.caller));
                });
              },
              assertVersion: o,
            };
          });
        var r = n(3),
          i = n(57);
        function o(e) {
          if ("number" == typeof e) {
            if (!Number.isInteger(e))
              throw new Error("Expected string or integer value.");
            e = "^" + e + ".0.0-0";
          }
          if ("string" != typeof e)
            throw new Error("Expected string or integer value.");
          if (!a().default.satisfies(r.version, e)) {
            var t = Error.stackTraceLimit;
            "number" == typeof t && t < 25 && (Error.stackTraceLimit = 25);
            var n = new Error(
              'Requires Babel "' +
                e +
                '", but was loaded with "' +
                r.version +
                '". If you are sure you have a compatible version of @gerhobbelt/babel-core, it is likely that something in your build process is loading the wrong version. Inspect the stack trace of this error to look for the first entry that doesn\'t mention "@gerhobbelt/babel-core" or "babel-core" to see what is calling Babel.'
            );
            throw ("number" == typeof t && (Error.stackTraceLimit = t),
            Object.assign(n, {
              code: "BABEL_VERSION_UNSUPPORTED",
              version: r.version,
              range: e,
            }));
          }
        }
      },
      function(e, t, n) {
        "use strict";
        (function(r) {
          Object.defineProperty(t, "__esModule", { value: !0 }),
            (t.transformSync = d),
            (t.transformAsync = function(e, t) {
              return new Promise(function(n, a) {
                s(e, t, function(e, t) {
                  null == e ? n(t) : a(e);
                });
              });
            }),
            (t.transform = void 0);
          var e,
            i = (e = n(40)) && e.__esModule ? e : { default: e },
            o = n(204),
            s = function(t, n, e) {
              if (
                ("function" == typeof n && ((e = n), (n = void 0)),
                void 0 === e)
              )
                return d(t, n);
              var a = e;
              r.nextTick(function() {
                var e;
                try {
                  if (null === (e = (0, i.default)(n))) return a(null, null);
                } catch (e) {
                  return a(e);
                }
                (0, o.runAsync)(e, t, null, a);
              });
            };
          function d(e, t) {
            var n = (0, i.default)(t);
            return null === n ? null : (0, o.runSync)(n, e);
          }
          t.transform = s;
        }.call(this, n(7)));
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a = (function() {
          function e(e, t, n) {
            (this._map = new Map()),
              (this.key = t),
              (this.file = e),
              (this.opts = n || {}),
              (this.cwd = e.opts.cwd),
              (this.filename = e.opts.filename);
          }
          var t = e.prototype;
          return (
            (t.set = function(e, t) {
              this._map.set(e, t);
            }),
            (t.get = function(e) {
              return this._map.get(e);
            }),
            (t.availableHelper = function(e, t) {
              return this.file.availableHelper(e, t);
            }),
            (t.addHelper = function(e) {
              return this.file.addHelper(e);
            }),
            (t.addImport = function() {
              return this.file.addImport();
            }),
            (t.getModuleName = function() {
              return this.file.getModuleName();
            }),
            (t.buildCodeFrameError = function(e, t, n) {
              return this.file.buildCodeFrameError(e, t, n);
            }),
            e
          );
        })();
        t.default = a;
      },
      function(e, t, n) {
        "use strict";
        function i() {
          var e = o(n(467));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function() {
            if (!a) {
              var e = (0, r.default)({
                babelrc: !1,
                configFile: !1,
                plugins: [s],
              });
              if (!(a = e ? e.passes[0][0] : void 0))
                throw new Error("Assertion failure");
            }
            return a;
          });
        var a,
          r = o(n(40));
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var s = {
          name: "internal.blockHoist",
          visitor: {
            Block: {
              exit: function(e) {
                for (var t = e.node, n = !1, a = 0; a < t.body.length; a++) {
                  var r = t.body[a];
                  if (r && null != r._blockHoist) {
                    n = !0;
                    break;
                  }
                }
                n &&
                  (t.body = (0, i().default)(t.body, function(e) {
                    var t = e && e._blockHoist;
                    return null == t && (t = 1), !0 === t && (t = 2), -1 * t;
                  }));
              },
            },
          },
        };
      },
      function(e, t, n) {
        var a = n(468),
          r = n(470),
          i = n(51),
          o = n(39),
          s = i(function(e, t) {
            if (null == e) return [];
            var n = t.length;
            return (
              1 < n && o(e, t[0], t[1])
                ? (t = [])
                : 2 < n && o(t[0], t[1], t[2]) && (t = [t[0]]),
              r(e, a(t, 1), [])
            );
          });
        e.exports = s;
      },
      function(e, t, n) {
        var u = n(71),
          l = n(469);
        e.exports = function e(t, n, a, r, i) {
          var o = -1,
            s = t.length;
          for (a || (a = l), i || (i = []); ++o < s; ) {
            var d = t[o];
            0 < n && a(d)
              ? 1 < n
                ? e(d, n - 1, a, r, i)
                : u(i, d)
              : r || (i[i.length] = d);
          }
          return i;
        };
      },
      function(e, t, n) {
        var a = n(26),
          r = n(65),
          i = n(9),
          o = a ? a.isConcatSpreadable : void 0;
        e.exports = function(e) {
          return i(e) || r(e) || !!(o && e && e[o]);
        };
      },
      function(e, t, n) {
        var i = n(50),
          o = n(471),
          s = n(490),
          d = n(496),
          u = n(29),
          l = n(497),
          c = n(52);
        e.exports = function(e, a, n) {
          var r = -1;
          a = i(a.length ? a : [c], u(o));
          var t = s(e, function(t, e, n) {
            return {
              criteria: i(a, function(e) {
                return e(t);
              }),
              index: ++r,
              value: t,
            };
          });
          return d(t, function(e, t) {
            return l(e, t, n);
          });
        };
      },
      function(e, t, n) {
        var a = n(472),
          r = n(480),
          i = n(52),
          o = n(9),
          s = n(487);
        e.exports = function(e) {
          return "function" == typeof e
            ? e
            : null == e
              ? i
              : "object" == typeof e
                ? o(e)
                  ? r(e[0], e[1])
                  : a(e)
                : s(e);
        };
      },
      function(e, t, n) {
        var a = n(473),
          r = n(479),
          i = n(208);
        e.exports = function(t) {
          var n = r(t);
          return 1 == n.length && n[0][2]
            ? i(n[0][0], n[0][1])
            : function(e) {
                return e === t || a(e, t, n);
              };
        };
      },
      function(e, t, n) {
        var g = n(62),
          f = n(205);
        e.exports = function(e, t, n, a) {
          var r = n.length,
            i = r,
            o = !a;
          if (null == e) return !i;
          for (e = Object(e); r--; ) {
            var s = n[r];
            if (o && s[2] ? s[1] !== e[s[0]] : !(s[0] in e)) return !1;
          }
          for (; ++r < i; ) {
            var d = (s = n[r])[0],
              u = e[d],
              l = s[1];
            if (o && s[2]) {
              if (void 0 === u && !(d in e)) return !1;
            } else {
              var c = new g();
              if (a) var p = a(u, l, d, e, t, c);
              if (!(void 0 === p ? f(l, u, 3, a, c) : p)) return !1;
            }
          }
          return !0;
        };
      },
      function(e, t, n) {
        var y = n(62),
          m = n(206),
          v = n(476),
          b = n(478),
          E = n(47),
          x = n(9),
          A = n(66),
          S = n(153),
          _ = "[object Arguments]",
          T = "[object Array]",
          P = "[object Object]",
          C = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, n, a, r, i) {
          var o = x(e),
            s = x(t),
            d = o ? T : E(e),
            u = s ? T : E(t),
            l = (d = d == _ ? P : d) == P,
            c = (u = u == _ ? P : u) == P,
            p = d == u;
          if (p && A(e)) {
            if (!A(t)) return !1;
            l = !(o = !0);
          }
          if (p && !l)
            return (
              i || (i = new y()),
              o || S(e) ? m(e, t, n, a, r, i) : v(e, t, d, n, a, r, i)
            );
          if (!(1 & n)) {
            var g = l && C.call(e, "__wrapped__"),
              f = c && C.call(t, "__wrapped__");
            if (g || f) {
              var h = g ? e.value() : e,
                R = f ? t.value() : t;
              return i || (i = new y()), r(h, R, n, a, i);
            }
          }
          return !!p && (i || (i = new y()), b(e, t, n, a, r, i));
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          for (var n = -1, a = null == e ? 0 : e.length; ++n < a; )
            if (t(e[n], n, e)) return !0;
          return !1;
        };
      },
      function(e, t, n) {
        var a = n(26),
          c = n(161),
          p = n(34),
          g = n(206),
          f = n(477),
          h = n(81),
          r = a ? a.prototype : void 0,
          R = r ? r.valueOf : void 0;
        e.exports = function(e, t, n, a, r, i, o) {
          switch (n) {
            case "[object DataView]":
              if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
                return !1;
              (e = e.buffer), (t = t.buffer);
            case "[object ArrayBuffer]":
              return !(e.byteLength != t.byteLength || !i(new c(e), new c(t)));
            case "[object Boolean]":
            case "[object Date]":
            case "[object Number]":
              return p(+e, +t);
            case "[object Error]":
              return e.name == t.name && e.message == t.message;
            case "[object RegExp]":
            case "[object String]":
              return e == t + "";
            case "[object Map]":
              var s = f;
            case "[object Set]":
              var d = 1 & a;
              if ((s || (s = h), e.size != t.size && !d)) return !1;
              var u = o.get(e);
              if (u) return u == t;
              (a |= 2), o.set(e, t);
              var l = g(s(e), s(t), a, r, i, o);
              return o.delete(e), l;
            case "[object Symbol]":
              if (R) return R.call(e) == R.call(t);
          }
          return !1;
        };
      },
      function(e, t) {
        e.exports = function(e) {
          var n = -1,
            a = Array(e.size);
          return (
            e.forEach(function(e, t) {
              a[++n] = [t, e];
            }),
            a
          );
        };
      },
      function(e, t, n) {
        var v = n(158),
          b = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, n, a, r, i) {
          var o = 1 & n,
            s = v(e),
            d = s.length;
          if (d != v(t).length && !o) return !1;
          for (var u = d; u--; ) {
            var l = s[u];
            if (!(o ? l in t : b.call(t, l))) return !1;
          }
          var c = i.get(e);
          if (c && i.get(t)) return c == t;
          var p = !0;
          i.set(e, t), i.set(t, e);
          for (var g = o; ++u < d; ) {
            var f = e[(l = s[u])],
              h = t[l];
            if (a) var R = o ? a(h, f, l, t, e, i) : a(f, h, l, e, t, i);
            if (!(void 0 === R ? f === h || r(f, h, n, a, i) : R)) {
              p = !1;
              break;
            }
            g || (g = "constructor" == l);
          }
          if (p && !g) {
            var y = e.constructor,
              m = t.constructor;
            y != m &&
              "constructor" in e &&
              "constructor" in t &&
              !(
                "function" == typeof y &&
                y instanceof y &&
                "function" == typeof m &&
                m instanceof m
              ) &&
              (p = !1);
          }
          return i.delete(e), i.delete(t), p;
        };
      },
      function(e, t, n) {
        var i = n(207),
          o = n(27);
        e.exports = function(e) {
          for (var t = o(e), n = t.length; n--; ) {
            var a = t[n],
              r = e[a];
            t[n] = [a, r, i(r)];
          }
          return t;
        };
      },
      function(e, t, n) {
        var r = n(205),
          i = n(481),
          o = n(485),
          s = n(92),
          d = n(207),
          u = n(208),
          l = n(58);
        e.exports = function(n, a) {
          return s(n) && d(a)
            ? u(l(n), a)
            : function(e) {
                var t = i(e, n);
                return void 0 === t && t === a ? o(e, n) : r(a, t, 3);
              };
        };
      },
      function(e, t, n) {
        var r = n(209);
        e.exports = function(e, t, n) {
          var a = null == e ? void 0 : r(e, t);
          return void 0 === a ? n : a;
        };
      },
      function(e, t, n) {
        var a = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
          i = /\\(\\)?/g,
          r = n(483)(function(e) {
            var r = [];
            return (
              46 === e.charCodeAt(0) && r.push(""),
              e.replace(a, function(e, t, n, a) {
                r.push(n ? a.replace(i, "$1") : t || e);
              }),
              r
            );
          });
        e.exports = r;
      },
      function(e, t, n) {
        var a = n(484);
        e.exports = function(e) {
          var t = a(e, function(e) {
              return 500 === n.size && n.clear(), e;
            }),
            n = t.cache;
          return t;
        };
      },
      function(e, t, n) {
        var a = n(64),
          r = "Expected a function";
        function s(i, o) {
          if ("function" != typeof i || (null != o && "function" != typeof o))
            throw new TypeError(r);
          var e = function e() {
            var t = arguments,
              n = o ? o.apply(this, t) : t[0],
              a = e.cache;
            if (a.has(n)) return a.get(n);
            var r = i.apply(this, t);
            return (e.cache = a.set(n, r) || a), r;
          };
          return (e.cache = new (s.Cache || a)()), e;
        }
        (s.Cache = a), (e.exports = s);
      },
      function(e, t, n) {
        var a = n(486),
          r = n(211);
        e.exports = function(e, t) {
          return null != e && r(e, t, a);
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          return null != e && t in Object(e);
        };
      },
      function(e, t, n) {
        var a = n(488),
          r = n(489),
          i = n(92),
          o = n(58);
        e.exports = function(e) {
          return i(e) ? a(o(e)) : r(e);
        };
      },
      function(e, t) {
        e.exports = function(t) {
          return function(e) {
            return null == e ? void 0 : e[t];
          };
        };
      },
      function(e, t, n) {
        var a = n(209);
        e.exports = function(t) {
          return function(e) {
            return a(e, t);
          };
        };
      },
      function(e, t, n) {
        var o = n(491),
          s = n(30);
        e.exports = function(e, a) {
          var r = -1,
            i = s(e) ? Array(e.length) : [];
          return (
            o(e, function(e, t, n) {
              i[++r] = a(e, t, n);
            }),
            i
          );
        };
      },
      function(e, t, n) {
        var a = n(492),
          r = n(495)(a);
        e.exports = r;
      },
      function(e, t, n) {
        var a = n(493),
          r = n(27);
        e.exports = function(e, t) {
          return e && a(e, t, r);
        };
      },
      function(e, t, n) {
        var a = n(494)();
        e.exports = a;
      },
      function(e, t) {
        e.exports = function(d) {
          return function(e, t, n) {
            for (var a = -1, r = Object(e), i = n(e), o = i.length; o--; ) {
              var s = i[d ? o : ++a];
              if (!1 === t(r[s], s, r)) break;
            }
            return e;
          };
        };
      },
      function(e, t, n) {
        var s = n(30);
        e.exports = function(i, o) {
          return function(e, t) {
            if (null == e) return e;
            if (!s(e)) return i(e, t);
            for (
              var n = e.length, a = o ? n : -1, r = Object(e);
              (o ? a-- : ++a < n) && !1 !== t(r[a], a, r);

            );
            return e;
          };
        };
      },
      function(e, t) {
        e.exports = function(e, t) {
          var n = e.length;
          for (e.sort(t); n--; ) e[n] = e[n].value;
          return e;
        };
      },
      function(e, t, n) {
        var u = n(498);
        e.exports = function(e, t, n) {
          for (
            var a = -1,
              r = e.criteria,
              i = t.criteria,
              o = r.length,
              s = n.length;
            ++a < o;

          ) {
            var d = u(r[a], i[a]);
            if (d) return s <= a ? d : d * ("desc" == n[a] ? -1 : 1);
          }
          return e.index - t.index;
        };
      },
      function(e, t, n) {
        var l = n(38);
        e.exports = function(e, t) {
          if (e !== t) {
            var n = void 0 !== e,
              a = null === e,
              r = e == e,
              i = l(e),
              o = void 0 !== t,
              s = null === t,
              d = t == t,
              u = l(t);
            if (
              (!s && !u && !i && t < e) ||
              (i && o && d && !s && !u) ||
              (a && o && d) ||
              (!n && d) ||
              !r
            )
              return 1;
            if (
              (!a && !i && !u && e < t) ||
              (u && n && r && !a && !i) ||
              (s && n && r) ||
              (!o && r) ||
              !d
            )
              return -1;
          }
          return 0;
        };
      },
      function(e, t, n) {
        var a = n(145);
        e.exports = function(e) {
          return a(e, 5);
        };
      },
      function(e, t, n) {
        var a = n(192),
          r = a.Buffer;
        function i(e, t) {
          for (var n in e) t[n] = e[n];
        }
        function o(e, t, n) {
          return r(e, t, n);
        }
        r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow
          ? (e.exports = a)
          : (i(a, t), (t.Buffer = o)),
          i(r, o),
          (o.from = function(e, t, n) {
            if ("number" == typeof e)
              throw new TypeError("Argument must not be a number");
            return r(e, t, n);
          }),
          (o.alloc = function(e, t, n) {
            if ("number" != typeof e)
              throw new TypeError("Argument must be a number");
            var a = r(e);
            return (
              void 0 !== t
                ? "string" == typeof n
                  ? a.fill(t, n)
                  : a.fill(t)
                : a.fill(0),
              a
            );
          }),
          (o.allocUnsafe = function(e) {
            if ("number" != typeof e)
              throw new TypeError("Argument must be a number");
            return r(e);
          }),
          (o.allocUnsafeSlow = function(e) {
            if ("number" != typeof e)
              throw new TypeError("Argument must be a number");
            return a.SlowBuffer(e);
          });
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            var a =
                "Support for the experimental syntax '" +
                e +
                "' isn't currently enabled (" +
                t.line +
                ":" +
                (t.column + 1) +
                "):\n\n" +
                n,
              r = s[e];
            if (r) {
              var i = r.syntax,
                o = r.transform;
              if (i)
                if (o) {
                  a +=
                    "\n\nAdd " +
                    d(o) +
                    " to the 'plugins' section of your Babel config to enable transformation.";
                } else {
                  a +=
                    "\n\nAdd " +
                    d(i) +
                    " to the 'plugins' section of your Babel config to enable parsing.";
                }
            }
            return a;
          });
        var s = {
            asyncGenerators: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-async-generators",
                url: "https://git.io/vb4SY",
              },
              transform: {
                name:
                  "@gerhobbelt/babel-plugin-proposal-async-generator-functions",
                url: "https://git.io/vb4yp",
              },
            },
            classProperties: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-class-properties",
                url: "https://git.io/vb4yQ",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-class-properties",
                url: "https://git.io/vb4SL",
              },
            },
            decorators: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-decorators",
                url: "https://git.io/vb4y9",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-decorators",
                url: "https://git.io/vb4ST",
              },
            },
            doExpressions: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-do-expressions",
                url: "https://git.io/vb4yh",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-do-expressions",
                url: "https://git.io/vb4S3",
              },
            },
            dynamicImport: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-dynamic-import",
                url: "https://git.io/vb4Sv",
              },
            },
            exportDefaultFrom: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-export-default-from",
                url: "https://git.io/vb4SO",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-export-default-from",
                url: "https://git.io/vb4yH",
              },
            },
            exportNamespaceFrom: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-export-namespace-from",
                url: "https://git.io/vb4Sf",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-export-namespace-from",
                url: "https://git.io/vb4SG",
              },
            },
            flow: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-flow",
                url: "https://git.io/vb4yb",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-transform-flow-strip-types",
                url: "https://git.io/vb49g",
              },
            },
            functionBind: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-function-bind",
                url: "https://git.io/vb4y7",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-function-bind",
                url: "https://git.io/vb4St",
              },
            },
            functionSent: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-function-sent",
                url: "https://git.io/vb4yN",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-function-sent",
                url: "https://git.io/vb4SZ",
              },
            },
            importMeta: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-import-meta",
                url: "https://git.io/vbKK6",
              },
            },
            jsx: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-jsx",
                url: "https://git.io/vb4yA",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-transform-react-jsx",
                url: "https://git.io/vb4yd",
              },
            },
            logicalAssignment: {
              syntax: {
                name:
                  "@gerhobbelt/babel-plugin-syntax-logical-assignment-operators",
                url: "https://git.io/vAlBp",
              },
              transform: {
                name:
                  "@gerhobbelt/babel-plugin-proposal-logical-assignment-operators",
                url: "https://git.io/vAlRe",
              },
            },
            nullishCoalescingOperator: {
              syntax: {
                name:
                  "@gerhobbelt/babel-plugin-syntax-nullish-coalescing-operator",
                url: "https://git.io/vb4yx",
              },
              transform: {
                name:
                  "@gerhobbelt/babel-plugin-proposal-nullish-coalescing-operator",
                url: "https://git.io/vb4Se",
              },
            },
            numericSeparator: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-numeric-separator",
                url: "https://git.io/vb4Sq",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-numeric-separator",
                url: "https://git.io/vb4yS",
              },
            },
            objectRestSpread: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-object-rest-spread",
                url: "https://git.io/vb4y5",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-object-rest-spread",
                url: "https://git.io/vb4Ss",
              },
            },
            optionalCatchBinding: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-optional-catch-binding",
                url: "https://git.io/vb4Sn",
              },
              transform: {
                name:
                  "@gerhobbelt/babel-plugin-proposal-optional-catch-binding",
                url: "https://git.io/vb4SI",
              },
            },
            optionalChaining: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-optional-chaining",
                url: "https://git.io/vb4Sc",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-optional-chaining",
                url: "https://git.io/vb4Sk",
              },
            },
            pipelineOperator: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-pipeline-operator",
                url: "https://git.io/vb4yj",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-pipeline-operator",
                url: "https://git.io/vb4SU",
              },
            },
            throwExpressions: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-throw-expressions",
                url: "https://git.io/vb4SJ",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-proposal-throw-expressions",
                url: "https://git.io/vb4yF",
              },
            },
            typescript: {
              syntax: {
                name: "@gerhobbelt/babel-plugin-syntax-typescript",
                url: "https://git.io/vb4SC",
              },
              transform: {
                name: "@gerhobbelt/babel-plugin-transform-typescript",
                url: "https://git.io/vb4Sm",
              },
            },
          },
          d = function(e) {
            return e.name + " (" + e.url + ")";
          };
      },
      function(e, t, n) {
        "use strict";
        function E() {
          var e = a(n(214));
          return (
            (E = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = a(n(85));
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n,
              a = t.opts,
              r = t.ast,
              i = t.code,
              o = t.inputMap,
              s = [],
              d = e,
              u = Array.isArray(d),
              l = 0;
            for (d = u ? d : d[Symbol.iterator](); ; ) {
              var c;
              if (u) {
                if (l >= d.length) break;
                c = d[l++];
              } else {
                if ((l = d.next()).done) break;
                c = l.value;
              }
              var p = c,
                g = Array.isArray(p),
                f = 0;
              for (p = g ? p : p[Symbol.iterator](); ; ) {
                var h;
                if (g) {
                  if (f >= p.length) break;
                  h = p[f++];
                } else {
                  if ((f = p.next()).done) break;
                  h = f.value;
                }
                var R = h.generatorOverride;
                if (R) {
                  var y = R(r, a.generatorOpts, i, x().default);
                  void 0 !== y && s.push(y);
                }
              }
            }
            if (0 === s.length) n = (0, x().default)(r, a.generatorOpts, i);
            else {
              if (1 !== s.length)
                throw new Error(
                  "More than one plugin attempted to override codegen."
                );
              if ("function" == typeof (n = s[0]).then)
                throw new Error(
                  "You appear to be using an async parser plugin, which your current version of Babel does not support. If you're using a published plugin, you may need to upgrade your @gerhobbelt/babel-core version."
                );
            }
            var m = n,
              v = m.code,
              b = m.map;
            return (
              b && o && (b = (0, A.default)(o.toObject(), b)),
              ("inline" !== a.sourceMaps && "both" !== a.sourceMaps) ||
                (v +=
                  "\n" +
                  E()
                    .default.fromObject(b)
                    .toComment()),
              "inline" === a.sourceMaps && (b = null),
              { outputCode: v, outputMap: b }
            );
          });
        var A = a(n(503));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
      },
      function(e, t, n) {
        "use strict";
        function b() {
          var e,
            t = (e = n(504)) && e.__esModule ? e : { default: e };
          return (
            (b = function() {
              return t;
            }),
            t
          );
        }
        function E(e) {
          return JSON.stringify([e.line, e.columnStart]);
        }
        function x(e) {
          var r = new (b()).default.SourceMapConsumer(
              Object.assign({}, e, { sourceRoot: null })
            ),
            i = new Map(),
            o = new Map(),
            s = null;
          return (
            r.computeColumnSpans(),
            r.eachMapping(
              function(e) {
                if (null !== e.originalLine) {
                  var t = i.get(e.source);
                  t ||
                    ((t = {
                      path: e.source,
                      content: r.sourceContentFor(e.source, !0),
                    }),
                    i.set(e.source, t));
                  var n = o.get(t);
                  n || ((n = { source: t, mappings: [] }), o.set(t, n));
                  var a = {
                    line: e.originalLine,
                    columnStart: e.originalColumn,
                    columnEnd: 1 / 0,
                    name: e.name,
                  };
                  s &&
                    s.source === t &&
                    s.mapping.line === e.originalLine &&
                    (s.mapping.columnEnd = e.originalColumn),
                    (s = { source: t, mapping: a }),
                    n.mappings.push({
                      original: a,
                      generated: r
                        .allGeneratedPositionsFor({
                          source: e.source,
                          line: e.originalLine,
                          column: e.originalColumn,
                        })
                        .map(function(e) {
                          return {
                            line: e.line,
                            columnStart: e.column,
                            columnEnd: e.lastColumn + 1,
                          };
                        }),
                    });
                }
              },
              null,
              b().default.SourceMapConsumer.ORIGINAL_ORDER
            ),
            {
              file: e.file,
              sourceRoot: e.sourceRoot,
              sources: Array.from(o.values()),
            }
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var m = x(e),
              n = x(t),
              R = new (b()).default.SourceMapGenerator(),
              a = m.sources,
              r = Array.isArray(a),
              i = 0;
            for (a = r ? a : a[Symbol.iterator](); ; ) {
              var o;
              if (r) {
                if (i >= a.length) break;
                o = a[i++];
              } else {
                if ((i = a.next()).done) break;
                o = i.value;
              }
              var s = o.source;
              "string" == typeof s.content &&
                R.setSourceContent(s.path, s.content);
            }
            if (1 === n.sources.length) {
              var d = n.sources[0],
                y = new Map();
              !(function(e, t) {
                var n = m.sources,
                  a = Array.isArray(n),
                  r = 0;
                for (n = a ? n : n[Symbol.iterator](); ; ) {
                  var i;
                  if (a) {
                    if (r >= n.length) break;
                    i = n[r++];
                  } else {
                    if ((r = n.next()).done) break;
                    i = r.value;
                  }
                  var o = i,
                    s = o.source,
                    d = o.mappings,
                    u = Array.isArray(d),
                    l = 0;
                  for (d = u ? d : d[Symbol.iterator](); ; ) {
                    var c;
                    if (u) {
                      if (l >= d.length) break;
                      c = d[l++];
                    } else {
                      if ((l = d.next()).done) break;
                      c = l.value;
                    }
                    var p = c,
                      g = p.original,
                      f = p.generated,
                      h = Array.isArray(f),
                      R = 0;
                    for (f = h ? f : f[Symbol.iterator](); ; ) {
                      var y;
                      if (h) {
                        if (R >= f.length) break;
                        y = f[R++];
                      } else {
                        if ((R = f.next()).done) break;
                        y = R.value;
                      }
                      t(y, g, s);
                    }
                  }
                }
              })(0, function(g, f, h) {
                !(function(o, e, t) {
                  var n = (function(e, t) {
                      var n = o.mappings,
                        a = t.line,
                        r = t.columnStart,
                        i = t.columnEnd;
                      return (function(e, t) {
                        for (
                          var n = [],
                            a = (function(e, t) {
                              for (var n = 0, a = e.length; n < a; ) {
                                var r = Math.floor((n + a) / 2),
                                  i = t(e[r]);
                                if (0 === i) {
                                  n = r;
                                  break;
                                }
                                0 <= i ? (a = r) : (n = r + 1);
                              }
                              var o = n;
                              if (o < e.length) {
                                for (; 0 <= o && 0 <= t(e[o]); ) o--;
                                return o + 1;
                              }
                              return o;
                            })(e, t);
                          a < e.length && 0 === t(e[a]);
                          a++
                        )
                          n.push(e[a]);
                        return n;
                      })(n, function(e) {
                        var t = e.original;
                        return a > t.line
                          ? -1
                          : a < t.line
                            ? 1
                            : r >= t.columnEnd
                              ? -1
                              : i <= t.columnStart
                                ? 1
                                : 0;
                      });
                    })(0, g),
                    a = Array.isArray(n),
                    r = 0;
                  for (n = a ? n : n[Symbol.iterator](); ; ) {
                    var i;
                    if (a) {
                      if (r >= n.length) break;
                      i = n[r++];
                    } else {
                      if ((r = n.next()).done) break;
                      i = r.value;
                    }
                    var s = i.generated,
                      d = Array.isArray(s),
                      u = 0;
                    for (s = d ? s : s[Symbol.iterator](); ; ) {
                      var l;
                      if (d) {
                        if (u >= s.length) break;
                        l = s[u++];
                      } else {
                        if ((u = s.next()).done) break;
                        l = u.value;
                      }
                      void 0,
                        (p = E((c = l))),
                        y.has(p) ||
                          (y.set(p, c),
                          R.addMapping({
                            source: h.path,
                            original: { line: f.line, column: f.columnStart },
                            generated: { line: c.line, column: c.columnStart },
                            name: f.name,
                          }));
                    }
                  }
                  var c, p;
                })(d);
              });
              var u = y.values(),
                l = Array.isArray(u),
                c = 0;
              for (u = l ? u : u[Symbol.iterator](); ; ) {
                var p;
                if (l) {
                  if (c >= u.length) break;
                  p = u[c++];
                } else {
                  if ((c = u.next()).done) break;
                  p = c.value;
                }
                var g = p;
                if (g.columnEnd !== 1 / 0) {
                  var f = { line: g.line, columnStart: g.columnEnd },
                    h = E(f);
                  y.has(h) ||
                    R.addMapping({
                      generated: { line: f.line, column: f.columnStart },
                    });
                }
              }
            }
            var v = R.toJSON();
            return (
              "string" == typeof m.sourceRoot && (v.sourceRoot = m.sourceRoot),
              v
            );
          });
      },
      function(e, t, n) {
        (t.SourceMapGenerator = n(215).SourceMapGenerator),
          (t.SourceMapConsumer = n(507).SourceMapConsumer),
          (t.SourceNode = n(510).SourceNode);
      },
      function(e, t) {
        var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(
          ""
        );
        t.encode = function(e) {
          if (0 <= e && e < n.length) return n[e];
          throw new TypeError("Must be between 0 and 63: " + e);
        };
      },
      function(e, t, n) {
        var s = n(59),
          a = (function() {
            function e() {
              (this._array = []),
                (this._sorted = !0),
                (this._last = { generatedLine: -1, generatedColumn: 0 });
            }
            var t = e.prototype;
            return (
              (t.unsortedForEach = function(e, t) {
                this._array.forEach(e, t);
              }),
              (t.add = function(e) {
                var t, n, a, r, i, o;
                (t = this._last),
                  (n = e),
                  (a = t.generatedLine),
                  (r = n.generatedLine),
                  (i = t.generatedColumn),
                  (o = n.generatedColumn),
                  a < r ||
                  (r == a && i <= o) ||
                  s.compareByGeneratedPositionsInflated(t, n) <= 0
                    ? (this._last = e)
                    : (this._sorted = !1),
                  this._array.push(e);
              }),
              (t.toArray = function() {
                return (
                  this._sorted ||
                    (this._array.sort(s.compareByGeneratedPositionsInflated),
                    (this._sorted = !0)),
                  this._array
                );
              }),
              e
            );
          })();
        t.MappingList = a;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(14),
          r = n.n(a),
          i = n(33),
          s = n.n(i),
          o = n(19),
          d = n.n(o),
          c = n(59),
          l = n(508),
          p = n(217).ArraySet,
          u = (n(216), n(218)),
          g = n(509),
          f = Symbol("smcInternal"),
          h = (function() {
            function r(e, t) {
              return e == f
                ? Promise.resolve(this)
                : (function(e, t) {
                    var n = e;
                    "string" == typeof e && (n = c.parseSourceMapInput(e));
                    var a = null != n.sections ? new y(n, t) : new R(n, t);
                    return Promise.resolve(a);
                  })(e, t);
            }
            (r.initialize = function(e) {
              u.initialize(e["lib/mappings.wasm"]);
            }),
              (r.fromSourceMap = function(e, t) {
                return (n = e), (a = t), R.fromSourceMap(n, a);
                var n, a;
              }),
              (r.with = function(e, t, n) {
                var a = null;
                return new r(e, t)
                  .then(function(e) {
                    return n((a = e));
                  })
                  .then(
                    function(e) {
                      return a && a.destroy(), e;
                    },
                    function(e) {
                      throw (a && a.destroy(), e);
                    }
                  );
              });
            var e = r.prototype;
            return (
              (e._parseMappings = function(e, t) {
                throw new Error("Subclasses must implement _parseMappings");
              }),
              (e.eachMapping = function(e, t, n) {
                throw new Error("Subclasses must implement eachMapping");
              }),
              (e.allGeneratedPositionsFor = function(e) {
                throw new Error(
                  "Subclasses must implement allGeneratedPositionsFor"
                );
              }),
              (e.destroy = function() {
                throw new Error("Subclasses must implement destroy");
              }),
              r
            );
          })();
        (h.prototype._version = 3),
          (h.GENERATED_ORDER = 1),
          (h.ORIGINAL_ORDER = 2),
          (h.GREATEST_LOWER_BOUND = 1),
          (h.LEAST_UPPER_BOUND = 2);
        var R = (function(t) {
          function n(u, l) {
            var e;
            return (
              (e = t.call(this, f) || this).then(function(t) {
                var e = u;
                "string" == typeof u && (e = c.parseSourceMapInput(u));
                var n = c.getArg(e, "version"),
                  a = c.getArg(e, "sources"),
                  r = c.getArg(e, "names", []),
                  i = c.getArg(e, "sourceRoot", null),
                  o = c.getArg(e, "sourcesContent", null),
                  s = c.getArg(e, "mappings"),
                  d = c.getArg(e, "file", null);
                if (n != t._version)
                  throw new Error("Unsupported version: " + n);
                return (
                  i && (i = c.normalize(i)),
                  (a = a
                    .map(String)
                    .map(c.normalize)
                    .map(function(e) {
                      return i && c.isAbsolute(i) && c.isAbsolute(e)
                        ? c.relative(i, e)
                        : e;
                    })),
                  (t._names = p.fromArray(r.map(String), !0)),
                  (t._sources = p.fromArray(a, !0)),
                  (t._absoluteSources = t._sources.toArray().map(function(e) {
                    return c.computeSourceURL(i, e, l);
                  })),
                  (t.sourceRoot = i),
                  (t.sourcesContent = o),
                  (t._mappings = s),
                  (t._sourceMapURL = l),
                  (t.file = d),
                  (t._computedColumnSpans = !1),
                  (t._mappingsPtr = 0),
                  (t._wasm = null),
                  g().then(function(e) {
                    return (t._wasm = e), t;
                  })
                );
              }) || s()(e)
            );
          }
          d()(n, t);
          var e = n.prototype;
          return (
            (e._findSourceIndex = function(e) {
              var t = e;
              if (
                (null != this.sourceRoot &&
                  (t = c.relative(this.sourceRoot, t)),
                this._sources.has(t))
              )
                return this._sources.indexOf(t);
              for (var n = 0; n < this._absoluteSources.length; ++n)
                if (this._absoluteSources[n] == e) return n;
              return -1;
            }),
            (n.fromSourceMap = function(e, t) {
              return new n(e.toString());
            }),
            (e._getMappingsPtr = function() {
              return (
                0 === this._mappingsPtr &&
                  this._parseMappings(this._mappings, this.sourceRoot),
                this._mappingsPtr
              );
            }),
            (e._parseMappings = function(e, t) {
              for (
                var n = e.length,
                  a = this._wasm.exports.allocate_mappings(n),
                  r = new Uint8Array(this._wasm.exports.memory.buffer, a, n),
                  i = 0;
                i < n;
                i++
              )
                r[i] = e.charCodeAt(i);
              var o = this._wasm.exports.parse_mappings(a);
              if (!o) {
                var s = this._wasm.exports.get_last_error(),
                  d = "Error parsing mappings (code " + s + "): ";
                switch (s) {
                  case 1:
                    d +=
                      "the mappings contained a negative line, column, source index, or name index";
                    break;
                  case 2:
                    d += "the mappings contained a number larger than 2**32";
                    break;
                  case 3:
                    d += "reached EOF while in the middle of parsing a VLQ";
                    break;
                  case 4:
                    d += "invalid base 64 character while parsing a VLQ";
                    break;
                  default:
                    d += "unknown error code";
                }
                throw new Error(d);
              }
              this._mappingsPtr = o;
            }),
            (e.eachMapping = function(t, e, n) {
              var a = this,
                r = e || null,
                i = n || h.GENERATED_ORDER,
                o = this.sourceRoot;
              this._wasm.withMappingCallback(
                function(e) {
                  null !== e.source &&
                    ((e.source = a._sources.at(e.source)),
                    (e.source = c.computeSourceURL(
                      o,
                      e.source,
                      a._sourceMapURL
                    )),
                    null !== e.name && (e.name = a._names.at(e.name))),
                    t.call(r, e);
                },
                function() {
                  switch (i) {
                    case h.GENERATED_ORDER:
                      a._wasm.exports.by_generated_location(
                        a._getMappingsPtr()
                      );
                      break;
                    case h.ORIGINAL_ORDER:
                      a._wasm.exports.by_original_location(a._getMappingsPtr());
                      break;
                    default:
                      throw new Error("Unknown order of iteration.");
                  }
                }
              );
            }),
            (e.allGeneratedPositionsFor = function(e) {
              var n = this,
                t = c.getArg(e, "source"),
                a = c.getArg(e, "line"),
                r = e.column || 0;
              if ((t = this._findSourceIndex(t)) < 0) return [];
              if (a < 1) throw new Error("Line numbers must be >= 1");
              if (r < 0) throw new Error("Column numbers must be >= 0");
              var i = [];
              return (
                this._wasm.withMappingCallback(
                  function(e) {
                    var t = e.lastGeneratedColumn;
                    n._computedColumnSpans && null === t && (t = 1 / 0),
                      i.push({
                        line: e.generatedLine,
                        column: e.generatedColumn,
                        lastColumn: t,
                      });
                  },
                  function() {
                    n._wasm.exports.all_generated_locations_for(
                      n._getMappingsPtr(),
                      t,
                      a - 1,
                      "column" in e,
                      r
                    );
                  }
                ),
                i
              );
            }),
            (e.destroy = function() {
              0 !== this._mappingsPtr &&
                (this._wasm.exports.free_mappings(this._mappingsPtr),
                (this._mappingsPtr = 0));
            }),
            (e.computeColumnSpans = function() {
              this._computedColumnSpans ||
                (this._wasm.exports.compute_column_spans(
                  this._getMappingsPtr()
                ),
                (this._computedColumnSpans = !0));
            }),
            (e.originalPositionFor = function(e) {
              var t = this,
                n = {
                  generatedLine: c.getArg(e, "line"),
                  generatedColumn: c.getArg(e, "column"),
                };
              if (n.generatedLine < 1)
                throw new Error("Line numbers must be >= 1");
              if (n.generatedColumn < 0)
                throw new Error("Column numbers must be >= 0");
              var a,
                r = c.getArg(e, "bias", h.GREATEST_LOWER_BOUND);
              if (
                (null == r && (r = h.GREATEST_LOWER_BOUND),
                this._wasm.withMappingCallback(
                  function(e) {
                    return (a = e);
                  },
                  function() {
                    t._wasm.exports.original_location_for(
                      t._getMappingsPtr(),
                      n.generatedLine - 1,
                      n.generatedColumn,
                      r
                    );
                  }
                ),
                a && a.generatedLine === n.generatedLine)
              ) {
                var i = c.getArg(a, "source", null);
                null !== i &&
                  ((i = this._sources.at(i)),
                  (i = c.computeSourceURL(
                    this.sourceRoot,
                    i,
                    this._sourceMapURL
                  )));
                var o = c.getArg(a, "name", null);
                return (
                  null !== o && (o = this._names.at(o)),
                  {
                    source: i,
                    line: c.getArg(a, "originalLine", null),
                    column: c.getArg(a, "originalColumn", null),
                    name: o,
                  }
                );
              }
              return { source: null, line: null, column: null, name: null };
            }),
            (e.hasContentsOfAllSources = function() {
              return (
                !!this.sourcesContent &&
                this.sourcesContent.length >= this._sources.size() &&
                !this.sourcesContent.some(function(e) {
                  return null == e;
                })
              );
            }),
            (e.sourceContentFor = function(e, t) {
              if (!this.sourcesContent) return null;
              var n = this._findSourceIndex(e);
              if (0 <= n) return this.sourcesContent[n];
              var a,
                r = e;
              if (
                (null != this.sourceRoot &&
                  (r = c.relative(this.sourceRoot, r)),
                null != this.sourceRoot && (a = c.urlParse(this.sourceRoot)))
              ) {
                var i = r.replace(/^file:\/\//, "");
                if ("file" == a.scheme && this._sources.has(i))
                  return this.sourcesContent[this._sources.indexOf(i)];
                if ((!a.path || "/" == a.path) && this._sources.has("/" + r))
                  return this.sourcesContent[this._sources.indexOf("/" + r)];
              }
              if (t) return null;
              throw new Error('"' + r + '" is not in the SourceMap.');
            }),
            (e.generatedPositionFor = function(e) {
              var t = this,
                n = c.getArg(e, "source");
              if ((n = this._findSourceIndex(n)) < 0)
                return { line: null, column: null, lastColumn: null };
              var a = {
                source: n,
                originalLine: c.getArg(e, "line"),
                originalColumn: c.getArg(e, "column"),
              };
              if (a.originalLine < 1)
                throw new Error("Line numbers must be >= 1");
              if (a.originalColumn < 0)
                throw new Error("Column numbers must be >= 0");
              var r,
                i = c.getArg(e, "bias", h.GREATEST_LOWER_BOUND);
              if (
                (null == i && (i = h.GREATEST_LOWER_BOUND),
                this._wasm.withMappingCallback(
                  function(e) {
                    return (r = e);
                  },
                  function() {
                    t._wasm.exports.generated_location_for(
                      t._getMappingsPtr(),
                      a.source,
                      a.originalLine - 1,
                      a.originalColumn,
                      i
                    );
                  }
                ),
                r && r.source === a.source)
              ) {
                var o = r.lastGeneratedColumn;
                return (
                  this._computedColumnSpans && null === o && (o = 1 / 0),
                  {
                    line: c.getArg(r, "generatedLine", null),
                    column: c.getArg(r, "generatedColumn", null),
                    lastColumn: o,
                  }
                );
              }
              return { line: null, column: null, lastColumn: null };
            }),
            r()(n, [
              {
                key: "sources",
                get: function() {
                  return this._absoluteSources.slice();
                },
              },
            ]),
            n
          );
        })((exports.SourceMapConsumer = h));
        (R.prototype.consumer = h), (exports.BasicSourceMapConsumer = R);
        var y = (function(t) {
          function e(i, o) {
            var e;
            return (
              (e = t.call(this, f) || this).then(function(t) {
                var e = i;
                "string" == typeof i && (e = c.parseSourceMapInput(i));
                var n = c.getArg(e, "version"),
                  a = c.getArg(e, "sections");
                if (n != t._version)
                  throw new Error("Unsupported version: " + n);
                (t._sources = new p()),
                  (t._names = new p()),
                  (t.__generatedMappings = null),
                  (t.__originalMappings = null),
                  (t.__generatedMappingsUnsorted = null),
                  (t.__originalMappingsUnsorted = null);
                var r = { line: -1, column: 0 };
                return Promise.all(
                  a.map(function(e) {
                    if (e.url)
                      throw new Error(
                        "Support for url field in sections not implemented."
                      );
                    var t = c.getArg(e, "offset"),
                      n = c.getArg(t, "line"),
                      a = c.getArg(t, "column");
                    if (n < r.line || (n === r.line && a < r.column))
                      throw new Error(
                        "Section offsets must be ordered and non-overlapping."
                      );
                    return (
                      (r = t),
                      new h(c.getArg(e, "map"), o).then(function(e) {
                        return {
                          generatedOffset: {
                            generatedLine: n + 1,
                            generatedColumn: a + 1,
                          },
                          consumer: e,
                        };
                      })
                    );
                  })
                ).then(function(e) {
                  return (t._sections = e), t;
                });
              }) || s()(e)
            );
          }
          d()(e, t);
          var n = e.prototype;
          return (
            (n._sortGeneratedMappings = function() {
              var e = this._generatedMappingsUnsorted;
              e.sort(c.compareByGeneratedPositionsDeflated),
                (this.__generatedMappings = e);
            }),
            (n._sortOriginalMappings = function() {
              var e = this._originalMappingsUnsorted;
              e.sort(c.compareByOriginalPositions),
                (this.__originalMappings = e);
            }),
            (n.originalPositionFor = function(e) {
              var t = {
                  generatedLine: c.getArg(e, "line"),
                  generatedColumn: c.getArg(e, "column"),
                },
                n = l.search(t, this._sections, function(e, t) {
                  return (
                    e.generatedLine - t.generatedOffset.generatedLine ||
                    e.generatedColumn - t.generatedOffset.generatedColumn
                  );
                }),
                a = this._sections[n];
              return a
                ? a.consumer.originalPositionFor({
                    line:
                      t.generatedLine - (a.generatedOffset.generatedLine - 1),
                    column:
                      t.generatedColumn -
                      (a.generatedOffset.generatedLine === t.generatedLine
                        ? a.generatedOffset.generatedColumn - 1
                        : 0),
                    bias: e.bias,
                  })
                : { source: null, line: null, column: null, name: null };
            }),
            (n.hasContentsOfAllSources = function() {
              return this._sections.every(function(e) {
                return e.consumer.hasContentsOfAllSources();
              });
            }),
            (n.sourceContentFor = function(e, t) {
              for (var n = 0; n < this._sections.length; n++) {
                var a = this._sections[n].consumer.sourceContentFor(e, !0);
                if (a) return a;
              }
              if (t) return null;
              throw new Error('"' + e + '" is not in the SourceMap.');
            }),
            (n.generatedPositionFor = function(e) {
              for (var t = 0; t < this._sections.length; t++) {
                var n = this._sections[t];
                if (-1 !== n.consumer._findSourceIndex(c.getArg(e, "source"))) {
                  var a = n.consumer.generatedPositionFor(e);
                  if (a)
                    return {
                      line: a.line + (n.generatedOffset.generatedLine - 1),
                      column:
                        a.column +
                        (n.generatedOffset.generatedLine === a.line
                          ? n.generatedOffset.generatedColumn - 1
                          : 0),
                    };
                }
              }
              return { line: null, column: null };
            }),
            (n._parseMappings = function(e, t) {
              for (
                var d = this,
                  u = (this.__generatedMappingsUnsorted = []),
                  l = (this.__originalMappingsUnsorted = []),
                  n = function(e) {
                    var t = d._sections[e],
                      n = [];
                    t.consumer.eachMapping(function(e) {
                      return n.push(e);
                    });
                    for (var a = 0; a < n.length; a++) {
                      var r = n[a],
                        i = c.computeSourceURL(
                          t.consumer.sourceRoot,
                          null,
                          d._sourceMapURL
                        );
                      d._sources.add(i), (i = d._sources.indexOf(i));
                      var o = null;
                      r.name &&
                        (d._names.add(r.name), (o = d._names.indexOf(r.name)));
                      var s = {
                        source: i,
                        generatedLine:
                          r.generatedLine +
                          (t.generatedOffset.generatedLine - 1),
                        generatedColumn:
                          r.generatedColumn +
                          (t.generatedOffset.generatedLine === r.generatedLine
                            ? t.generatedOffset.generatedColumn - 1
                            : 0),
                        originalLine: r.originalLine,
                        originalColumn: r.originalColumn,
                        name: o,
                      };
                      u.push(s), "number" == typeof s.originalLine && l.push(s);
                    }
                  },
                  a = 0;
                a < this._sections.length;
                a++
              )
                n(a);
            }),
            (n.eachMapping = function(e, t, n) {
              var a,
                r = t || null;
              switch (n || h.GENERATED_ORDER) {
                case h.GENERATED_ORDER:
                  a = this._generatedMappings;
                  break;
                case h.ORIGINAL_ORDER:
                  a = this._originalMappings;
                  break;
                default:
                  throw new Error("Unknown order of iteration.");
              }
              var i = this.sourceRoot;
              a.map(function(e) {
                var t = null;
                return (
                  null !== e.source &&
                    ((t = this._sources.at(e.source)),
                    (t = c.computeSourceURL(i, t, this._sourceMapURL))),
                  {
                    source: t,
                    generatedLine: e.generatedLine,
                    generatedColumn: e.generatedColumn,
                    originalLine: e.originalLine,
                    originalColumn: e.originalColumn,
                    name: null === e.name ? null : this._names.at(e.name),
                  }
                );
              }, this).forEach(e, r);
            }),
            (n._findMapping = function(e, t, n, a, r, i) {
              if (e[n] <= 0)
                throw new TypeError(
                  "Line must be greater than or equal to 1, got " + e[n]
                );
              if (e[a] < 0)
                throw new TypeError(
                  "Column must be greater than or equal to 0, got " + e[a]
                );
              return l.search(e, t, r, i);
            }),
            (n.allGeneratedPositionsFor = function(e) {
              var t = c.getArg(e, "line"),
                n = {
                  source: c.getArg(e, "source"),
                  originalLine: t,
                  originalColumn: c.getArg(e, "column", 0),
                };
              if (((n.source = this._findSourceIndex(n.source)), n.source < 0))
                return [];
              if (n.originalLine < 1)
                throw new Error("Line numbers must be >= 1");
              if (n.originalColumn < 0)
                throw new Error("Column numbers must be >= 0");
              var a = [],
                r = this._findMapping(
                  n,
                  this._originalMappings,
                  "originalLine",
                  "originalColumn",
                  c.compareByOriginalPositions,
                  l.LEAST_UPPER_BOUND
                );
              if (0 <= r) {
                var i = this._originalMappings[r];
                if (void 0 === e.column)
                  for (var o = i.originalLine; i && i.originalLine === o; ) {
                    var s = i.lastGeneratedColumn;
                    this._computedColumnSpans && null === s && (s = 1 / 0),
                      a.push({
                        line: c.getArg(i, "generatedLine", null),
                        column: c.getArg(i, "generatedColumn", null),
                        lastColumn: s,
                      }),
                      (i = this._originalMappings[++r]);
                  }
                else
                  for (
                    var d = i.originalColumn;
                    i && i.originalLine === t && i.originalColumn == d;

                  ) {
                    var u = i.lastGeneratedColumn;
                    this._computedColumnSpans && null === u && (u = 1 / 0),
                      a.push({
                        line: c.getArg(i, "generatedLine", null),
                        column: c.getArg(i, "generatedColumn", null),
                        lastColumn: u,
                      }),
                      (i = this._originalMappings[++r]);
                  }
              }
              return a;
            }),
            (n.destroy = function() {
              for (var e = 0; e < this._sections.length; e++)
                this._sections[e].consumer.destroy();
            }),
            r()(e, [
              {
                key: "_generatedMappings",
                get: function() {
                  return (
                    this.__generatedMappings || this._sortGeneratedMappings(),
                    this.__generatedMappings
                  );
                },
              },
              {
                key: "_originalMappings",
                get: function() {
                  return (
                    this.__originalMappings || this._sortOriginalMappings(),
                    this.__originalMappings
                  );
                },
              },
              {
                key: "_generatedMappingsUnsorted",
                get: function() {
                  return (
                    this.__generatedMappingsUnsorted ||
                      this._parseMappings(this._mappings, this.sourceRoot),
                    this.__generatedMappingsUnsorted
                  );
                },
              },
              {
                key: "_originalMappingsUnsorted",
                get: function() {
                  return (
                    this.__originalMappingsUnsorted ||
                      this._parseMappings(this._mappings, this.sourceRoot),
                    this.__originalMappingsUnsorted
                  );
                },
              },
              {
                key: "sources",
                get: function() {
                  for (var e = [], t = 0; t < this._sections.length; t++)
                    for (
                      var n = 0;
                      n < this._sections[t].consumer.sources.length;
                      n++
                    )
                      e.push(this._sections[t].consumer.sources[n]);
                  return e;
                },
              },
            ]),
            e
          );
        })(h);
        exports.IndexedSourceMapConsumer = y;
      },
      function(e, u) {
        (u.GREATEST_LOWER_BOUND = 1),
          (u.LEAST_UPPER_BOUND = 2),
          (u.search = function(e, t, n, a) {
            if (0 === t.length) return -1;
            var r = (function e(t, n, a, r, i, o) {
              var s = Math.floor((n - t) / 2) + t,
                d = i(a, r[s], !0);
              return 0 === d
                ? s
                : 0 < d
                  ? 1 < n - s
                    ? e(s, n, a, r, i, o)
                    : o == u.LEAST_UPPER_BOUND
                      ? n < r.length
                        ? n
                        : -1
                      : s
                  : 1 < s - t
                    ? e(t, s, a, r, i, o)
                    : o == u.LEAST_UPPER_BOUND
                      ? s
                      : t < 0
                        ? -1
                        : t;
            })(-1, t.length, e, t, n, a || u.GREATEST_LOWER_BOUND);
            if (r < 0) return -1;
            for (; 0 <= r - 1 && 0 === n(t[r], t[r - 1], !0); ) --r;
            return r;
          });
      },
      function(e, t, n) {
        var a = n(218),
          r = null;
        e.exports = function() {
          if (r) return r;
          var c = [];
          return (r = a()
            .then(function(e) {
              return WebAssembly.instantiate(e, {
                env: {
                  mapping_callback: function(e, t, n, a, r, i, o, s, d, u) {
                    var l = new function() {
                      (this.generatedLine = 0),
                        (this.generatedColumn = 0),
                        (this.lastGeneratedColumn = null),
                        (this.source = null),
                        (this.originalLine = null),
                        (this.originalColumn = null),
                        (this.name = null);
                    }();
                    (l.generatedLine = e + 1),
                      (l.generatedColumn = t),
                      n && (l.lastGeneratedColumn = a - 1),
                      r &&
                        ((l.source = i),
                        (l.originalLine = o + 1),
                        (l.originalColumn = s),
                        d && (l.name = u)),
                      c[c.length - 1](l);
                  },
                  start_all_generated_locations_for: function() {
                    console.time("all_generated_locations_for");
                  },
                  end_all_generated_locations_for: function() {
                    console.timeEnd("all_generated_locations_for");
                  },
                  start_compute_column_spans: function() {
                    console.time("compute_column_spans");
                  },
                  end_compute_column_spans: function() {
                    console.timeEnd("compute_column_spans");
                  },
                  start_generated_location_for: function() {
                    console.time("generated_location_for");
                  },
                  end_generated_location_for: function() {
                    console.timeEnd("generated_location_for");
                  },
                  start_original_location_for: function() {
                    console.time("original_location_for");
                  },
                  end_original_location_for: function() {
                    console.timeEnd("original_location_for");
                  },
                  start_parse_mappings: function() {
                    console.time("parse_mappings");
                  },
                  end_parse_mappings: function() {
                    console.timeEnd("parse_mappings");
                  },
                  start_sort_by_generated_location: function() {
                    console.time("sort_by_generated_location");
                  },
                  end_sort_by_generated_location: function() {
                    console.timeEnd("sort_by_generated_location");
                  },
                  start_sort_by_original_location: function() {
                    console.time("sort_by_original_location");
                  },
                  end_sort_by_original_location: function() {
                    console.timeEnd("sort_by_original_location");
                  },
                },
              });
            })
            .then(function(e) {
              return {
                exports: e.instance.exports,
                withMappingCallback: function(e, t) {
                  c.push(e);
                  try {
                    t();
                  } finally {
                    c.pop();
                  }
                },
              };
            })
            .then(null, function(e) {
              throw ((r = null), e);
            }));
        };
      },
      function(e, t, n) {
        var a = n(215).SourceMapGenerator,
          f = n(59),
          h = /(\r?\n)/,
          o = "$$$isSourceNode$$$",
          r = (function() {
            function g(e, t, n, a, r) {
              (this.children = []),
                (this.sourceContents = {}),
                (this.line = null == e ? null : e),
                (this.column = null == t ? null : t),
                (this.source = null == n ? null : n),
                (this.name = null == r ? null : r),
                (this[o] = !0),
                null != a && this.add(a);
            }
            g.fromStringWithSourceMap = function(e, n, a) {
              var r,
                i = new g(),
                o = e.split(h),
                s = 0,
                d = function() {
                  return e() + (e() || "");
                  function e() {
                    return s < o.length ? o[s++] : void 0;
                  }
                },
                u = 1,
                l = 0,
                c = null;
              return (
                n.eachMapping(function(e) {
                  if (null !== c) {
                    if (!(u < e.generatedLine)) {
                      var t = (r = o[s] || "").substr(0, e.generatedColumn - l);
                      return (
                        (o[s] = r.substr(e.generatedColumn - l)),
                        (l = e.generatedColumn),
                        p(c, t),
                        void (c = e)
                      );
                    }
                    p(c, d()), u++, (l = 0);
                  }
                  for (; u < e.generatedLine; ) i.add(d()), u++;
                  l < e.generatedColumn &&
                    ((r = o[s] || ""),
                    i.add(r.substr(0, e.generatedColumn)),
                    (o[s] = r.substr(e.generatedColumn)),
                    (l = e.generatedColumn)),
                    (c = e);
                }, this),
                s < o.length && (c && p(c, d()), i.add(o.splice(s).join(""))),
                n.sources.forEach(function(e) {
                  var t = n.sourceContentFor(e);
                  null != t &&
                    (null != a && (e = f.join(a, e)), i.setSourceContent(e, t));
                }),
                i
              );
              function p(e, t) {
                if (null === e || void 0 === e.source) i.add(t);
                else {
                  var n = a ? f.join(a, e.source) : e.source;
                  i.add(new g(e.originalLine, e.originalColumn, n, t, e.name));
                }
              }
            };
            var e = g.prototype;
            return (
              (e.add = function(e) {
                if (Array.isArray(e))
                  e.forEach(function(e) {
                    this.add(e);
                  }, this);
                else {
                  if (!e[o] && "string" != typeof e)
                    throw new TypeError(
                      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                        e
                    );
                  e && this.children.push(e);
                }
                return this;
              }),
              (e.prepend = function(e) {
                if (Array.isArray(e))
                  for (var t = e.length - 1; 0 <= t; t--) this.prepend(e[t]);
                else {
                  if (!e[o] && "string" != typeof e)
                    throw new TypeError(
                      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                        e
                    );
                  this.children.unshift(e);
                }
                return this;
              }),
              (e.walk = function(e) {
                for (var t, n = 0, a = this.children.length; n < a; n++)
                  (t = this.children[n])[o]
                    ? t.walk(e)
                    : "" !== t &&
                      e(t, {
                        source: this.source,
                        line: this.line,
                        column: this.column,
                        name: this.name,
                      });
              }),
              (e.join = function(e) {
                var t,
                  n,
                  a = this.children.length;
                if (0 < a) {
                  for (t = [], n = 0; n < a - 1; n++)
                    t.push(this.children[n]), t.push(e);
                  t.push(this.children[n]), (this.children = t);
                }
                return this;
              }),
              (e.replaceRight = function(e, t) {
                var n = this.children[this.children.length - 1];
                return (
                  n[o]
                    ? n.replaceRight(e, t)
                    : "string" == typeof n
                      ? (this.children[this.children.length - 1] = n.replace(
                          e,
                          t
                        ))
                      : this.children.push("".replace(e, t)),
                  this
                );
              }),
              (e.setSourceContent = function(e, t) {
                this.sourceContents[f.toSetString(e)] = t;
              }),
              (e.walkSourceContents = function(e) {
                for (var t = 0, n = this.children.length; t < n; t++)
                  this.children[t][o] && this.children[t].walkSourceContents(e);
                for (
                  var a = Object.keys(this.sourceContents), r = 0, i = a.length;
                  r < i;
                  r++
                )
                  e(f.fromSetString(a[r]), this.sourceContents[a[r]]);
              }),
              (e.toString = function() {
                var t = "";
                return (
                  this.walk(function(e) {
                    t += e;
                  }),
                  t
                );
              }),
              (e.toStringWithSourceMap = function(e) {
                var r = { code: "", line: 1, column: 0 },
                  i = new a(e),
                  o = !1,
                  s = null,
                  d = null,
                  u = null,
                  l = null;
                return (
                  this.walk(function(e, t) {
                    (r.code += e),
                      null !== t.source && null !== t.line && null !== t.column
                        ? ((s === t.source &&
                            d === t.line &&
                            u === t.column &&
                            l === t.name) ||
                            i.addMapping({
                              source: t.source,
                              original: { line: t.line, column: t.column },
                              generated: { line: r.line, column: r.column },
                              name: t.name,
                            }),
                          (s = t.source),
                          (d = t.line),
                          (u = t.column),
                          (l = t.name),
                          (o = !0))
                        : o &&
                          (i.addMapping({
                            generated: { line: r.line, column: r.column },
                          }),
                          (s = null),
                          (o = !1));
                    for (var n = 0, a = e.length; n < a; n++)
                      10 === e.charCodeAt(n)
                        ? (r.line++,
                          (r.column = 0),
                          n + 1 === a
                            ? ((s = null), (o = !1))
                            : o &&
                              i.addMapping({
                                source: t.source,
                                original: { line: t.line, column: t.column },
                                generated: { line: r.line, column: r.column },
                                name: t.name,
                              }))
                        : r.column++;
                  }),
                  this.walkSourceContents(function(e, t) {
                    i.setSourceContent(e, t);
                  }),
                  { code: r.code, map: i }
                );
              }),
              g
            );
          })();
        t.SourceNode = r;
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n) {
            void 0 === t && (t = {}),
              "function" == typeof t && (n = t),
              n(
                new Error("Transforming files is not supported in browsers"),
                null
              );
          });
      },
      function(e, t, n) {
        "use strict";
        (function(i) {
          Object.defineProperty(t, "__esModule", { value: !0 }),
            (t.transformFromAstSync = u),
            (t.transformFromAstAsync = function(e, t, r) {
              return new Promise(function(n, a) {
                d(e, t, r, function(e, t) {
                  null == e ? n(t) : a(e);
                });
              });
            }),
            (t.transformFromAst = void 0);
          var e,
            o = (e = n(40)) && e.__esModule ? e : { default: e },
            s = n(204),
            d = function(t, n, a, e) {
              if (
                ("function" == typeof a && ((e = a), (a = void 0)),
                void 0 === e)
              )
                return u(t, n, a);
              var r = e;
              i.nextTick(function() {
                var e;
                try {
                  if (null === (e = (0, o.default)(a))) return r(null, null);
                } catch (e) {
                  return r(e);
                }
                if (!t) return r(new Error("No AST given"));
                (0, s.runAsync)(e, n, t, r);
              });
            };
          function u(e, t, n) {
            var a = (0, o.default)(n);
            if (null === a) return null;
            if (!e) throw new Error("No AST given");
            return (0, s.runSync)(a, t, e);
          }
          t.transformFromAst = d;
        }.call(this, n(7)));
      },
      function(e, n, a) {
        "use strict";
        (function(t) {
          Object.defineProperty(n, "__esModule", { value: !0 }),
            (n.parseSync = d),
            (n.parseAsync = function(e, t) {
              return new Promise(function(n, a) {
                r(e, t, function(e, t) {
                  null == e ? n(t) : a(e);
                });
              });
            }),
            (n.parse = void 0);
          var i = e(a(40)),
            o = e(a(213)),
            s = e(a(212));
          function e(e) {
            return e && e.__esModule ? e : { default: e };
          }
          var r = function(n, a, e) {
            if (
              ("function" == typeof a && ((e = a), (a = void 0)), void 0 === e)
            )
              return d(n, a);
            if (null === (0, i.default)(a)) return null;
            var r = e;
            t.nextTick(function() {
              var e = null;
              try {
                var t = (0, i.default)(a);
                if (null === t) return r(null, null);
                e = (0, o.default)(t.passes, (0, s.default)(t), n).ast;
              } catch (e) {
                return r(e);
              }
              r(null, e);
            });
          };
          function d(e, t) {
            var n = (0, i.default)(t);
            return null === n
              ? null
              : (0, o.default)(n.passes, (0, s.default)(n), e).ast;
          }
          n.parse = r;
        }.call(this, a(7)));
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = n(3);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.helperVersion,
            a = void 0 === n ? "7.0.0-beta.0" : n,
            r = t.whitelist,
            i = void 0 !== r && r;
          if (
            !1 !== i &&
            (!Array.isArray(i) ||
              i.some(function(e) {
                return "string" != typeof e;
              }))
          )
            throw new Error(
              ".whitelist must be undefined, false, or an array of strings"
            );
          var o = i ? new Set(i) : null;
          return {
            pre: function(t) {
              t.set("helperGenerator", function(e) {
                if (
                  (!t.availableHelper || t.availableHelper(e, a)) &&
                  (!o || o.has(e))
                )
                  return s().types.memberExpression(
                    s().types.identifier("babelHelpers"),
                    s().types.identifier(e)
                  );
              });
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e,
            t = (e = n(232)) && e.__esModule ? e : { default: e };
          return (
            (i = function() {
              return t;
            }),
            t
          );
        }
        function o() {
          var e = n(95);
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = n(3);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var a = t.method,
            r = t.module;
          return a && r
            ? {
                visitor: {
                  Function: function(e, t) {
                    if (e.node.async && !e.node.generator) {
                      var n = t.methodWrapper;
                      (n = n
                        ? s().types.cloneNode(n)
                        : (t.methodWrapper = (0, o().addNamed)(e, a, r))),
                        (0, i().default)(e, { wrapAsync: n });
                    }
                  },
                },
              }
            : {
                visitor: {
                  Function: function(e, t) {
                    e.node.async &&
                      !e.node.generator &&
                      (0, i().default)(e, {
                        wrapAsync: t.addHelper("asyncToGenerator"),
                      });
                  },
                },
              };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function s() {
          var e = a(n(15));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var A = a(n(519)),
          S = a(n(235));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var r = (function() {
          function e(e, t, n) {
            this._defaultOpts = {
              importedSource: null,
              importedType: "commonjs",
              importedInterop: "babel",
              importingInterop: "babel",
              ensureLiveReference: !1,
              ensureNoContext: !1,
            };
            var a = e.find(function(e) {
              return e.isProgram();
            });
            (this._programPath = a),
              (this._programScope = a.scope),
              (this._hub = a.hub),
              (this._defaultOpts = this._applyDefaults(t, n, !0));
          }
          var t = e.prototype;
          return (
            (t.addDefault = function(e, t) {
              return this.addNamed("default", e, t);
            }),
            (t.addNamed = function(e, t, n) {
              return (
                (0, s().default)("string" == typeof e),
                this._generateImport(this._applyDefaults(t, n), e)
              );
            }),
            (t.addNamespace = function(e, t) {
              return this._generateImport(this._applyDefaults(e, t), null);
            }),
            (t.addSideEffect = function(e, t) {
              return this._generateImport(this._applyDefaults(e, t), !1);
            }),
            (t._applyDefaults = function(e, t, n) {
              void 0 === n && (n = !1);
              var a = [];
              "string" == typeof e
                ? (a.push({ importedSource: e }), a.push(t))
                : ((0, s().default)(!t, "Unexpected secondary arguments."),
                  a.push(e));
              for (
                var r = Object.assign({}, this._defaultOpts),
                  i = function() {
                    var t = a[o];
                    if (!t) return "continue";
                    Object.keys(r).forEach(function(e) {
                      void 0 !== t[e] && (r[e] = t[e]);
                    }),
                      n ||
                        (void 0 !== t.nameHint && (r.nameHint = t.nameHint),
                        void 0 !== t.blockHoist &&
                          (r.blockHoist = t.blockHoist));
                  },
                  o = 0;
                o < a.length;
                o++
              )
                i();
              return r;
            }),
            (t._generateImport = function(e, t) {
              var n = "default" === t,
                a = !!t && !n,
                r = null === t,
                i = e.importedSource,
                o = e.importedType,
                s = e.importedInterop,
                d = e.importingInterop,
                u = e.ensureLiveReference,
                l = e.ensureNoContext,
                c = e.nameHint,
                p = e.blockHoist,
                g = c || t,
                f = (0, S.default)(this._programPath),
                h = f && "node" === d,
                R = f && "babel" === d,
                y = new A.default(i, this._programScope, this._hub);
              if ("es6" === o) {
                if (!h && !R)
                  throw new Error("Cannot import an ES6 module from CommonJS");
                y.import(), r ? y.namespace(c || i) : (n || a) && y.named(g, t);
              } else {
                if ("commonjs" !== o)
                  throw new Error('Unexpected interopType "' + o + '"');
                if ("babel" === s)
                  if (h) {
                    g = "default" !== g ? g : i;
                    var m = i + "$es6Default";
                    y.import(),
                      r
                        ? y
                            .default(m)
                            .var(g || i)
                            .wildcardInterop()
                        : n
                          ? u
                            ? y
                                .default(m)
                                .var(g || i)
                                .defaultInterop()
                                .read("default")
                            : y
                                .default(m)
                                .var(g)
                                .defaultInterop()
                                .prop(t)
                          : a && y.default(m).read(t);
                  } else
                    R
                      ? (y.import(),
                        r ? y.namespace(g || i) : (n || a) && y.named(g, t))
                      : (y.require(),
                        r
                          ? y.var(g || i).wildcardInterop()
                          : (n || a) && u
                            ? n
                              ? ((g = "default" !== g ? g : i),
                                y.var(g).read(t),
                                y.defaultInterop())
                              : y.var(i).read(t)
                            : n
                              ? y
                                  .var(g)
                                  .defaultInterop()
                                  .prop(t)
                              : a && y.var(g).prop(t));
                else if ("compiled" === s)
                  h
                    ? (y.import(),
                      r ? y.default(g || i) : (n || a) && y.default(i).read(g))
                    : R
                      ? (y.import(),
                        r ? y.namespace(g || i) : (n || a) && y.named(g, t))
                      : (y.require(),
                        r
                          ? y.var(g || i)
                          : (n || a) &&
                            (u ? y.var(i).read(g) : y.prop(t).var(g)));
                else {
                  if ("uncompiled" !== s)
                    throw new Error('Unknown importedInterop "' + s + '".');
                  if (n && u)
                    throw new Error("No live reference for commonjs default");
                  h
                    ? (y.import(),
                      r
                        ? y.default(g || i)
                        : n
                          ? y.default(g)
                          : a && y.default(i).read(g))
                    : R
                      ? (y.import(),
                        r
                          ? y.default(g || i)
                          : n
                            ? y.default(g)
                            : a && y.named(g, t))
                      : (y.require(),
                        r
                          ? y.var(g || i)
                          : n
                            ? y.var(g)
                            : a && (u ? y.var(i).read(g) : y.var(g).prop(t)));
                }
              }
              var v = y.done(),
                b = v.statements,
                E = v.resultName;
              return (
                this._insertStatements(b, p),
                (n || a) && l && "Identifier" !== E.type
                  ? x().sequenceExpression([x().numericLiteral(0), E])
                  : E
              );
            }),
            (t._insertStatements = function(e, t) {
              void 0 === t && (t = 3),
                e.forEach(function(e) {
                  e._blockHoist = t;
                });
              var n = this._programPath.get("body").filter(function(e) {
                var t = e.node._blockHoist;
                return Number.isFinite(t) && t < 4;
              })[0];
              n
                ? n.insertBefore(e)
                : this._programPath.unshiftContainer("body", e);
            }),
            e
          );
        })();
        t.default = r;
      },
      function(e, t) {
        e.exports = function(e) {
          return (
            e &&
            "object" == typeof e &&
            "function" == typeof e.copy &&
            "function" == typeof e.fill &&
            "function" == typeof e.readUInt8
          );
        };
      },
      function(e, t) {
        "function" == typeof Object.create
          ? (e.exports = function(e, t) {
              (e.super_ = t),
                (e.prototype = Object.create(t.prototype, {
                  constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                  },
                }));
            })
          : (e.exports = function(e, t) {
              e.super_ = t;
              var n = function() {};
              (n.prototype = t.prototype),
                (e.prototype = new n()),
                (e.prototype.constructor = e);
            });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e,
            t = (e = n(15)) && e.__esModule ? e : { default: e };
          return (
            (a = function() {
              return t;
            }),
            t
          );
        }
        function r() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (function() {
          function e(e, t, n) {
            (this._statements = []),
              (this._resultName = null),
              (this._scope = null),
              (this._hub = null),
              (this._scope = t),
              (this._hub = n),
              (this._importedSource = e);
          }
          var t = e.prototype;
          return (
            (t.done = function() {
              return {
                statements: this._statements,
                resultName: this._resultName,
              };
            }),
            (t.import = function() {
              return (
                this._statements.push(
                  r().importDeclaration(
                    [],
                    r().stringLiteral(this._importedSource)
                  )
                ),
                this
              );
            }),
            (t.require = function() {
              return (
                this._statements.push(
                  r().expressionStatement(
                    r().callExpression(r().identifier("require"), [
                      r().stringLiteral(this._importedSource),
                    ])
                  )
                ),
                this
              );
            }),
            (t.namespace = function(e) {
              void 0 === e && (e = "namespace"),
                (e = this._scope.generateUidIdentifier(e));
              var t = this._statements[this._statements.length - 1];
              return (
                (0, a().default)("ImportDeclaration" === t.type),
                (0, a().default)(0 === t.specifiers.length),
                (t.specifiers = [r().importNamespaceSpecifier(e)]),
                (this._resultName = r().cloneNode(e)),
                this
              );
            }),
            (t.default = function(e) {
              e = this._scope.generateUidIdentifier(e);
              var t = this._statements[this._statements.length - 1];
              return (
                (0, a().default)("ImportDeclaration" === t.type),
                (0, a().default)(0 === t.specifiers.length),
                (t.specifiers = [r().importDefaultSpecifier(e)]),
                (this._resultName = r().cloneNode(e)),
                this
              );
            }),
            (t.named = function(e, t) {
              if ("default" === t) return this.default(e);
              e = this._scope.generateUidIdentifier(e);
              var n = this._statements[this._statements.length - 1];
              return (
                (0, a().default)("ImportDeclaration" === n.type),
                (0, a().default)(0 === n.specifiers.length),
                (n.specifiers = [r().importSpecifier(e, r().identifier(t))]),
                (this._resultName = r().cloneNode(e)),
                this
              );
            }),
            (t.var = function(e) {
              e = this._scope.generateUidIdentifier(e);
              var t = this._statements[this._statements.length - 1];
              return (
                "ExpressionStatement" !== t.type &&
                  ((0, a().default)(this._resultName),
                  (t = r().expressionStatement(this._resultName)),
                  this._statements.push(t)),
                (this._statements[
                  this._statements.length - 1
                ] = r().variableDeclaration("var", [
                  r().variableDeclarator(e, t.expression),
                ])),
                (this._resultName = r().cloneNode(e)),
                this
              );
            }),
            (t.defaultInterop = function() {
              return this._interop(
                this._hub.addHelper("interopRequireDefault")
              );
            }),
            (t.wildcardInterop = function() {
              return this._interop(
                this._hub.addHelper("interopRequireWildcard")
              );
            }),
            (t._interop = function(e) {
              var t = this._statements[this._statements.length - 1];
              return (
                "ExpressionStatement" === t.type
                  ? (t.expression = r().callExpression(e, [t.expression]))
                  : "VariableDeclaration" === t.type
                    ? ((0, a().default)(1 === t.declarations.length),
                      (t.declarations[0].init = r().callExpression(e, [
                        t.declarations[0].init,
                      ])))
                    : a().default.fail("Unexpected type."),
                this
              );
            }),
            (t.prop = function(e) {
              var t = this._statements[this._statements.length - 1];
              return (
                "ExpressionStatement" === t.type
                  ? (t.expression = r().memberExpression(
                      t.expression,
                      r().identifier(e)
                    ))
                  : "VariableDeclaration" === t.type
                    ? ((0, a().default)(1 === t.declarations.length),
                      (t.declarations[0].init = r().memberExpression(
                        t.declarations[0].init,
                        r().identifier(e)
                      )))
                    : a().default.fail("Unexpected type:" + t.type),
                this
              );
            }),
            (t.read = function(e) {
              this._resultName = r().memberExpression(
                this._resultName,
                r().identifier(e)
              );
            }),
            e
          );
        })();
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = r(n(232));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = r(n(219));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = n(3);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var u = r(n(521));
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        var s = (0, a().declare)(function(e) {
          e.assertVersion(7);
          var n = {
              Function: function(e) {
                e.skip();
              },
              YieldExpression: function(e, t) {
                var n = e.node;
                if (n.delegate) {
                  var a = t.addHelper("asyncGeneratorDelegate");
                  n.argument = d().types.callExpression(a, [
                    d().types.callExpression(t.addHelper("asyncIterator"), [
                      n.argument,
                    ]),
                    t.addHelper("awaitAsyncGenerator"),
                  ]);
                }
              },
            },
            a = {
              Function: function(e) {
                e.skip();
              },
              ForOfStatement: function(e, t) {
                var n = t.file,
                  a = e.node;
                if (a.await) {
                  var r = (0, u.default)(e, {
                      getAsyncIterator: n.addHelper("asyncIterator"),
                    }),
                    i = r.declar,
                    o = r.loop,
                    s = o.body;
                  e.ensureBlock(),
                    i && s.body.push(i),
                    (s.body = s.body.concat(a.body.body)),
                    d().types.inherits(o, a),
                    d().types.inherits(o.body, a.body),
                    r.replaceParent
                      ? e.parentPath.replaceWithMultiple(r.node)
                      : e.replaceWithMultiple(r.node);
                }
              },
            },
            r = {
              Function: function(e, t) {
                e.node.async &&
                  (e.traverse(a, t),
                  e.node.generator &&
                    (e.traverse(n, t),
                    (0, i().default)(e, {
                      wrapAsync: t.addHelper("wrapAsyncGenerator"),
                      wrapAwait: t.addHelper("awaitAsyncGenerator"),
                    })));
              },
            };
          return {
            inherits: o().default,
            visitor: {
              Program: function(e, t) {
                e.traverse(r, t);
              },
            },
          };
        });
        t.default = s;
      },
      function(e, t, n) {
        "use strict";
        function f() {
          var e = n(3);
          return (
            (f = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n,
              a = t.getAsyncIterator,
              r = e.node,
              i = e.scope,
              o = e.parent,
              s = i.generateUidIdentifier("step"),
              d = i.generateUidIdentifier("value"),
              u = r.left;
            f().types.isIdentifier(u) ||
            f().types.isPattern(u) ||
            f().types.isMemberExpression(u)
              ? (n = f().types.expressionStatement(
                  f().types.assignmentExpression("=", u, d)
                ))
              : f().types.isVariableDeclaration(u) &&
                (n = f().types.variableDeclaration(u.kind, [
                  f().types.variableDeclarator(u.declarations[0].id, d),
                ]));
            var l = h({
              ITERATOR_HAD_ERROR_KEY: i.generateUidIdentifier(
                "didIteratorError"
              ),
              ITERATOR_COMPLETION: i.generateUidIdentifier(
                "iteratorNormalCompletion"
              ),
              ITERATOR_ERROR_KEY: i.generateUidIdentifier("iteratorError"),
              ITERATOR_KEY: i.generateUidIdentifier("iterator"),
              GET_ITERATOR: a,
              OBJECT: r.right,
              STEP_VALUE: d,
              STEP_KEY: s,
            });
            l = l.body.body;
            var c = f().types.isLabeledStatement(o),
              p = l[3].block.body,
              g = p[0];
            return (
              c && (p[0] = f().types.labeledStatement(o.label, g)),
              { replaceParent: c, node: l, declar: n, loop: g }
            );
          });
        var h = (0, f().template)(
          "\n  async function wrapper() {\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY;\n    try {\n      for (\n        var ITERATOR_KEY = GET_ITERATOR(OBJECT), STEP_KEY, STEP_VALUE;\n        (\n          STEP_KEY = await ITERATOR_KEY.next(),\n          ITERATOR_COMPLETION = STEP_KEY.done,\n          STEP_VALUE = await STEP_KEY.value,\n          !ITERATOR_COMPLETION\n        );\n        ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return != null) {\n          await ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  }\n"
        );
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0),
          (t.default = {});
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = n(3);
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var a = (0, l().template)(
            "\n  DECORATOR(CLASS_REF = INNER) || CLASS_REF;\n"
          ),
          c = (0, l().template)("\n  CLASS_REF.prototype;\n"),
          p = (0, l().template)(
            "\n    Object.getOwnPropertyDescriptor(TARGET, PROPERTY);\n"
          ),
          g = (0, l().template)(
            "\n    (TEMP = Object.getOwnPropertyDescriptor(TARGET, PROPERTY), (TEMP = TEMP ? TEMP.value : undefined), {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        initializer: function(){\n            return TEMP;\n        }\n    })\n"
          ),
          f = new WeakSet();
        function r(a) {
          var e = (a.isClass()
            ? [a].concat(a.get("body.body"))
            : a.get("properties")
          )
            .reduce(function(e, t) {
              return e.concat(t.node.decorators || []);
            }, [])
            .filter(function(e) {
              return !l().types.isIdentifier(e.expression);
            });
          if (0 !== e.length)
            return l().types.sequenceExpression(
              e
                .map(function(e) {
                  var t = e.expression,
                    n = (e.expression = a.scope.generateDeclaredUidIdentifier(
                      "dec"
                    ));
                  return l().types.assignmentExpression("=", n, t);
                })
                .concat([a.node])
            );
        }
        function i(e) {
          return !(!e.decorators || !e.decorators.length);
        }
        function o(e) {
          return e.some(function(e) {
            return e.decorators && e.decorators.length;
          });
        }
        function s(s, d, e) {
          var u = s.scope.generateDeclaredUidIdentifier(
              s.isClass() ? "class" : "obj"
            ),
            t = e.reduce(function(e, t) {
              var n = t.decorators || [];
              if (((t.decorators = null), 0 === n.length)) return e;
              if (t.computed)
                throw s.buildCodeFrameError(
                  "Computed method/property decorators are not yet supported."
                );
              var a = l().types.isLiteral(t.key)
                  ? t.key
                  : l().types.stringLiteral(t.key.name),
                r =
                  s.isClass() && !t.static ? c({ CLASS_REF: u }).expression : u;
              if (l().types.isClassProperty(t, { static: !1 })) {
                var i = s.scope.generateDeclaredUidIdentifier("descriptor"),
                  o = t.value
                    ? l().types.functionExpression(
                        null,
                        [],
                        l().types.blockStatement([
                          l().types.returnStatement(t.value),
                        ])
                      )
                    : l().types.nullLiteral();
                (t.value = l().types.callExpression(
                  d.addHelper("initializerWarningHelper"),
                  [i, l().types.thisExpression()]
                )),
                  f.add(t.value),
                  (e = e.concat([
                    l().types.assignmentExpression(
                      "=",
                      i,
                      l().types.callExpression(
                        d.addHelper("applyDecoratedDescriptor"),
                        [
                          l().types.cloneNode(r),
                          l().types.cloneNode(a),
                          l().types.arrayExpression(
                            n.map(function(e) {
                              return l().types.cloneNode(e.expression);
                            })
                          ),
                          l().types.objectExpression([
                            l().types.objectProperty(
                              l().types.identifier("configurable"),
                              l().types.booleanLiteral(!0)
                            ),
                            l().types.objectProperty(
                              l().types.identifier("enumerable"),
                              l().types.booleanLiteral(!0)
                            ),
                            l().types.objectProperty(
                              l().types.identifier("writable"),
                              l().types.booleanLiteral(!0)
                            ),
                            l().types.objectProperty(
                              l().types.identifier("initializer"),
                              o
                            ),
                          ]),
                        ]
                      )
                    ),
                  ]));
              } else
                e = e.concat(
                  l().types.callExpression(
                    d.addHelper("applyDecoratedDescriptor"),
                    [
                      l().types.cloneNode(r),
                      l().types.cloneNode(a),
                      l().types.arrayExpression(
                        n.map(function(e) {
                          return l().types.cloneNode(e.expression);
                        })
                      ),
                      l().types.isObjectProperty(t) ||
                      l().types.isClassProperty(t, { static: !0 })
                        ? g({
                            TEMP: s.scope.generateDeclaredUidIdentifier("init"),
                            TARGET: l().types.cloneNode(r),
                            PROPERTY: l().types.cloneNode(a),
                          }).expression
                        : p({
                            TARGET: l().types.cloneNode(r),
                            PROPERTY: l().types.cloneNode(a),
                          }).expression,
                      l().types.cloneNode(r),
                    ]
                  )
                );
              return e;
            }, []);
          return l().types.sequenceExpression([
            l().types.assignmentExpression("=", l().types.cloneNode(u), s.node),
            l().types.sequenceExpression(t),
            l().types.cloneNode(u),
          ]);
        }
        function d(e) {
          var t = e.node,
            n = e.scope;
          if (i(t) || o(t.body.body)) {
            var a = t.id
              ? l().types.cloneNode(t.id)
              : n.generateUidIdentifier("class");
            return l().types.variableDeclaration("let", [
              l().types.variableDeclarator(a, l().types.toExpression(t)),
            ]);
          }
        }
        var u = {
          ExportDefaultDeclaration: function(e) {
            var t = e.get("declaration");
            if (t.isClassDeclaration()) {
              var n = d(t);
              n &&
                e.replaceWithMultiple([
                  n,
                  l().types.exportNamedDeclaration(null, [
                    l().types.exportSpecifier(
                      l().types.cloneNode(n.declarations[0].id),
                      l().types.identifier("default")
                    ),
                  ]),
                ]);
            }
          },
          ClassDeclaration: function(e) {
            var t = d(e);
            if (t) {
              e.replaceWith(t);
              var n = e.get("declarations.0");
              e.scope.updateOwnBinding(n.node.id, e.node.kind, n);
            }
          },
          ClassExpression: function(e, t) {
            var n =
              r(e) ||
              (function(e) {
                if (i(e.node)) {
                  var t = e.node.decorators || [];
                  e.node.decorators = null;
                  var n = e.scope.generateDeclaredUidIdentifier("class");
                  return t
                    .map(function(e) {
                      return e.expression;
                    })
                    .reverse()
                    .reduce(function(e, t) {
                      return a({
                        CLASS_REF: l().types.cloneNode(n),
                        DECORATOR: l().types.cloneNode(t),
                        INNER: e,
                      }).expression;
                    }, e.node);
                }
              })(e) ||
              (function(e, t) {
                if (o(e.node.body.body)) return s(e, t, e.node.body.body);
              })(e, t);
            n && e.replaceWith(n);
          },
          ObjectExpression: function(e, t) {
            var n =
              r(e) ||
              (function(e, t) {
                if (o(e.node.properties)) return s(e, t, e.node.properties);
              })(e, t);
            n && e.replaceWith(n);
          },
          AssignmentExpression: function(e, t) {
            f.has(e.node.right) &&
              e.replaceWith(
                l().types.callExpression(
                  t.addHelper("initializerDefineProperty"),
                  [
                    l().types.cloneNode(e.get("left.object").node),
                    l().types.stringLiteral(e.get("left.property").node.name),
                    l().types.cloneNode(e.get("right.arguments")[0].node),
                    l().types.cloneNode(e.get("right.arguments")[1].node),
                  ]
                )
              );
          },
        };
        t.default = u;
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = n(3);
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function c(e, t) {
          return l().types.callExpression(t.addHelper("temporalRef"), [
            e,
            l().types.stringLiteral(e.name),
          ]);
        }
        function p(e, t, n) {
          var a = n.letReferences[e.name];
          return !!a && t.getBindingIdentifier(e.name) === a;
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.visitor = void 0);
        var a = {
          ReferencedIdentifier: function(e, t) {
            if (t.tdzEnabled) {
              var n = e.node,
                a = e.parent,
                r = e.scope;
              if (!e.parentPath.isFor({ left: n }) && p(n, r, t)) {
                var i = r.getBinding(n.name).path;
                if (!i.isFunctionDeclaration()) {
                  var o = ((d = e),
                  "before" === (u = i._guessExecutionStatusRelativeTo(d))
                    ? "inside"
                    : "after" === u
                      ? "outside"
                      : "maybe");
                  if ("inside" !== o)
                    if ("maybe" === o) {
                      var s = c(n, t);
                      if (
                        ((i.parent._tdzThis = !0),
                        e.skip(),
                        e.parentPath.isUpdateExpression())
                      ) {
                        if (a._ignoreBlockScopingTDZ) return;
                        e.parentPath.replaceWith(
                          l().types.sequenceExpression([s, a])
                        );
                      } else e.replaceWith(s);
                    } else
                      "outside" === o &&
                        e.replaceWith(
                          l().types.throwStatement(
                            l().types.inherits(
                              l().types.newExpression(
                                l().types.identifier("ReferenceError"),
                                [
                                  l().types.stringLiteral(
                                    n.name +
                                      " is not defined - temporal dead zone"
                                  ),
                                ]
                              ),
                              n
                            )
                          )
                        );
                }
              }
            }
            var d, u;
          },
          AssignmentExpression: {
            exit: function(e, t) {
              if (t.tdzEnabled) {
                var n = e.node;
                if (!n._ignoreBlockScopingTDZ) {
                  var a = [],
                    r = e.getBindingIdentifiers();
                  for (var i in r) {
                    var o = r[i];
                    p(o, e.scope, t) && a.push(c(o, t));
                  }
                  a.length &&
                    ((n._ignoreBlockScopingTDZ = !0),
                    a.push(n),
                    e.replaceWithMultiple(
                      a.map(l().types.expressionStatement)
                    ));
                }
              }
            },
          },
        };
        t.visitor = a;
      },
      function(e, t, n) {
        e.exports = n(526);
      },
      function(e, t, n) {
        var a = n(35),
          r = n(527),
          i = n(46),
          o = r(function(e, t) {
            a(t, i(t), e);
          });
        e.exports = o;
      },
      function(e, t, n) {
        var a = n(51),
          d = n(39);
        e.exports = function(s) {
          return a(function(e, t) {
            var n = -1,
              a = t.length,
              r = 1 < a ? t[a - 1] : void 0,
              i = 2 < a ? t[2] : void 0;
            for (
              r = 3 < s.length && "function" == typeof r ? (a--, r) : void 0,
                i && d(t[0], t[1], i) && ((r = a < 3 ? void 0 : r), (a = 1)),
                e = Object(e);
              ++n < a;

            ) {
              var o = t[n];
              o && s(e, o, n, r);
            }
            return e;
          });
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function P() {
          var e = r()([
            "\n        (function () {\n          super(...arguments);\n        })\n      ",
          ]);
          return (
            (P = function() {
              return e;
            }),
            e
          );
        }
        function D() {
          var e = o(n(23));
          return (
            (D = function() {
              return e;
            }),
            e
          );
        }
        function O() {
          var e = i(n(96));
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e = o(n(97));
          return (
            (F = function() {
              return e;
            }),
            e
          );
        }
        function k() {
          var e = i(n(237));
          return (
            (k = function() {
              return e;
            }),
            e
          );
        }
        function j() {
          var e = n(3);
          return (
            (j = function() {
              return e;
            }),
            e
          );
        }
        function i(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        }
        function o(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = function(e, t, n, a) {
            var C = {
                parent: void 0,
                scope: void 0,
                node: void 0,
                path: void 0,
                file: void 0,
                classId: void 0,
                classRef: void 0,
                superName: void 0,
                superReturns: [],
                isDerived: !1,
                extendsNative: !1,
                construct: void 0,
                constructorBody: void 0,
                userConstructor: void 0,
                userConstructorPath: void 0,
                hasConstructor: !1,
                instancePropBody: [],
                instancePropRefs: {},
                staticPropBody: [],
                body: [],
                bareSupers: new Set(),
                superThises: [],
                pushedConstructor: !1,
                pushedInherits: !1,
                protoAlias: null,
                isLoose: !1,
                hasInstanceDescriptors: !1,
                hasStaticDescriptors: !1,
                instanceMutatorMap: {},
                staticMutatorMap: {},
              },
              S = function(e) {
                Object.assign(C, e);
              },
              w = j().traverse.visitors.merge([
                O().environmentVisitor,
                {
                  ThisExpression: function(e) {
                    C.superThises.push(e);
                  },
                },
              ]);
            function _() {
              o();
              var e,
                t,
                n = C.body;
              if (
                (C.hasInstanceDescriptors &&
                  (e = k().toClassObject(C.instanceMutatorMap)),
                C.hasStaticDescriptors &&
                  (t = k().toClassObject(C.staticMutatorMap)),
                e || t)
              ) {
                e && (e = k().toComputedObjectFromClass(e)),
                  t && (t = k().toComputedObjectFromClass(t));
                var a = [
                  j().types.cloneNode(C.classRef),
                  j().types.nullLiteral(),
                  j().types.nullLiteral(),
                ];
                e && (a[1] = e), t && (a[2] = t);
                for (var r = 0, i = 0; i < a.length; i++)
                  j().types.isNullLiteral(a[i]) || (r = i);
                (a = a.slice(0, r + 1)),
                  n.push(
                    j().types.expressionStatement(
                      j().types.callExpression(
                        C.file.addHelper("createClass"),
                        a
                      )
                    )
                  );
              }
              S({
                hasInstanceDescriptors: !1,
                hasStaticDescriptors: !1,
                instanceMutatorMap: {},
                staticMutatorMap: {},
              });
            }
            function T(e, t, n) {
              n.scope.hasOwnBinding(C.classRef.name) &&
                n.scope.rename(C.classRef.name),
                S({
                  userConstructorPath: n,
                  userConstructor: t,
                  hasConstructor: !0,
                  bareSupers: e.bareSupers,
                  superReturns: e.returns,
                });
              var a = C.construct;
              j().types.inheritsComments(a, t),
                (a.params = t.params),
                j().types.inherits(a.body, t.body),
                (a.body.directives = t.body.directives),
                C.pushedConstructor ||
                  ((C.pushedConstructor = !0),
                  (C.hasInstanceDescriptors || C.hasStaticDescriptors) && _(),
                  C.body.push(C.construct),
                  o());
            }
            function o() {
              C.isDerived &&
                !C.pushedInherits &&
                (S({ pushedInherits: !0 }),
                C.body.unshift(
                  j().types.expressionStatement(
                    j().types.callExpression(
                      C.file.addHelper(
                        C.isLoose ? "inheritsLoose" : "inherits"
                      ),
                      [
                        j().types.cloneNode(C.classRef),
                        j().types.cloneNode(C.superName),
                      ]
                    )
                  )
                ));
            }
            return (function(e, t, n, a) {
              S({
                parent: e.parent,
                scope: e.scope,
                node: e.node,
                path: e,
                file: t,
                isLoose: a,
              }),
                S({
                  classId: C.node.id,
                  classRef: C.node.id
                    ? j().types.identifier(C.node.id.name)
                    : C.scope.generateUidIdentifier("class"),
                  superName: C.node.superClass,
                  isDerived: !!C.node.superClass,
                  constructorBody: j().types.blockStatement([]),
                }),
                S({
                  extendsNative:
                    C.isDerived &&
                    n.has(C.superName.name) &&
                    !C.scope.hasBinding(C.superName.name, !0),
                });
              var r,
                i,
                o,
                s,
                d = C.classRef,
                u = C.node,
                l = C.constructorBody;
              S({
                construct: ((r = d),
                (i = l),
                (o = u),
                (s = j().types.functionDeclaration(
                  j().types.cloneNode(r),
                  [],
                  i
                )),
                j().types.inherits(s, o),
                s),
              });
              var c = C.body,
                p = (function() {
                  var e = C.superName,
                    t = [],
                    n = [];
                  if (C.isDerived) {
                    var a = C.extendsNative
                        ? j().types.callExpression(
                            C.file.addHelper("wrapNativeSuper"),
                            [j().types.cloneNode(e)]
                          )
                        : j().types.cloneNode(e),
                      r = C.scope.generateUidIdentifierBasedOnNode(e);
                    t.push(r),
                      n.push(a),
                      S({ superName: j().types.cloneNode(r) });
                  }
                  return { closureParams: t, closureArgs: n };
                })(),
                g = p.closureParams,
                f = p.closureArgs;
              (function() {
                if (
                  ((function() {
                    var e,
                      t,
                      n = !1,
                      a = C.path.get("body.body"),
                      r = Array.isArray(a),
                      i = 0;
                    for (a = r ? a : a[Symbol.iterator](); ; ) {
                      var o;
                      if (r) {
                        if (i >= a.length) break;
                        o = a[i++];
                      } else {
                        if ((i = a.next()).done) break;
                        o = i.value;
                      }
                      if ((n = o.equals("kind", "constructor"))) break;
                    }
                    if (!n) {
                      if (C.isDerived) {
                        var s = j().template.expression.ast(P());
                        (e = s.params), (t = s.body);
                      } else (e = []), (t = j().types.blockStatement([]));
                      C.path
                        .get("body")
                        .unshiftContainer(
                          "body",
                          j().types.classMethod(
                            "constructor",
                            j().types.identifier("constructor"),
                            e,
                            t
                          )
                        );
                    }
                  })(),
                  (function() {
                    var e,
                      t,
                      n,
                      a,
                      r,
                      i,
                      o,
                      s = C.path.get("body.body"),
                      d = Array.isArray(s),
                      u = 0;
                    for (s = d ? s : s[Symbol.iterator](); ; ) {
                      var l;
                      if (d) {
                        if (u >= s.length) break;
                        l = s[u++];
                      } else {
                        if ((u = s.next()).done) break;
                        l = u.value;
                      }
                      var c = l,
                        p = c.node;
                      if (c.isClassProperty())
                        throw c.buildCodeFrameError(
                          "Missing class properties transform."
                        );
                      if (p.decorators)
                        throw c.buildCodeFrameError(
                          "Method has decorators, put the decorator plugin before the classes one."
                        );
                      if (j().types.isClassMethod(p)) {
                        var g = "constructor" === p.kind;
                        g &&
                          c.traverse(M, {
                            isDerived: C.isDerived,
                            file: C.file,
                          }),
                          new (O()).default({
                            methodPath: c,
                            objectRef: C.classRef,
                            superRef: C.superName,
                            isLoose: C.isLoose,
                            file: C.file,
                          }).replace();
                        var f = { returns: [], bareSupers: new Set() };
                        c.traverse(
                          j().traverse.visitors.merge([
                            O().environmentVisitor,
                            {
                              ReturnStatement: function(e, t) {
                                e
                                  .getFunctionParent()
                                  .isArrowFunctionExpression() ||
                                  t.returns.push(e);
                              },
                              Super: function(e, t) {
                                var n = e.node,
                                  a = e.parentPath;
                                a.isCallExpression({ callee: n }) &&
                                  t.bareSupers.add(a);
                              },
                            },
                          ]),
                          f
                        ),
                          g
                            ? T(f, p, c)
                            : ((r = p),
                              (o = (i = c) ? i.scope : C.scope),
                              ("method" === r.kind &&
                                (function(e, t) {
                                  if (!C.isLoose || e.decorators) return !1;
                                  var n = C.classRef;
                                  e.static ||
                                    ((function() {
                                      if (null === C.protoAlias) {
                                        S({
                                          protoAlias: C.scope.generateUidIdentifier(
                                            "proto"
                                          ),
                                        });
                                        var e = j().types.memberExpression(
                                            C.classRef,
                                            j().types.identifier("prototype")
                                          ),
                                          t = j().types.variableDeclaration(
                                            "var",
                                            [
                                              j().types.variableDeclarator(
                                                C.protoAlias,
                                                e
                                              ),
                                            ]
                                          );
                                        C.body.push(t);
                                      }
                                    })(),
                                    (n = C.protoAlias));
                                  var a = j().types.memberExpression(
                                      j().types.cloneNode(n),
                                      e.key,
                                      e.computed || j().types.isLiteral(e.key)
                                    ),
                                    r = j().types.functionExpression(
                                      null,
                                      e.params,
                                      e.body,
                                      e.generator,
                                      e.async
                                    );
                                  r.returnType = e.returnType;
                                  var i = j().types.toComputedKey(e, e.key);
                                  j().types.isStringLiteral(i) &&
                                    (r = (0, D().default)({
                                      node: r,
                                      id: i,
                                      scope: t,
                                    }));
                                  var o = j().types.expressionStatement(
                                    j().types.assignmentExpression("=", a, r)
                                  );
                                  return (
                                    j().types.inheritsComments(o, e),
                                    C.body.push(o),
                                    !0
                                  );
                                })(r, o)) ||
                                ((n = o),
                                (a = void 0) === (t = null) && (t = "value"),
                                (a = (e = r).static
                                  ? (S({ hasStaticDescriptors: !0 }),
                                    C.staticMutatorMap)
                                  : (S({ hasInstanceDescriptors: !0 }),
                                    C.instanceMutatorMap)),
                                k().push(a, e, t, C.file, n)));
                      }
                    }
                  })(),
                  (function() {
                    if (C.isDerived) {
                      var e,
                        t,
                        n,
                        a,
                        r,
                        i,
                        o = C.userConstructorPath,
                        s = o.get("body");
                      o.traverse(w);
                      var d,
                        u = !!C.bareSupers.size,
                        l = function() {
                          var e = o.scope.generateDeclaredUidIdentifier("this");
                          return (
                            (l = function() {
                              return j().types.cloneNode(e);
                            }),
                            e
                          );
                        },
                        c = C.bareSupers,
                        p = Array.isArray(c),
                        g = 0;
                      for (c = p ? c : c[Symbol.iterator](); ; ) {
                        var f;
                        if (p) {
                          if (g >= c.length) break;
                          f = c[g++];
                        } else {
                          if ((g = c.next()).done) break;
                          f = g.value;
                        }
                        var h = f;
                        (e = h),
                          (t = C.superName),
                          (n = l),
                          (a = s),
                          (i = r = void 0),
                          (i = e.node),
                          (r = C.isLoose
                            ? (i.arguments.unshift(j().types.thisExpression()),
                              2 === i.arguments.length &&
                              j().types.isSpreadElement(i.arguments[1]) &&
                              j().types.isIdentifier(i.arguments[1].argument, {
                                name: "arguments",
                              })
                                ? ((i.arguments[1] = i.arguments[1].argument),
                                  (i.callee = j().types.memberExpression(
                                    j().types.cloneNode(t),
                                    j().types.identifier("apply")
                                  )))
                                : (i.callee = j().types.memberExpression(
                                    j().types.cloneNode(t),
                                    j().types.identifier("call")
                                  )),
                              j().types.logicalExpression(
                                "||",
                                i,
                                j().types.thisExpression()
                              ))
                            : ((i = (0, F().default)(
                                j().types.callExpression(
                                  C.file.addHelper("getPrototypeOf"),
                                  [j().types.cloneNode(C.classRef)]
                                ),
                                j().types.thisExpression(),
                                i.arguments
                              )),
                              j().types.callExpression(
                                C.file.addHelper("possibleConstructorReturn"),
                                [j().types.thisExpression(), i]
                              ))),
                          e.parentPath.isExpressionStatement() &&
                          e.parentPath.container === a.node.body &&
                          a.node.body.length - 1 === e.parentPath.key
                            ? (C.superThises.length &&
                                (r = j().types.assignmentExpression(
                                  "=",
                                  n(),
                                  r
                                )),
                              e.parentPath.replaceWith(
                                j().types.returnStatement(r)
                              ))
                            : e.replaceWith(
                                j().types.assignmentExpression("=", n(), r)
                              ),
                          u &&
                            h.find(function(e) {
                              return (
                                e === o ||
                                (e.isLoop() ||
                                e.isConditional() ||
                                e.isArrowFunctionExpression()
                                  ? !(u = !1)
                                  : void 0)
                              );
                            });
                      }
                      var R = C.superThises,
                        y = Array.isArray(R),
                        m = 0;
                      for (R = y ? R : R[Symbol.iterator](); ; ) {
                        var v;
                        if (y) {
                          if (m >= R.length) break;
                          v = R[m++];
                        } else {
                          if ((m = R.next()).done) break;
                          v = m.value;
                        }
                        var b = v,
                          E = b.node;
                        b.parentPath.isMemberExpression({ object: E })
                          ? b.replaceWith(l())
                          : b.replaceWith(
                              j().types.callExpression(
                                C.file.addHelper("assertThisInitialized"),
                                [l()]
                              )
                            );
                      }
                      d = C.isLoose
                        ? function(e) {
                            var t = j().types.callExpression(
                              C.file.addHelper("assertThisInitialized"),
                              [l()]
                            );
                            return e
                              ? j().types.logicalExpression("||", e, t)
                              : t;
                          }
                        : function(e) {
                            return j().types.callExpression(
                              C.file.addHelper("possibleConstructorReturn"),
                              [l()].concat(e || [])
                            );
                          };
                      var x = s.get("body");
                      (x.length && x.pop().isReturnStatement()) ||
                        s.pushContainer(
                          "body",
                          j().types.returnStatement(u ? l() : d())
                        );
                      var A = C.superReturns,
                        S = Array.isArray(A),
                        _ = 0;
                      for (A = S ? A : A[Symbol.iterator](); ; ) {
                        var T;
                        if (S) {
                          if (_ >= A.length) break;
                          T = A[_++];
                        } else {
                          if ((_ = A.next()).done) break;
                          T = _.value;
                        }
                        var P = T;
                        P.get("argument").replaceWith(d(P.node.argument));
                      }
                    }
                  })(),
                  C.userConstructor)
                ) {
                  var e = C.constructorBody,
                    t = C.userConstructor,
                    n = C.construct;
                  (e.body = e.body.concat(t.body.body)),
                    j().types.inherits(n, t),
                    j().types.inherits(e, t.body);
                }
                _();
              })(),
                C.isLoose ||
                  l.body.unshift(
                    j().types.expressionStatement(
                      j().types.callExpression(
                        C.file.addHelper("classCallCheck"),
                        [
                          j().types.thisExpression(),
                          j().types.cloneNode(C.classRef),
                        ]
                      )
                    )
                  ),
                (c = c.concat(
                  C.staticPropBody.map(function(e) {
                    return e(j().types.cloneNode(C.classRef));
                  })
                ));
              var h = e.isInStrictMode(),
                R = C.classId && 1 === c.length;
              if (R && !h) {
                var y = C.construct.params,
                  m = Array.isArray(y),
                  v = 0;
                for (y = m ? y : y[Symbol.iterator](); ; ) {
                  var b;
                  if (m) {
                    if (v >= y.length) break;
                    b = y[v++];
                  } else {
                    if ((v = y.next()).done) break;
                    b = v.value;
                  }
                  var E = b;
                  if (!j().types.isIdentifier(E)) {
                    R = !1;
                    break;
                  }
                }
              }
              var x = R ? c[0].body.directives : [];
              if (
                (h ||
                  x.push(
                    j().types.directive(
                      j().types.directiveLiteral("use strict")
                    )
                  ),
                R)
              )
                return j().types.toExpression(c[0]);
              c.push(
                j().types.returnStatement(j().types.cloneNode(C.classRef))
              );
              var A = j().types.arrowFunctionExpression(
                g,
                j().types.blockStatement(c, x)
              );
              return j().types.callExpression(A, f);
            })(e, t, n, a);
          });
        var M = j().traverse.visitors.merge([
          O().environmentVisitor,
          {
            Super: function(e, t) {
              if (!t.isDerived) {
                var n = e.node;
                if (e.parentPath.isCallExpression({ callee: n }))
                  throw e.buildCodeFrameError(
                    "super() is only allowed in a derived constructor"
                  );
              }
            },
            ThisExpression: function(e, t) {
              if (t.isDerived) {
                var n = e.node;
                if (!e.parentPath.isMemberExpression({ object: n })) {
                  var a = j().types.callExpression(
                    t.file.addHelper("assertThisInitialized"),
                    [n]
                  );
                  e.replaceWith(a), e.skip();
                }
              }
            },
          },
        ]);
      },
      function(e, t, n) {
        var a = n(530),
          r = n(211);
        e.exports = function(e, t) {
          return null != e && r(e, t, a);
        };
      },
      function(e, t) {
        var n = Object.prototype.hasOwnProperty;
        e.exports = function(e, t) {
          return null != e && n.call(e, t);
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(98)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(60));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                RegExpLiteral: function(e) {
                  var t = e.node;
                  i().is(t, "s") &&
                    ((t.pattern = (0, r().default)(t.pattern, t.flags, {
                      dotAllFlag: !0,
                      useUnicodeFlag: i().is(t, "u"),
                    })),
                    i().pullFlag(t, "s"));
                },
              },
            }
          );
        });
        t.default = o;
      },
      function(e, y, m) {
        (function(f, h) {
          var R;
          (function() {
            "use strict";
            var e = { function: !0, object: !0 },
              t = (e[typeof window] && window) || this,
              n = e[typeof y] && y && !y.nodeType && y,
              a = e[typeof f] && f && !f.nodeType,
              r = n && a && "object" == typeof h && h;
            !r || (r.global !== r && r.window !== r && r.self !== r) || (t = r);
            var i = Object.prototype.hasOwnProperty;
            function o() {
              var e = Number(arguments[0]);
              if (!isFinite(e) || e < 0 || 1114111 < e || Math.floor(e) != e)
                throw RangeError("Invalid code point: " + e);
              if (e <= 65535) return String.fromCharCode(e);
              var t = 55296 + ((e -= 65536) >> 10),
                n = (e % 1024) + 56320;
              return String.fromCharCode(t, n);
            }
            var s = {};
            function d(e, t) {
              if (-1 == t.indexOf("|")) {
                if (e == t) return;
                throw Error(
                  "Invalid node type: " + e + "; expected type: " + t
                );
              }
              if (
                !(t = i.call(s, t)
                  ? s[t]
                  : (s[t] = RegExp("^(?:" + t + ")$"))).test(e)
              )
                throw Error(
                  "Invalid node type: " + e + "; expected types: " + t
                );
            }
            function u(e) {
              var t = e.type;
              if (i.call(p, t)) return p[t](e);
              throw Error("Invalid node type: " + t);
            }
            function l(e) {
              return (
                d(
                  e.type,
                  "anchor|characterClassEscape|characterClassRange|dot|value"
                ),
                u(e)
              );
            }
            function c(e) {
              return d(e.type, "identifier"), e.value;
            }
            var p = {
                alternative: function(e) {
                  d(e.type, "alternative");
                  for (var t = e.body, n = -1, a = t.length, r = ""; ++n < a; )
                    r += (d(
                      (i = t[n]).type,
                      "anchor|characterClass|characterClassEscape|empty|group|quantifier|reference|unicodePropertyEscape|value"
                    ),
                    u(i));
                  var i;
                  return r;
                },
                anchor: function(e) {
                  switch ((d(e.type, "anchor"), e.kind)) {
                    case "start":
                      return "^";
                    case "end":
                      return "$";
                    case "boundary":
                      return "\\b";
                    case "not-boundary":
                      return "\\B";
                    default:
                      throw Error("Invalid assertion");
                  }
                },
                characterClass: function(e) {
                  d(e.type, "characterClass");
                  var t = e.body,
                    n = -1,
                    a = t.length,
                    r = "";
                  for (e.negative && (r += "^"); ++n < a; ) r += l(t[n]);
                  return "[" + r + "]";
                },
                characterClassEscape: function(e) {
                  return d(e.type, "characterClassEscape"), "\\" + e.value;
                },
                characterClassRange: function(e) {
                  d(e.type, "characterClassRange");
                  var t = e.min,
                    n = e.max;
                  if (
                    "characterClassRange" == t.type ||
                    "characterClassRange" == n.type
                  )
                    throw Error("Invalid character class range");
                  return l(t) + "-" + l(n);
                },
                unicodePropertyEscape: function(e) {
                  return (
                    d(e.type, "unicodePropertyEscape"),
                    "\\" + (e.negative ? "P" : "p") + "{" + e.value + "}"
                  );
                },
                disjunction: function(e) {
                  d(e.type, "disjunction");
                  for (var t = e.body, n = -1, a = t.length, r = ""; ++n < a; )
                    0 != n && (r += "|"), (r += u(t[n]));
                  return r;
                },
                dot: function(e) {
                  return d(e.type, "dot"), ".";
                },
                group: function(e) {
                  d(e.type, "group");
                  var t = "";
                  switch (e.behavior) {
                    case "normal":
                      e.name && (t += "?<" + c(e.name) + ">");
                      break;
                    case "ignore":
                      t += "?:";
                      break;
                    case "lookahead":
                      t += "?=";
                      break;
                    case "negativeLookahead":
                      t += "?!";
                      break;
                    default:
                      throw Error("Invalid behaviour: " + e.behaviour);
                  }
                  for (var n = e.body, a = -1, r = n.length; ++a < r; )
                    t += u(n[a]);
                  return "(" + t + ")";
                },
                quantifier: function(e) {
                  d(e.type, "quantifier");
                  var t,
                    n = "",
                    a = e.min,
                    r = e.max;
                  return (
                    (n =
                      null == r
                        ? 0 == a
                          ? "*"
                          : 1 == a
                            ? "+"
                            : "{" + a + ",}"
                        : a == r
                          ? "{" + a + "}"
                          : 0 == a && 1 == r
                            ? "?"
                            : "{" + a + "," + r + "}"),
                    e.greedy || (n += "?"),
                    d(
                      (t = e.body[0]).type,
                      "anchor|characterClass|characterClassEscape|dot|group|reference|value"
                    ),
                    u(t) + n
                  );
                },
                reference: function(e) {
                  if ((d(e.type, "reference"), e.matchIndex))
                    return "\\" + e.matchIndex;
                  if (e.name) return "\\k<" + c(e.name) + ">";
                  throw new Error("Unknown reference type");
                },
                value: function(e) {
                  d(e.type, "value");
                  var t = e.kind,
                    n = e.codePoint;
                  if ("number" != typeof n)
                    throw new Error("Invalid code point: " + n);
                  switch (t) {
                    case "controlLetter":
                      return "\\c" + o(n + 64);
                    case "hexadecimalEscape":
                      return (
                        "\\x" + ("00" + n.toString(16).toUpperCase()).slice(-2)
                      );
                    case "identifier":
                      return "\\" + o(n);
                    case "null":
                      return "\\" + n;
                    case "octal":
                      return "\\" + n.toString(8);
                    case "singleEscape":
                      switch (n) {
                        case 8:
                          return "\\b";
                        case 9:
                          return "\\t";
                        case 10:
                          return "\\n";
                        case 11:
                          return "\\v";
                        case 12:
                          return "\\f";
                        case 13:
                          return "\\r";
                        default:
                          throw Error("Invalid code point: " + n);
                      }
                    case "symbol":
                      return o(n);
                    case "unicodeEscape":
                      return (
                        "\\u" +
                        ("0000" + n.toString(16).toUpperCase()).slice(-4)
                      );
                    case "unicodeCodePointEscape":
                      return "\\u{" + n.toString(16).toUpperCase() + "}";
                    default:
                      throw Error("Unsupported node kind: " + t);
                  }
                },
              },
              g = { generate: u };
            void 0 ===
              (R = function() {
                return g;
              }.call(y, m, y, f)) || (f.exports = R),
              (t.regjsgen = g);
          }.call(this));
        }.call(this, m(28)(e), m(21)));
      },
      function(e, t) {
        var s, d, G, n;
        (G =
          String.fromCodePoint ||
          ((s = String.fromCharCode),
          (d = Math.floor),
          function() {
            var e,
              t,
              n = [],
              a = -1,
              r = arguments.length;
            if (!r) return "";
            for (var i = ""; ++a < r; ) {
              var o = Number(arguments[a]);
              if (!isFinite(o) || o < 0 || 1114111 < o || d(o) != o)
                throw RangeError("Invalid code point: " + o);
              o <= 65535
                ? n.push(o)
                : ((e = 55296 + ((o -= 65536) >> 10)),
                  (t = (o % 1024) + 56320),
                  n.push(e, t)),
                (a + 1 == r || 16384 < n.length) &&
                  ((i += s.apply(null, n)), (n.length = 0));
            }
            return i;
          })),
          (n = {
            parse: function(d, e, u) {
              function l(e) {
                return (e.raw = d.substring(e.range[0], e.range[1])), e;
              }
              function c(e, t) {
                return (e.range[0] = t), l(e);
              }
              function p(e, t) {
                return l({ type: "anchor", kind: e, range: [U - t, U] });
              }
              function r(e, t, n, a) {
                return l({
                  type: "value",
                  kind: e,
                  codePoint: t,
                  range: [n, a],
                });
              }
              function i(e, t, n, a) {
                return (a = a || 0), r(e, t, U - (n.length + a), U);
              }
              function g(e) {
                var t,
                  n = e[0],
                  a = n.charCodeAt(0);
                return L &&
                  1 === n.length &&
                  55296 <= a &&
                  a <= 56319 &&
                  56320 <= (t = v().charCodeAt(0)) &&
                  t <= 57343
                  ? r(
                      "symbol",
                      1024 * (a - 55296) + t - 56320 + 65536,
                      ++U - 2,
                      U
                    )
                  : r("symbol", a, U - 1, U);
              }
              function f(e, t, n, a) {
                return (
                  null == a && ((n = U - 1), (a = U)),
                  l({
                    type: "quantifier",
                    min: e,
                    max: t,
                    greedy: !0,
                    body: null,
                    range: [n, a],
                  })
                );
              }
              function h(e, t, n, a) {
                return l({
                  type: "characterClass",
                  body: e,
                  negative: t,
                  range: [n, a],
                });
              }
              function s(e, t, n, a) {
                return (
                  e.codePoint > t.codePoint &&
                    M(
                      "invalid range in character class",
                      e.raw + "-" + t.raw,
                      n,
                      a
                    ),
                  l({
                    type: "characterClassRange",
                    min: e,
                    max: t,
                    range: [n, a],
                  })
                );
              }
              function R(e) {
                return "alternative" === e.type ? e.body : [e];
              }
              function o(e) {
                e = e || 1;
                var t = d.substring(U, U + e);
                return (U += e || 1), t;
              }
              function y(e) {
                m(e) || M("character", e);
              }
              function m(e) {
                if (d.indexOf(e, U) === U) return o(e.length);
              }
              function v() {
                return d[U];
              }
              function b(e) {
                return d.indexOf(e, U) === U;
              }
              function E(e) {
                return d[U + 1] === e;
              }
              function x(e) {
                var t = d.substring(U).match(e);
                return (
                  t &&
                    ((t.range = []),
                    (t.range[0] = U),
                    o(t[0].length),
                    (t.range[1] = U)),
                  t
                );
              }
              function A() {
                var e = [],
                  t = U;
                for (e.push(n()); m("|"); ) e.push(n());
                return 1 === e.length
                  ? e[0]
                  : l({ type: "disjunction", body: e, range: [t, U] });
              }
              function n() {
                for (var e, t = [], n = U; (e = a()); ) t.push(e);
                return 1 === t.length
                  ? t[0]
                  : l({ type: "alternative", body: t, range: [n, U] });
              }
              function a() {
                if (U >= d.length || b("|") || b(")")) return null;
                var e = m("^")
                  ? p("start", 1)
                  : m("$")
                    ? p("end", 1)
                    : m("\\b")
                      ? p("boundary", 2)
                      : m("\\B")
                        ? p("not-boundary", 2)
                        : S("(?=", "lookahead", "(?!", "negativeLookahead");
                if (e) return e;
                var t = (function() {
                  var e, t, n;
                  if ((e = x(/^[^^$\\.*+?(){[|]/))) return g(e);
                  if (m(".")) return l({ type: "dot", range: [U - 1, U] });
                  if (m("\\")) return (e = P()) || M("atomEscape"), e;
                  if (
                    ((n = U),
                    (e = (t = x(/^\[\^/))
                      ? ((t = k()), y("]"), h(t, !0, n, U))
                      : m("[")
                        ? ((t = k()), y("]"), h(t, !1, n, U))
                        : null))
                  )
                    return e;
                  if (u.namedGroups && m("(?<")) {
                    var a = D();
                    y(">");
                    var r = _("normal", a.range[0] - 3);
                    return (r.name = a), r;
                  }
                  return S("(?:", "ignore", "(", "normal");
                })();
                t || M("Expected atom");
                var n,
                  a,
                  r,
                  i,
                  o,
                  s = ((o = U),
                  m("*")
                    ? (a = f(0))
                    : m("+")
                      ? (a = f(1))
                      : m("?")
                        ? (a = f(0, 1))
                        : (n = x(/^\{([0-9]+)\}/))
                          ? (a = f(
                              (r = parseInt(n[1], 10)),
                              r,
                              n.range[0],
                              n.range[1]
                            ))
                          : (n = x(/^\{([0-9]+),\}/))
                            ? (a = f(
                                (r = parseInt(n[1], 10)),
                                void 0,
                                n.range[0],
                                n.range[1]
                              ))
                            : (n = x(/^\{([0-9]+),([0-9]+)\}/)) &&
                              ((r = parseInt(n[1], 10)),
                              (i = parseInt(n[2], 10)) < r &&
                                M(
                                  "numbers out of order in {} quantifier",
                                  "",
                                  o,
                                  U
                                ),
                              (a = f(r, i, n.range[0], n.range[1]))),
                  a && m("?") && ((a.greedy = !1), (a.range[1] += 1)),
                  a || !1);
                return s ? ((s.body = R(t)), c(s, t.range[0]), s) : t;
              }
              function S(e, t, n, a) {
                var r = null,
                  i = U;
                if (m(e)) r = t;
                else {
                  if (!m(n)) return !1;
                  r = a;
                }
                return _(r, i);
              }
              function _(e, t) {
                var n = A();
                n || M("Expected disjunction"), y(")");
                var a = l({
                  type: "group",
                  behavior: e,
                  body: R(n),
                  range: [t, U],
                });
                return "normal" == e && B && N++, a;
              }
              function t(e) {
                var t, n;
                if (
                  L &&
                  "unicodeEscape" == e.kind &&
                  55296 <= (t = e.codePoint) &&
                  t <= 56319 &&
                  b("\\") &&
                  E("u")
                ) {
                  var a = U;
                  U++;
                  var r = T();
                  "unicodeEscape" == r.kind &&
                  56320 <= (n = r.codePoint) &&
                  n <= 57343
                    ? ((e.range[1] = r.range[1]),
                      (e.codePoint = 1024 * (t - 55296) + n - 56320 + 65536),
                      (e.type = "value"),
                      (e.kind = "unicodeCodePointEscape"),
                      l(e))
                    : (U = a);
                }
                return e;
              }
              function T() {
                return P(!0);
              }
              function P(e) {
                var t,
                  n = U;
                if (
                  (t =
                    (function() {
                      var e, t, n;
                      if ((e = x(/^(?!0)\d+/))) {
                        t = e[0];
                        var a = parseInt(e[0], 10);
                        return a <= N
                          ? ((n = e[0]),
                            l({
                              type: "reference",
                              matchIndex: parseInt(n, 10),
                              range: [U - 1 - n.length, U],
                            }))
                          : (I.push(a),
                            o(-e[0].length),
                            (e = x(/^[0-7]{1,3}/))
                              ? i("octal", parseInt(e[0], 8), e[0], 1)
                              : c((e = g(x(/^[89]/))), e.range[0] - 1));
                      }
                      return (e = x(/^[0-7]{1,3}/))
                        ? ((t = e[0]),
                          /^0{1,3}$/.test(t)
                            ? i("null", 0, "0", t.length + 1)
                            : i("octal", parseInt(t, 8), t, 1))
                        : !!(e = x(/^[dDsSwW]/)) &&
                            l({
                              type: "characterClassEscape",
                              value: e[0],
                              range: [U - 2, U],
                            });
                    })() ||
                    (function() {
                      if (u.namedGroups && x(/^k<(?=.*?>)/)) {
                        var e = D();
                        return (
                          y(">"),
                          l({
                            type: "reference",
                            name: e,
                            range: [e.range[0] - 3, U],
                          })
                        );
                      }
                    })())
                )
                  return t;
                if (e) {
                  if (m("b")) return i("singleEscape", 8, "\\b");
                  m("B") &&
                    M("\\B not possible inside of CharacterClass", "", n);
                }
                return (function() {
                  var e, t;
                  if ((e = x(/^[fnrtv]/))) {
                    var n = 0;
                    switch (e[0]) {
                      case "t":
                        n = 9;
                        break;
                      case "n":
                        n = 10;
                        break;
                      case "v":
                        n = 11;
                        break;
                      case "f":
                        n = 12;
                        break;
                      case "r":
                        n = 13;
                    }
                    return i("singleEscape", n, "\\" + e[0]);
                  }
                  return (e = x(/^c([a-zA-Z])/))
                    ? i("controlLetter", e[1].charCodeAt(0) % 32, e[1], 2)
                    : (e = x(/^x([0-9a-fA-F]{2})/))
                      ? i("hexadecimalEscape", parseInt(e[1], 16), e[1], 2)
                      : (e = C())
                        ? e
                        : u.unicodePropertyEscape &&
                          L &&
                          (e = x(/^([pP])\{([^\}]+)\}/))
                          ? l({
                              type: "unicodePropertyEscape",
                              negative: "P" === e[1],
                              value: e[2],
                              range: [e.range[0] - 1, e.range[1]],
                              raw: e[0],
                            })
                          : F(v())
                            ? m("‌")
                              ? i("identifier", 8204, "‌")
                              : m("‍")
                                ? i("identifier", 8205, "‍")
                                : null
                            : i("identifier", (t = o()).charCodeAt(0), t, 1);
                })();
              }
              function C() {
                var e;
                return (e = x(/^u([0-9a-fA-F]{4})/))
                  ? t(i("unicodeEscape", parseInt(e[1], 16), e[1], 2))
                  : L && (e = x(/^u\{([0-9a-fA-F]+)\}/))
                    ? i("unicodeCodePointEscape", parseInt(e[1], 16), e[1], 4)
                    : void 0;
              }
              function w(e) {
                var t = v(),
                  n = U;
                if (e(t.charCodeAt(0))) {
                  if ((o(), "\\" !== t)) return t;
                  var a = C();
                  return (
                    (a && e(a.codePoint)) ||
                      M("Invalid escape sequence", null, n, U),
                    G(a.codePoint)
                  );
                }
              }
              function D() {
                var e,
                  t = U,
                  n = w(O);
                for (n || M("Invalid identifier"); (e = w(F)); ) n += e;
                return l({ type: "identifier", value: n, range: [t, U] });
              }
              function O(e) {
                return (
                  36 === e ||
                  95 === e ||
                  (65 <= e && e <= 90) ||
                  (97 <= e && e <= 122) ||
                  (48 <= e && e <= 57) ||
                  92 === e ||
                  (128 <= e &&
                    /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/.test(
                      String.fromCharCode(e)
                    ))
                );
              }
              function F(e) {
                return (
                  O(e) ||
                  (128 <= e &&
                    /[\u0300-\u036F\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19B0-\u19C0\u19C8\u19C9\u19D0-\u19D9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F1\uA900-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F]/.test(
                      String.fromCharCode(e)
                    ))
                );
              }
              function k() {
                var e, t;
                return b("]")
                  ? []
                  : ((t = j()) || M("classAtom"),
                    (e = b("]")
                      ? [t]
                      : (function e(t) {
                          var n, a, r, i;
                          if (!b("-") || E("]"))
                            return (
                              (i = j()) || M("classAtom"),
                              (r = b("]") ? i : e(i)) ||
                                M("nonEmptyClassRangesNoDash"),
                              [t].concat(r)
                            );
                          y("-"), (r = j()) || M("classAtom"), (a = U);
                          var o = k();
                          return (
                            o || M("classRanges"),
                            (n = t.range[0]),
                            "empty" === o.type
                              ? [s(t, r, n, a)]
                              : [s(t, r, n, a)].concat(o)
                          );
                        })(t)) || M("nonEmptyClassRanges"),
                    e);
              }
              function j() {
                return m("-")
                  ? g("-")
                  : (e = x(/^[^\\\]-]/))
                    ? g(e[0])
                    : m("\\")
                      ? ((e = T()) || M("classEscape"), t(e))
                      : void 0;
                var e;
              }
              function M(e, t, n, a) {
                (n = null == n ? U : n), (a = null == a ? n : a);
                var r = Math.max(0, n - 10),
                  i = Math.min(a + 10, d.length),
                  o = "    " + d.substring(r, i),
                  s = "    " + new Array(n - r + 1).join(" ") + "^";
                throw SyntaxError(
                  e +
                    " at position " +
                    n +
                    (t ? ": " + t : "") +
                    "\n" +
                    o +
                    "\n" +
                    s
                );
              }
              u || (u = {});
              var I = [],
                N = 0,
                B = !0,
                L = -1 !== (e || "").indexOf("u"),
                U = 0;
              "" === (d = String(d)) && (d = "(?:)");
              var V = A();
              V.range[1] !== d.length &&
                M("Could not parse entire input - got stuck", "", V.range[1]);
              for (var W = 0; W < I.length; W++)
                if (I[W] <= N) return (U = 0), (B = !1), A();
              return V;
            },
          }),
          void 0 !== e && e.exports
            ? (e.exports = n)
            : (window.regjsparser = n);
      },
      function(e, t, n) {
        "use strict";
        var a = n(535),
          r = n(536);
        e.exports = function(e) {
          if (a.has(e)) return e;
          if (r.has(e)) return r.get(e);
          throw new Error("Unknown property: " + e);
        };
      },
      function(e, t) {
        e.exports = new Set([
          "General_Category",
          "Script",
          "Script_Extensions",
          "Alphabetic",
          "Any",
          "ASCII",
          "ASCII_Hex_Digit",
          "Assigned",
          "Bidi_Control",
          "Bidi_Mirrored",
          "Case_Ignorable",
          "Cased",
          "Changes_When_Casefolded",
          "Changes_When_Casemapped",
          "Changes_When_Lowercased",
          "Changes_When_NFKC_Casefolded",
          "Changes_When_Titlecased",
          "Changes_When_Uppercased",
          "Dash",
          "Default_Ignorable_Code_Point",
          "Deprecated",
          "Diacritic",
          "Emoji",
          "Emoji_Component",
          "Emoji_Modifier",
          "Emoji_Modifier_Base",
          "Emoji_Presentation",
          "Extended_Pictographic",
          "Extender",
          "Grapheme_Base",
          "Grapheme_Extend",
          "Hex_Digit",
          "ID_Continue",
          "ID_Start",
          "Ideographic",
          "IDS_Binary_Operator",
          "IDS_Trinary_Operator",
          "Join_Control",
          "Logical_Order_Exception",
          "Lowercase",
          "Math",
          "Noncharacter_Code_Point",
          "Pattern_Syntax",
          "Pattern_White_Space",
          "Quotation_Mark",
          "Radical",
          "Regional_Indicator",
          "Sentence_Terminal",
          "Soft_Dotted",
          "Terminal_Punctuation",
          "Unified_Ideograph",
          "Uppercase",
          "Variation_Selector",
          "White_Space",
          "XID_Continue",
          "XID_Start",
        ]);
      },
      function(e, t) {
        e.exports = new Map([
          ["scx", "Script_Extensions"],
          ["sc", "Script"],
          ["gc", "General_Category"],
          ["AHex", "ASCII_Hex_Digit"],
          ["Alpha", "Alphabetic"],
          ["Bidi_C", "Bidi_Control"],
          ["Bidi_M", "Bidi_Mirrored"],
          ["Cased", "Cased"],
          ["CI", "Case_Ignorable"],
          ["CWCF", "Changes_When_Casefolded"],
          ["CWCM", "Changes_When_Casemapped"],
          ["CWKCF", "Changes_When_NFKC_Casefolded"],
          ["CWL", "Changes_When_Lowercased"],
          ["CWT", "Changes_When_Titlecased"],
          ["CWU", "Changes_When_Uppercased"],
          ["Dash", "Dash"],
          ["Dep", "Deprecated"],
          ["DI", "Default_Ignorable_Code_Point"],
          ["Dia", "Diacritic"],
          ["Ext", "Extender"],
          ["Gr_Base", "Grapheme_Base"],
          ["Gr_Ext", "Grapheme_Extend"],
          ["Hex", "Hex_Digit"],
          ["IDC", "ID_Continue"],
          ["Ideo", "Ideographic"],
          ["IDS", "ID_Start"],
          ["IDSB", "IDS_Binary_Operator"],
          ["IDST", "IDS_Trinary_Operator"],
          ["Join_C", "Join_Control"],
          ["LOE", "Logical_Order_Exception"],
          ["Lower", "Lowercase"],
          ["Math", "Math"],
          ["NChar", "Noncharacter_Code_Point"],
          ["Pat_Syn", "Pattern_Syntax"],
          ["Pat_WS", "Pattern_White_Space"],
          ["QMark", "Quotation_Mark"],
          ["Radical", "Radical"],
          ["RI", "Regional_Indicator"],
          ["SD", "Soft_Dotted"],
          ["STerm", "Sentence_Terminal"],
          ["Term", "Terminal_Punctuation"],
          ["UIdeo", "Unified_Ideograph"],
          ["Upper", "Uppercase"],
          ["VS", "Variation_Selector"],
          ["WSpace", "White_Space"],
          ["space", "White_Space"],
          ["XIDC", "XID_Continue"],
          ["XIDS", "XID_Start"],
        ]);
      },
      function(e, t, n) {
        "use strict";
        var r = n(538);
        e.exports = function(e, t) {
          var n = r.get(e);
          if (!n) throw new Error("Unknown property `" + e + "`.");
          var a = n.get(t);
          if (a) return a;
          throw new Error(
            "Unknown value `" + t + "` for property `" + e + "`."
          );
        };
      },
      function(e, t) {
        e.exports = new Map([
          [
            "General_Category",
            new Map([
              ["C", "Other"],
              ["Cc", "Control"],
              ["cntrl", "Control"],
              ["Cf", "Format"],
              ["Cn", "Unassigned"],
              ["Co", "Private_Use"],
              ["Cs", "Surrogate"],
              ["L", "Letter"],
              ["LC", "Cased_Letter"],
              ["Ll", "Lowercase_Letter"],
              ["Lm", "Modifier_Letter"],
              ["Lo", "Other_Letter"],
              ["Lt", "Titlecase_Letter"],
              ["Lu", "Uppercase_Letter"],
              ["M", "Mark"],
              ["Combining_Mark", "Mark"],
              ["Mc", "Spacing_Mark"],
              ["Me", "Enclosing_Mark"],
              ["Mn", "Nonspacing_Mark"],
              ["N", "Number"],
              ["Nd", "Decimal_Number"],
              ["digit", "Decimal_Number"],
              ["Nl", "Letter_Number"],
              ["No", "Other_Number"],
              ["P", "Punctuation"],
              ["punct", "Punctuation"],
              ["Pc", "Connector_Punctuation"],
              ["Pd", "Dash_Punctuation"],
              ["Pe", "Close_Punctuation"],
              ["Pf", "Final_Punctuation"],
              ["Pi", "Initial_Punctuation"],
              ["Po", "Other_Punctuation"],
              ["Ps", "Open_Punctuation"],
              ["S", "Symbol"],
              ["Sc", "Currency_Symbol"],
              ["Sk", "Modifier_Symbol"],
              ["Sm", "Math_Symbol"],
              ["So", "Other_Symbol"],
              ["Z", "Separator"],
              ["Zl", "Line_Separator"],
              ["Zp", "Paragraph_Separator"],
              ["Zs", "Space_Separator"],
              ["Other", "Other"],
              ["Control", "Control"],
              ["Format", "Format"],
              ["Unassigned", "Unassigned"],
              ["Private_Use", "Private_Use"],
              ["Surrogate", "Surrogate"],
              ["Letter", "Letter"],
              ["Cased_Letter", "Cased_Letter"],
              ["Lowercase_Letter", "Lowercase_Letter"],
              ["Modifier_Letter", "Modifier_Letter"],
              ["Other_Letter", "Other_Letter"],
              ["Titlecase_Letter", "Titlecase_Letter"],
              ["Uppercase_Letter", "Uppercase_Letter"],
              ["Mark", "Mark"],
              ["Spacing_Mark", "Spacing_Mark"],
              ["Enclosing_Mark", "Enclosing_Mark"],
              ["Nonspacing_Mark", "Nonspacing_Mark"],
              ["Number", "Number"],
              ["Decimal_Number", "Decimal_Number"],
              ["Letter_Number", "Letter_Number"],
              ["Other_Number", "Other_Number"],
              ["Punctuation", "Punctuation"],
              ["Connector_Punctuation", "Connector_Punctuation"],
              ["Dash_Punctuation", "Dash_Punctuation"],
              ["Close_Punctuation", "Close_Punctuation"],
              ["Final_Punctuation", "Final_Punctuation"],
              ["Initial_Punctuation", "Initial_Punctuation"],
              ["Other_Punctuation", "Other_Punctuation"],
              ["Open_Punctuation", "Open_Punctuation"],
              ["Symbol", "Symbol"],
              ["Currency_Symbol", "Currency_Symbol"],
              ["Modifier_Symbol", "Modifier_Symbol"],
              ["Math_Symbol", "Math_Symbol"],
              ["Other_Symbol", "Other_Symbol"],
              ["Separator", "Separator"],
              ["Line_Separator", "Line_Separator"],
              ["Paragraph_Separator", "Paragraph_Separator"],
              ["Space_Separator", "Space_Separator"],
            ]),
          ],
          [
            "Script",
            new Map([
              ["Adlm", "Adlam"],
              ["Aghb", "Caucasian_Albanian"],
              ["Ahom", "Ahom"],
              ["Arab", "Arabic"],
              ["Armi", "Imperial_Aramaic"],
              ["Armn", "Armenian"],
              ["Avst", "Avestan"],
              ["Bali", "Balinese"],
              ["Bamu", "Bamum"],
              ["Bass", "Bassa_Vah"],
              ["Batk", "Batak"],
              ["Beng", "Bengali"],
              ["Bhks", "Bhaiksuki"],
              ["Bopo", "Bopomofo"],
              ["Brah", "Brahmi"],
              ["Brai", "Braille"],
              ["Bugi", "Buginese"],
              ["Buhd", "Buhid"],
              ["Cakm", "Chakma"],
              ["Cans", "Canadian_Aboriginal"],
              ["Cari", "Carian"],
              ["Cham", "Cham"],
              ["Cher", "Cherokee"],
              ["Copt", "Coptic"],
              ["Qaac", "Coptic"],
              ["Cprt", "Cypriot"],
              ["Cyrl", "Cyrillic"],
              ["Deva", "Devanagari"],
              ["Dogr", "Dogra"],
              ["Dsrt", "Deseret"],
              ["Dupl", "Duployan"],
              ["Egyp", "Egyptian_Hieroglyphs"],
              ["Elba", "Elbasan"],
              ["Ethi", "Ethiopic"],
              ["Geor", "Georgian"],
              ["Glag", "Glagolitic"],
              ["Gong", "Gunjala_Gondi"],
              ["Gonm", "Masaram_Gondi"],
              ["Goth", "Gothic"],
              ["Gran", "Grantha"],
              ["Grek", "Greek"],
              ["Gujr", "Gujarati"],
              ["Guru", "Gurmukhi"],
              ["Hang", "Hangul"],
              ["Hani", "Han"],
              ["Hano", "Hanunoo"],
              ["Hatr", "Hatran"],
              ["Hebr", "Hebrew"],
              ["Hira", "Hiragana"],
              ["Hluw", "Anatolian_Hieroglyphs"],
              ["Hmng", "Pahawh_Hmong"],
              ["Hrkt", "Katakana_Or_Hiragana"],
              ["Hung", "Old_Hungarian"],
              ["Ital", "Old_Italic"],
              ["Java", "Javanese"],
              ["Kali", "Kayah_Li"],
              ["Kana", "Katakana"],
              ["Khar", "Kharoshthi"],
              ["Khmr", "Khmer"],
              ["Khoj", "Khojki"],
              ["Knda", "Kannada"],
              ["Kthi", "Kaithi"],
              ["Lana", "Tai_Tham"],
              ["Laoo", "Lao"],
              ["Latn", "Latin"],
              ["Lepc", "Lepcha"],
              ["Limb", "Limbu"],
              ["Lina", "Linear_A"],
              ["Linb", "Linear_B"],
              ["Lisu", "Lisu"],
              ["Lyci", "Lycian"],
              ["Lydi", "Lydian"],
              ["Mahj", "Mahajani"],
              ["Maka", "Makasar"],
              ["Mand", "Mandaic"],
              ["Mani", "Manichaean"],
              ["Marc", "Marchen"],
              ["Medf", "Medefaidrin"],
              ["Mend", "Mende_Kikakui"],
              ["Merc", "Meroitic_Cursive"],
              ["Mero", "Meroitic_Hieroglyphs"],
              ["Mlym", "Malayalam"],
              ["Modi", "Modi"],
              ["Mong", "Mongolian"],
              ["Mroo", "Mro"],
              ["Mtei", "Meetei_Mayek"],
              ["Mult", "Multani"],
              ["Mymr", "Myanmar"],
              ["Narb", "Old_North_Arabian"],
              ["Nbat", "Nabataean"],
              ["Newa", "Newa"],
              ["Nkoo", "Nko"],
              ["Nshu", "Nushu"],
              ["Ogam", "Ogham"],
              ["Olck", "Ol_Chiki"],
              ["Orkh", "Old_Turkic"],
              ["Orya", "Oriya"],
              ["Osge", "Osage"],
              ["Osma", "Osmanya"],
              ["Palm", "Palmyrene"],
              ["Pauc", "Pau_Cin_Hau"],
              ["Perm", "Old_Permic"],
              ["Phag", "Phags_Pa"],
              ["Phli", "Inscriptional_Pahlavi"],
              ["Phlp", "Psalter_Pahlavi"],
              ["Phnx", "Phoenician"],
              ["Plrd", "Miao"],
              ["Prti", "Inscriptional_Parthian"],
              ["Rjng", "Rejang"],
              ["Rohg", "Hanifi_Rohingya"],
              ["Runr", "Runic"],
              ["Samr", "Samaritan"],
              ["Sarb", "Old_South_Arabian"],
              ["Saur", "Saurashtra"],
              ["Sgnw", "SignWriting"],
              ["Shaw", "Shavian"],
              ["Shrd", "Sharada"],
              ["Sidd", "Siddham"],
              ["Sind", "Khudawadi"],
              ["Sinh", "Sinhala"],
              ["Sogd", "Sogdian"],
              ["Sogo", "Old_Sogdian"],
              ["Sora", "Sora_Sompeng"],
              ["Soyo", "Soyombo"],
              ["Sund", "Sundanese"],
              ["Sylo", "Syloti_Nagri"],
              ["Syrc", "Syriac"],
              ["Tagb", "Tagbanwa"],
              ["Takr", "Takri"],
              ["Tale", "Tai_Le"],
              ["Talu", "New_Tai_Lue"],
              ["Taml", "Tamil"],
              ["Tang", "Tangut"],
              ["Tavt", "Tai_Viet"],
              ["Telu", "Telugu"],
              ["Tfng", "Tifinagh"],
              ["Tglg", "Tagalog"],
              ["Thaa", "Thaana"],
              ["Thai", "Thai"],
              ["Tibt", "Tibetan"],
              ["Tirh", "Tirhuta"],
              ["Ugar", "Ugaritic"],
              ["Vaii", "Vai"],
              ["Wara", "Warang_Citi"],
              ["Xpeo", "Old_Persian"],
              ["Xsux", "Cuneiform"],
              ["Yiii", "Yi"],
              ["Zanb", "Zanabazar_Square"],
              ["Zinh", "Inherited"],
              ["Qaai", "Inherited"],
              ["Zyyy", "Common"],
              ["Zzzz", "Unknown"],
              ["Adlam", "Adlam"],
              ["Caucasian_Albanian", "Caucasian_Albanian"],
              ["Arabic", "Arabic"],
              ["Imperial_Aramaic", "Imperial_Aramaic"],
              ["Armenian", "Armenian"],
              ["Avestan", "Avestan"],
              ["Balinese", "Balinese"],
              ["Bamum", "Bamum"],
              ["Bassa_Vah", "Bassa_Vah"],
              ["Batak", "Batak"],
              ["Bengali", "Bengali"],
              ["Bhaiksuki", "Bhaiksuki"],
              ["Bopomofo", "Bopomofo"],
              ["Brahmi", "Brahmi"],
              ["Braille", "Braille"],
              ["Buginese", "Buginese"],
              ["Buhid", "Buhid"],
              ["Chakma", "Chakma"],
              ["Canadian_Aboriginal", "Canadian_Aboriginal"],
              ["Carian", "Carian"],
              ["Cherokee", "Cherokee"],
              ["Coptic", "Coptic"],
              ["Cypriot", "Cypriot"],
              ["Cyrillic", "Cyrillic"],
              ["Devanagari", "Devanagari"],
              ["Dogra", "Dogra"],
              ["Deseret", "Deseret"],
              ["Duployan", "Duployan"],
              ["Egyptian_Hieroglyphs", "Egyptian_Hieroglyphs"],
              ["Elbasan", "Elbasan"],
              ["Ethiopic", "Ethiopic"],
              ["Georgian", "Georgian"],
              ["Glagolitic", "Glagolitic"],
              ["Gunjala_Gondi", "Gunjala_Gondi"],
              ["Masaram_Gondi", "Masaram_Gondi"],
              ["Gothic", "Gothic"],
              ["Grantha", "Grantha"],
              ["Greek", "Greek"],
              ["Gujarati", "Gujarati"],
              ["Gurmukhi", "Gurmukhi"],
              ["Hangul", "Hangul"],
              ["Han", "Han"],
              ["Hanunoo", "Hanunoo"],
              ["Hatran", "Hatran"],
              ["Hebrew", "Hebrew"],
              ["Hiragana", "Hiragana"],
              ["Anatolian_Hieroglyphs", "Anatolian_Hieroglyphs"],
              ["Pahawh_Hmong", "Pahawh_Hmong"],
              ["Katakana_Or_Hiragana", "Katakana_Or_Hiragana"],
              ["Old_Hungarian", "Old_Hungarian"],
              ["Old_Italic", "Old_Italic"],
              ["Javanese", "Javanese"],
              ["Kayah_Li", "Kayah_Li"],
              ["Katakana", "Katakana"],
              ["Kharoshthi", "Kharoshthi"],
              ["Khmer", "Khmer"],
              ["Khojki", "Khojki"],
              ["Kannada", "Kannada"],
              ["Kaithi", "Kaithi"],
              ["Tai_Tham", "Tai_Tham"],
              ["Lao", "Lao"],
              ["Latin", "Latin"],
              ["Lepcha", "Lepcha"],
              ["Limbu", "Limbu"],
              ["Linear_A", "Linear_A"],
              ["Linear_B", "Linear_B"],
              ["Lycian", "Lycian"],
              ["Lydian", "Lydian"],
              ["Mahajani", "Mahajani"],
              ["Makasar", "Makasar"],
              ["Mandaic", "Mandaic"],
              ["Manichaean", "Manichaean"],
              ["Marchen", "Marchen"],
              ["Medefaidrin", "Medefaidrin"],
              ["Mende_Kikakui", "Mende_Kikakui"],
              ["Meroitic_Cursive", "Meroitic_Cursive"],
              ["Meroitic_Hieroglyphs", "Meroitic_Hieroglyphs"],
              ["Malayalam", "Malayalam"],
              ["Mongolian", "Mongolian"],
              ["Mro", "Mro"],
              ["Meetei_Mayek", "Meetei_Mayek"],
              ["Multani", "Multani"],
              ["Myanmar", "Myanmar"],
              ["Old_North_Arabian", "Old_North_Arabian"],
              ["Nabataean", "Nabataean"],
              ["Nko", "Nko"],
              ["Nushu", "Nushu"],
              ["Ogham", "Ogham"],
              ["Ol_Chiki", "Ol_Chiki"],
              ["Old_Turkic", "Old_Turkic"],
              ["Oriya", "Oriya"],
              ["Osage", "Osage"],
              ["Osmanya", "Osmanya"],
              ["Palmyrene", "Palmyrene"],
              ["Pau_Cin_Hau", "Pau_Cin_Hau"],
              ["Old_Permic", "Old_Permic"],
              ["Phags_Pa", "Phags_Pa"],
              ["Inscriptional_Pahlavi", "Inscriptional_Pahlavi"],
              ["Psalter_Pahlavi", "Psalter_Pahlavi"],
              ["Phoenician", "Phoenician"],
              ["Miao", "Miao"],
              ["Inscriptional_Parthian", "Inscriptional_Parthian"],
              ["Rejang", "Rejang"],
              ["Hanifi_Rohingya", "Hanifi_Rohingya"],
              ["Runic", "Runic"],
              ["Samaritan", "Samaritan"],
              ["Old_South_Arabian", "Old_South_Arabian"],
              ["Saurashtra", "Saurashtra"],
              ["SignWriting", "SignWriting"],
              ["Shavian", "Shavian"],
              ["Sharada", "Sharada"],
              ["Siddham", "Siddham"],
              ["Khudawadi", "Khudawadi"],
              ["Sinhala", "Sinhala"],
              ["Sogdian", "Sogdian"],
              ["Old_Sogdian", "Old_Sogdian"],
              ["Sora_Sompeng", "Sora_Sompeng"],
              ["Soyombo", "Soyombo"],
              ["Sundanese", "Sundanese"],
              ["Syloti_Nagri", "Syloti_Nagri"],
              ["Syriac", "Syriac"],
              ["Tagbanwa", "Tagbanwa"],
              ["Takri", "Takri"],
              ["Tai_Le", "Tai_Le"],
              ["New_Tai_Lue", "New_Tai_Lue"],
              ["Tamil", "Tamil"],
              ["Tangut", "Tangut"],
              ["Tai_Viet", "Tai_Viet"],
              ["Telugu", "Telugu"],
              ["Tifinagh", "Tifinagh"],
              ["Tagalog", "Tagalog"],
              ["Thaana", "Thaana"],
              ["Tibetan", "Tibetan"],
              ["Tirhuta", "Tirhuta"],
              ["Ugaritic", "Ugaritic"],
              ["Vai", "Vai"],
              ["Warang_Citi", "Warang_Citi"],
              ["Old_Persian", "Old_Persian"],
              ["Cuneiform", "Cuneiform"],
              ["Yi", "Yi"],
              ["Zanabazar_Square", "Zanabazar_Square"],
              ["Inherited", "Inherited"],
              ["Common", "Common"],
              ["Unknown", "Unknown"],
            ]),
          ],
          [
            "Script_Extensions",
            new Map([
              ["Adlm", "Adlam"],
              ["Aghb", "Caucasian_Albanian"],
              ["Ahom", "Ahom"],
              ["Arab", "Arabic"],
              ["Armi", "Imperial_Aramaic"],
              ["Armn", "Armenian"],
              ["Avst", "Avestan"],
              ["Bali", "Balinese"],
              ["Bamu", "Bamum"],
              ["Bass", "Bassa_Vah"],
              ["Batk", "Batak"],
              ["Beng", "Bengali"],
              ["Bhks", "Bhaiksuki"],
              ["Bopo", "Bopomofo"],
              ["Brah", "Brahmi"],
              ["Brai", "Braille"],
              ["Bugi", "Buginese"],
              ["Buhd", "Buhid"],
              ["Cakm", "Chakma"],
              ["Cans", "Canadian_Aboriginal"],
              ["Cari", "Carian"],
              ["Cham", "Cham"],
              ["Cher", "Cherokee"],
              ["Copt", "Coptic"],
              ["Qaac", "Coptic"],
              ["Cprt", "Cypriot"],
              ["Cyrl", "Cyrillic"],
              ["Deva", "Devanagari"],
              ["Dogr", "Dogra"],
              ["Dsrt", "Deseret"],
              ["Dupl", "Duployan"],
              ["Egyp", "Egyptian_Hieroglyphs"],
              ["Elba", "Elbasan"],
              ["Ethi", "Ethiopic"],
              ["Geor", "Georgian"],
              ["Glag", "Glagolitic"],
              ["Gong", "Gunjala_Gondi"],
              ["Gonm", "Masaram_Gondi"],
              ["Goth", "Gothic"],
              ["Gran", "Grantha"],
              ["Grek", "Greek"],
              ["Gujr", "Gujarati"],
              ["Guru", "Gurmukhi"],
              ["Hang", "Hangul"],
              ["Hani", "Han"],
              ["Hano", "Hanunoo"],
              ["Hatr", "Hatran"],
              ["Hebr", "Hebrew"],
              ["Hira", "Hiragana"],
              ["Hluw", "Anatolian_Hieroglyphs"],
              ["Hmng", "Pahawh_Hmong"],
              ["Hrkt", "Katakana_Or_Hiragana"],
              ["Hung", "Old_Hungarian"],
              ["Ital", "Old_Italic"],
              ["Java", "Javanese"],
              ["Kali", "Kayah_Li"],
              ["Kana", "Katakana"],
              ["Khar", "Kharoshthi"],
              ["Khmr", "Khmer"],
              ["Khoj", "Khojki"],
              ["Knda", "Kannada"],
              ["Kthi", "Kaithi"],
              ["Lana", "Tai_Tham"],
              ["Laoo", "Lao"],
              ["Latn", "Latin"],
              ["Lepc", "Lepcha"],
              ["Limb", "Limbu"],
              ["Lina", "Linear_A"],
              ["Linb", "Linear_B"],
              ["Lisu", "Lisu"],
              ["Lyci", "Lycian"],
              ["Lydi", "Lydian"],
              ["Mahj", "Mahajani"],
              ["Maka", "Makasar"],
              ["Mand", "Mandaic"],
              ["Mani", "Manichaean"],
              ["Marc", "Marchen"],
              ["Medf", "Medefaidrin"],
              ["Mend", "Mende_Kikakui"],
              ["Merc", "Meroitic_Cursive"],
              ["Mero", "Meroitic_Hieroglyphs"],
              ["Mlym", "Malayalam"],
              ["Modi", "Modi"],
              ["Mong", "Mongolian"],
              ["Mroo", "Mro"],
              ["Mtei", "Meetei_Mayek"],
              ["Mult", "Multani"],
              ["Mymr", "Myanmar"],
              ["Narb", "Old_North_Arabian"],
              ["Nbat", "Nabataean"],
              ["Newa", "Newa"],
              ["Nkoo", "Nko"],
              ["Nshu", "Nushu"],
              ["Ogam", "Ogham"],
              ["Olck", "Ol_Chiki"],
              ["Orkh", "Old_Turkic"],
              ["Orya", "Oriya"],
              ["Osge", "Osage"],
              ["Osma", "Osmanya"],
              ["Palm", "Palmyrene"],
              ["Pauc", "Pau_Cin_Hau"],
              ["Perm", "Old_Permic"],
              ["Phag", "Phags_Pa"],
              ["Phli", "Inscriptional_Pahlavi"],
              ["Phlp", "Psalter_Pahlavi"],
              ["Phnx", "Phoenician"],
              ["Plrd", "Miao"],
              ["Prti", "Inscriptional_Parthian"],
              ["Rjng", "Rejang"],
              ["Rohg", "Hanifi_Rohingya"],
              ["Runr", "Runic"],
              ["Samr", "Samaritan"],
              ["Sarb", "Old_South_Arabian"],
              ["Saur", "Saurashtra"],
              ["Sgnw", "SignWriting"],
              ["Shaw", "Shavian"],
              ["Shrd", "Sharada"],
              ["Sidd", "Siddham"],
              ["Sind", "Khudawadi"],
              ["Sinh", "Sinhala"],
              ["Sogd", "Sogdian"],
              ["Sogo", "Old_Sogdian"],
              ["Sora", "Sora_Sompeng"],
              ["Soyo", "Soyombo"],
              ["Sund", "Sundanese"],
              ["Sylo", "Syloti_Nagri"],
              ["Syrc", "Syriac"],
              ["Tagb", "Tagbanwa"],
              ["Takr", "Takri"],
              ["Tale", "Tai_Le"],
              ["Talu", "New_Tai_Lue"],
              ["Taml", "Tamil"],
              ["Tang", "Tangut"],
              ["Tavt", "Tai_Viet"],
              ["Telu", "Telugu"],
              ["Tfng", "Tifinagh"],
              ["Tglg", "Tagalog"],
              ["Thaa", "Thaana"],
              ["Thai", "Thai"],
              ["Tibt", "Tibetan"],
              ["Tirh", "Tirhuta"],
              ["Ugar", "Ugaritic"],
              ["Vaii", "Vai"],
              ["Wara", "Warang_Citi"],
              ["Xpeo", "Old_Persian"],
              ["Xsux", "Cuneiform"],
              ["Yiii", "Yi"],
              ["Zanb", "Zanabazar_Square"],
              ["Zinh", "Inherited"],
              ["Qaai", "Inherited"],
              ["Zyyy", "Common"],
              ["Zzzz", "Unknown"],
              ["Adlam", "Adlam"],
              ["Caucasian_Albanian", "Caucasian_Albanian"],
              ["Arabic", "Arabic"],
              ["Imperial_Aramaic", "Imperial_Aramaic"],
              ["Armenian", "Armenian"],
              ["Avestan", "Avestan"],
              ["Balinese", "Balinese"],
              ["Bamum", "Bamum"],
              ["Bassa_Vah", "Bassa_Vah"],
              ["Batak", "Batak"],
              ["Bengali", "Bengali"],
              ["Bhaiksuki", "Bhaiksuki"],
              ["Bopomofo", "Bopomofo"],
              ["Brahmi", "Brahmi"],
              ["Braille", "Braille"],
              ["Buginese", "Buginese"],
              ["Buhid", "Buhid"],
              ["Chakma", "Chakma"],
              ["Canadian_Aboriginal", "Canadian_Aboriginal"],
              ["Carian", "Carian"],
              ["Cherokee", "Cherokee"],
              ["Coptic", "Coptic"],
              ["Cypriot", "Cypriot"],
              ["Cyrillic", "Cyrillic"],
              ["Devanagari", "Devanagari"],
              ["Dogra", "Dogra"],
              ["Deseret", "Deseret"],
              ["Duployan", "Duployan"],
              ["Egyptian_Hieroglyphs", "Egyptian_Hieroglyphs"],
              ["Elbasan", "Elbasan"],
              ["Ethiopic", "Ethiopic"],
              ["Georgian", "Georgian"],
              ["Glagolitic", "Glagolitic"],
              ["Gunjala_Gondi", "Gunjala_Gondi"],
              ["Masaram_Gondi", "Masaram_Gondi"],
              ["Gothic", "Gothic"],
              ["Grantha", "Grantha"],
              ["Greek", "Greek"],
              ["Gujarati", "Gujarati"],
              ["Gurmukhi", "Gurmukhi"],
              ["Hangul", "Hangul"],
              ["Han", "Han"],
              ["Hanunoo", "Hanunoo"],
              ["Hatran", "Hatran"],
              ["Hebrew", "Hebrew"],
              ["Hiragana", "Hiragana"],
              ["Anatolian_Hieroglyphs", "Anatolian_Hieroglyphs"],
              ["Pahawh_Hmong", "Pahawh_Hmong"],
              ["Katakana_Or_Hiragana", "Katakana_Or_Hiragana"],
              ["Old_Hungarian", "Old_Hungarian"],
              ["Old_Italic", "Old_Italic"],
              ["Javanese", "Javanese"],
              ["Kayah_Li", "Kayah_Li"],
              ["Katakana", "Katakana"],
              ["Kharoshthi", "Kharoshthi"],
              ["Khmer", "Khmer"],
              ["Khojki", "Khojki"],
              ["Kannada", "Kannada"],
              ["Kaithi", "Kaithi"],
              ["Tai_Tham", "Tai_Tham"],
              ["Lao", "Lao"],
              ["Latin", "Latin"],
              ["Lepcha", "Lepcha"],
              ["Limbu", "Limbu"],
              ["Linear_A", "Linear_A"],
              ["Linear_B", "Linear_B"],
              ["Lycian", "Lycian"],
              ["Lydian", "Lydian"],
              ["Mahajani", "Mahajani"],
              ["Makasar", "Makasar"],
              ["Mandaic", "Mandaic"],
              ["Manichaean", "Manichaean"],
              ["Marchen", "Marchen"],
              ["Medefaidrin", "Medefaidrin"],
              ["Mende_Kikakui", "Mende_Kikakui"],
              ["Meroitic_Cursive", "Meroitic_Cursive"],
              ["Meroitic_Hieroglyphs", "Meroitic_Hieroglyphs"],
              ["Malayalam", "Malayalam"],
              ["Mongolian", "Mongolian"],
              ["Mro", "Mro"],
              ["Meetei_Mayek", "Meetei_Mayek"],
              ["Multani", "Multani"],
              ["Myanmar", "Myanmar"],
              ["Old_North_Arabian", "Old_North_Arabian"],
              ["Nabataean", "Nabataean"],
              ["Nko", "Nko"],
              ["Nushu", "Nushu"],
              ["Ogham", "Ogham"],
              ["Ol_Chiki", "Ol_Chiki"],
              ["Old_Turkic", "Old_Turkic"],
              ["Oriya", "Oriya"],
              ["Osage", "Osage"],
              ["Osmanya", "Osmanya"],
              ["Palmyrene", "Palmyrene"],
              ["Pau_Cin_Hau", "Pau_Cin_Hau"],
              ["Old_Permic", "Old_Permic"],
              ["Phags_Pa", "Phags_Pa"],
              ["Inscriptional_Pahlavi", "Inscriptional_Pahlavi"],
              ["Psalter_Pahlavi", "Psalter_Pahlavi"],
              ["Phoenician", "Phoenician"],
              ["Miao", "Miao"],
              ["Inscriptional_Parthian", "Inscriptional_Parthian"],
              ["Rejang", "Rejang"],
              ["Hanifi_Rohingya", "Hanifi_Rohingya"],
              ["Runic", "Runic"],
              ["Samaritan", "Samaritan"],
              ["Old_South_Arabian", "Old_South_Arabian"],
              ["Saurashtra", "Saurashtra"],
              ["SignWriting", "SignWriting"],
              ["Shavian", "Shavian"],
              ["Sharada", "Sharada"],
              ["Siddham", "Siddham"],
              ["Khudawadi", "Khudawadi"],
              ["Sinhala", "Sinhala"],
              ["Sogdian", "Sogdian"],
              ["Old_Sogdian", "Old_Sogdian"],
              ["Sora_Sompeng", "Sora_Sompeng"],
              ["Soyombo", "Soyombo"],
              ["Sundanese", "Sundanese"],
              ["Syloti_Nagri", "Syloti_Nagri"],
              ["Syriac", "Syriac"],
              ["Tagbanwa", "Tagbanwa"],
              ["Takri", "Takri"],
              ["Tai_Le", "Tai_Le"],
              ["New_Tai_Lue", "New_Tai_Lue"],
              ["Tamil", "Tamil"],
              ["Tangut", "Tangut"],
              ["Tai_Viet", "Tai_Viet"],
              ["Telugu", "Telugu"],
              ["Tifinagh", "Tifinagh"],
              ["Tagalog", "Tagalog"],
              ["Thaana", "Thaana"],
              ["Tibetan", "Tibetan"],
              ["Tirhuta", "Tirhuta"],
              ["Ugaritic", "Ugaritic"],
              ["Vai", "Vai"],
              ["Warang_Citi", "Warang_Citi"],
              ["Old_Persian", "Old_Persian"],
              ["Cuneiform", "Cuneiform"],
              ["Yi", "Yi"],
              ["Zanabazar_Square", "Zanabazar_Square"],
              ["Inherited", "Inherited"],
              ["Common", "Common"],
              ["Unknown", "Unknown"],
            ]),
          ],
        ]);
      },
      function(e, t) {
        e.exports = new Map([
          [75, 8490],
          [83, 383],
          [107, 8490],
          [115, 383],
          [181, 924],
          [197, 8491],
          [223, 7838],
          [229, 8491],
          [383, 83],
          [452, 453],
          [453, 452],
          [455, 456],
          [456, 455],
          [458, 459],
          [459, 458],
          [497, 498],
          [498, 497],
          [618, 42926],
          [669, 42930],
          [837, 8126],
          [914, 976],
          [917, 1013],
          [920, 1012],
          [921, 8126],
          [922, 1008],
          [924, 181],
          [928, 982],
          [929, 1009],
          [931, 962],
          [934, 981],
          [937, 8486],
          [952, 1012],
          [962, 931],
          [969, 8486],
          [976, 914],
          [977, 1012],
          [981, 934],
          [982, 928],
          [1008, 922],
          [1009, 929],
          [1012, [920, 977, 952]],
          [1013, 917],
          [1042, 7296],
          [1044, 7297],
          [1054, 7298],
          [1057, 7299],
          [1058, 7301],
          [1066, 7302],
          [1074, 7296],
          [1076, 7297],
          [1086, 7298],
          [1089, 7299],
          [1090, [7300, 7301]],
          [1098, 7302],
          [1122, 7303],
          [1123, 7303],
          [4304, 7312],
          [4305, 7313],
          [4306, 7314],
          [4307, 7315],
          [4308, 7316],
          [4309, 7317],
          [4310, 7318],
          [4311, 7319],
          [4312, 7320],
          [4313, 7321],
          [4314, 7322],
          [4315, 7323],
          [4316, 7324],
          [4317, 7325],
          [4318, 7326],
          [4319, 7327],
          [4320, 7328],
          [4321, 7329],
          [4322, 7330],
          [4323, 7331],
          [4324, 7332],
          [4325, 7333],
          [4326, 7334],
          [4327, 7335],
          [4328, 7336],
          [4329, 7337],
          [4330, 7338],
          [4331, 7339],
          [4332, 7340],
          [4333, 7341],
          [4334, 7342],
          [4335, 7343],
          [4336, 7344],
          [4337, 7345],
          [4338, 7346],
          [4339, 7347],
          [4340, 7348],
          [4341, 7349],
          [4342, 7350],
          [4343, 7351],
          [4344, 7352],
          [4345, 7353],
          [4346, 7354],
          [4349, 7357],
          [4350, 7358],
          [4351, 7359],
          [5024, 43888],
          [5025, 43889],
          [5026, 43890],
          [5027, 43891],
          [5028, 43892],
          [5029, 43893],
          [5030, 43894],
          [5031, 43895],
          [5032, 43896],
          [5033, 43897],
          [5034, 43898],
          [5035, 43899],
          [5036, 43900],
          [5037, 43901],
          [5038, 43902],
          [5039, 43903],
          [5040, 43904],
          [5041, 43905],
          [5042, 43906],
          [5043, 43907],
          [5044, 43908],
          [5045, 43909],
          [5046, 43910],
          [5047, 43911],
          [5048, 43912],
          [5049, 43913],
          [5050, 43914],
          [5051, 43915],
          [5052, 43916],
          [5053, 43917],
          [5054, 43918],
          [5055, 43919],
          [5056, 43920],
          [5057, 43921],
          [5058, 43922],
          [5059, 43923],
          [5060, 43924],
          [5061, 43925],
          [5062, 43926],
          [5063, 43927],
          [5064, 43928],
          [5065, 43929],
          [5066, 43930],
          [5067, 43931],
          [5068, 43932],
          [5069, 43933],
          [5070, 43934],
          [5071, 43935],
          [5072, 43936],
          [5073, 43937],
          [5074, 43938],
          [5075, 43939],
          [5076, 43940],
          [5077, 43941],
          [5078, 43942],
          [5079, 43943],
          [5080, 43944],
          [5081, 43945],
          [5082, 43946],
          [5083, 43947],
          [5084, 43948],
          [5085, 43949],
          [5086, 43950],
          [5087, 43951],
          [5088, 43952],
          [5089, 43953],
          [5090, 43954],
          [5091, 43955],
          [5092, 43956],
          [5093, 43957],
          [5094, 43958],
          [5095, 43959],
          [5096, 43960],
          [5097, 43961],
          [5098, 43962],
          [5099, 43963],
          [5100, 43964],
          [5101, 43965],
          [5102, 43966],
          [5103, 43967],
          [5104, 5112],
          [5105, 5113],
          [5106, 5114],
          [5107, 5115],
          [5108, 5116],
          [5109, 5117],
          [5112, 5104],
          [5113, 5105],
          [5114, 5106],
          [5115, 5107],
          [5116, 5108],
          [5117, 5109],
          [7296, [1042, 1074]],
          [7297, [1044, 1076]],
          [7298, [1054, 1086]],
          [7299, [1057, 1089]],
          [7300, [7301, 1090]],
          [7301, [1058, 7300, 1090]],
          [7302, [1066, 1098]],
          [7303, [1122, 1123]],
          [7304, [42570, 42571]],
          [7312, 4304],
          [7313, 4305],
          [7314, 4306],
          [7315, 4307],
          [7316, 4308],
          [7317, 4309],
          [7318, 4310],
          [7319, 4311],
          [7320, 4312],
          [7321, 4313],
          [7322, 4314],
          [7323, 4315],
          [7324, 4316],
          [7325, 4317],
          [7326, 4318],
          [7327, 4319],
          [7328, 4320],
          [7329, 4321],
          [7330, 4322],
          [7331, 4323],
          [7332, 4324],
          [7333, 4325],
          [7334, 4326],
          [7335, 4327],
          [7336, 4328],
          [7337, 4329],
          [7338, 4330],
          [7339, 4331],
          [7340, 4332],
          [7341, 4333],
          [7342, 4334],
          [7343, 4335],
          [7344, 4336],
          [7345, 4337],
          [7346, 4338],
          [7347, 4339],
          [7348, 4340],
          [7349, 4341],
          [7350, 4342],
          [7351, 4343],
          [7352, 4344],
          [7353, 4345],
          [7354, 4346],
          [7357, 4349],
          [7358, 4350],
          [7359, 4351],
          [7776, 7835],
          [7835, 7776],
          [7838, 223],
          [8064, 8072],
          [8065, 8073],
          [8066, 8074],
          [8067, 8075],
          [8068, 8076],
          [8069, 8077],
          [8070, 8078],
          [8071, 8079],
          [8072, 8064],
          [8073, 8065],
          [8074, 8066],
          [8075, 8067],
          [8076, 8068],
          [8077, 8069],
          [8078, 8070],
          [8079, 8071],
          [8080, 8088],
          [8081, 8089],
          [8082, 8090],
          [8083, 8091],
          [8084, 8092],
          [8085, 8093],
          [8086, 8094],
          [8087, 8095],
          [8088, 8080],
          [8089, 8081],
          [8090, 8082],
          [8091, 8083],
          [8092, 8084],
          [8093, 8085],
          [8094, 8086],
          [8095, 8087],
          [8096, 8104],
          [8097, 8105],
          [8098, 8106],
          [8099, 8107],
          [8100, 8108],
          [8101, 8109],
          [8102, 8110],
          [8103, 8111],
          [8104, 8096],
          [8105, 8097],
          [8106, 8098],
          [8107, 8099],
          [8108, 8100],
          [8109, 8101],
          [8110, 8102],
          [8111, 8103],
          [8115, 8124],
          [8124, 8115],
          [8126, [837, 921]],
          [8131, 8140],
          [8140, 8131],
          [8179, 8188],
          [8188, 8179],
          [8486, [937, 969]],
          [8490, 75],
          [8491, [197, 229]],
          [42570, 7304],
          [42571, 7304],
          [42926, 618],
          [42930, 669],
          [42931, 43859],
          [42932, 42933],
          [42933, 42932],
          [42934, 42935],
          [42935, 42934],
          [42936, 42937],
          [42937, 42936],
          [43859, 42931],
          [43888, 5024],
          [43889, 5025],
          [43890, 5026],
          [43891, 5027],
          [43892, 5028],
          [43893, 5029],
          [43894, 5030],
          [43895, 5031],
          [43896, 5032],
          [43897, 5033],
          [43898, 5034],
          [43899, 5035],
          [43900, 5036],
          [43901, 5037],
          [43902, 5038],
          [43903, 5039],
          [43904, 5040],
          [43905, 5041],
          [43906, 5042],
          [43907, 5043],
          [43908, 5044],
          [43909, 5045],
          [43910, 5046],
          [43911, 5047],
          [43912, 5048],
          [43913, 5049],
          [43914, 5050],
          [43915, 5051],
          [43916, 5052],
          [43917, 5053],
          [43918, 5054],
          [43919, 5055],
          [43920, 5056],
          [43921, 5057],
          [43922, 5058],
          [43923, 5059],
          [43924, 5060],
          [43925, 5061],
          [43926, 5062],
          [43927, 5063],
          [43928, 5064],
          [43929, 5065],
          [43930, 5066],
          [43931, 5067],
          [43932, 5068],
          [43933, 5069],
          [43934, 5070],
          [43935, 5071],
          [43936, 5072],
          [43937, 5073],
          [43938, 5074],
          [43939, 5075],
          [43940, 5076],
          [43941, 5077],
          [43942, 5078],
          [43943, 5079],
          [43944, 5080],
          [43945, 5081],
          [43946, 5082],
          [43947, 5083],
          [43948, 5084],
          [43949, 5085],
          [43950, 5086],
          [43951, 5087],
          [43952, 5088],
          [43953, 5089],
          [43954, 5090],
          [43955, 5091],
          [43956, 5092],
          [43957, 5093],
          [43958, 5094],
          [43959, 5095],
          [43960, 5096],
          [43961, 5097],
          [43962, 5098],
          [43963, 5099],
          [43964, 5100],
          [43965, 5101],
          [43966, 5102],
          [43967, 5103],
          [66560, 66600],
          [66561, 66601],
          [66562, 66602],
          [66563, 66603],
          [66564, 66604],
          [66565, 66605],
          [66566, 66606],
          [66567, 66607],
          [66568, 66608],
          [66569, 66609],
          [66570, 66610],
          [66571, 66611],
          [66572, 66612],
          [66573, 66613],
          [66574, 66614],
          [66575, 66615],
          [66576, 66616],
          [66577, 66617],
          [66578, 66618],
          [66579, 66619],
          [66580, 66620],
          [66581, 66621],
          [66582, 66622],
          [66583, 66623],
          [66584, 66624],
          [66585, 66625],
          [66586, 66626],
          [66587, 66627],
          [66588, 66628],
          [66589, 66629],
          [66590, 66630],
          [66591, 66631],
          [66592, 66632],
          [66593, 66633],
          [66594, 66634],
          [66595, 66635],
          [66596, 66636],
          [66597, 66637],
          [66598, 66638],
          [66599, 66639],
          [66600, 66560],
          [66601, 66561],
          [66602, 66562],
          [66603, 66563],
          [66604, 66564],
          [66605, 66565],
          [66606, 66566],
          [66607, 66567],
          [66608, 66568],
          [66609, 66569],
          [66610, 66570],
          [66611, 66571],
          [66612, 66572],
          [66613, 66573],
          [66614, 66574],
          [66615, 66575],
          [66616, 66576],
          [66617, 66577],
          [66618, 66578],
          [66619, 66579],
          [66620, 66580],
          [66621, 66581],
          [66622, 66582],
          [66623, 66583],
          [66624, 66584],
          [66625, 66585],
          [66626, 66586],
          [66627, 66587],
          [66628, 66588],
          [66629, 66589],
          [66630, 66590],
          [66631, 66591],
          [66632, 66592],
          [66633, 66593],
          [66634, 66594],
          [66635, 66595],
          [66636, 66596],
          [66637, 66597],
          [66638, 66598],
          [66639, 66599],
          [66736, 66776],
          [66737, 66777],
          [66738, 66778],
          [66739, 66779],
          [66740, 66780],
          [66741, 66781],
          [66742, 66782],
          [66743, 66783],
          [66744, 66784],
          [66745, 66785],
          [66746, 66786],
          [66747, 66787],
          [66748, 66788],
          [66749, 66789],
          [66750, 66790],
          [66751, 66791],
          [66752, 66792],
          [66753, 66793],
          [66754, 66794],
          [66755, 66795],
          [66756, 66796],
          [66757, 66797],
          [66758, 66798],
          [66759, 66799],
          [66760, 66800],
          [66761, 66801],
          [66762, 66802],
          [66763, 66803],
          [66764, 66804],
          [66765, 66805],
          [66766, 66806],
          [66767, 66807],
          [66768, 66808],
          [66769, 66809],
          [66770, 66810],
          [66771, 66811],
          [66776, 66736],
          [66777, 66737],
          [66778, 66738],
          [66779, 66739],
          [66780, 66740],
          [66781, 66741],
          [66782, 66742],
          [66783, 66743],
          [66784, 66744],
          [66785, 66745],
          [66786, 66746],
          [66787, 66747],
          [66788, 66748],
          [66789, 66749],
          [66790, 66750],
          [66791, 66751],
          [66792, 66752],
          [66793, 66753],
          [66794, 66754],
          [66795, 66755],
          [66796, 66756],
          [66797, 66757],
          [66798, 66758],
          [66799, 66759],
          [66800, 66760],
          [66801, 66761],
          [66802, 66762],
          [66803, 66763],
          [66804, 66764],
          [66805, 66765],
          [66806, 66766],
          [66807, 66767],
          [66808, 66768],
          [66809, 66769],
          [66810, 66770],
          [66811, 66771],
          [68736, 68800],
          [68737, 68801],
          [68738, 68802],
          [68739, 68803],
          [68740, 68804],
          [68741, 68805],
          [68742, 68806],
          [68743, 68807],
          [68744, 68808],
          [68745, 68809],
          [68746, 68810],
          [68747, 68811],
          [68748, 68812],
          [68749, 68813],
          [68750, 68814],
          [68751, 68815],
          [68752, 68816],
          [68753, 68817],
          [68754, 68818],
          [68755, 68819],
          [68756, 68820],
          [68757, 68821],
          [68758, 68822],
          [68759, 68823],
          [68760, 68824],
          [68761, 68825],
          [68762, 68826],
          [68763, 68827],
          [68764, 68828],
          [68765, 68829],
          [68766, 68830],
          [68767, 68831],
          [68768, 68832],
          [68769, 68833],
          [68770, 68834],
          [68771, 68835],
          [68772, 68836],
          [68773, 68837],
          [68774, 68838],
          [68775, 68839],
          [68776, 68840],
          [68777, 68841],
          [68778, 68842],
          [68779, 68843],
          [68780, 68844],
          [68781, 68845],
          [68782, 68846],
          [68783, 68847],
          [68784, 68848],
          [68785, 68849],
          [68786, 68850],
          [68800, 68736],
          [68801, 68737],
          [68802, 68738],
          [68803, 68739],
          [68804, 68740],
          [68805, 68741],
          [68806, 68742],
          [68807, 68743],
          [68808, 68744],
          [68809, 68745],
          [68810, 68746],
          [68811, 68747],
          [68812, 68748],
          [68813, 68749],
          [68814, 68750],
          [68815, 68751],
          [68816, 68752],
          [68817, 68753],
          [68818, 68754],
          [68819, 68755],
          [68820, 68756],
          [68821, 68757],
          [68822, 68758],
          [68823, 68759],
          [68824, 68760],
          [68825, 68761],
          [68826, 68762],
          [68827, 68763],
          [68828, 68764],
          [68829, 68765],
          [68830, 68766],
          [68831, 68767],
          [68832, 68768],
          [68833, 68769],
          [68834, 68770],
          [68835, 68771],
          [68836, 68772],
          [68837, 68773],
          [68838, 68774],
          [68839, 68775],
          [68840, 68776],
          [68841, 68777],
          [68842, 68778],
          [68843, 68779],
          [68844, 68780],
          [68845, 68781],
          [68846, 68782],
          [68847, 68783],
          [68848, 68784],
          [68849, 68785],
          [68850, 68786],
          [71840, 71872],
          [71841, 71873],
          [71842, 71874],
          [71843, 71875],
          [71844, 71876],
          [71845, 71877],
          [71846, 71878],
          [71847, 71879],
          [71848, 71880],
          [71849, 71881],
          [71850, 71882],
          [71851, 71883],
          [71852, 71884],
          [71853, 71885],
          [71854, 71886],
          [71855, 71887],
          [71856, 71888],
          [71857, 71889],
          [71858, 71890],
          [71859, 71891],
          [71860, 71892],
          [71861, 71893],
          [71862, 71894],
          [71863, 71895],
          [71864, 71896],
          [71865, 71897],
          [71866, 71898],
          [71867, 71899],
          [71868, 71900],
          [71869, 71901],
          [71870, 71902],
          [71871, 71903],
          [71872, 71840],
          [71873, 71841],
          [71874, 71842],
          [71875, 71843],
          [71876, 71844],
          [71877, 71845],
          [71878, 71846],
          [71879, 71847],
          [71880, 71848],
          [71881, 71849],
          [71882, 71850],
          [71883, 71851],
          [71884, 71852],
          [71885, 71853],
          [71886, 71854],
          [71887, 71855],
          [71888, 71856],
          [71889, 71857],
          [71890, 71858],
          [71891, 71859],
          [71892, 71860],
          [71893, 71861],
          [71894, 71862],
          [71895, 71863],
          [71896, 71864],
          [71897, 71865],
          [71898, 71866],
          [71899, 71867],
          [71900, 71868],
          [71901, 71869],
          [71902, 71870],
          [71903, 71871],
          [93760, 93792],
          [93761, 93793],
          [93762, 93794],
          [93763, 93795],
          [93764, 93796],
          [93765, 93797],
          [93766, 93798],
          [93767, 93799],
          [93768, 93800],
          [93769, 93801],
          [93770, 93802],
          [93771, 93803],
          [93772, 93804],
          [93773, 93805],
          [93774, 93806],
          [93775, 93807],
          [93776, 93808],
          [93777, 93809],
          [93778, 93810],
          [93779, 93811],
          [93780, 93812],
          [93781, 93813],
          [93782, 93814],
          [93783, 93815],
          [93784, 93816],
          [93785, 93817],
          [93786, 93818],
          [93787, 93819],
          [93788, 93820],
          [93789, 93821],
          [93790, 93822],
          [93791, 93823],
          [93792, 93760],
          [93793, 93761],
          [93794, 93762],
          [93795, 93763],
          [93796, 93764],
          [93797, 93765],
          [93798, 93766],
          [93799, 93767],
          [93800, 93768],
          [93801, 93769],
          [93802, 93770],
          [93803, 93771],
          [93804, 93772],
          [93805, 93773],
          [93806, 93774],
          [93807, 93775],
          [93808, 93776],
          [93809, 93777],
          [93810, 93778],
          [93811, 93779],
          [93812, 93780],
          [93813, 93781],
          [93814, 93782],
          [93815, 93783],
          [93816, 93784],
          [93817, 93785],
          [93818, 93786],
          [93819, 93787],
          [93820, 93788],
          [93821, 93789],
          [93822, 93790],
          [93823, 93791],
          [125184, 125218],
          [125185, 125219],
          [125186, 125220],
          [125187, 125221],
          [125188, 125222],
          [125189, 125223],
          [125190, 125224],
          [125191, 125225],
          [125192, 125226],
          [125193, 125227],
          [125194, 125228],
          [125195, 125229],
          [125196, 125230],
          [125197, 125231],
          [125198, 125232],
          [125199, 125233],
          [125200, 125234],
          [125201, 125235],
          [125202, 125236],
          [125203, 125237],
          [125204, 125238],
          [125205, 125239],
          [125206, 125240],
          [125207, 125241],
          [125208, 125242],
          [125209, 125243],
          [125210, 125244],
          [125211, 125245],
          [125212, 125246],
          [125213, 125247],
          [125214, 125248],
          [125215, 125249],
          [125216, 125250],
          [125217, 125251],
          [125218, 125184],
          [125219, 125185],
          [125220, 125186],
          [125221, 125187],
          [125222, 125188],
          [125223, 125189],
          [125224, 125190],
          [125225, 125191],
          [125226, 125192],
          [125227, 125193],
          [125228, 125194],
          [125229, 125195],
          [125230, 125196],
          [125231, 125197],
          [125232, 125198],
          [125233, 125199],
          [125234, 125200],
          [125235, 125201],
          [125236, 125202],
          [125237, 125203],
          [125238, 125204],
          [125239, 125205],
          [125240, 125206],
          [125241, 125207],
          [125242, 125208],
          [125243, 125209],
          [125244, 125210],
          [125245, 125211],
          [125246, 125212],
          [125247, 125213],
          [125248, 125214],
          [125249, 125215],
          [125250, 125216],
          [125251, 125217],
        ]);
      },
      function(e, t, n) {
        "use strict";
        var a = n(0);
        (t.REGULAR = new Map([
          ["d", a().addRange(48, 57)],
          [
            "D",
            a()
              .addRange(0, 47)
              .addRange(58, 65535),
          ],
          [
            "s",
            a(32, 160, 5760, 8239, 8287, 12288, 65279)
              .addRange(9, 13)
              .addRange(8192, 8202)
              .addRange(8232, 8233),
          ],
          [
            "S",
            a()
              .addRange(0, 8)
              .addRange(14, 31)
              .addRange(33, 159)
              .addRange(161, 5759)
              .addRange(5761, 8191)
              .addRange(8203, 8231)
              .addRange(8234, 8238)
              .addRange(8240, 8286)
              .addRange(8288, 12287)
              .addRange(12289, 65278)
              .addRange(65280, 65535),
          ],
          [
            "w",
            a(95)
              .addRange(48, 57)
              .addRange(65, 90)
              .addRange(97, 122),
          ],
          [
            "W",
            a(96)
              .addRange(0, 47)
              .addRange(58, 64)
              .addRange(91, 94)
              .addRange(123, 65535),
          ],
        ])),
          (t.UNICODE = new Map([
            ["d", a().addRange(48, 57)],
            [
              "D",
              a()
                .addRange(0, 47)
                .addRange(58, 1114111),
            ],
            [
              "s",
              a(32, 160, 5760, 8239, 8287, 12288, 65279)
                .addRange(9, 13)
                .addRange(8192, 8202)
                .addRange(8232, 8233),
            ],
            [
              "S",
              a()
                .addRange(0, 8)
                .addRange(14, 31)
                .addRange(33, 159)
                .addRange(161, 5759)
                .addRange(5761, 8191)
                .addRange(8203, 8231)
                .addRange(8234, 8238)
                .addRange(8240, 8286)
                .addRange(8288, 12287)
                .addRange(12289, 65278)
                .addRange(65280, 1114111),
            ],
            [
              "w",
              a(95)
                .addRange(48, 57)
                .addRange(65, 90)
                .addRange(97, 122),
            ],
            [
              "W",
              a(96)
                .addRange(0, 47)
                .addRange(58, 64)
                .addRange(91, 94)
                .addRange(123, 1114111),
            ],
          ])),
          (t.UNICODE_IGNORE_CASE = new Map([
            ["d", a().addRange(48, 57)],
            [
              "D",
              a()
                .addRange(0, 47)
                .addRange(58, 1114111),
            ],
            [
              "s",
              a(32, 160, 5760, 8239, 8287, 12288, 65279)
                .addRange(9, 13)
                .addRange(8192, 8202)
                .addRange(8232, 8233),
            ],
            [
              "S",
              a()
                .addRange(0, 8)
                .addRange(14, 31)
                .addRange(33, 159)
                .addRange(161, 5759)
                .addRange(5761, 8191)
                .addRange(8203, 8231)
                .addRange(8234, 8238)
                .addRange(8240, 8286)
                .addRange(8288, 12287)
                .addRange(12289, 65278)
                .addRange(65280, 1114111),
            ],
            [
              "w",
              a(95, 383, 8490)
                .addRange(48, 57)
                .addRange(65, 90)
                .addRange(97, 122),
            ],
            [
              "W",
              a(96)
                .addRange(0, 47)
                .addRange(58, 64)
                .addRange(91, 94)
                .addRange(123, 382)
                .addRange(384, 8489)
                .addRange(8491, 1114111),
            ],
          ]));
      },
      function(e, t, n) {
        var a = {
          "./Binary_Property/ASCII.js": 542,
          "./Binary_Property/ASCII_Hex_Digit.js": 543,
          "./Binary_Property/Alphabetic.js": 544,
          "./Binary_Property/Any.js": 545,
          "./Binary_Property/Assigned.js": 546,
          "./Binary_Property/Bidi_Control.js": 547,
          "./Binary_Property/Bidi_Mirrored.js": 548,
          "./Binary_Property/Case_Ignorable.js": 549,
          "./Binary_Property/Cased.js": 550,
          "./Binary_Property/Changes_When_Casefolded.js": 551,
          "./Binary_Property/Changes_When_Casemapped.js": 552,
          "./Binary_Property/Changes_When_Lowercased.js": 553,
          "./Binary_Property/Changes_When_NFKC_Casefolded.js": 554,
          "./Binary_Property/Changes_When_Titlecased.js": 555,
          "./Binary_Property/Changes_When_Uppercased.js": 556,
          "./Binary_Property/Dash.js": 557,
          "./Binary_Property/Default_Ignorable_Code_Point.js": 558,
          "./Binary_Property/Deprecated.js": 559,
          "./Binary_Property/Diacritic.js": 560,
          "./Binary_Property/Emoji.js": 561,
          "./Binary_Property/Emoji_Component.js": 562,
          "./Binary_Property/Emoji_Modifier.js": 563,
          "./Binary_Property/Emoji_Modifier_Base.js": 564,
          "./Binary_Property/Emoji_Presentation.js": 565,
          "./Binary_Property/Extended_Pictographic.js": 566,
          "./Binary_Property/Extender.js": 567,
          "./Binary_Property/Grapheme_Base.js": 568,
          "./Binary_Property/Grapheme_Extend.js": 569,
          "./Binary_Property/Hex_Digit.js": 570,
          "./Binary_Property/IDS_Binary_Operator.js": 571,
          "./Binary_Property/IDS_Trinary_Operator.js": 572,
          "./Binary_Property/ID_Continue.js": 573,
          "./Binary_Property/ID_Start.js": 574,
          "./Binary_Property/Ideographic.js": 575,
          "./Binary_Property/Join_Control.js": 576,
          "./Binary_Property/Logical_Order_Exception.js": 577,
          "./Binary_Property/Lowercase.js": 578,
          "./Binary_Property/Math.js": 579,
          "./Binary_Property/Noncharacter_Code_Point.js": 580,
          "./Binary_Property/Pattern_Syntax.js": 581,
          "./Binary_Property/Pattern_White_Space.js": 582,
          "./Binary_Property/Quotation_Mark.js": 583,
          "./Binary_Property/Radical.js": 584,
          "./Binary_Property/Regional_Indicator.js": 585,
          "./Binary_Property/Sentence_Terminal.js": 586,
          "./Binary_Property/Soft_Dotted.js": 587,
          "./Binary_Property/Terminal_Punctuation.js": 588,
          "./Binary_Property/Unified_Ideograph.js": 589,
          "./Binary_Property/Uppercase.js": 590,
          "./Binary_Property/Variation_Selector.js": 591,
          "./Binary_Property/White_Space.js": 592,
          "./Binary_Property/XID_Continue.js": 593,
          "./Binary_Property/XID_Start.js": 594,
          "./General_Category/Cased_Letter.js": 595,
          "./General_Category/Close_Punctuation.js": 596,
          "./General_Category/Connector_Punctuation.js": 597,
          "./General_Category/Control.js": 598,
          "./General_Category/Currency_Symbol.js": 599,
          "./General_Category/Dash_Punctuation.js": 600,
          "./General_Category/Decimal_Number.js": 601,
          "./General_Category/Enclosing_Mark.js": 602,
          "./General_Category/Final_Punctuation.js": 603,
          "./General_Category/Format.js": 604,
          "./General_Category/Initial_Punctuation.js": 605,
          "./General_Category/Letter.js": 606,
          "./General_Category/Letter_Number.js": 607,
          "./General_Category/Line_Separator.js": 608,
          "./General_Category/Lowercase_Letter.js": 609,
          "./General_Category/Mark.js": 610,
          "./General_Category/Math_Symbol.js": 611,
          "./General_Category/Modifier_Letter.js": 612,
          "./General_Category/Modifier_Symbol.js": 613,
          "./General_Category/Nonspacing_Mark.js": 614,
          "./General_Category/Number.js": 615,
          "./General_Category/Open_Punctuation.js": 616,
          "./General_Category/Other.js": 617,
          "./General_Category/Other_Letter.js": 618,
          "./General_Category/Other_Number.js": 619,
          "./General_Category/Other_Punctuation.js": 620,
          "./General_Category/Other_Symbol.js": 621,
          "./General_Category/Paragraph_Separator.js": 622,
          "./General_Category/Private_Use.js": 623,
          "./General_Category/Punctuation.js": 624,
          "./General_Category/Separator.js": 625,
          "./General_Category/Space_Separator.js": 626,
          "./General_Category/Spacing_Mark.js": 627,
          "./General_Category/Surrogate.js": 628,
          "./General_Category/Symbol.js": 629,
          "./General_Category/Titlecase_Letter.js": 630,
          "./General_Category/Unassigned.js": 631,
          "./General_Category/Uppercase_Letter.js": 632,
          "./Script/Adlam.js": 633,
          "./Script/Ahom.js": 634,
          "./Script/Anatolian_Hieroglyphs.js": 635,
          "./Script/Arabic.js": 636,
          "./Script/Armenian.js": 637,
          "./Script/Avestan.js": 638,
          "./Script/Balinese.js": 639,
          "./Script/Bamum.js": 640,
          "./Script/Bassa_Vah.js": 641,
          "./Script/Batak.js": 642,
          "./Script/Bengali.js": 643,
          "./Script/Bhaiksuki.js": 644,
          "./Script/Bopomofo.js": 645,
          "./Script/Brahmi.js": 646,
          "./Script/Braille.js": 647,
          "./Script/Buginese.js": 648,
          "./Script/Buhid.js": 649,
          "./Script/Canadian_Aboriginal.js": 650,
          "./Script/Carian.js": 651,
          "./Script/Caucasian_Albanian.js": 652,
          "./Script/Chakma.js": 653,
          "./Script/Cham.js": 654,
          "./Script/Cherokee.js": 655,
          "./Script/Common.js": 656,
          "./Script/Coptic.js": 657,
          "./Script/Cuneiform.js": 658,
          "./Script/Cypriot.js": 659,
          "./Script/Cyrillic.js": 660,
          "./Script/Deseret.js": 661,
          "./Script/Devanagari.js": 662,
          "./Script/Dogra.js": 663,
          "./Script/Duployan.js": 664,
          "./Script/Egyptian_Hieroglyphs.js": 665,
          "./Script/Elbasan.js": 666,
          "./Script/Ethiopic.js": 667,
          "./Script/Georgian.js": 668,
          "./Script/Glagolitic.js": 669,
          "./Script/Gothic.js": 670,
          "./Script/Grantha.js": 671,
          "./Script/Greek.js": 672,
          "./Script/Gujarati.js": 673,
          "./Script/Gunjala_Gondi.js": 674,
          "./Script/Gurmukhi.js": 675,
          "./Script/Han.js": 676,
          "./Script/Hangul.js": 677,
          "./Script/Hanifi_Rohingya.js": 678,
          "./Script/Hanunoo.js": 679,
          "./Script/Hatran.js": 680,
          "./Script/Hebrew.js": 681,
          "./Script/Hiragana.js": 682,
          "./Script/Imperial_Aramaic.js": 683,
          "./Script/Inherited.js": 684,
          "./Script/Inscriptional_Pahlavi.js": 685,
          "./Script/Inscriptional_Parthian.js": 686,
          "./Script/Javanese.js": 687,
          "./Script/Kaithi.js": 688,
          "./Script/Kannada.js": 689,
          "./Script/Katakana.js": 690,
          "./Script/Kayah_Li.js": 691,
          "./Script/Kharoshthi.js": 692,
          "./Script/Khmer.js": 693,
          "./Script/Khojki.js": 694,
          "./Script/Khudawadi.js": 695,
          "./Script/Lao.js": 696,
          "./Script/Latin.js": 697,
          "./Script/Lepcha.js": 698,
          "./Script/Limbu.js": 699,
          "./Script/Linear_A.js": 700,
          "./Script/Linear_B.js": 701,
          "./Script/Lisu.js": 702,
          "./Script/Lycian.js": 703,
          "./Script/Lydian.js": 704,
          "./Script/Mahajani.js": 705,
          "./Script/Makasar.js": 706,
          "./Script/Malayalam.js": 707,
          "./Script/Mandaic.js": 708,
          "./Script/Manichaean.js": 709,
          "./Script/Marchen.js": 710,
          "./Script/Masaram_Gondi.js": 711,
          "./Script/Medefaidrin.js": 712,
          "./Script/Meetei_Mayek.js": 713,
          "./Script/Mende_Kikakui.js": 714,
          "./Script/Meroitic_Cursive.js": 715,
          "./Script/Meroitic_Hieroglyphs.js": 716,
          "./Script/Miao.js": 717,
          "./Script/Modi.js": 718,
          "./Script/Mongolian.js": 719,
          "./Script/Mro.js": 720,
          "./Script/Multani.js": 721,
          "./Script/Myanmar.js": 722,
          "./Script/Nabataean.js": 723,
          "./Script/New_Tai_Lue.js": 724,
          "./Script/Newa.js": 725,
          "./Script/Nko.js": 726,
          "./Script/Nushu.js": 727,
          "./Script/Ogham.js": 728,
          "./Script/Ol_Chiki.js": 729,
          "./Script/Old_Hungarian.js": 730,
          "./Script/Old_Italic.js": 731,
          "./Script/Old_North_Arabian.js": 732,
          "./Script/Old_Permic.js": 733,
          "./Script/Old_Persian.js": 734,
          "./Script/Old_Sogdian.js": 735,
          "./Script/Old_South_Arabian.js": 736,
          "./Script/Old_Turkic.js": 737,
          "./Script/Oriya.js": 738,
          "./Script/Osage.js": 739,
          "./Script/Osmanya.js": 740,
          "./Script/Pahawh_Hmong.js": 741,
          "./Script/Palmyrene.js": 742,
          "./Script/Pau_Cin_Hau.js": 743,
          "./Script/Phags_Pa.js": 744,
          "./Script/Phoenician.js": 745,
          "./Script/Psalter_Pahlavi.js": 746,
          "./Script/Rejang.js": 747,
          "./Script/Runic.js": 748,
          "./Script/Samaritan.js": 749,
          "./Script/Saurashtra.js": 750,
          "./Script/Sharada.js": 751,
          "./Script/Shavian.js": 752,
          "./Script/Siddham.js": 753,
          "./Script/SignWriting.js": 754,
          "./Script/Sinhala.js": 755,
          "./Script/Sogdian.js": 756,
          "./Script/Sora_Sompeng.js": 757,
          "./Script/Soyombo.js": 758,
          "./Script/Sundanese.js": 759,
          "./Script/Syloti_Nagri.js": 760,
          "./Script/Syriac.js": 761,
          "./Script/Tagalog.js": 762,
          "./Script/Tagbanwa.js": 763,
          "./Script/Tai_Le.js": 764,
          "./Script/Tai_Tham.js": 765,
          "./Script/Tai_Viet.js": 766,
          "./Script/Takri.js": 767,
          "./Script/Tamil.js": 768,
          "./Script/Tangut.js": 769,
          "./Script/Telugu.js": 770,
          "./Script/Thaana.js": 771,
          "./Script/Thai.js": 772,
          "./Script/Tibetan.js": 773,
          "./Script/Tifinagh.js": 774,
          "./Script/Tirhuta.js": 775,
          "./Script/Ugaritic.js": 776,
          "./Script/Vai.js": 777,
          "./Script/Warang_Citi.js": 778,
          "./Script/Yi.js": 779,
          "./Script/Zanabazar_Square.js": 780,
          "./Script_Extensions/Adlam.js": 781,
          "./Script_Extensions/Ahom.js": 782,
          "./Script_Extensions/Anatolian_Hieroglyphs.js": 783,
          "./Script_Extensions/Arabic.js": 784,
          "./Script_Extensions/Armenian.js": 785,
          "./Script_Extensions/Avestan.js": 786,
          "./Script_Extensions/Balinese.js": 787,
          "./Script_Extensions/Bamum.js": 788,
          "./Script_Extensions/Bassa_Vah.js": 789,
          "./Script_Extensions/Batak.js": 790,
          "./Script_Extensions/Bengali.js": 791,
          "./Script_Extensions/Bhaiksuki.js": 792,
          "./Script_Extensions/Bopomofo.js": 793,
          "./Script_Extensions/Brahmi.js": 794,
          "./Script_Extensions/Braille.js": 795,
          "./Script_Extensions/Buginese.js": 796,
          "./Script_Extensions/Buhid.js": 797,
          "./Script_Extensions/Canadian_Aboriginal.js": 798,
          "./Script_Extensions/Carian.js": 799,
          "./Script_Extensions/Caucasian_Albanian.js": 800,
          "./Script_Extensions/Chakma.js": 801,
          "./Script_Extensions/Cham.js": 802,
          "./Script_Extensions/Cherokee.js": 803,
          "./Script_Extensions/Common.js": 804,
          "./Script_Extensions/Coptic.js": 805,
          "./Script_Extensions/Cuneiform.js": 806,
          "./Script_Extensions/Cypriot.js": 807,
          "./Script_Extensions/Cyrillic.js": 808,
          "./Script_Extensions/Deseret.js": 809,
          "./Script_Extensions/Devanagari.js": 810,
          "./Script_Extensions/Dogra.js": 811,
          "./Script_Extensions/Duployan.js": 812,
          "./Script_Extensions/Egyptian_Hieroglyphs.js": 813,
          "./Script_Extensions/Elbasan.js": 814,
          "./Script_Extensions/Ethiopic.js": 815,
          "./Script_Extensions/Georgian.js": 816,
          "./Script_Extensions/Glagolitic.js": 817,
          "./Script_Extensions/Gothic.js": 818,
          "./Script_Extensions/Grantha.js": 819,
          "./Script_Extensions/Greek.js": 820,
          "./Script_Extensions/Gujarati.js": 821,
          "./Script_Extensions/Gunjala_Gondi.js": 822,
          "./Script_Extensions/Gurmukhi.js": 823,
          "./Script_Extensions/Han.js": 824,
          "./Script_Extensions/Hangul.js": 825,
          "./Script_Extensions/Hanifi_Rohingya.js": 826,
          "./Script_Extensions/Hanunoo.js": 827,
          "./Script_Extensions/Hatran.js": 828,
          "./Script_Extensions/Hebrew.js": 829,
          "./Script_Extensions/Hiragana.js": 830,
          "./Script_Extensions/Imperial_Aramaic.js": 831,
          "./Script_Extensions/Inherited.js": 832,
          "./Script_Extensions/Inscriptional_Pahlavi.js": 833,
          "./Script_Extensions/Inscriptional_Parthian.js": 834,
          "./Script_Extensions/Javanese.js": 835,
          "./Script_Extensions/Kaithi.js": 836,
          "./Script_Extensions/Kannada.js": 837,
          "./Script_Extensions/Katakana.js": 838,
          "./Script_Extensions/Kayah_Li.js": 839,
          "./Script_Extensions/Kharoshthi.js": 840,
          "./Script_Extensions/Khmer.js": 841,
          "./Script_Extensions/Khojki.js": 842,
          "./Script_Extensions/Khudawadi.js": 843,
          "./Script_Extensions/Lao.js": 844,
          "./Script_Extensions/Latin.js": 845,
          "./Script_Extensions/Lepcha.js": 846,
          "./Script_Extensions/Limbu.js": 847,
          "./Script_Extensions/Linear_A.js": 848,
          "./Script_Extensions/Linear_B.js": 849,
          "./Script_Extensions/Lisu.js": 850,
          "./Script_Extensions/Lycian.js": 851,
          "./Script_Extensions/Lydian.js": 852,
          "./Script_Extensions/Mahajani.js": 853,
          "./Script_Extensions/Makasar.js": 854,
          "./Script_Extensions/Malayalam.js": 855,
          "./Script_Extensions/Mandaic.js": 856,
          "./Script_Extensions/Manichaean.js": 857,
          "./Script_Extensions/Marchen.js": 858,
          "./Script_Extensions/Masaram_Gondi.js": 859,
          "./Script_Extensions/Medefaidrin.js": 860,
          "./Script_Extensions/Meetei_Mayek.js": 861,
          "./Script_Extensions/Mende_Kikakui.js": 862,
          "./Script_Extensions/Meroitic_Cursive.js": 863,
          "./Script_Extensions/Meroitic_Hieroglyphs.js": 864,
          "./Script_Extensions/Miao.js": 865,
          "./Script_Extensions/Modi.js": 866,
          "./Script_Extensions/Mongolian.js": 867,
          "./Script_Extensions/Mro.js": 868,
          "./Script_Extensions/Multani.js": 869,
          "./Script_Extensions/Myanmar.js": 870,
          "./Script_Extensions/Nabataean.js": 871,
          "./Script_Extensions/New_Tai_Lue.js": 872,
          "./Script_Extensions/Newa.js": 873,
          "./Script_Extensions/Nko.js": 874,
          "./Script_Extensions/Nushu.js": 875,
          "./Script_Extensions/Ogham.js": 876,
          "./Script_Extensions/Ol_Chiki.js": 877,
          "./Script_Extensions/Old_Hungarian.js": 878,
          "./Script_Extensions/Old_Italic.js": 879,
          "./Script_Extensions/Old_North_Arabian.js": 880,
          "./Script_Extensions/Old_Permic.js": 881,
          "./Script_Extensions/Old_Persian.js": 882,
          "./Script_Extensions/Old_Sogdian.js": 883,
          "./Script_Extensions/Old_South_Arabian.js": 884,
          "./Script_Extensions/Old_Turkic.js": 885,
          "./Script_Extensions/Oriya.js": 886,
          "./Script_Extensions/Osage.js": 887,
          "./Script_Extensions/Osmanya.js": 888,
          "./Script_Extensions/Pahawh_Hmong.js": 889,
          "./Script_Extensions/Palmyrene.js": 890,
          "./Script_Extensions/Pau_Cin_Hau.js": 891,
          "./Script_Extensions/Phags_Pa.js": 892,
          "./Script_Extensions/Phoenician.js": 893,
          "./Script_Extensions/Psalter_Pahlavi.js": 894,
          "./Script_Extensions/Rejang.js": 895,
          "./Script_Extensions/Runic.js": 896,
          "./Script_Extensions/Samaritan.js": 897,
          "./Script_Extensions/Saurashtra.js": 898,
          "./Script_Extensions/Sharada.js": 899,
          "./Script_Extensions/Shavian.js": 900,
          "./Script_Extensions/Siddham.js": 901,
          "./Script_Extensions/SignWriting.js": 902,
          "./Script_Extensions/Sinhala.js": 903,
          "./Script_Extensions/Sogdian.js": 904,
          "./Script_Extensions/Sora_Sompeng.js": 905,
          "./Script_Extensions/Soyombo.js": 906,
          "./Script_Extensions/Sundanese.js": 907,
          "./Script_Extensions/Syloti_Nagri.js": 908,
          "./Script_Extensions/Syriac.js": 909,
          "./Script_Extensions/Tagalog.js": 910,
          "./Script_Extensions/Tagbanwa.js": 911,
          "./Script_Extensions/Tai_Le.js": 912,
          "./Script_Extensions/Tai_Tham.js": 913,
          "./Script_Extensions/Tai_Viet.js": 914,
          "./Script_Extensions/Takri.js": 915,
          "./Script_Extensions/Tamil.js": 916,
          "./Script_Extensions/Tangut.js": 917,
          "./Script_Extensions/Telugu.js": 918,
          "./Script_Extensions/Thaana.js": 919,
          "./Script_Extensions/Thai.js": 920,
          "./Script_Extensions/Tibetan.js": 921,
          "./Script_Extensions/Tifinagh.js": 922,
          "./Script_Extensions/Tirhuta.js": 923,
          "./Script_Extensions/Ugaritic.js": 924,
          "./Script_Extensions/Vai.js": 925,
          "./Script_Extensions/Warang_Citi.js": 926,
          "./Script_Extensions/Yi.js": 927,
          "./Script_Extensions/Zanabazar_Square.js": 928,
          "./index.js": 929,
          "./unicode-version.js": 930,
        };
        function r(e) {
          var t = i(e);
          return n(t);
        }
        function i(e) {
          var t = a[e];
          if (t + 1) return t;
          var n = new Error("Cannot find module '" + e + "'");
          throw ((n.code = "MODULE_NOT_FOUND"), n);
        }
        (r.keys = function() {
          return Object.keys(a);
        }),
          (r.resolve = i),
          ((e.exports = r).id = 541);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(0, 127);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(48, 57)
          .addRange(65, 70)
          .addRange(97, 102);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          181,
          186,
          748,
          750,
          837,
          895,
          902,
          908,
          1369,
          1471,
          1479,
          1791,
          2042,
          2482,
          2510,
          2519,
          2556,
          2641,
          2654,
          2768,
          2929,
          2972,
          3024,
          3031,
          3294,
          3406,
          3517,
          3542,
          3661,
          3716,
          3722,
          3725,
          3749,
          3751,
          3782,
          3789,
          3840,
          4152,
          4238,
          4295,
          4301,
          4696,
          4800,
          4959,
          6103,
          6108,
          6823,
          8025,
          8027,
          8029,
          8126,
          8305,
          8319,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8526,
          11559,
          11565,
          11631,
          11823,
          43205,
          43259,
          43471,
          43642,
          43712,
          43714,
          64318,
          67592,
          67644,
          69415,
          70006,
          70106,
          70108,
          70199,
          70206,
          70280,
          70480,
          70487,
          70855,
          71232,
          71236,
          71935,
          72349,
          72768,
          73018,
          73027,
          73112,
          113822,
          119970,
          119995,
          120134,
          125255,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(880, 884)
          .addRange(886, 887)
          .addRange(890, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(1456, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1552, 1562)
          .addRange(1568, 1623)
          .addRange(1625, 1631)
          .addRange(1646, 1747)
          .addRange(1749, 1756)
          .addRange(1761, 1768)
          .addRange(1773, 1775)
          .addRange(1786, 1788)
          .addRange(1808, 1855)
          .addRange(1869, 1969)
          .addRange(1994, 2026)
          .addRange(2036, 2037)
          .addRange(2048, 2071)
          .addRange(2074, 2092)
          .addRange(2112, 2136)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2260, 2271)
          .addRange(2275, 2281)
          .addRange(2288, 2363)
          .addRange(2365, 2380)
          .addRange(2382, 2384)
          .addRange(2389, 2403)
          .addRange(2417, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2493, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2508)
          .addRange(2524, 2525)
          .addRange(2527, 2531)
          .addRange(2544, 2545)
          .addRange(2561, 2563)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2636)
          .addRange(2649, 2652)
          .addRange(2672, 2677)
          .addRange(2689, 2691)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2749, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2764)
          .addRange(2784, 2787)
          .addRange(2809, 2812)
          .addRange(2817, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2877, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2892)
          .addRange(2902, 2903)
          .addRange(2908, 2909)
          .addRange(2911, 2915)
          .addRange(2946, 2947)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3020)
          .addRange(3072, 3075)
          .addRange(3077, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3133, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3148)
          .addRange(3157, 3158)
          .addRange(3160, 3162)
          .addRange(3168, 3171)
          .addRange(3200, 3203)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3261, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3276)
          .addRange(3285, 3286)
          .addRange(3296, 3299)
          .addRange(3313, 3314)
          .addRange(3328, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3386)
          .addRange(3389, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3404)
          .addRange(3412, 3415)
          .addRange(3423, 3427)
          .addRange(3450, 3455)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3570, 3571)
          .addRange(3585, 3642)
          .addRange(3648, 3654)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3769)
          .addRange(3771, 3773)
          .addRange(3776, 3780)
          .addRange(3804, 3807)
          .addRange(3904, 3911)
          .addRange(3913, 3948)
          .addRange(3953, 3969)
          .addRange(3976, 3991)
          .addRange(3993, 4028)
          .addRange(4096, 4150)
          .addRange(4155, 4159)
          .addRange(4176, 4194)
          .addRange(4197, 4200)
          .addRange(4206, 4230)
          .addRange(4252, 4253)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4992, 5007)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5870, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5907)
          .addRange(5920, 5939)
          .addRange(5952, 5971)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6002, 6003)
          .addRange(6016, 6067)
          .addRange(6070, 6088)
          .addRange(6176, 6264)
          .addRange(6272, 6314)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6432, 6443)
          .addRange(6448, 6456)
          .addRange(6480, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6656, 6683)
          .addRange(6688, 6750)
          .addRange(6753, 6772)
          .addRange(6912, 6963)
          .addRange(6965, 6979)
          .addRange(6981, 6987)
          .addRange(7040, 7081)
          .addRange(7084, 7087)
          .addRange(7098, 7141)
          .addRange(7143, 7153)
          .addRange(7168, 7221)
          .addRange(7245, 7247)
          .addRange(7258, 7293)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7401, 7404)
          .addRange(7406, 7411)
          .addRange(7413, 7414)
          .addRange(7424, 7615)
          .addRange(7655, 7668)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8336, 8348)
          .addRange(8458, 8467)
          .addRange(8473, 8477)
          .addRange(8490, 8493)
          .addRange(8495, 8505)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8544, 8584)
          .addRange(9398, 9449)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(11568, 11623)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(11744, 11775)
          .addRange(12293, 12295)
          .addRange(12321, 12329)
          .addRange(12337, 12341)
          .addRange(12344, 12348)
          .addRange(12353, 12438)
          .addRange(12445, 12447)
          .addRange(12449, 12538)
          .addRange(12540, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 42124)
          .addRange(42192, 42237)
          .addRange(42240, 42508)
          .addRange(42512, 42527)
          .addRange(42538, 42539)
          .addRange(42560, 42606)
          .addRange(42612, 42619)
          .addRange(42623, 42735)
          .addRange(42775, 42783)
          .addRange(42786, 42888)
          .addRange(42891, 42937)
          .addRange(42999, 43009)
          .addRange(43011, 43013)
          .addRange(43015, 43018)
          .addRange(43020, 43047)
          .addRange(43072, 43123)
          .addRange(43136, 43203)
          .addRange(43250, 43255)
          .addRange(43261, 43262)
          .addRange(43274, 43306)
          .addRange(43312, 43346)
          .addRange(43360, 43388)
          .addRange(43392, 43442)
          .addRange(43444, 43455)
          .addRange(43488, 43492)
          .addRange(43494, 43503)
          .addRange(43514, 43518)
          .addRange(43520, 43574)
          .addRange(43584, 43597)
          .addRange(43616, 43638)
          .addRange(43646, 43710)
          .addRange(43739, 43741)
          .addRange(43744, 43759)
          .addRange(43762, 43765)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 44010)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64285, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65019)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(65382, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65856, 65908)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66378)
          .addRange(66384, 66426)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66513, 66517)
          .addRange(66560, 66717)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68096, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68324)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68864, 68903)
          .addRange(69376, 69404)
          .addRange(69424, 69445)
          .addRange(69632, 69701)
          .addRange(69762, 69816)
          .addRange(69840, 69864)
          .addRange(69888, 69938)
          .addRange(69956, 69958)
          .addRange(69968, 70002)
          .addRange(70016, 70079)
          .addRange(70081, 70084)
          .addRange(70144, 70161)
          .addRange(70163, 70196)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70376)
          .addRange(70400, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70461, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70476)
          .addRange(70493, 70499)
          .addRange(70656, 70721)
          .addRange(70723, 70725)
          .addRange(70727, 70730)
          .addRange(70784, 70849)
          .addRange(70852, 70853)
          .addRange(71040, 71093)
          .addRange(71096, 71102)
          .addRange(71128, 71133)
          .addRange(71168, 71230)
          .addRange(71296, 71349)
          .addRange(71424, 71450)
          .addRange(71453, 71466)
          .addRange(71680, 71736)
          .addRange(71840, 71903)
          .addRange(72192, 72242)
          .addRange(72245, 72254)
          .addRange(72272, 72323)
          .addRange(72326, 72343)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72758)
          .addRange(72760, 72766)
          .addRange(72818, 72847)
          .addRange(72850, 72871)
          .addRange(72873, 72886)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73025)
          .addRange(73030, 73031)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73110)
          .addRange(73440, 73462)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92880, 92909)
          .addRange(92928, 92982)
          .addRange(92992, 92995)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93823)
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94099, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(124928, 125124)
          .addRange(125184, 125251)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(127280, 127305)
          .addRange(127312, 127337)
          .addRange(127344, 127369)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(0, 1114111);
      },
      function(e, t, n) {
        e.exports = n(0)(
          908,
          2142,
          2482,
          2519,
          2620,
          2641,
          2654,
          2768,
          2972,
          3024,
          3031,
          3294,
          3517,
          3530,
          3542,
          3716,
          3722,
          3725,
          3749,
          3751,
          3782,
          4295,
          4301,
          4696,
          4800,
          6464,
          8025,
          8027,
          8029,
          11559,
          11565,
          64318,
          65279,
          65952,
          66927,
          67592,
          67644,
          67903,
          69837,
          70280,
          70480,
          70487,
          70747,
          71935,
          73018,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590,
          129402,
          917505
        )
          .addRange(0, 887)
          .addRange(890, 895)
          .addRange(900, 906)
          .addRange(910, 929)
          .addRange(931, 1327)
          .addRange(1329, 1366)
          .addRange(1369, 1418)
          .addRange(1421, 1423)
          .addRange(1425, 1479)
          .addRange(1488, 1514)
          .addRange(1519, 1524)
          .addRange(1536, 1564)
          .addRange(1566, 1805)
          .addRange(1807, 1866)
          .addRange(1869, 1969)
          .addRange(1984, 2042)
          .addRange(2045, 2093)
          .addRange(2096, 2110)
          .addRange(2112, 2139)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2259, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2492, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2510)
          .addRange(2524, 2525)
          .addRange(2527, 2531)
          .addRange(2534, 2558)
          .addRange(2561, 2563)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2649, 2652)
          .addRange(2662, 2678)
          .addRange(2689, 2691)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2748, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2765)
          .addRange(2784, 2787)
          .addRange(2790, 2801)
          .addRange(2809, 2815)
          .addRange(2817, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2876, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2893)
          .addRange(2902, 2903)
          .addRange(2908, 2909)
          .addRange(2911, 2915)
          .addRange(2918, 2935)
          .addRange(2946, 2947)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3021)
          .addRange(3046, 3066)
          .addRange(3072, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3133, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3160, 3162)
          .addRange(3168, 3171)
          .addRange(3174, 3183)
          .addRange(3192, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3260, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3277)
          .addRange(3285, 3286)
          .addRange(3296, 3299)
          .addRange(3302, 3311)
          .addRange(3313, 3314)
          .addRange(3328, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3407)
          .addRange(3412, 3427)
          .addRange(3430, 3455)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3558, 3567)
          .addRange(3570, 3572)
          .addRange(3585, 3642)
          .addRange(3647, 3675)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3769)
          .addRange(3771, 3773)
          .addRange(3776, 3780)
          .addRange(3784, 3789)
          .addRange(3792, 3801)
          .addRange(3804, 3807)
          .addRange(3840, 3911)
          .addRange(3913, 3948)
          .addRange(3953, 3991)
          .addRange(3993, 4028)
          .addRange(4030, 4044)
          .addRange(4046, 4058)
          .addRange(4096, 4293)
          .addRange(4304, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4957, 4988)
          .addRange(4992, 5017)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5120, 5788)
          .addRange(5792, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5908)
          .addRange(5920, 5942)
          .addRange(5952, 5971)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6002, 6003)
          .addRange(6016, 6109)
          .addRange(6112, 6121)
          .addRange(6128, 6137)
          .addRange(6144, 6158)
          .addRange(6160, 6169)
          .addRange(6176, 6264)
          .addRange(6272, 6314)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6432, 6443)
          .addRange(6448, 6459)
          .addRange(6468, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6608, 6618)
          .addRange(6622, 6683)
          .addRange(6686, 6750)
          .addRange(6752, 6780)
          .addRange(6783, 6793)
          .addRange(6800, 6809)
          .addRange(6816, 6829)
          .addRange(6832, 6846)
          .addRange(6912, 6987)
          .addRange(6992, 7036)
          .addRange(7040, 7155)
          .addRange(7164, 7223)
          .addRange(7227, 7241)
          .addRange(7245, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7367)
          .addRange(7376, 7417)
          .addRange(7424, 7673)
          .addRange(7675, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8132)
          .addRange(8134, 8147)
          .addRange(8150, 8155)
          .addRange(8157, 8175)
          .addRange(8178, 8180)
          .addRange(8182, 8190)
          .addRange(8192, 8292)
          .addRange(8294, 8305)
          .addRange(8308, 8334)
          .addRange(8336, 8348)
          .addRange(8352, 8383)
          .addRange(8400, 8432)
          .addRange(8448, 8587)
          .addRange(8592, 9254)
          .addRange(9280, 9290)
          .addRange(9312, 11123)
          .addRange(11126, 11157)
          .addRange(11160, 11208)
          .addRange(11210, 11262)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11507)
          .addRange(11513, 11557)
          .addRange(11568, 11623)
          .addRange(11631, 11632)
          .addRange(11647, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(11744, 11854)
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245)
          .addRange(12272, 12283)
          .addRange(12288, 12351)
          .addRange(12353, 12438)
          .addRange(12441, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12688, 12730)
          .addRange(12736, 12771)
          .addRange(12784, 12830)
          .addRange(12832, 13054)
          .addRange(13056, 19893)
          .addRange(19904, 40943)
          .addRange(40960, 42124)
          .addRange(42128, 42182)
          .addRange(42192, 42539)
          .addRange(42560, 42743)
          .addRange(42752, 42937)
          .addRange(42999, 43051)
          .addRange(43056, 43065)
          .addRange(43072, 43127)
          .addRange(43136, 43205)
          .addRange(43214, 43225)
          .addRange(43232, 43347)
          .addRange(43359, 43388)
          .addRange(43392, 43469)
          .addRange(43471, 43481)
          .addRange(43486, 43518)
          .addRange(43520, 43574)
          .addRange(43584, 43597)
          .addRange(43600, 43609)
          .addRange(43612, 43714)
          .addRange(43739, 43766)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43877)
          .addRange(43888, 44013)
          .addRange(44016, 44025)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(55296, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64285, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64449)
          .addRange(64467, 64831)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65021)
          .addRange(65024, 65049)
          .addRange(65056, 65106)
          .addRange(65108, 65126)
          .addRange(65128, 65131)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65281, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65504, 65510)
          .addRange(65512, 65518)
          .addRange(65529, 65533)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65792, 65794)
          .addRange(65799, 65843)
          .addRange(65847, 65934)
          .addRange(65936, 65947)
          .addRange(66e3, 66045)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66272, 66299)
          .addRange(66304, 66339)
          .addRange(66349, 66378)
          .addRange(66384, 66426)
          .addRange(66432, 66461)
          .addRange(66463, 66499)
          .addRange(66504, 66517)
          .addRange(66560, 66717)
          .addRange(66720, 66729)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67671, 67742)
          .addRange(67751, 67759)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67835, 67867)
          .addRange(67871, 67897)
          .addRange(67968, 68023)
          .addRange(68028, 68047)
          .addRange(68050, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68152, 68154)
          .addRange(68159, 68168)
          .addRange(68176, 68184)
          .addRange(68192, 68255)
          .addRange(68288, 68326)
          .addRange(68331, 68342)
          .addRange(68352, 68405)
          .addRange(68409, 68437)
          .addRange(68440, 68466)
          .addRange(68472, 68497)
          .addRange(68505, 68508)
          .addRange(68521, 68527)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68858, 68903)
          .addRange(68912, 68921)
          .addRange(69216, 69246)
          .addRange(69376, 69415)
          .addRange(69424, 69465)
          .addRange(69632, 69709)
          .addRange(69714, 69743)
          .addRange(69759, 69825)
          .addRange(69840, 69864)
          .addRange(69872, 69881)
          .addRange(69888, 69940)
          .addRange(69942, 69958)
          .addRange(69968, 70006)
          .addRange(70016, 70093)
          .addRange(70096, 70111)
          .addRange(70113, 70132)
          .addRange(70144, 70161)
          .addRange(70163, 70206)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70313)
          .addRange(70320, 70378)
          .addRange(70384, 70393)
          .addRange(70400, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70459, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70493, 70499)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70656, 70745)
          .addRange(70749, 70750)
          .addRange(70784, 70855)
          .addRange(70864, 70873)
          .addRange(71040, 71093)
          .addRange(71096, 71133)
          .addRange(71168, 71236)
          .addRange(71248, 71257)
          .addRange(71264, 71276)
          .addRange(71296, 71351)
          .addRange(71360, 71369)
          .addRange(71424, 71450)
          .addRange(71453, 71467)
          .addRange(71472, 71487)
          .addRange(71680, 71739)
          .addRange(71840, 71922)
          .addRange(72192, 72263)
          .addRange(72272, 72323)
          .addRange(72326, 72354)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72758)
          .addRange(72760, 72773)
          .addRange(72784, 72812)
          .addRange(72816, 72847)
          .addRange(72850, 72871)
          .addRange(72873, 72886)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73031)
          .addRange(73040, 73049)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73112)
          .addRange(73120, 73129)
          .addRange(73440, 73464)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74864, 74868)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92768, 92777)
          .addRange(92782, 92783)
          .addRange(92880, 92909)
          .addRange(92912, 92917)
          .addRange(92928, 92997)
          .addRange(93008, 93017)
          .addRange(93019, 93025)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93850)
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94095, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(113820, 113827)
          .addRange(118784, 119029)
          .addRange(119040, 119078)
          .addRange(119081, 119272)
          .addRange(119296, 119365)
          .addRange(119520, 119539)
          .addRange(119552, 119638)
          .addRange(119648, 119672)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120779)
          .addRange(120782, 121483)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(124928, 125124)
          .addRange(125127, 125142)
          .addRange(125184, 125258)
          .addRange(125264, 125273)
          .addRange(125278, 125279)
          .addRange(126065, 126132)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(126704, 126705)
          .addRange(126976, 127019)
          .addRange(127024, 127123)
          .addRange(127136, 127150)
          .addRange(127153, 127167)
          .addRange(127169, 127183)
          .addRange(127185, 127221)
          .addRange(127232, 127244)
          .addRange(127248, 127339)
          .addRange(127344, 127404)
          .addRange(127462, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127568, 127569)
          .addRange(127584, 127589)
          .addRange(127744, 128724)
          .addRange(128736, 128748)
          .addRange(128752, 128761)
          .addRange(128768, 128883)
          .addRange(128896, 128984)
          .addRange(129024, 129035)
          .addRange(129040, 129095)
          .addRange(129104, 129113)
          .addRange(129120, 129159)
          .addRange(129168, 129197)
          .addRange(129280, 129291)
          .addRange(129296, 129342)
          .addRange(129344, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535)
          .addRange(129632, 129645)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101)
          .addRange(917536, 917631)
          .addRange(917760, 917999)
          .addRange(983040, 1048573)
          .addRange(1048576, 1114109);
      },
      function(e, t, n) {
        e.exports = n(0)(1564)
          .addRange(8206, 8207)
          .addRange(8234, 8238)
          .addRange(8294, 8297);
      },
      function(e, t, n) {
        e.exports = n(0)(
          60,
          62,
          91,
          93,
          123,
          125,
          171,
          187,
          8512,
          8721,
          8740,
          8742,
          8761,
          8802,
          8856,
          10176,
          10680,
          10697,
          10721,
          10788,
          10790,
          10793,
          10972,
          10974,
          10995,
          11005,
          11262,
          65308,
          65310,
          65339,
          65341,
          65371,
          65373,
          120539,
          120597,
          120655,
          120713,
          120771
        )
          .addRange(40, 41)
          .addRange(3898, 3901)
          .addRange(5787, 5788)
          .addRange(8249, 8250)
          .addRange(8261, 8262)
          .addRange(8317, 8318)
          .addRange(8333, 8334)
          .addRange(8705, 8708)
          .addRange(8712, 8717)
          .addRange(8725, 8726)
          .addRange(8730, 8733)
          .addRange(8735, 8738)
          .addRange(8747, 8755)
          .addRange(8763, 8780)
          .addRange(8786, 8789)
          .addRange(8799, 8800)
          .addRange(8804, 8811)
          .addRange(8814, 8844)
          .addRange(8847, 8850)
          .addRange(8866, 8867)
          .addRange(8870, 8888)
          .addRange(8894, 8895)
          .addRange(8905, 8909)
          .addRange(8912, 8913)
          .addRange(8918, 8941)
          .addRange(8944, 8959)
          .addRange(8968, 8971)
          .addRange(8992, 8993)
          .addRange(9001, 9002)
          .addRange(10088, 10101)
          .addRange(10179, 10182)
          .addRange(10184, 10185)
          .addRange(10187, 10189)
          .addRange(10195, 10198)
          .addRange(10204, 10206)
          .addRange(10210, 10223)
          .addRange(10627, 10648)
          .addRange(10651, 10656)
          .addRange(10658, 10671)
          .addRange(10688, 10693)
          .addRange(10702, 10706)
          .addRange(10708, 10709)
          .addRange(10712, 10716)
          .addRange(10723, 10725)
          .addRange(10728, 10729)
          .addRange(10740, 10745)
          .addRange(10748, 10749)
          .addRange(10762, 10780)
          .addRange(10782, 10785)
          .addRange(10795, 10798)
          .addRange(10804, 10805)
          .addRange(10812, 10814)
          .addRange(10839, 10840)
          .addRange(10852, 10853)
          .addRange(10858, 10861)
          .addRange(10863, 10864)
          .addRange(10867, 10868)
          .addRange(10873, 10915)
          .addRange(10918, 10925)
          .addRange(10927, 10966)
          .addRange(10978, 10982)
          .addRange(10988, 10990)
          .addRange(10999, 11003)
          .addRange(11778, 11781)
          .addRange(11785, 11786)
          .addRange(11788, 11789)
          .addRange(11804, 11805)
          .addRange(11808, 11817)
          .addRange(12296, 12305)
          .addRange(12308, 12315)
          .addRange(65113, 65118)
          .addRange(65124, 65125)
          .addRange(65288, 65289)
          .addRange(65375, 65376)
          .addRange(65378, 65379);
      },
      function(e, t, n) {
        e.exports = n(0)(
          39,
          46,
          58,
          94,
          96,
          168,
          173,
          175,
          180,
          890,
          903,
          1369,
          1471,
          1479,
          1524,
          1564,
          1600,
          1648,
          1807,
          1809,
          2042,
          2045,
          2362,
          2364,
          2381,
          2417,
          2433,
          2492,
          2509,
          2558,
          2620,
          2641,
          2677,
          2748,
          2765,
          2817,
          2876,
          2879,
          2893,
          2902,
          2946,
          3008,
          3021,
          3072,
          3076,
          3201,
          3260,
          3263,
          3270,
          3405,
          3530,
          3542,
          3633,
          3761,
          3782,
          3893,
          3895,
          3897,
          4038,
          4226,
          4237,
          4253,
          4348,
          6086,
          6103,
          6109,
          6211,
          6313,
          6450,
          6683,
          6742,
          6752,
          6754,
          6783,
          6823,
          6964,
          6972,
          6978,
          7142,
          7149,
          7405,
          7412,
          7544,
          8125,
          8228,
          8231,
          8305,
          8319,
          11631,
          11647,
          11823,
          12293,
          12347,
          40981,
          42508,
          42623,
          42864,
          43010,
          43014,
          43019,
          43263,
          43443,
          43452,
          43471,
          43587,
          43596,
          43632,
          43644,
          43696,
          43713,
          43741,
          43766,
          44005,
          44008,
          44013,
          64286,
          65043,
          65106,
          65109,
          65279,
          65287,
          65294,
          65306,
          65342,
          65344,
          65392,
          65507,
          66045,
          66272,
          68159,
          69633,
          69821,
          69837,
          70003,
          70196,
          70206,
          70367,
          70464,
          70726,
          70750,
          70842,
          71229,
          71339,
          71341,
          71351,
          72263,
          72767,
          73018,
          73031,
          73109,
          73111,
          121461,
          121476,
          917505
        )
          .addRange(183, 184)
          .addRange(688, 879)
          .addRange(884, 885)
          .addRange(900, 901)
          .addRange(1155, 1161)
          .addRange(1425, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1536, 1541)
          .addRange(1552, 1562)
          .addRange(1611, 1631)
          .addRange(1750, 1757)
          .addRange(1759, 1768)
          .addRange(1770, 1773)
          .addRange(1840, 1866)
          .addRange(1958, 1968)
          .addRange(2027, 2037)
          .addRange(2070, 2093)
          .addRange(2137, 2139)
          .addRange(2259, 2306)
          .addRange(2369, 2376)
          .addRange(2385, 2391)
          .addRange(2402, 2403)
          .addRange(2497, 2500)
          .addRange(2530, 2531)
          .addRange(2561, 2562)
          .addRange(2625, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2672, 2673)
          .addRange(2689, 2690)
          .addRange(2753, 2757)
          .addRange(2759, 2760)
          .addRange(2786, 2787)
          .addRange(2810, 2815)
          .addRange(2881, 2884)
          .addRange(2914, 2915)
          .addRange(3134, 3136)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3170, 3171)
          .addRange(3276, 3277)
          .addRange(3298, 3299)
          .addRange(3328, 3329)
          .addRange(3387, 3388)
          .addRange(3393, 3396)
          .addRange(3426, 3427)
          .addRange(3538, 3540)
          .addRange(3636, 3642)
          .addRange(3654, 3662)
          .addRange(3764, 3769)
          .addRange(3771, 3772)
          .addRange(3784, 3789)
          .addRange(3864, 3865)
          .addRange(3953, 3966)
          .addRange(3968, 3972)
          .addRange(3974, 3975)
          .addRange(3981, 3991)
          .addRange(3993, 4028)
          .addRange(4141, 4144)
          .addRange(4146, 4151)
          .addRange(4153, 4154)
          .addRange(4157, 4158)
          .addRange(4184, 4185)
          .addRange(4190, 4192)
          .addRange(4209, 4212)
          .addRange(4229, 4230)
          .addRange(4957, 4959)
          .addRange(5906, 5908)
          .addRange(5938, 5940)
          .addRange(5970, 5971)
          .addRange(6002, 6003)
          .addRange(6068, 6069)
          .addRange(6071, 6077)
          .addRange(6089, 6099)
          .addRange(6155, 6158)
          .addRange(6277, 6278)
          .addRange(6432, 6434)
          .addRange(6439, 6440)
          .addRange(6457, 6459)
          .addRange(6679, 6680)
          .addRange(6744, 6750)
          .addRange(6757, 6764)
          .addRange(6771, 6780)
          .addRange(6832, 6846)
          .addRange(6912, 6915)
          .addRange(6966, 6970)
          .addRange(7019, 7027)
          .addRange(7040, 7041)
          .addRange(7074, 7077)
          .addRange(7080, 7081)
          .addRange(7083, 7085)
          .addRange(7144, 7145)
          .addRange(7151, 7153)
          .addRange(7212, 7219)
          .addRange(7222, 7223)
          .addRange(7288, 7293)
          .addRange(7376, 7378)
          .addRange(7380, 7392)
          .addRange(7394, 7400)
          .addRange(7416, 7417)
          .addRange(7468, 7530)
          .addRange(7579, 7673)
          .addRange(7675, 7679)
          .addRange(8127, 8129)
          .addRange(8141, 8143)
          .addRange(8157, 8159)
          .addRange(8173, 8175)
          .addRange(8189, 8190)
          .addRange(8203, 8207)
          .addRange(8216, 8217)
          .addRange(8234, 8238)
          .addRange(8288, 8292)
          .addRange(8294, 8303)
          .addRange(8336, 8348)
          .addRange(8400, 8432)
          .addRange(11388, 11389)
          .addRange(11503, 11505)
          .addRange(11744, 11775)
          .addRange(12330, 12333)
          .addRange(12337, 12341)
          .addRange(12441, 12446)
          .addRange(12540, 12542)
          .addRange(42232, 42237)
          .addRange(42607, 42610)
          .addRange(42612, 42621)
          .addRange(42652, 42655)
          .addRange(42736, 42737)
          .addRange(42752, 42785)
          .addRange(42888, 42890)
          .addRange(43e3, 43001)
          .addRange(43045, 43046)
          .addRange(43204, 43205)
          .addRange(43232, 43249)
          .addRange(43302, 43309)
          .addRange(43335, 43345)
          .addRange(43392, 43394)
          .addRange(43446, 43449)
          .addRange(43493, 43494)
          .addRange(43561, 43566)
          .addRange(43569, 43570)
          .addRange(43573, 43574)
          .addRange(43698, 43700)
          .addRange(43703, 43704)
          .addRange(43710, 43711)
          .addRange(43756, 43757)
          .addRange(43763, 43764)
          .addRange(43867, 43871)
          .addRange(64434, 64449)
          .addRange(65024, 65039)
          .addRange(65056, 65071)
          .addRange(65438, 65439)
          .addRange(65529, 65531)
          .addRange(66422, 66426)
          .addRange(68097, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68111)
          .addRange(68152, 68154)
          .addRange(68325, 68326)
          .addRange(68900, 68903)
          .addRange(69446, 69456)
          .addRange(69688, 69702)
          .addRange(69759, 69761)
          .addRange(69811, 69814)
          .addRange(69817, 69818)
          .addRange(69888, 69890)
          .addRange(69927, 69931)
          .addRange(69933, 69940)
          .addRange(70016, 70017)
          .addRange(70070, 70078)
          .addRange(70089, 70092)
          .addRange(70191, 70193)
          .addRange(70198, 70199)
          .addRange(70371, 70378)
          .addRange(70400, 70401)
          .addRange(70459, 70460)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70712, 70719)
          .addRange(70722, 70724)
          .addRange(70835, 70840)
          .addRange(70847, 70848)
          .addRange(70850, 70851)
          .addRange(71090, 71093)
          .addRange(71100, 71101)
          .addRange(71103, 71104)
          .addRange(71132, 71133)
          .addRange(71219, 71226)
          .addRange(71231, 71232)
          .addRange(71344, 71349)
          .addRange(71453, 71455)
          .addRange(71458, 71461)
          .addRange(71463, 71467)
          .addRange(71727, 71735)
          .addRange(71737, 71738)
          .addRange(72193, 72202)
          .addRange(72243, 72248)
          .addRange(72251, 72254)
          .addRange(72273, 72278)
          .addRange(72281, 72283)
          .addRange(72330, 72342)
          .addRange(72344, 72345)
          .addRange(72752, 72758)
          .addRange(72760, 72765)
          .addRange(72850, 72871)
          .addRange(72874, 72880)
          .addRange(72882, 72883)
          .addRange(72885, 72886)
          .addRange(73009, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73029)
          .addRange(73104, 73105)
          .addRange(73459, 73460)
          .addRange(92912, 92916)
          .addRange(92976, 92982)
          .addRange(92992, 92995)
          .addRange(94095, 94111)
          .addRange(94176, 94177)
          .addRange(113821, 113822)
          .addRange(113824, 113827)
          .addRange(119143, 119145)
          .addRange(119155, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(119362, 119364)
          .addRange(121344, 121398)
          .addRange(121403, 121452)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(125136, 125142)
          .addRange(125252, 125258)
          .addRange(127995, 127999)
          .addRange(917536, 917631)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          181,
          186,
          837,
          895,
          902,
          908,
          4295,
          4301,
          8025,
          8027,
          8029,
          8126,
          8305,
          8319,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8505,
          8526,
          11559,
          11565,
          119970,
          119995,
          120134
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 442)
          .addRange(444, 447)
          .addRange(452, 659)
          .addRange(661, 696)
          .addRange(704, 705)
          .addRange(736, 740)
          .addRange(880, 883)
          .addRange(886, 887)
          .addRange(890, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4349, 4351)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7424, 7615)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8336, 8348)
          .addRange(8458, 8467)
          .addRange(8473, 8477)
          .addRange(8490, 8493)
          .addRange(8495, 8500)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8544, 8575)
          .addRange(8579, 8580)
          .addRange(9398, 9449)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(42560, 42605)
          .addRange(42624, 42653)
          .addRange(42786, 42887)
          .addRange(42891, 42894)
          .addRange(42896, 42937)
          .addRange(43e3, 43002)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(66560, 66639)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(71840, 71903)
          .addRange(93760, 93823)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(125184, 125251)
          .addRange(127280, 127305)
          .addRange(127312, 127337)
          .addRange(127344, 127369);
      },
      function(e, t, n) {
        e.exports = n(0)(
          181,
          256,
          258,
          260,
          262,
          264,
          266,
          268,
          270,
          272,
          274,
          276,
          278,
          280,
          282,
          284,
          286,
          288,
          290,
          292,
          294,
          296,
          298,
          300,
          302,
          304,
          306,
          308,
          310,
          313,
          315,
          317,
          319,
          321,
          323,
          325,
          327,
          332,
          334,
          336,
          338,
          340,
          342,
          344,
          346,
          348,
          350,
          352,
          354,
          356,
          358,
          360,
          362,
          364,
          366,
          368,
          370,
          372,
          374,
          379,
          381,
          383,
          388,
          418,
          420,
          425,
          428,
          437,
          444,
          461,
          463,
          465,
          467,
          469,
          471,
          473,
          475,
          478,
          480,
          482,
          484,
          486,
          488,
          490,
          492,
          494,
          500,
          506,
          508,
          510,
          512,
          514,
          516,
          518,
          520,
          522,
          524,
          526,
          528,
          530,
          532,
          534,
          536,
          538,
          540,
          542,
          544,
          546,
          548,
          550,
          552,
          554,
          556,
          558,
          560,
          562,
          577,
          584,
          586,
          588,
          590,
          837,
          880,
          882,
          886,
          895,
          902,
          908,
          962,
          984,
          986,
          988,
          990,
          992,
          994,
          996,
          998,
          1e3,
          1002,
          1004,
          1006,
          1015,
          1120,
          1122,
          1124,
          1126,
          1128,
          1130,
          1132,
          1134,
          1136,
          1138,
          1140,
          1142,
          1144,
          1146,
          1148,
          1150,
          1152,
          1162,
          1164,
          1166,
          1168,
          1170,
          1172,
          1174,
          1176,
          1178,
          1180,
          1182,
          1184,
          1186,
          1188,
          1190,
          1192,
          1194,
          1196,
          1198,
          1200,
          1202,
          1204,
          1206,
          1208,
          1210,
          1212,
          1214,
          1219,
          1221,
          1223,
          1225,
          1227,
          1229,
          1232,
          1234,
          1236,
          1238,
          1240,
          1242,
          1244,
          1246,
          1248,
          1250,
          1252,
          1254,
          1256,
          1258,
          1260,
          1262,
          1264,
          1266,
          1268,
          1270,
          1272,
          1274,
          1276,
          1278,
          1280,
          1282,
          1284,
          1286,
          1288,
          1290,
          1292,
          1294,
          1296,
          1298,
          1300,
          1302,
          1304,
          1306,
          1308,
          1310,
          1312,
          1314,
          1316,
          1318,
          1320,
          1322,
          1324,
          1326,
          1415,
          4295,
          4301,
          7680,
          7682,
          7684,
          7686,
          7688,
          7690,
          7692,
          7694,
          7696,
          7698,
          7700,
          7702,
          7704,
          7706,
          7708,
          7710,
          7712,
          7714,
          7716,
          7718,
          7720,
          7722,
          7724,
          7726,
          7728,
          7730,
          7732,
          7734,
          7736,
          7738,
          7740,
          7742,
          7744,
          7746,
          7748,
          7750,
          7752,
          7754,
          7756,
          7758,
          7760,
          7762,
          7764,
          7766,
          7768,
          7770,
          7772,
          7774,
          7776,
          7778,
          7780,
          7782,
          7784,
          7786,
          7788,
          7790,
          7792,
          7794,
          7796,
          7798,
          7800,
          7802,
          7804,
          7806,
          7808,
          7810,
          7812,
          7814,
          7816,
          7818,
          7820,
          7822,
          7824,
          7826,
          7828,
          7838,
          7840,
          7842,
          7844,
          7846,
          7848,
          7850,
          7852,
          7854,
          7856,
          7858,
          7860,
          7862,
          7864,
          7866,
          7868,
          7870,
          7872,
          7874,
          7876,
          7878,
          7880,
          7882,
          7884,
          7886,
          7888,
          7890,
          7892,
          7894,
          7896,
          7898,
          7900,
          7902,
          7904,
          7906,
          7908,
          7910,
          7912,
          7914,
          7916,
          7918,
          7920,
          7922,
          7924,
          7926,
          7928,
          7930,
          7932,
          7934,
          8025,
          8027,
          8029,
          8031,
          8486,
          8498,
          8579,
          11360,
          11367,
          11369,
          11371,
          11378,
          11381,
          11394,
          11396,
          11398,
          11400,
          11402,
          11404,
          11406,
          11408,
          11410,
          11412,
          11414,
          11416,
          11418,
          11420,
          11422,
          11424,
          11426,
          11428,
          11430,
          11432,
          11434,
          11436,
          11438,
          11440,
          11442,
          11444,
          11446,
          11448,
          11450,
          11452,
          11454,
          11456,
          11458,
          11460,
          11462,
          11464,
          11466,
          11468,
          11470,
          11472,
          11474,
          11476,
          11478,
          11480,
          11482,
          11484,
          11486,
          11488,
          11490,
          11499,
          11501,
          11506,
          42560,
          42562,
          42564,
          42566,
          42568,
          42570,
          42572,
          42574,
          42576,
          42578,
          42580,
          42582,
          42584,
          42586,
          42588,
          42590,
          42592,
          42594,
          42596,
          42598,
          42600,
          42602,
          42604,
          42624,
          42626,
          42628,
          42630,
          42632,
          42634,
          42636,
          42638,
          42640,
          42642,
          42644,
          42646,
          42648,
          42650,
          42786,
          42788,
          42790,
          42792,
          42794,
          42796,
          42798,
          42802,
          42804,
          42806,
          42808,
          42810,
          42812,
          42814,
          42816,
          42818,
          42820,
          42822,
          42824,
          42826,
          42828,
          42830,
          42832,
          42834,
          42836,
          42838,
          42840,
          42842,
          42844,
          42846,
          42848,
          42850,
          42852,
          42854,
          42856,
          42858,
          42860,
          42862,
          42873,
          42875,
          42880,
          42882,
          42884,
          42886,
          42891,
          42893,
          42896,
          42898,
          42902,
          42904,
          42906,
          42908,
          42910,
          42912,
          42914,
          42916,
          42918,
          42920,
          42934,
          42936
        )
          .addRange(65, 90)
          .addRange(192, 214)
          .addRange(216, 223)
          .addRange(329, 330)
          .addRange(376, 377)
          .addRange(385, 386)
          .addRange(390, 391)
          .addRange(393, 395)
          .addRange(398, 401)
          .addRange(403, 404)
          .addRange(406, 408)
          .addRange(412, 413)
          .addRange(415, 416)
          .addRange(422, 423)
          .addRange(430, 431)
          .addRange(433, 435)
          .addRange(439, 440)
          .addRange(452, 453)
          .addRange(455, 456)
          .addRange(458, 459)
          .addRange(497, 498)
          .addRange(502, 504)
          .addRange(570, 571)
          .addRange(573, 574)
          .addRange(579, 582)
          .addRange(904, 906)
          .addRange(910, 911)
          .addRange(913, 929)
          .addRange(931, 939)
          .addRange(975, 977)
          .addRange(981, 982)
          .addRange(1008, 1009)
          .addRange(1012, 1013)
          .addRange(1017, 1018)
          .addRange(1021, 1071)
          .addRange(1216, 1217)
          .addRange(1329, 1366)
          .addRange(4256, 4293)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7834, 7835)
          .addRange(7944, 7951)
          .addRange(7960, 7965)
          .addRange(7976, 7983)
          .addRange(7992, 7999)
          .addRange(8008, 8013)
          .addRange(8040, 8047)
          .addRange(8064, 8111)
          .addRange(8114, 8116)
          .addRange(8119, 8124)
          .addRange(8130, 8132)
          .addRange(8135, 8140)
          .addRange(8152, 8155)
          .addRange(8168, 8172)
          .addRange(8178, 8180)
          .addRange(8183, 8188)
          .addRange(8490, 8491)
          .addRange(8544, 8559)
          .addRange(9398, 9423)
          .addRange(11264, 11310)
          .addRange(11362, 11364)
          .addRange(11373, 11376)
          .addRange(11390, 11392)
          .addRange(42877, 42878)
          .addRange(42922, 42926)
          .addRange(42928, 42932)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65313, 65338)
          .addRange(66560, 66599)
          .addRange(66736, 66771)
          .addRange(68736, 68786)
          .addRange(71840, 71871)
          .addRange(93760, 93791)
          .addRange(125184, 125217);
      },
      function(e, t, n) {
        e.exports = n(0)(
          181,
          447,
          601,
          611,
          623,
          629,
          637,
          640,
          643,
          658,
          837,
          895,
          902,
          908,
          4295,
          4301,
          7545,
          7549,
          7838,
          8025,
          8027,
          8029,
          8126,
          8486,
          8498,
          8526,
          11559,
          11565,
          43859
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 311)
          .addRange(313, 396)
          .addRange(398, 410)
          .addRange(412, 425)
          .addRange(428, 441)
          .addRange(444, 445)
          .addRange(452, 544)
          .addRange(546, 563)
          .addRange(570, 596)
          .addRange(598, 599)
          .addRange(603, 604)
          .addRange(608, 609)
          .addRange(613, 614)
          .addRange(616, 620)
          .addRange(625, 626)
          .addRange(647, 652)
          .addRange(669, 670)
          .addRange(880, 883)
          .addRange(886, 887)
          .addRange(891, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 977)
          .addRange(981, 1013)
          .addRange(1015, 1019)
          .addRange(1021, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1377, 1415)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4349, 4351)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7680, 7835)
          .addRange(7840, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8490, 8491)
          .addRange(8544, 8575)
          .addRange(8579, 8580)
          .addRange(9398, 9449)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11376)
          .addRange(11378, 11379)
          .addRange(11381, 11382)
          .addRange(11390, 11491)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(42560, 42605)
          .addRange(42624, 42651)
          .addRange(42786, 42799)
          .addRange(42802, 42863)
          .addRange(42873, 42887)
          .addRange(42891, 42893)
          .addRange(42896, 42899)
          .addRange(42902, 42926)
          .addRange(42928, 42937)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(66560, 66639)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(71840, 71903)
          .addRange(93760, 93823)
          .addRange(125184, 125251);
      },
      function(e, t, n) {
        e.exports = n(0)(
          256,
          258,
          260,
          262,
          264,
          266,
          268,
          270,
          272,
          274,
          276,
          278,
          280,
          282,
          284,
          286,
          288,
          290,
          292,
          294,
          296,
          298,
          300,
          302,
          304,
          306,
          308,
          310,
          313,
          315,
          317,
          319,
          321,
          323,
          325,
          327,
          330,
          332,
          334,
          336,
          338,
          340,
          342,
          344,
          346,
          348,
          350,
          352,
          354,
          356,
          358,
          360,
          362,
          364,
          366,
          368,
          370,
          372,
          374,
          379,
          381,
          388,
          418,
          420,
          425,
          428,
          437,
          444,
          461,
          463,
          465,
          467,
          469,
          471,
          473,
          475,
          478,
          480,
          482,
          484,
          486,
          488,
          490,
          492,
          494,
          500,
          506,
          508,
          510,
          512,
          514,
          516,
          518,
          520,
          522,
          524,
          526,
          528,
          530,
          532,
          534,
          536,
          538,
          540,
          542,
          544,
          546,
          548,
          550,
          552,
          554,
          556,
          558,
          560,
          562,
          577,
          584,
          586,
          588,
          590,
          880,
          882,
          886,
          895,
          902,
          908,
          975,
          984,
          986,
          988,
          990,
          992,
          994,
          996,
          998,
          1e3,
          1002,
          1004,
          1006,
          1012,
          1015,
          1120,
          1122,
          1124,
          1126,
          1128,
          1130,
          1132,
          1134,
          1136,
          1138,
          1140,
          1142,
          1144,
          1146,
          1148,
          1150,
          1152,
          1162,
          1164,
          1166,
          1168,
          1170,
          1172,
          1174,
          1176,
          1178,
          1180,
          1182,
          1184,
          1186,
          1188,
          1190,
          1192,
          1194,
          1196,
          1198,
          1200,
          1202,
          1204,
          1206,
          1208,
          1210,
          1212,
          1214,
          1219,
          1221,
          1223,
          1225,
          1227,
          1229,
          1232,
          1234,
          1236,
          1238,
          1240,
          1242,
          1244,
          1246,
          1248,
          1250,
          1252,
          1254,
          1256,
          1258,
          1260,
          1262,
          1264,
          1266,
          1268,
          1270,
          1272,
          1274,
          1276,
          1278,
          1280,
          1282,
          1284,
          1286,
          1288,
          1290,
          1292,
          1294,
          1296,
          1298,
          1300,
          1302,
          1304,
          1306,
          1308,
          1310,
          1312,
          1314,
          1316,
          1318,
          1320,
          1322,
          1324,
          1326,
          4295,
          4301,
          7680,
          7682,
          7684,
          7686,
          7688,
          7690,
          7692,
          7694,
          7696,
          7698,
          7700,
          7702,
          7704,
          7706,
          7708,
          7710,
          7712,
          7714,
          7716,
          7718,
          7720,
          7722,
          7724,
          7726,
          7728,
          7730,
          7732,
          7734,
          7736,
          7738,
          7740,
          7742,
          7744,
          7746,
          7748,
          7750,
          7752,
          7754,
          7756,
          7758,
          7760,
          7762,
          7764,
          7766,
          7768,
          7770,
          7772,
          7774,
          7776,
          7778,
          7780,
          7782,
          7784,
          7786,
          7788,
          7790,
          7792,
          7794,
          7796,
          7798,
          7800,
          7802,
          7804,
          7806,
          7808,
          7810,
          7812,
          7814,
          7816,
          7818,
          7820,
          7822,
          7824,
          7826,
          7828,
          7838,
          7840,
          7842,
          7844,
          7846,
          7848,
          7850,
          7852,
          7854,
          7856,
          7858,
          7860,
          7862,
          7864,
          7866,
          7868,
          7870,
          7872,
          7874,
          7876,
          7878,
          7880,
          7882,
          7884,
          7886,
          7888,
          7890,
          7892,
          7894,
          7896,
          7898,
          7900,
          7902,
          7904,
          7906,
          7908,
          7910,
          7912,
          7914,
          7916,
          7918,
          7920,
          7922,
          7924,
          7926,
          7928,
          7930,
          7932,
          7934,
          8025,
          8027,
          8029,
          8031,
          8486,
          8498,
          8579,
          11360,
          11367,
          11369,
          11371,
          11378,
          11381,
          11394,
          11396,
          11398,
          11400,
          11402,
          11404,
          11406,
          11408,
          11410,
          11412,
          11414,
          11416,
          11418,
          11420,
          11422,
          11424,
          11426,
          11428,
          11430,
          11432,
          11434,
          11436,
          11438,
          11440,
          11442,
          11444,
          11446,
          11448,
          11450,
          11452,
          11454,
          11456,
          11458,
          11460,
          11462,
          11464,
          11466,
          11468,
          11470,
          11472,
          11474,
          11476,
          11478,
          11480,
          11482,
          11484,
          11486,
          11488,
          11490,
          11499,
          11501,
          11506,
          42560,
          42562,
          42564,
          42566,
          42568,
          42570,
          42572,
          42574,
          42576,
          42578,
          42580,
          42582,
          42584,
          42586,
          42588,
          42590,
          42592,
          42594,
          42596,
          42598,
          42600,
          42602,
          42604,
          42624,
          42626,
          42628,
          42630,
          42632,
          42634,
          42636,
          42638,
          42640,
          42642,
          42644,
          42646,
          42648,
          42650,
          42786,
          42788,
          42790,
          42792,
          42794,
          42796,
          42798,
          42802,
          42804,
          42806,
          42808,
          42810,
          42812,
          42814,
          42816,
          42818,
          42820,
          42822,
          42824,
          42826,
          42828,
          42830,
          42832,
          42834,
          42836,
          42838,
          42840,
          42842,
          42844,
          42846,
          42848,
          42850,
          42852,
          42854,
          42856,
          42858,
          42860,
          42862,
          42873,
          42875,
          42880,
          42882,
          42884,
          42886,
          42891,
          42893,
          42896,
          42898,
          42902,
          42904,
          42906,
          42908,
          42910,
          42912,
          42914,
          42916,
          42918,
          42920,
          42934,
          42936
        )
          .addRange(65, 90)
          .addRange(192, 214)
          .addRange(216, 222)
          .addRange(376, 377)
          .addRange(385, 386)
          .addRange(390, 391)
          .addRange(393, 395)
          .addRange(398, 401)
          .addRange(403, 404)
          .addRange(406, 408)
          .addRange(412, 413)
          .addRange(415, 416)
          .addRange(422, 423)
          .addRange(430, 431)
          .addRange(433, 435)
          .addRange(439, 440)
          .addRange(452, 453)
          .addRange(455, 456)
          .addRange(458, 459)
          .addRange(497, 498)
          .addRange(502, 504)
          .addRange(570, 571)
          .addRange(573, 574)
          .addRange(579, 582)
          .addRange(904, 906)
          .addRange(910, 911)
          .addRange(913, 929)
          .addRange(931, 939)
          .addRange(1017, 1018)
          .addRange(1021, 1071)
          .addRange(1216, 1217)
          .addRange(1329, 1366)
          .addRange(4256, 4293)
          .addRange(5024, 5109)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7944, 7951)
          .addRange(7960, 7965)
          .addRange(7976, 7983)
          .addRange(7992, 7999)
          .addRange(8008, 8013)
          .addRange(8040, 8047)
          .addRange(8072, 8079)
          .addRange(8088, 8095)
          .addRange(8104, 8111)
          .addRange(8120, 8124)
          .addRange(8136, 8140)
          .addRange(8152, 8155)
          .addRange(8168, 8172)
          .addRange(8184, 8188)
          .addRange(8490, 8491)
          .addRange(8544, 8559)
          .addRange(9398, 9423)
          .addRange(11264, 11310)
          .addRange(11362, 11364)
          .addRange(11373, 11376)
          .addRange(11390, 11392)
          .addRange(42877, 42878)
          .addRange(42922, 42926)
          .addRange(42928, 42932)
          .addRange(65313, 65338)
          .addRange(66560, 66599)
          .addRange(66736, 66771)
          .addRange(68736, 68786)
          .addRange(71840, 71871)
          .addRange(93760, 93791)
          .addRange(125184, 125217);
      },
      function(e, t, n) {
        e.exports = n(0)(
          160,
          168,
          170,
          173,
          175,
          256,
          258,
          260,
          262,
          264,
          266,
          268,
          270,
          272,
          274,
          276,
          278,
          280,
          282,
          284,
          286,
          288,
          290,
          292,
          294,
          296,
          298,
          300,
          302,
          304,
          310,
          313,
          315,
          317,
          323,
          325,
          327,
          332,
          334,
          336,
          338,
          340,
          342,
          344,
          346,
          348,
          350,
          352,
          354,
          356,
          358,
          360,
          362,
          364,
          366,
          368,
          370,
          372,
          374,
          379,
          381,
          383,
          388,
          418,
          420,
          425,
          428,
          437,
          444,
          463,
          465,
          467,
          469,
          471,
          473,
          475,
          478,
          480,
          482,
          484,
          486,
          488,
          490,
          492,
          494,
          506,
          508,
          510,
          512,
          514,
          516,
          518,
          520,
          522,
          524,
          526,
          528,
          530,
          532,
          534,
          536,
          538,
          540,
          542,
          544,
          546,
          548,
          550,
          552,
          554,
          556,
          558,
          560,
          562,
          577,
          584,
          586,
          588,
          590,
          847,
          880,
          882,
          884,
          886,
          890,
          908,
          962,
          984,
          986,
          988,
          990,
          992,
          994,
          996,
          998,
          1e3,
          1002,
          1004,
          1006,
          1015,
          1120,
          1122,
          1124,
          1126,
          1128,
          1130,
          1132,
          1134,
          1136,
          1138,
          1140,
          1142,
          1144,
          1146,
          1148,
          1150,
          1152,
          1162,
          1164,
          1166,
          1168,
          1170,
          1172,
          1174,
          1176,
          1178,
          1180,
          1182,
          1184,
          1186,
          1188,
          1190,
          1192,
          1194,
          1196,
          1198,
          1200,
          1202,
          1204,
          1206,
          1208,
          1210,
          1212,
          1214,
          1219,
          1221,
          1223,
          1225,
          1227,
          1229,
          1232,
          1234,
          1236,
          1238,
          1240,
          1242,
          1244,
          1246,
          1248,
          1250,
          1252,
          1254,
          1256,
          1258,
          1260,
          1262,
          1264,
          1266,
          1268,
          1270,
          1272,
          1274,
          1276,
          1278,
          1280,
          1282,
          1284,
          1286,
          1288,
          1290,
          1292,
          1294,
          1296,
          1298,
          1300,
          1302,
          1304,
          1306,
          1308,
          1310,
          1312,
          1314,
          1316,
          1318,
          1320,
          1322,
          1324,
          1326,
          1415,
          1564,
          2527,
          2611,
          2614,
          2654,
          3635,
          3763,
          3852,
          3907,
          3917,
          3922,
          3927,
          3932,
          3945,
          3955,
          3969,
          3987,
          3997,
          4002,
          4007,
          4012,
          4025,
          4295,
          4301,
          4348,
          7544,
          7680,
          7682,
          7684,
          7686,
          7688,
          7690,
          7692,
          7694,
          7696,
          7698,
          7700,
          7702,
          7704,
          7706,
          7708,
          7710,
          7712,
          7714,
          7716,
          7718,
          7720,
          7722,
          7724,
          7726,
          7728,
          7730,
          7732,
          7734,
          7736,
          7738,
          7740,
          7742,
          7744,
          7746,
          7748,
          7750,
          7752,
          7754,
          7756,
          7758,
          7760,
          7762,
          7764,
          7766,
          7768,
          7770,
          7772,
          7774,
          7776,
          7778,
          7780,
          7782,
          7784,
          7786,
          7788,
          7790,
          7792,
          7794,
          7796,
          7798,
          7800,
          7802,
          7804,
          7806,
          7808,
          7810,
          7812,
          7814,
          7816,
          7818,
          7820,
          7822,
          7824,
          7826,
          7828,
          7838,
          7840,
          7842,
          7844,
          7846,
          7848,
          7850,
          7852,
          7854,
          7856,
          7858,
          7860,
          7862,
          7864,
          7866,
          7868,
          7870,
          7872,
          7874,
          7876,
          7878,
          7880,
          7882,
          7884,
          7886,
          7888,
          7890,
          7892,
          7894,
          7896,
          7898,
          7900,
          7902,
          7904,
          7906,
          7908,
          7910,
          7912,
          7914,
          7916,
          7918,
          7920,
          7922,
          7924,
          7926,
          7928,
          7930,
          7932,
          7934,
          8025,
          8027,
          8029,
          8031,
          8049,
          8051,
          8053,
          8055,
          8057,
          8059,
          8061,
          8147,
          8163,
          8209,
          8215,
          8252,
          8254,
          8279,
          8360,
          8484,
          8486,
          8488,
          8579,
          8585,
          10764,
          10972,
          11360,
          11367,
          11369,
          11371,
          11378,
          11381,
          11394,
          11396,
          11398,
          11400,
          11402,
          11404,
          11406,
          11408,
          11410,
          11412,
          11414,
          11416,
          11418,
          11420,
          11422,
          11424,
          11426,
          11428,
          11430,
          11432,
          11434,
          11436,
          11438,
          11440,
          11442,
          11444,
          11446,
          11448,
          11450,
          11452,
          11454,
          11456,
          11458,
          11460,
          11462,
          11464,
          11466,
          11468,
          11470,
          11472,
          11474,
          11476,
          11478,
          11480,
          11482,
          11484,
          11486,
          11488,
          11490,
          11499,
          11501,
          11506,
          11631,
          11935,
          12019,
          12288,
          12342,
          12447,
          12543,
          42560,
          42562,
          42564,
          42566,
          42568,
          42570,
          42572,
          42574,
          42576,
          42578,
          42580,
          42582,
          42584,
          42586,
          42588,
          42590,
          42592,
          42594,
          42596,
          42598,
          42600,
          42602,
          42604,
          42624,
          42626,
          42628,
          42630,
          42632,
          42634,
          42636,
          42638,
          42640,
          42642,
          42644,
          42646,
          42648,
          42650,
          42786,
          42788,
          42790,
          42792,
          42794,
          42796,
          42798,
          42802,
          42804,
          42806,
          42808,
          42810,
          42812,
          42814,
          42816,
          42818,
          42820,
          42822,
          42824,
          42826,
          42828,
          42830,
          42832,
          42834,
          42836,
          42838,
          42840,
          42842,
          42844,
          42846,
          42848,
          42850,
          42852,
          42854,
          42856,
          42858,
          42860,
          42862,
          42864,
          42873,
          42875,
          42880,
          42882,
          42884,
          42886,
          42891,
          42893,
          42896,
          42898,
          42902,
          42904,
          42906,
          42908,
          42910,
          42912,
          42914,
          42916,
          42918,
          42920,
          42934,
          42936,
          64016,
          64018,
          64032,
          64034,
          64285,
          64318,
          65140,
          65279,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590,
          127376
        )
          .addRange(65, 90)
          .addRange(178, 181)
          .addRange(184, 186)
          .addRange(188, 190)
          .addRange(192, 214)
          .addRange(216, 223)
          .addRange(306, 308)
          .addRange(319, 321)
          .addRange(329, 330)
          .addRange(376, 377)
          .addRange(385, 386)
          .addRange(390, 391)
          .addRange(393, 395)
          .addRange(398, 401)
          .addRange(403, 404)
          .addRange(406, 408)
          .addRange(412, 413)
          .addRange(415, 416)
          .addRange(422, 423)
          .addRange(430, 431)
          .addRange(433, 435)
          .addRange(439, 440)
          .addRange(452, 461)
          .addRange(497, 500)
          .addRange(502, 504)
          .addRange(570, 571)
          .addRange(573, 574)
          .addRange(579, 582)
          .addRange(688, 696)
          .addRange(728, 733)
          .addRange(736, 740)
          .addRange(832, 833)
          .addRange(835, 837)
          .addRange(894, 895)
          .addRange(900, 906)
          .addRange(910, 911)
          .addRange(913, 929)
          .addRange(931, 939)
          .addRange(975, 982)
          .addRange(1008, 1010)
          .addRange(1012, 1013)
          .addRange(1017, 1018)
          .addRange(1021, 1071)
          .addRange(1216, 1217)
          .addRange(1329, 1366)
          .addRange(1653, 1656)
          .addRange(2392, 2399)
          .addRange(2524, 2525)
          .addRange(2649, 2651)
          .addRange(2908, 2909)
          .addRange(3804, 3805)
          .addRange(3957, 3961)
          .addRange(4256, 4293)
          .addRange(4447, 4448)
          .addRange(5112, 5117)
          .addRange(6068, 6069)
          .addRange(6155, 6158)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7468, 7470)
          .addRange(7472, 7482)
          .addRange(7484, 7501)
          .addRange(7503, 7530)
          .addRange(7579, 7615)
          .addRange(7834, 7835)
          .addRange(7944, 7951)
          .addRange(7960, 7965)
          .addRange(7976, 7983)
          .addRange(7992, 7999)
          .addRange(8008, 8013)
          .addRange(8040, 8047)
          .addRange(8064, 8111)
          .addRange(8114, 8116)
          .addRange(8119, 8132)
          .addRange(8135, 8143)
          .addRange(8152, 8155)
          .addRange(8157, 8159)
          .addRange(8168, 8175)
          .addRange(8178, 8180)
          .addRange(8183, 8190)
          .addRange(8192, 8207)
          .addRange(8228, 8230)
          .addRange(8234, 8239)
          .addRange(8243, 8244)
          .addRange(8246, 8247)
          .addRange(8263, 8265)
          .addRange(8287, 8305)
          .addRange(8308, 8334)
          .addRange(8336, 8348)
          .addRange(8448, 8451)
          .addRange(8453, 8455)
          .addRange(8457, 8467)
          .addRange(8469, 8470)
          .addRange(8473, 8477)
          .addRange(8480, 8482)
          .addRange(8490, 8493)
          .addRange(8495, 8505)
          .addRange(8507, 8512)
          .addRange(8517, 8521)
          .addRange(8528, 8575)
          .addRange(8748, 8749)
          .addRange(8751, 8752)
          .addRange(9001, 9002)
          .addRange(9312, 9450)
          .addRange(10868, 10870)
          .addRange(11264, 11310)
          .addRange(11362, 11364)
          .addRange(11373, 11376)
          .addRange(11388, 11392)
          .addRange(12032, 12245)
          .addRange(12344, 12346)
          .addRange(12443, 12444)
          .addRange(12593, 12686)
          .addRange(12690, 12703)
          .addRange(12800, 12830)
          .addRange(12832, 12871)
          .addRange(12880, 12926)
          .addRange(12928, 13054)
          .addRange(13056, 13311)
          .addRange(42652, 42653)
          .addRange(42877, 42878)
          .addRange(42922, 42926)
          .addRange(42928, 42932)
          .addRange(43e3, 43001)
          .addRange(43868, 43871)
          .addRange(43888, 43967)
          .addRange(63744, 64013)
          .addRange(64021, 64030)
          .addRange(64037, 64038)
          .addRange(64042, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64287, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65020)
          .addRange(65024, 65049)
          .addRange(65072, 65092)
          .addRange(65095, 65106)
          .addRange(65108, 65126)
          .addRange(65128, 65131)
          .addRange(65136, 65138)
          .addRange(65142, 65276)
          .addRange(65281, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65504, 65510)
          .addRange(65512, 65518)
          .addRange(65520, 65528)
          .addRange(66560, 66599)
          .addRange(66736, 66771)
          .addRange(68736, 68786)
          .addRange(71840, 71871)
          .addRange(93760, 93791)
          .addRange(113824, 113827)
          .addRange(119134, 119140)
          .addRange(119155, 119162)
          .addRange(119227, 119232)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120779)
          .addRange(120782, 120831)
          .addRange(125184, 125217)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(127232, 127242)
          .addRange(127248, 127278)
          .addRange(127280, 127311)
          .addRange(127338, 127339)
          .addRange(127488, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127568, 127569)
          .addRange(194560, 195101)
          .addRange(917504, 921599);
      },
      function(e, t, n) {
        e.exports = n(0)(
          181,
          257,
          259,
          261,
          263,
          265,
          267,
          269,
          271,
          273,
          275,
          277,
          279,
          281,
          283,
          285,
          287,
          289,
          291,
          293,
          295,
          297,
          299,
          301,
          303,
          305,
          307,
          309,
          311,
          314,
          316,
          318,
          320,
          322,
          324,
          326,
          331,
          333,
          335,
          337,
          339,
          341,
          343,
          345,
          347,
          349,
          351,
          353,
          355,
          357,
          359,
          361,
          363,
          365,
          367,
          369,
          371,
          373,
          375,
          378,
          380,
          387,
          389,
          392,
          396,
          402,
          405,
          414,
          417,
          419,
          421,
          424,
          429,
          432,
          436,
          438,
          441,
          445,
          447,
          452,
          460,
          462,
          464,
          466,
          468,
          470,
          472,
          474,
          479,
          481,
          483,
          485,
          487,
          489,
          491,
          493,
          499,
          501,
          505,
          507,
          509,
          511,
          513,
          515,
          517,
          519,
          521,
          523,
          525,
          527,
          529,
          531,
          533,
          535,
          537,
          539,
          541,
          543,
          547,
          549,
          551,
          553,
          555,
          557,
          559,
          561,
          563,
          572,
          578,
          583,
          585,
          587,
          589,
          601,
          611,
          623,
          629,
          637,
          640,
          643,
          658,
          837,
          881,
          883,
          887,
          912,
          985,
          987,
          989,
          991,
          993,
          995,
          997,
          999,
          1001,
          1003,
          1005,
          1013,
          1016,
          1019,
          1121,
          1123,
          1125,
          1127,
          1129,
          1131,
          1133,
          1135,
          1137,
          1139,
          1141,
          1143,
          1145,
          1147,
          1149,
          1151,
          1153,
          1163,
          1165,
          1167,
          1169,
          1171,
          1173,
          1175,
          1177,
          1179,
          1181,
          1183,
          1185,
          1187,
          1189,
          1191,
          1193,
          1195,
          1197,
          1199,
          1201,
          1203,
          1205,
          1207,
          1209,
          1211,
          1213,
          1215,
          1218,
          1220,
          1222,
          1224,
          1226,
          1228,
          1233,
          1235,
          1237,
          1239,
          1241,
          1243,
          1245,
          1247,
          1249,
          1251,
          1253,
          1255,
          1257,
          1259,
          1261,
          1263,
          1265,
          1267,
          1269,
          1271,
          1273,
          1275,
          1277,
          1279,
          1281,
          1283,
          1285,
          1287,
          1289,
          1291,
          1293,
          1295,
          1297,
          1299,
          1301,
          1303,
          1305,
          1307,
          1309,
          1311,
          1313,
          1315,
          1317,
          1319,
          1321,
          1323,
          1325,
          1327,
          7545,
          7549,
          7681,
          7683,
          7685,
          7687,
          7689,
          7691,
          7693,
          7695,
          7697,
          7699,
          7701,
          7703,
          7705,
          7707,
          7709,
          7711,
          7713,
          7715,
          7717,
          7719,
          7721,
          7723,
          7725,
          7727,
          7729,
          7731,
          7733,
          7735,
          7737,
          7739,
          7741,
          7743,
          7745,
          7747,
          7749,
          7751,
          7753,
          7755,
          7757,
          7759,
          7761,
          7763,
          7765,
          7767,
          7769,
          7771,
          7773,
          7775,
          7777,
          7779,
          7781,
          7783,
          7785,
          7787,
          7789,
          7791,
          7793,
          7795,
          7797,
          7799,
          7801,
          7803,
          7805,
          7807,
          7809,
          7811,
          7813,
          7815,
          7817,
          7819,
          7821,
          7823,
          7825,
          7827,
          7841,
          7843,
          7845,
          7847,
          7849,
          7851,
          7853,
          7855,
          7857,
          7859,
          7861,
          7863,
          7865,
          7867,
          7869,
          7871,
          7873,
          7875,
          7877,
          7879,
          7881,
          7883,
          7885,
          7887,
          7889,
          7891,
          7893,
          7895,
          7897,
          7899,
          7901,
          7903,
          7905,
          7907,
          7909,
          7911,
          7913,
          7915,
          7917,
          7919,
          7921,
          7923,
          7925,
          7927,
          7929,
          7931,
          7933,
          8126,
          8526,
          8580,
          11361,
          11368,
          11370,
          11372,
          11379,
          11382,
          11393,
          11395,
          11397,
          11399,
          11401,
          11403,
          11405,
          11407,
          11409,
          11411,
          11413,
          11415,
          11417,
          11419,
          11421,
          11423,
          11425,
          11427,
          11429,
          11431,
          11433,
          11435,
          11437,
          11439,
          11441,
          11443,
          11445,
          11447,
          11449,
          11451,
          11453,
          11455,
          11457,
          11459,
          11461,
          11463,
          11465,
          11467,
          11469,
          11471,
          11473,
          11475,
          11477,
          11479,
          11481,
          11483,
          11485,
          11487,
          11489,
          11491,
          11500,
          11502,
          11507,
          11559,
          11565,
          42561,
          42563,
          42565,
          42567,
          42569,
          42571,
          42573,
          42575,
          42577,
          42579,
          42581,
          42583,
          42585,
          42587,
          42589,
          42591,
          42593,
          42595,
          42597,
          42599,
          42601,
          42603,
          42605,
          42625,
          42627,
          42629,
          42631,
          42633,
          42635,
          42637,
          42639,
          42641,
          42643,
          42645,
          42647,
          42649,
          42651,
          42787,
          42789,
          42791,
          42793,
          42795,
          42797,
          42799,
          42803,
          42805,
          42807,
          42809,
          42811,
          42813,
          42815,
          42817,
          42819,
          42821,
          42823,
          42825,
          42827,
          42829,
          42831,
          42833,
          42835,
          42837,
          42839,
          42841,
          42843,
          42845,
          42847,
          42849,
          42851,
          42853,
          42855,
          42857,
          42859,
          42861,
          42863,
          42874,
          42876,
          42879,
          42881,
          42883,
          42885,
          42887,
          42892,
          42897,
          42899,
          42903,
          42905,
          42907,
          42909,
          42911,
          42913,
          42915,
          42917,
          42919,
          42921,
          42933,
          42935,
          42937,
          43859
        )
          .addRange(97, 122)
          .addRange(223, 246)
          .addRange(248, 255)
          .addRange(328, 329)
          .addRange(382, 384)
          .addRange(409, 410)
          .addRange(454, 455)
          .addRange(457, 458)
          .addRange(476, 477)
          .addRange(495, 497)
          .addRange(575, 576)
          .addRange(591, 596)
          .addRange(598, 599)
          .addRange(603, 604)
          .addRange(608, 609)
          .addRange(613, 614)
          .addRange(616, 620)
          .addRange(625, 626)
          .addRange(647, 652)
          .addRange(669, 670)
          .addRange(891, 893)
          .addRange(940, 974)
          .addRange(976, 977)
          .addRange(981, 983)
          .addRange(1007, 1011)
          .addRange(1072, 1119)
          .addRange(1230, 1231)
          .addRange(1377, 1415)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7829, 7835)
          .addRange(7935, 7943)
          .addRange(7952, 7957)
          .addRange(7968, 7975)
          .addRange(7984, 7991)
          .addRange(8e3, 8005)
          .addRange(8016, 8023)
          .addRange(8032, 8039)
          .addRange(8048, 8061)
          .addRange(8064, 8071)
          .addRange(8080, 8087)
          .addRange(8096, 8103)
          .addRange(8112, 8116)
          .addRange(8118, 8119)
          .addRange(8130, 8132)
          .addRange(8134, 8135)
          .addRange(8144, 8147)
          .addRange(8150, 8151)
          .addRange(8160, 8167)
          .addRange(8178, 8180)
          .addRange(8182, 8183)
          .addRange(8560, 8575)
          .addRange(9424, 9449)
          .addRange(11312, 11358)
          .addRange(11365, 11366)
          .addRange(11520, 11557)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65345, 65370)
          .addRange(66600, 66639)
          .addRange(66776, 66811)
          .addRange(68800, 68850)
          .addRange(71872, 71903)
          .addRange(93792, 93823)
          .addRange(125218, 125251);
      },
      function(e, t, n) {
        e.exports = n(0)(
          181,
          257,
          259,
          261,
          263,
          265,
          267,
          269,
          271,
          273,
          275,
          277,
          279,
          281,
          283,
          285,
          287,
          289,
          291,
          293,
          295,
          297,
          299,
          301,
          303,
          305,
          307,
          309,
          311,
          314,
          316,
          318,
          320,
          322,
          324,
          326,
          331,
          333,
          335,
          337,
          339,
          341,
          343,
          345,
          347,
          349,
          351,
          353,
          355,
          357,
          359,
          361,
          363,
          365,
          367,
          369,
          371,
          373,
          375,
          378,
          380,
          387,
          389,
          392,
          396,
          402,
          405,
          414,
          417,
          419,
          421,
          424,
          429,
          432,
          436,
          438,
          441,
          445,
          447,
          462,
          464,
          466,
          468,
          470,
          472,
          474,
          479,
          481,
          483,
          485,
          487,
          489,
          491,
          493,
          501,
          505,
          507,
          509,
          511,
          513,
          515,
          517,
          519,
          521,
          523,
          525,
          527,
          529,
          531,
          533,
          535,
          537,
          539,
          541,
          543,
          547,
          549,
          551,
          553,
          555,
          557,
          559,
          561,
          563,
          572,
          578,
          583,
          585,
          587,
          589,
          601,
          611,
          623,
          629,
          637,
          640,
          643,
          658,
          837,
          881,
          883,
          887,
          912,
          985,
          987,
          989,
          991,
          993,
          995,
          997,
          999,
          1001,
          1003,
          1005,
          1013,
          1016,
          1019,
          1121,
          1123,
          1125,
          1127,
          1129,
          1131,
          1133,
          1135,
          1137,
          1139,
          1141,
          1143,
          1145,
          1147,
          1149,
          1151,
          1153,
          1163,
          1165,
          1167,
          1169,
          1171,
          1173,
          1175,
          1177,
          1179,
          1181,
          1183,
          1185,
          1187,
          1189,
          1191,
          1193,
          1195,
          1197,
          1199,
          1201,
          1203,
          1205,
          1207,
          1209,
          1211,
          1213,
          1215,
          1218,
          1220,
          1222,
          1224,
          1226,
          1228,
          1233,
          1235,
          1237,
          1239,
          1241,
          1243,
          1245,
          1247,
          1249,
          1251,
          1253,
          1255,
          1257,
          1259,
          1261,
          1263,
          1265,
          1267,
          1269,
          1271,
          1273,
          1275,
          1277,
          1279,
          1281,
          1283,
          1285,
          1287,
          1289,
          1291,
          1293,
          1295,
          1297,
          1299,
          1301,
          1303,
          1305,
          1307,
          1309,
          1311,
          1313,
          1315,
          1317,
          1319,
          1321,
          1323,
          1325,
          1327,
          7545,
          7549,
          7681,
          7683,
          7685,
          7687,
          7689,
          7691,
          7693,
          7695,
          7697,
          7699,
          7701,
          7703,
          7705,
          7707,
          7709,
          7711,
          7713,
          7715,
          7717,
          7719,
          7721,
          7723,
          7725,
          7727,
          7729,
          7731,
          7733,
          7735,
          7737,
          7739,
          7741,
          7743,
          7745,
          7747,
          7749,
          7751,
          7753,
          7755,
          7757,
          7759,
          7761,
          7763,
          7765,
          7767,
          7769,
          7771,
          7773,
          7775,
          7777,
          7779,
          7781,
          7783,
          7785,
          7787,
          7789,
          7791,
          7793,
          7795,
          7797,
          7799,
          7801,
          7803,
          7805,
          7807,
          7809,
          7811,
          7813,
          7815,
          7817,
          7819,
          7821,
          7823,
          7825,
          7827,
          7841,
          7843,
          7845,
          7847,
          7849,
          7851,
          7853,
          7855,
          7857,
          7859,
          7861,
          7863,
          7865,
          7867,
          7869,
          7871,
          7873,
          7875,
          7877,
          7879,
          7881,
          7883,
          7885,
          7887,
          7889,
          7891,
          7893,
          7895,
          7897,
          7899,
          7901,
          7903,
          7905,
          7907,
          7909,
          7911,
          7913,
          7915,
          7917,
          7919,
          7921,
          7923,
          7925,
          7927,
          7929,
          7931,
          7933,
          8124,
          8126,
          8140,
          8188,
          8526,
          8580,
          11361,
          11368,
          11370,
          11372,
          11379,
          11382,
          11393,
          11395,
          11397,
          11399,
          11401,
          11403,
          11405,
          11407,
          11409,
          11411,
          11413,
          11415,
          11417,
          11419,
          11421,
          11423,
          11425,
          11427,
          11429,
          11431,
          11433,
          11435,
          11437,
          11439,
          11441,
          11443,
          11445,
          11447,
          11449,
          11451,
          11453,
          11455,
          11457,
          11459,
          11461,
          11463,
          11465,
          11467,
          11469,
          11471,
          11473,
          11475,
          11477,
          11479,
          11481,
          11483,
          11485,
          11487,
          11489,
          11491,
          11500,
          11502,
          11507,
          11559,
          11565,
          42561,
          42563,
          42565,
          42567,
          42569,
          42571,
          42573,
          42575,
          42577,
          42579,
          42581,
          42583,
          42585,
          42587,
          42589,
          42591,
          42593,
          42595,
          42597,
          42599,
          42601,
          42603,
          42605,
          42625,
          42627,
          42629,
          42631,
          42633,
          42635,
          42637,
          42639,
          42641,
          42643,
          42645,
          42647,
          42649,
          42651,
          42787,
          42789,
          42791,
          42793,
          42795,
          42797,
          42799,
          42803,
          42805,
          42807,
          42809,
          42811,
          42813,
          42815,
          42817,
          42819,
          42821,
          42823,
          42825,
          42827,
          42829,
          42831,
          42833,
          42835,
          42837,
          42839,
          42841,
          42843,
          42845,
          42847,
          42849,
          42851,
          42853,
          42855,
          42857,
          42859,
          42861,
          42863,
          42874,
          42876,
          42879,
          42881,
          42883,
          42885,
          42887,
          42892,
          42897,
          42899,
          42903,
          42905,
          42907,
          42909,
          42911,
          42913,
          42915,
          42917,
          42919,
          42921,
          42933,
          42935,
          42937,
          43859
        )
          .addRange(97, 122)
          .addRange(223, 246)
          .addRange(248, 255)
          .addRange(328, 329)
          .addRange(382, 384)
          .addRange(409, 410)
          .addRange(453, 454)
          .addRange(456, 457)
          .addRange(459, 460)
          .addRange(476, 477)
          .addRange(495, 496)
          .addRange(498, 499)
          .addRange(575, 576)
          .addRange(591, 596)
          .addRange(598, 599)
          .addRange(603, 604)
          .addRange(608, 609)
          .addRange(613, 614)
          .addRange(616, 620)
          .addRange(625, 626)
          .addRange(647, 652)
          .addRange(669, 670)
          .addRange(891, 893)
          .addRange(940, 974)
          .addRange(976, 977)
          .addRange(981, 983)
          .addRange(1007, 1011)
          .addRange(1072, 1119)
          .addRange(1230, 1231)
          .addRange(1377, 1415)
          .addRange(4304, 4346)
          .addRange(4349, 4351)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7829, 7835)
          .addRange(7935, 7943)
          .addRange(7952, 7957)
          .addRange(7968, 7975)
          .addRange(7984, 7991)
          .addRange(8e3, 8005)
          .addRange(8016, 8023)
          .addRange(8032, 8039)
          .addRange(8048, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8119)
          .addRange(8130, 8132)
          .addRange(8134, 8135)
          .addRange(8144, 8147)
          .addRange(8150, 8151)
          .addRange(8160, 8167)
          .addRange(8178, 8180)
          .addRange(8182, 8183)
          .addRange(8560, 8575)
          .addRange(9424, 9449)
          .addRange(11312, 11358)
          .addRange(11365, 11366)
          .addRange(11520, 11557)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65345, 65370)
          .addRange(66600, 66639)
          .addRange(66776, 66811)
          .addRange(68800, 68850)
          .addRange(71872, 71903)
          .addRange(93792, 93823)
          .addRange(125218, 125251);
      },
      function(e, t, n) {
        e.exports = n(0)(
          45,
          1418,
          1470,
          5120,
          6150,
          8275,
          8315,
          8331,
          8722,
          11799,
          11802,
          11840,
          12316,
          12336,
          12448,
          65112,
          65123,
          65293
        )
          .addRange(8208, 8213)
          .addRange(11834, 11835)
          .addRange(65073, 65074);
      },
      function(e, t, n) {
        e.exports = n(0)(173, 847, 1564, 12644, 65279, 65440)
          .addRange(4447, 4448)
          .addRange(6068, 6069)
          .addRange(6155, 6158)
          .addRange(8203, 8207)
          .addRange(8234, 8238)
          .addRange(8288, 8303)
          .addRange(65024, 65039)
          .addRange(65520, 65528)
          .addRange(113824, 113827)
          .addRange(119155, 119162)
          .addRange(917504, 921599);
      },
      function(e, t, n) {
        e.exports = n(0)(329, 1651, 3959, 3961, 917505)
          .addRange(6051, 6052)
          .addRange(8298, 8303)
          .addRange(9001, 9002);
      },
      function(e, t, n) {
        e.exports = n(0)(
          94,
          96,
          168,
          175,
          180,
          890,
          1369,
          1471,
          1476,
          2364,
          2381,
          2417,
          2492,
          2509,
          2620,
          2637,
          2748,
          2765,
          2876,
          2893,
          3021,
          3149,
          3260,
          3277,
          3405,
          3530,
          3662,
          3893,
          3895,
          3897,
          4038,
          4151,
          4239,
          6109,
          6783,
          6964,
          6980,
          7405,
          7412,
          8125,
          11823,
          12540,
          42607,
          42623,
          42888,
          43204,
          43347,
          43443,
          43456,
          43493,
          43766,
          64286,
          65342,
          65344,
          65392,
          65507,
          66272,
          70003,
          70080,
          70460,
          70477,
          70722,
          70726,
          71231,
          71467,
          72244,
          72263,
          72345,
          72767,
          73026,
          73111
        )
          .addRange(183, 184)
          .addRange(688, 846)
          .addRange(848, 855)
          .addRange(861, 866)
          .addRange(884, 885)
          .addRange(900, 901)
          .addRange(1155, 1159)
          .addRange(1425, 1441)
          .addRange(1443, 1469)
          .addRange(1473, 1474)
          .addRange(1611, 1618)
          .addRange(1623, 1624)
          .addRange(1759, 1760)
          .addRange(1765, 1766)
          .addRange(1770, 1772)
          .addRange(1840, 1866)
          .addRange(1958, 1968)
          .addRange(2027, 2037)
          .addRange(2072, 2073)
          .addRange(2275, 2302)
          .addRange(2385, 2388)
          .addRange(2813, 2815)
          .addRange(3387, 3388)
          .addRange(3655, 3660)
          .addRange(3784, 3788)
          .addRange(3864, 3865)
          .addRange(3902, 3903)
          .addRange(3970, 3972)
          .addRange(3974, 3975)
          .addRange(4153, 4154)
          .addRange(4231, 4237)
          .addRange(4250, 4251)
          .addRange(6089, 6099)
          .addRange(6457, 6459)
          .addRange(6773, 6780)
          .addRange(6832, 6845)
          .addRange(7019, 7027)
          .addRange(7082, 7083)
          .addRange(7222, 7223)
          .addRange(7288, 7293)
          .addRange(7376, 7400)
          .addRange(7415, 7417)
          .addRange(7468, 7530)
          .addRange(7620, 7631)
          .addRange(7669, 7673)
          .addRange(7677, 7679)
          .addRange(8127, 8129)
          .addRange(8141, 8143)
          .addRange(8157, 8159)
          .addRange(8173, 8175)
          .addRange(8189, 8190)
          .addRange(11503, 11505)
          .addRange(12330, 12335)
          .addRange(12441, 12444)
          .addRange(42620, 42621)
          .addRange(42652, 42653)
          .addRange(42736, 42737)
          .addRange(42775, 42785)
          .addRange(43e3, 43001)
          .addRange(43232, 43249)
          .addRange(43307, 43310)
          .addRange(43643, 43645)
          .addRange(43711, 43714)
          .addRange(43867, 43871)
          .addRange(44012, 44013)
          .addRange(65056, 65071)
          .addRange(65438, 65439)
          .addRange(68325, 68326)
          .addRange(68898, 68903)
          .addRange(69446, 69456)
          .addRange(69817, 69818)
          .addRange(69939, 69940)
          .addRange(70090, 70092)
          .addRange(70197, 70198)
          .addRange(70377, 70378)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70850, 70851)
          .addRange(71103, 71104)
          .addRange(71350, 71351)
          .addRange(71737, 71738)
          .addRange(73028, 73029)
          .addRange(92912, 92916)
          .addRange(94095, 94111)
          .addRange(119143, 119145)
          .addRange(119149, 119154)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(125136, 125142)
          .addRange(125252, 125254)
          .addRange(125256, 125258);
      },
      function(e, t, n) {
        e.exports = n(0)(
          35,
          42,
          169,
          174,
          8252,
          8265,
          8482,
          8505,
          9e3,
          9167,
          9410,
          9654,
          9664,
          9742,
          9745,
          9752,
          9757,
          9760,
          9766,
          9770,
          9792,
          9794,
          9827,
          9832,
          9851,
          9881,
          9928,
          9937,
          9981,
          9986,
          9989,
          9999,
          10002,
          10004,
          10006,
          10013,
          10017,
          10024,
          10052,
          10055,
          10060,
          10062,
          10071,
          10145,
          10160,
          10175,
          11088,
          11093,
          12336,
          12349,
          12951,
          12953,
          126980,
          127183,
          127374,
          127514,
          127535,
          128391,
          128400,
          128424,
          128444,
          128481,
          128483,
          128488,
          128495,
          128499,
          128745,
          128752,
          129402
        )
          .addRange(48, 57)
          .addRange(8596, 8601)
          .addRange(8617, 8618)
          .addRange(8986, 8987)
          .addRange(9193, 9203)
          .addRange(9208, 9210)
          .addRange(9642, 9643)
          .addRange(9723, 9726)
          .addRange(9728, 9732)
          .addRange(9748, 9749)
          .addRange(9762, 9763)
          .addRange(9774, 9775)
          .addRange(9784, 9786)
          .addRange(9800, 9811)
          .addRange(9823, 9824)
          .addRange(9829, 9830)
          .addRange(9854, 9855)
          .addRange(9874, 9879)
          .addRange(9883, 9884)
          .addRange(9888, 9889)
          .addRange(9898, 9899)
          .addRange(9904, 9905)
          .addRange(9917, 9918)
          .addRange(9924, 9925)
          .addRange(9934, 9935)
          .addRange(9939, 9940)
          .addRange(9961, 9962)
          .addRange(9968, 9973)
          .addRange(9975, 9978)
          .addRange(9992, 9997)
          .addRange(10035, 10036)
          .addRange(10067, 10069)
          .addRange(10083, 10084)
          .addRange(10133, 10135)
          .addRange(10548, 10549)
          .addRange(11013, 11015)
          .addRange(11035, 11036)
          .addRange(127344, 127345)
          .addRange(127358, 127359)
          .addRange(127377, 127386)
          .addRange(127462, 127487)
          .addRange(127489, 127490)
          .addRange(127538, 127546)
          .addRange(127568, 127569)
          .addRange(127744, 127777)
          .addRange(127780, 127891)
          .addRange(127894, 127895)
          .addRange(127897, 127899)
          .addRange(127902, 127984)
          .addRange(127987, 127989)
          .addRange(127991, 128253)
          .addRange(128255, 128317)
          .addRange(128329, 128334)
          .addRange(128336, 128359)
          .addRange(128367, 128368)
          .addRange(128371, 128378)
          .addRange(128394, 128397)
          .addRange(128405, 128406)
          .addRange(128420, 128421)
          .addRange(128433, 128434)
          .addRange(128450, 128452)
          .addRange(128465, 128467)
          .addRange(128476, 128478)
          .addRange(128506, 128591)
          .addRange(128640, 128709)
          .addRange(128715, 128722)
          .addRange(128736, 128741)
          .addRange(128747, 128748)
          .addRange(128755, 128761)
          .addRange(129296, 129338)
          .addRange(129340, 129342)
          .addRange(129344, 129349)
          .addRange(129351, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535);
      },
      function(e, t, n) {
        e.exports = n(0)(35, 42, 8205, 8419, 65039)
          .addRange(48, 57)
          .addRange(127462, 127487)
          .addRange(127995, 127999)
          .addRange(129456, 129459)
          .addRange(917536, 917631);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(127995, 127999);
      },
      function(e, t, n) {
        e.exports = n(0)(
          9757,
          9977,
          127877,
          127943,
          128110,
          128124,
          128170,
          128378,
          128400,
          128675,
          128704,
          128716,
          129318
        )
          .addRange(9994, 9997)
          .addRange(127938, 127940)
          .addRange(127946, 127948)
          .addRange(128066, 128067)
          .addRange(128070, 128080)
          .addRange(128102, 128105)
          .addRange(128112, 128120)
          .addRange(128129, 128131)
          .addRange(128133, 128135)
          .addRange(128372, 128373)
          .addRange(128405, 128406)
          .addRange(128581, 128583)
          .addRange(128587, 128591)
          .addRange(128692, 128694)
          .addRange(129304, 129308)
          .addRange(129310, 129311)
          .addRange(129328, 129337)
          .addRange(129341, 129342)
          .addRange(129461, 129462)
          .addRange(129464, 129465)
          .addRange(129489, 129501);
      },
      function(e, t, n) {
        e.exports = n(0)(
          9200,
          9203,
          9855,
          9875,
          9889,
          9934,
          9940,
          9962,
          9973,
          9978,
          9981,
          9989,
          10024,
          10060,
          10062,
          10071,
          10160,
          10175,
          11088,
          11093,
          126980,
          127183,
          127374,
          127489,
          127514,
          127535,
          127988,
          128064,
          128378,
          128420,
          128716,
          129402
        )
          .addRange(8986, 8987)
          .addRange(9193, 9196)
          .addRange(9725, 9726)
          .addRange(9748, 9749)
          .addRange(9800, 9811)
          .addRange(9898, 9899)
          .addRange(9917, 9918)
          .addRange(9924, 9925)
          .addRange(9970, 9971)
          .addRange(9994, 9995)
          .addRange(10067, 10069)
          .addRange(10133, 10135)
          .addRange(11035, 11036)
          .addRange(127377, 127386)
          .addRange(127462, 127487)
          .addRange(127538, 127542)
          .addRange(127544, 127546)
          .addRange(127568, 127569)
          .addRange(127744, 127776)
          .addRange(127789, 127797)
          .addRange(127799, 127868)
          .addRange(127870, 127891)
          .addRange(127904, 127946)
          .addRange(127951, 127955)
          .addRange(127968, 127984)
          .addRange(127992, 128062)
          .addRange(128066, 128252)
          .addRange(128255, 128317)
          .addRange(128331, 128334)
          .addRange(128336, 128359)
          .addRange(128405, 128406)
          .addRange(128507, 128591)
          .addRange(128640, 128709)
          .addRange(128720, 128722)
          .addRange(128747, 128748)
          .addRange(128756, 128761)
          .addRange(129296, 129338)
          .addRange(129340, 129342)
          .addRange(129344, 129349)
          .addRange(129351, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535);
      },
      function(e, t, n) {
        e.exports = n(0)(
          169,
          174,
          8252,
          8265,
          8482,
          8505,
          9e3,
          9096,
          9167,
          9410,
          9654,
          9664,
          10004,
          10006,
          10013,
          10017,
          10024,
          10052,
          10055,
          10060,
          10062,
          10071,
          10145,
          10160,
          10175,
          11088,
          11093,
          12336,
          12349,
          12951,
          12953,
          127279,
          127374,
          127514,
          127535
        )
          .addRange(8596, 8601)
          .addRange(8617, 8618)
          .addRange(8986, 8987)
          .addRange(9193, 9203)
          .addRange(9208, 9210)
          .addRange(9642, 9643)
          .addRange(9723, 9726)
          .addRange(9728, 9733)
          .addRange(9735, 9746)
          .addRange(9748, 9861)
          .addRange(9872, 9989)
          .addRange(9992, 10002)
          .addRange(10035, 10036)
          .addRange(10067, 10069)
          .addRange(10083, 10087)
          .addRange(10133, 10135)
          .addRange(10548, 10549)
          .addRange(11013, 11015)
          .addRange(11035, 11036)
          .addRange(126976, 127231)
          .addRange(127245, 127247)
          .addRange(127340, 127345)
          .addRange(127358, 127359)
          .addRange(127377, 127386)
          .addRange(127405, 127461)
          .addRange(127489, 127503)
          .addRange(127538, 127546)
          .addRange(127548, 127551)
          .addRange(127561, 127994)
          .addRange(128e3, 128317)
          .addRange(128326, 128591)
          .addRange(128640, 128767)
          .addRange(128884, 128895)
          .addRange(128981, 129023)
          .addRange(129036, 129039)
          .addRange(129096, 129103)
          .addRange(129114, 129119)
          .addRange(129160, 129167)
          .addRange(129198, 129279)
          .addRange(129292, 129338)
          .addRange(129340, 129349)
          .addRange(129351, 131069);
      },
      function(e, t, n) {
        e.exports = n(0)(
          183,
          1600,
          2042,
          3654,
          3782,
          6154,
          6211,
          6823,
          7222,
          7291,
          12293,
          40981,
          42508,
          43471,
          43494,
          43632,
          43741,
          65392,
          70493,
          72344
        )
          .addRange(720, 721)
          .addRange(12337, 12341)
          .addRange(12445, 12446)
          .addRange(12540, 12542)
          .addRange(43763, 43764)
          .addRange(71110, 71112)
          .addRange(92994, 92995)
          .addRange(94176, 94177)
          .addRange(125252, 125254);
      },
      function(e, t, n) {
        e.exports = n(0)(
          908,
          1470,
          1472,
          1475,
          1478,
          1563,
          1758,
          1769,
          1808,
          1969,
          2074,
          2084,
          2088,
          2142,
          2363,
          2482,
          2493,
          2510,
          2563,
          2654,
          2678,
          2691,
          2761,
          2768,
          2809,
          2877,
          2880,
          2947,
          2972,
          3007,
          3024,
          3133,
          3294,
          3389,
          3517,
          3716,
          3722,
          3725,
          3749,
          3751,
          3773,
          3782,
          3894,
          3896,
          3967,
          3973,
          4145,
          4152,
          4295,
          4301,
          4696,
          4800,
          6070,
          6314,
          6464,
          6743,
          6753,
          6965,
          6971,
          7082,
          7143,
          7150,
          7379,
          7393,
          8025,
          8027,
          8029,
          11559,
          11565,
          42611,
          43597,
          43697,
          43712,
          43714,
          64285,
          64318,
          65952,
          66927,
          67592,
          67644,
          67903,
          69632,
          69932,
          70093,
          70197,
          70280,
          70461,
          70463,
          70480,
          70725,
          70747,
          70749,
          70841,
          70846,
          70849,
          71102,
          71230,
          71340,
          71350,
          71462,
          71736,
          71739,
          71935,
          72192,
          72272,
          72343,
          72766,
          72873,
          72881,
          72884,
          73030,
          73110,
          73112,
          92917,
          113820,
          113823,
          119142,
          119365,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590,
          129402
        )
          .addRange(32, 126)
          .addRange(160, 172)
          .addRange(174, 767)
          .addRange(880, 887)
          .addRange(890, 895)
          .addRange(900, 906)
          .addRange(910, 929)
          .addRange(931, 1154)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1369, 1418)
          .addRange(1421, 1423)
          .addRange(1488, 1514)
          .addRange(1519, 1524)
          .addRange(1542, 1551)
          .addRange(1566, 1610)
          .addRange(1632, 1647)
          .addRange(1649, 1749)
          .addRange(1765, 1766)
          .addRange(1774, 1805)
          .addRange(1810, 1839)
          .addRange(1869, 1957)
          .addRange(1984, 2026)
          .addRange(2036, 2042)
          .addRange(2046, 2069)
          .addRange(2096, 2110)
          .addRange(2112, 2136)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2307, 2361)
          .addRange(2365, 2368)
          .addRange(2377, 2380)
          .addRange(2382, 2384)
          .addRange(2392, 2401)
          .addRange(2404, 2432)
          .addRange(2434, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2495, 2496)
          .addRange(2503, 2504)
          .addRange(2507, 2508)
          .addRange(2524, 2525)
          .addRange(2527, 2529)
          .addRange(2534, 2557)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2624)
          .addRange(2649, 2652)
          .addRange(2662, 2671)
          .addRange(2674, 2676)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2749, 2752)
          .addRange(2763, 2764)
          .addRange(2784, 2785)
          .addRange(2790, 2801)
          .addRange(2818, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2887, 2888)
          .addRange(2891, 2892)
          .addRange(2908, 2909)
          .addRange(2911, 2913)
          .addRange(2918, 2935)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3009, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3020)
          .addRange(3046, 3066)
          .addRange(3073, 3075)
          .addRange(3077, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3137, 3140)
          .addRange(3160, 3162)
          .addRange(3168, 3169)
          .addRange(3174, 3183)
          .addRange(3192, 3200)
          .addRange(3202, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3261, 3262)
          .addRange(3264, 3265)
          .addRange(3267, 3268)
          .addRange(3271, 3272)
          .addRange(3274, 3275)
          .addRange(3296, 3297)
          .addRange(3302, 3311)
          .addRange(3313, 3314)
          .addRange(3330, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3386)
          .addRange(3391, 3392)
          .addRange(3398, 3400)
          .addRange(3402, 3404)
          .addRange(3406, 3407)
          .addRange(3412, 3414)
          .addRange(3416, 3425)
          .addRange(3430, 3455)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3536, 3537)
          .addRange(3544, 3550)
          .addRange(3558, 3567)
          .addRange(3570, 3572)
          .addRange(3585, 3632)
          .addRange(3634, 3635)
          .addRange(3647, 3654)
          .addRange(3663, 3675)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3760)
          .addRange(3762, 3763)
          .addRange(3776, 3780)
          .addRange(3792, 3801)
          .addRange(3804, 3807)
          .addRange(3840, 3863)
          .addRange(3866, 3892)
          .addRange(3898, 3911)
          .addRange(3913, 3948)
          .addRange(3976, 3980)
          .addRange(4030, 4037)
          .addRange(4039, 4044)
          .addRange(4046, 4058)
          .addRange(4096, 4140)
          .addRange(4155, 4156)
          .addRange(4159, 4183)
          .addRange(4186, 4189)
          .addRange(4193, 4208)
          .addRange(4213, 4225)
          .addRange(4227, 4228)
          .addRange(4231, 4236)
          .addRange(4238, 4252)
          .addRange(4254, 4293)
          .addRange(4304, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4960, 4988)
          .addRange(4992, 5017)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5120, 5788)
          .addRange(5792, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5905)
          .addRange(5920, 5937)
          .addRange(5941, 5942)
          .addRange(5952, 5969)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6016, 6067)
          .addRange(6078, 6085)
          .addRange(6087, 6088)
          .addRange(6100, 6108)
          .addRange(6112, 6121)
          .addRange(6128, 6137)
          .addRange(6144, 6154)
          .addRange(6160, 6169)
          .addRange(6176, 6264)
          .addRange(6272, 6276)
          .addRange(6279, 6312)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6435, 6438)
          .addRange(6441, 6443)
          .addRange(6448, 6449)
          .addRange(6451, 6456)
          .addRange(6468, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6608, 6618)
          .addRange(6622, 6678)
          .addRange(6681, 6682)
          .addRange(6686, 6741)
          .addRange(6755, 6756)
          .addRange(6765, 6770)
          .addRange(6784, 6793)
          .addRange(6800, 6809)
          .addRange(6816, 6829)
          .addRange(6916, 6963)
          .addRange(6973, 6977)
          .addRange(6979, 6987)
          .addRange(6992, 7018)
          .addRange(7028, 7036)
          .addRange(7042, 7073)
          .addRange(7078, 7079)
          .addRange(7086, 7141)
          .addRange(7146, 7148)
          .addRange(7154, 7155)
          .addRange(7164, 7211)
          .addRange(7220, 7221)
          .addRange(7227, 7241)
          .addRange(7245, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7367)
          .addRange(7401, 7404)
          .addRange(7406, 7411)
          .addRange(7413, 7415)
          .addRange(7424, 7615)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8132)
          .addRange(8134, 8147)
          .addRange(8150, 8155)
          .addRange(8157, 8175)
          .addRange(8178, 8180)
          .addRange(8182, 8190)
          .addRange(8192, 8202)
          .addRange(8208, 8231)
          .addRange(8239, 8287)
          .addRange(8304, 8305)
          .addRange(8308, 8334)
          .addRange(8336, 8348)
          .addRange(8352, 8383)
          .addRange(8448, 8587)
          .addRange(8592, 9254)
          .addRange(9280, 9290)
          .addRange(9312, 11123)
          .addRange(11126, 11157)
          .addRange(11160, 11208)
          .addRange(11210, 11262)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11502)
          .addRange(11506, 11507)
          .addRange(11513, 11557)
          .addRange(11568, 11623)
          .addRange(11631, 11632)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(11776, 11854)
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245)
          .addRange(12272, 12283)
          .addRange(12288, 12329)
          .addRange(12336, 12351)
          .addRange(12353, 12438)
          .addRange(12443, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12688, 12730)
          .addRange(12736, 12771)
          .addRange(12784, 12830)
          .addRange(12832, 13054)
          .addRange(13056, 19893)
          .addRange(19904, 40943)
          .addRange(40960, 42124)
          .addRange(42128, 42182)
          .addRange(42192, 42539)
          .addRange(42560, 42606)
          .addRange(42622, 42653)
          .addRange(42656, 42735)
          .addRange(42738, 42743)
          .addRange(42752, 42937)
          .addRange(42999, 43009)
          .addRange(43011, 43013)
          .addRange(43015, 43018)
          .addRange(43020, 43044)
          .addRange(43047, 43051)
          .addRange(43056, 43065)
          .addRange(43072, 43127)
          .addRange(43136, 43203)
          .addRange(43214, 43225)
          .addRange(43250, 43262)
          .addRange(43264, 43301)
          .addRange(43310, 43334)
          .addRange(43346, 43347)
          .addRange(43359, 43388)
          .addRange(43395, 43442)
          .addRange(43444, 43445)
          .addRange(43450, 43451)
          .addRange(43453, 43469)
          .addRange(43471, 43481)
          .addRange(43486, 43492)
          .addRange(43494, 43518)
          .addRange(43520, 43560)
          .addRange(43567, 43568)
          .addRange(43571, 43572)
          .addRange(43584, 43586)
          .addRange(43588, 43595)
          .addRange(43600, 43609)
          .addRange(43612, 43643)
          .addRange(43645, 43695)
          .addRange(43701, 43702)
          .addRange(43705, 43709)
          .addRange(43739, 43755)
          .addRange(43758, 43765)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43877)
          .addRange(43888, 44004)
          .addRange(44006, 44007)
          .addRange(44009, 44012)
          .addRange(44016, 44025)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64287, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64449)
          .addRange(64467, 64831)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65021)
          .addRange(65040, 65049)
          .addRange(65072, 65106)
          .addRange(65108, 65126)
          .addRange(65128, 65131)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65281, 65437)
          .addRange(65440, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65504, 65510)
          .addRange(65512, 65518)
          .addRange(65532, 65533)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65792, 65794)
          .addRange(65799, 65843)
          .addRange(65847, 65934)
          .addRange(65936, 65947)
          .addRange(66e3, 66044)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66273, 66299)
          .addRange(66304, 66339)
          .addRange(66349, 66378)
          .addRange(66384, 66421)
          .addRange(66432, 66461)
          .addRange(66463, 66499)
          .addRange(66504, 66517)
          .addRange(66560, 66717)
          .addRange(66720, 66729)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67671, 67742)
          .addRange(67751, 67759)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67835, 67867)
          .addRange(67871, 67897)
          .addRange(67968, 68023)
          .addRange(68028, 68047)
          .addRange(68050, 68096)
          .addRange(68112, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68160, 68168)
          .addRange(68176, 68184)
          .addRange(68192, 68255)
          .addRange(68288, 68324)
          .addRange(68331, 68342)
          .addRange(68352, 68405)
          .addRange(68409, 68437)
          .addRange(68440, 68466)
          .addRange(68472, 68497)
          .addRange(68505, 68508)
          .addRange(68521, 68527)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68858, 68899)
          .addRange(68912, 68921)
          .addRange(69216, 69246)
          .addRange(69376, 69415)
          .addRange(69424, 69445)
          .addRange(69457, 69465)
          .addRange(69634, 69687)
          .addRange(69703, 69709)
          .addRange(69714, 69743)
          .addRange(69762, 69810)
          .addRange(69815, 69816)
          .addRange(69819, 69820)
          .addRange(69822, 69825)
          .addRange(69840, 69864)
          .addRange(69872, 69881)
          .addRange(69891, 69926)
          .addRange(69942, 69958)
          .addRange(69968, 70002)
          .addRange(70004, 70006)
          .addRange(70018, 70069)
          .addRange(70079, 70088)
          .addRange(70096, 70111)
          .addRange(70113, 70132)
          .addRange(70144, 70161)
          .addRange(70163, 70190)
          .addRange(70194, 70195)
          .addRange(70200, 70205)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70313)
          .addRange(70320, 70366)
          .addRange(70368, 70370)
          .addRange(70384, 70393)
          .addRange(70402, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70465, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70493, 70499)
          .addRange(70656, 70711)
          .addRange(70720, 70721)
          .addRange(70727, 70745)
          .addRange(70784, 70831)
          .addRange(70833, 70834)
          .addRange(70843, 70844)
          .addRange(70852, 70855)
          .addRange(70864, 70873)
          .addRange(71040, 71086)
          .addRange(71088, 71089)
          .addRange(71096, 71099)
          .addRange(71105, 71131)
          .addRange(71168, 71218)
          .addRange(71227, 71228)
          .addRange(71233, 71236)
          .addRange(71248, 71257)
          .addRange(71264, 71276)
          .addRange(71296, 71338)
          .addRange(71342, 71343)
          .addRange(71360, 71369)
          .addRange(71424, 71450)
          .addRange(71456, 71457)
          .addRange(71472, 71487)
          .addRange(71680, 71726)
          .addRange(71840, 71922)
          .addRange(72203, 72242)
          .addRange(72249, 72250)
          .addRange(72255, 72262)
          .addRange(72279, 72280)
          .addRange(72284, 72323)
          .addRange(72326, 72329)
          .addRange(72346, 72354)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72751)
          .addRange(72768, 72773)
          .addRange(72784, 72812)
          .addRange(72816, 72847)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73008)
          .addRange(73040, 73049)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73107, 73108)
          .addRange(73120, 73129)
          .addRange(73440, 73458)
          .addRange(73461, 73464)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74864, 74868)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92768, 92777)
          .addRange(92782, 92783)
          .addRange(92880, 92909)
          .addRange(92928, 92975)
          .addRange(92983, 92997)
          .addRange(93008, 93017)
          .addRange(93019, 93025)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93850)
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94099, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(118784, 119029)
          .addRange(119040, 119078)
          .addRange(119081, 119140)
          .addRange(119146, 119149)
          .addRange(119171, 119172)
          .addRange(119180, 119209)
          .addRange(119214, 119272)
          .addRange(119296, 119361)
          .addRange(119520, 119539)
          .addRange(119552, 119638)
          .addRange(119648, 119672)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120779)
          .addRange(120782, 121343)
          .addRange(121399, 121402)
          .addRange(121453, 121460)
          .addRange(121462, 121475)
          .addRange(121477, 121483)
          .addRange(124928, 125124)
          .addRange(125127, 125135)
          .addRange(125184, 125251)
          .addRange(125264, 125273)
          .addRange(125278, 125279)
          .addRange(126065, 126132)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(126704, 126705)
          .addRange(126976, 127019)
          .addRange(127024, 127123)
          .addRange(127136, 127150)
          .addRange(127153, 127167)
          .addRange(127169, 127183)
          .addRange(127185, 127221)
          .addRange(127232, 127244)
          .addRange(127248, 127339)
          .addRange(127344, 127404)
          .addRange(127462, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127568, 127569)
          .addRange(127584, 127589)
          .addRange(127744, 128724)
          .addRange(128736, 128748)
          .addRange(128752, 128761)
          .addRange(128768, 128883)
          .addRange(128896, 128984)
          .addRange(129024, 129035)
          .addRange(129040, 129095)
          .addRange(129104, 129113)
          .addRange(129120, 129159)
          .addRange(129168, 129197)
          .addRange(129280, 129291)
          .addRange(129296, 129342)
          .addRange(129344, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535)
          .addRange(129632, 129645)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)(
          1471,
          1479,
          1648,
          1809,
          2045,
          2362,
          2364,
          2381,
          2433,
          2492,
          2494,
          2509,
          2519,
          2558,
          2620,
          2641,
          2677,
          2748,
          2765,
          2817,
          2876,
          2893,
          2946,
          3006,
          3008,
          3021,
          3031,
          3072,
          3076,
          3201,
          3260,
          3263,
          3266,
          3270,
          3390,
          3405,
          3415,
          3530,
          3535,
          3542,
          3551,
          3633,
          3761,
          3893,
          3895,
          3897,
          4038,
          4226,
          4237,
          4253,
          6086,
          6109,
          6313,
          6450,
          6683,
          6742,
          6752,
          6754,
          6783,
          6964,
          6972,
          6978,
          7142,
          7149,
          7405,
          7412,
          8204,
          11647,
          43010,
          43014,
          43019,
          43263,
          43443,
          43452,
          43493,
          43587,
          43596,
          43644,
          43696,
          43713,
          43766,
          44005,
          44008,
          44013,
          64286,
          66045,
          66272,
          68159,
          69633,
          70003,
          70196,
          70206,
          70367,
          70462,
          70464,
          70487,
          70726,
          70750,
          70832,
          70842,
          70845,
          71087,
          71229,
          71339,
          71341,
          71351,
          72263,
          72767,
          73018,
          73031,
          73109,
          73111,
          119141,
          121461,
          121476
        )
          .addRange(768, 879)
          .addRange(1155, 1161)
          .addRange(1425, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1552, 1562)
          .addRange(1611, 1631)
          .addRange(1750, 1756)
          .addRange(1759, 1764)
          .addRange(1767, 1768)
          .addRange(1770, 1773)
          .addRange(1840, 1866)
          .addRange(1958, 1968)
          .addRange(2027, 2035)
          .addRange(2070, 2073)
          .addRange(2075, 2083)
          .addRange(2085, 2087)
          .addRange(2089, 2093)
          .addRange(2137, 2139)
          .addRange(2259, 2273)
          .addRange(2275, 2306)
          .addRange(2369, 2376)
          .addRange(2385, 2391)
          .addRange(2402, 2403)
          .addRange(2497, 2500)
          .addRange(2530, 2531)
          .addRange(2561, 2562)
          .addRange(2625, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2672, 2673)
          .addRange(2689, 2690)
          .addRange(2753, 2757)
          .addRange(2759, 2760)
          .addRange(2786, 2787)
          .addRange(2810, 2815)
          .addRange(2878, 2879)
          .addRange(2881, 2884)
          .addRange(2902, 2903)
          .addRange(2914, 2915)
          .addRange(3134, 3136)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3170, 3171)
          .addRange(3276, 3277)
          .addRange(3285, 3286)
          .addRange(3298, 3299)
          .addRange(3328, 3329)
          .addRange(3387, 3388)
          .addRange(3393, 3396)
          .addRange(3426, 3427)
          .addRange(3538, 3540)
          .addRange(3636, 3642)
          .addRange(3655, 3662)
          .addRange(3764, 3769)
          .addRange(3771, 3772)
          .addRange(3784, 3789)
          .addRange(3864, 3865)
          .addRange(3953, 3966)
          .addRange(3968, 3972)
          .addRange(3974, 3975)
          .addRange(3981, 3991)
          .addRange(3993, 4028)
          .addRange(4141, 4144)
          .addRange(4146, 4151)
          .addRange(4153, 4154)
          .addRange(4157, 4158)
          .addRange(4184, 4185)
          .addRange(4190, 4192)
          .addRange(4209, 4212)
          .addRange(4229, 4230)
          .addRange(4957, 4959)
          .addRange(5906, 5908)
          .addRange(5938, 5940)
          .addRange(5970, 5971)
          .addRange(6002, 6003)
          .addRange(6068, 6069)
          .addRange(6071, 6077)
          .addRange(6089, 6099)
          .addRange(6155, 6157)
          .addRange(6277, 6278)
          .addRange(6432, 6434)
          .addRange(6439, 6440)
          .addRange(6457, 6459)
          .addRange(6679, 6680)
          .addRange(6744, 6750)
          .addRange(6757, 6764)
          .addRange(6771, 6780)
          .addRange(6832, 6846)
          .addRange(6912, 6915)
          .addRange(6966, 6970)
          .addRange(7019, 7027)
          .addRange(7040, 7041)
          .addRange(7074, 7077)
          .addRange(7080, 7081)
          .addRange(7083, 7085)
          .addRange(7144, 7145)
          .addRange(7151, 7153)
          .addRange(7212, 7219)
          .addRange(7222, 7223)
          .addRange(7376, 7378)
          .addRange(7380, 7392)
          .addRange(7394, 7400)
          .addRange(7416, 7417)
          .addRange(7616, 7673)
          .addRange(7675, 7679)
          .addRange(8400, 8432)
          .addRange(11503, 11505)
          .addRange(11744, 11775)
          .addRange(12330, 12335)
          .addRange(12441, 12442)
          .addRange(42607, 42610)
          .addRange(42612, 42621)
          .addRange(42654, 42655)
          .addRange(42736, 42737)
          .addRange(43045, 43046)
          .addRange(43204, 43205)
          .addRange(43232, 43249)
          .addRange(43302, 43309)
          .addRange(43335, 43345)
          .addRange(43392, 43394)
          .addRange(43446, 43449)
          .addRange(43561, 43566)
          .addRange(43569, 43570)
          .addRange(43573, 43574)
          .addRange(43698, 43700)
          .addRange(43703, 43704)
          .addRange(43710, 43711)
          .addRange(43756, 43757)
          .addRange(65024, 65039)
          .addRange(65056, 65071)
          .addRange(65438, 65439)
          .addRange(66422, 66426)
          .addRange(68097, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68111)
          .addRange(68152, 68154)
          .addRange(68325, 68326)
          .addRange(68900, 68903)
          .addRange(69446, 69456)
          .addRange(69688, 69702)
          .addRange(69759, 69761)
          .addRange(69811, 69814)
          .addRange(69817, 69818)
          .addRange(69888, 69890)
          .addRange(69927, 69931)
          .addRange(69933, 69940)
          .addRange(70016, 70017)
          .addRange(70070, 70078)
          .addRange(70089, 70092)
          .addRange(70191, 70193)
          .addRange(70198, 70199)
          .addRange(70371, 70378)
          .addRange(70400, 70401)
          .addRange(70459, 70460)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70712, 70719)
          .addRange(70722, 70724)
          .addRange(70835, 70840)
          .addRange(70847, 70848)
          .addRange(70850, 70851)
          .addRange(71090, 71093)
          .addRange(71100, 71101)
          .addRange(71103, 71104)
          .addRange(71132, 71133)
          .addRange(71219, 71226)
          .addRange(71231, 71232)
          .addRange(71344, 71349)
          .addRange(71453, 71455)
          .addRange(71458, 71461)
          .addRange(71463, 71467)
          .addRange(71727, 71735)
          .addRange(71737, 71738)
          .addRange(72193, 72202)
          .addRange(72243, 72248)
          .addRange(72251, 72254)
          .addRange(72273, 72278)
          .addRange(72281, 72283)
          .addRange(72330, 72342)
          .addRange(72344, 72345)
          .addRange(72752, 72758)
          .addRange(72760, 72765)
          .addRange(72850, 72871)
          .addRange(72874, 72880)
          .addRange(72882, 72883)
          .addRange(72885, 72886)
          .addRange(73009, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73029)
          .addRange(73104, 73105)
          .addRange(73459, 73460)
          .addRange(92912, 92916)
          .addRange(92976, 92982)
          .addRange(94095, 94098)
          .addRange(113821, 113822)
          .addRange(119143, 119145)
          .addRange(119150, 119154)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(119362, 119364)
          .addRange(121344, 121398)
          .addRange(121403, 121452)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(125136, 125142)
          .addRange(125252, 125258)
          .addRange(917536, 917631)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(48, 57)
          .addRange(65, 70)
          .addRange(97, 102)
          .addRange(65296, 65305)
          .addRange(65313, 65318)
          .addRange(65345, 65350);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(12272, 12273)
          .addRange(12276, 12283);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(12274, 12275);
      },
      function(e, t, n) {
        e.exports = n(0)(
          95,
          170,
          181,
          183,
          186,
          748,
          750,
          895,
          908,
          1369,
          1471,
          1479,
          1791,
          2042,
          2045,
          2482,
          2519,
          2556,
          2558,
          2620,
          2641,
          2654,
          2768,
          2929,
          2972,
          3024,
          3031,
          3294,
          3517,
          3530,
          3542,
          3716,
          3722,
          3725,
          3749,
          3751,
          3782,
          3840,
          3893,
          3895,
          3897,
          4038,
          4295,
          4301,
          4696,
          4800,
          6103,
          6823,
          8025,
          8027,
          8029,
          8126,
          8276,
          8305,
          8319,
          8417,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8526,
          11559,
          11565,
          11631,
          43259,
          64318,
          65343,
          66045,
          66272,
          67592,
          67644,
          68159,
          69415,
          70006,
          70108,
          70206,
          70280,
          70480,
          70487,
          70750,
          70855,
          71236,
          71935,
          72263,
          72349,
          73018,
          119970,
          119995,
          120134,
          121461,
          121476,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(48, 57)
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(768, 884)
          .addRange(886, 887)
          .addRange(890, 893)
          .addRange(902, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1155, 1159)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(1425, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1552, 1562)
          .addRange(1568, 1641)
          .addRange(1646, 1747)
          .addRange(1749, 1756)
          .addRange(1759, 1768)
          .addRange(1770, 1788)
          .addRange(1808, 1866)
          .addRange(1869, 1969)
          .addRange(1984, 2037)
          .addRange(2048, 2093)
          .addRange(2112, 2139)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2259, 2273)
          .addRange(2275, 2403)
          .addRange(2406, 2415)
          .addRange(2417, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2492, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2510)
          .addRange(2524, 2525)
          .addRange(2527, 2531)
          .addRange(2534, 2545)
          .addRange(2561, 2563)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2649, 2652)
          .addRange(2662, 2677)
          .addRange(2689, 2691)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2748, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2765)
          .addRange(2784, 2787)
          .addRange(2790, 2799)
          .addRange(2809, 2815)
          .addRange(2817, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2876, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2893)
          .addRange(2902, 2903)
          .addRange(2908, 2909)
          .addRange(2911, 2915)
          .addRange(2918, 2927)
          .addRange(2946, 2947)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3021)
          .addRange(3046, 3055)
          .addRange(3072, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3133, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3160, 3162)
          .addRange(3168, 3171)
          .addRange(3174, 3183)
          .addRange(3200, 3203)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3260, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3277)
          .addRange(3285, 3286)
          .addRange(3296, 3299)
          .addRange(3302, 3311)
          .addRange(3313, 3314)
          .addRange(3328, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3406)
          .addRange(3412, 3415)
          .addRange(3423, 3427)
          .addRange(3430, 3439)
          .addRange(3450, 3455)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3558, 3567)
          .addRange(3570, 3571)
          .addRange(3585, 3642)
          .addRange(3648, 3662)
          .addRange(3664, 3673)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3769)
          .addRange(3771, 3773)
          .addRange(3776, 3780)
          .addRange(3784, 3789)
          .addRange(3792, 3801)
          .addRange(3804, 3807)
          .addRange(3864, 3865)
          .addRange(3872, 3881)
          .addRange(3902, 3911)
          .addRange(3913, 3948)
          .addRange(3953, 3972)
          .addRange(3974, 3991)
          .addRange(3993, 4028)
          .addRange(4096, 4169)
          .addRange(4176, 4253)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4957, 4959)
          .addRange(4969, 4977)
          .addRange(4992, 5007)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5870, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5908)
          .addRange(5920, 5940)
          .addRange(5952, 5971)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6002, 6003)
          .addRange(6016, 6099)
          .addRange(6108, 6109)
          .addRange(6112, 6121)
          .addRange(6155, 6157)
          .addRange(6160, 6169)
          .addRange(6176, 6264)
          .addRange(6272, 6314)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6432, 6443)
          .addRange(6448, 6459)
          .addRange(6470, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6608, 6618)
          .addRange(6656, 6683)
          .addRange(6688, 6750)
          .addRange(6752, 6780)
          .addRange(6783, 6793)
          .addRange(6800, 6809)
          .addRange(6832, 6845)
          .addRange(6912, 6987)
          .addRange(6992, 7001)
          .addRange(7019, 7027)
          .addRange(7040, 7155)
          .addRange(7168, 7223)
          .addRange(7232, 7241)
          .addRange(7245, 7293)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7376, 7378)
          .addRange(7380, 7417)
          .addRange(7424, 7673)
          .addRange(7675, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8255, 8256)
          .addRange(8336, 8348)
          .addRange(8400, 8412)
          .addRange(8421, 8432)
          .addRange(8458, 8467)
          .addRange(8472, 8477)
          .addRange(8490, 8505)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8544, 8584)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11507)
          .addRange(11520, 11557)
          .addRange(11568, 11623)
          .addRange(11647, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(11744, 11775)
          .addRange(12293, 12295)
          .addRange(12321, 12335)
          .addRange(12337, 12341)
          .addRange(12344, 12348)
          .addRange(12353, 12438)
          .addRange(12441, 12447)
          .addRange(12449, 12538)
          .addRange(12540, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 42124)
          .addRange(42192, 42237)
          .addRange(42240, 42508)
          .addRange(42512, 42539)
          .addRange(42560, 42607)
          .addRange(42612, 42621)
          .addRange(42623, 42737)
          .addRange(42775, 42783)
          .addRange(42786, 42888)
          .addRange(42891, 42937)
          .addRange(42999, 43047)
          .addRange(43072, 43123)
          .addRange(43136, 43205)
          .addRange(43216, 43225)
          .addRange(43232, 43255)
          .addRange(43261, 43309)
          .addRange(43312, 43347)
          .addRange(43360, 43388)
          .addRange(43392, 43456)
          .addRange(43471, 43481)
          .addRange(43488, 43518)
          .addRange(43520, 43574)
          .addRange(43584, 43597)
          .addRange(43600, 43609)
          .addRange(43616, 43638)
          .addRange(43642, 43714)
          .addRange(43739, 43741)
          .addRange(43744, 43759)
          .addRange(43762, 43766)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 44010)
          .addRange(44012, 44013)
          .addRange(44016, 44025)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64285, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65019)
          .addRange(65024, 65039)
          .addRange(65056, 65071)
          .addRange(65075, 65076)
          .addRange(65101, 65103)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65296, 65305)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(65382, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65856, 65908)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66378)
          .addRange(66384, 66426)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66513, 66517)
          .addRange(66560, 66717)
          .addRange(66720, 66729)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68096, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68152, 68154)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68326)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68864, 68903)
          .addRange(68912, 68921)
          .addRange(69376, 69404)
          .addRange(69424, 69456)
          .addRange(69632, 69702)
          .addRange(69734, 69743)
          .addRange(69759, 69818)
          .addRange(69840, 69864)
          .addRange(69872, 69881)
          .addRange(69888, 69940)
          .addRange(69942, 69951)
          .addRange(69956, 69958)
          .addRange(69968, 70003)
          .addRange(70016, 70084)
          .addRange(70089, 70092)
          .addRange(70096, 70106)
          .addRange(70144, 70161)
          .addRange(70163, 70199)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70378)
          .addRange(70384, 70393)
          .addRange(70400, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70459, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70493, 70499)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70656, 70730)
          .addRange(70736, 70745)
          .addRange(70784, 70853)
          .addRange(70864, 70873)
          .addRange(71040, 71093)
          .addRange(71096, 71104)
          .addRange(71128, 71133)
          .addRange(71168, 71232)
          .addRange(71248, 71257)
          .addRange(71296, 71351)
          .addRange(71360, 71369)
          .addRange(71424, 71450)
          .addRange(71453, 71467)
          .addRange(71472, 71481)
          .addRange(71680, 71738)
          .addRange(71840, 71913)
          .addRange(72192, 72254)
          .addRange(72272, 72323)
          .addRange(72326, 72345)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72758)
          .addRange(72760, 72768)
          .addRange(72784, 72793)
          .addRange(72818, 72847)
          .addRange(72850, 72871)
          .addRange(72873, 72886)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73031)
          .addRange(73040, 73049)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73112)
          .addRange(73120, 73129)
          .addRange(73440, 73462)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92768, 92777)
          .addRange(92880, 92909)
          .addRange(92912, 92916)
          .addRange(92928, 92982)
          .addRange(92992, 92995)
          .addRange(93008, 93017)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93823)
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94095, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(113821, 113822)
          .addRange(119141, 119145)
          .addRange(119149, 119154)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(119362, 119364)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(120782, 120831)
          .addRange(121344, 121398)
          .addRange(121403, 121452)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(124928, 125124)
          .addRange(125136, 125142)
          .addRange(125184, 125258)
          .addRange(125264, 125273)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          181,
          186,
          748,
          750,
          895,
          902,
          908,
          1369,
          1749,
          1791,
          1808,
          1969,
          2042,
          2074,
          2084,
          2088,
          2365,
          2384,
          2482,
          2493,
          2510,
          2556,
          2654,
          2749,
          2768,
          2809,
          2877,
          2929,
          2947,
          2972,
          3024,
          3133,
          3200,
          3261,
          3294,
          3389,
          3406,
          3517,
          3716,
          3722,
          3725,
          3749,
          3751,
          3773,
          3782,
          3840,
          4159,
          4193,
          4238,
          4295,
          4301,
          4696,
          4800,
          6103,
          6108,
          6314,
          6823,
          8025,
          8027,
          8029,
          8126,
          8305,
          8319,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8526,
          11559,
          11565,
          11631,
          43259,
          43471,
          43642,
          43697,
          43712,
          43714,
          64285,
          64318,
          67592,
          67644,
          68096,
          69415,
          69956,
          70006,
          70106,
          70108,
          70280,
          70461,
          70480,
          70855,
          71236,
          71935,
          72192,
          72250,
          72272,
          72349,
          72768,
          73030,
          73112,
          94032,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(880, 884)
          .addRange(886, 887)
          .addRange(890, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1568, 1610)
          .addRange(1646, 1647)
          .addRange(1649, 1747)
          .addRange(1765, 1766)
          .addRange(1774, 1775)
          .addRange(1786, 1788)
          .addRange(1810, 1839)
          .addRange(1869, 1957)
          .addRange(1994, 2026)
          .addRange(2036, 2037)
          .addRange(2048, 2069)
          .addRange(2112, 2136)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2308, 2361)
          .addRange(2392, 2401)
          .addRange(2417, 2432)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2524, 2525)
          .addRange(2527, 2529)
          .addRange(2544, 2545)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2649, 2652)
          .addRange(2674, 2676)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2784, 2785)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2908, 2909)
          .addRange(2911, 2913)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3077, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3160, 3162)
          .addRange(3168, 3169)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3296, 3297)
          .addRange(3313, 3314)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3386)
          .addRange(3412, 3414)
          .addRange(3423, 3425)
          .addRange(3450, 3455)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3585, 3632)
          .addRange(3634, 3635)
          .addRange(3648, 3654)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3760)
          .addRange(3762, 3763)
          .addRange(3776, 3780)
          .addRange(3804, 3807)
          .addRange(3904, 3911)
          .addRange(3913, 3948)
          .addRange(3976, 3980)
          .addRange(4096, 4138)
          .addRange(4176, 4181)
          .addRange(4186, 4189)
          .addRange(4197, 4198)
          .addRange(4206, 4208)
          .addRange(4213, 4225)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4992, 5007)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5870, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5905)
          .addRange(5920, 5937)
          .addRange(5952, 5969)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6016, 6067)
          .addRange(6176, 6264)
          .addRange(6272, 6312)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6480, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6656, 6678)
          .addRange(6688, 6740)
          .addRange(6917, 6963)
          .addRange(6981, 6987)
          .addRange(7043, 7072)
          .addRange(7086, 7087)
          .addRange(7098, 7141)
          .addRange(7168, 7203)
          .addRange(7245, 7247)
          .addRange(7258, 7293)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7401, 7404)
          .addRange(7406, 7409)
          .addRange(7413, 7414)
          .addRange(7424, 7615)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8336, 8348)
          .addRange(8458, 8467)
          .addRange(8472, 8477)
          .addRange(8490, 8505)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8544, 8584)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(11568, 11623)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(12293, 12295)
          .addRange(12321, 12329)
          .addRange(12337, 12341)
          .addRange(12344, 12348)
          .addRange(12353, 12438)
          .addRange(12443, 12447)
          .addRange(12449, 12538)
          .addRange(12540, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 42124)
          .addRange(42192, 42237)
          .addRange(42240, 42508)
          .addRange(42512, 42527)
          .addRange(42538, 42539)
          .addRange(42560, 42606)
          .addRange(42623, 42653)
          .addRange(42656, 42735)
          .addRange(42775, 42783)
          .addRange(42786, 42888)
          .addRange(42891, 42937)
          .addRange(42999, 43009)
          .addRange(43011, 43013)
          .addRange(43015, 43018)
          .addRange(43020, 43042)
          .addRange(43072, 43123)
          .addRange(43138, 43187)
          .addRange(43250, 43255)
          .addRange(43261, 43262)
          .addRange(43274, 43301)
          .addRange(43312, 43334)
          .addRange(43360, 43388)
          .addRange(43396, 43442)
          .addRange(43488, 43492)
          .addRange(43494, 43503)
          .addRange(43514, 43518)
          .addRange(43520, 43560)
          .addRange(43584, 43586)
          .addRange(43588, 43595)
          .addRange(43616, 43638)
          .addRange(43646, 43695)
          .addRange(43701, 43702)
          .addRange(43705, 43709)
          .addRange(43739, 43741)
          .addRange(43744, 43754)
          .addRange(43762, 43764)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 44002)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64287, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65019)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(65382, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65856, 65908)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66378)
          .addRange(66384, 66421)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66513, 66517)
          .addRange(66560, 66717)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68112, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68324)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68864, 68899)
          .addRange(69376, 69404)
          .addRange(69424, 69445)
          .addRange(69635, 69687)
          .addRange(69763, 69807)
          .addRange(69840, 69864)
          .addRange(69891, 69926)
          .addRange(69968, 70002)
          .addRange(70019, 70066)
          .addRange(70081, 70084)
          .addRange(70144, 70161)
          .addRange(70163, 70187)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70366)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70493, 70497)
          .addRange(70656, 70708)
          .addRange(70727, 70730)
          .addRange(70784, 70831)
          .addRange(70852, 70853)
          .addRange(71040, 71086)
          .addRange(71128, 71131)
          .addRange(71168, 71215)
          .addRange(71296, 71338)
          .addRange(71424, 71450)
          .addRange(71680, 71723)
          .addRange(71840, 71903)
          .addRange(72203, 72242)
          .addRange(72284, 72323)
          .addRange(72326, 72329)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72750)
          .addRange(72818, 72847)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73008)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73097)
          .addRange(73440, 73458)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92880, 92909)
          .addRange(92928, 92975)
          .addRange(92992, 92995)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93823)
          .addRange(93952, 94020)
          .addRange(94099, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(124928, 125124)
          .addRange(125184, 125251)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(12294, 12295)
          .addRange(12321, 12329)
          .addRange(12344, 12346)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110960, 111355)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(8204, 8205);
      },
      function(e, t, n) {
        e.exports = n(0)(6586, 43705)
          .addRange(3648, 3652)
          .addRange(3776, 3780)
          .addRange(6581, 6583)
          .addRange(43701, 43702)
          .addRange(43707, 43708);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          181,
          186,
          257,
          259,
          261,
          263,
          265,
          267,
          269,
          271,
          273,
          275,
          277,
          279,
          281,
          283,
          285,
          287,
          289,
          291,
          293,
          295,
          297,
          299,
          301,
          303,
          305,
          307,
          309,
          314,
          316,
          318,
          320,
          322,
          324,
          326,
          331,
          333,
          335,
          337,
          339,
          341,
          343,
          345,
          347,
          349,
          351,
          353,
          355,
          357,
          359,
          361,
          363,
          365,
          367,
          369,
          371,
          373,
          375,
          378,
          380,
          387,
          389,
          392,
          402,
          405,
          414,
          417,
          419,
          421,
          424,
          429,
          432,
          436,
          438,
          454,
          457,
          460,
          462,
          464,
          466,
          468,
          470,
          472,
          474,
          479,
          481,
          483,
          485,
          487,
          489,
          491,
          493,
          499,
          501,
          505,
          507,
          509,
          511,
          513,
          515,
          517,
          519,
          521,
          523,
          525,
          527,
          529,
          531,
          533,
          535,
          537,
          539,
          541,
          543,
          545,
          547,
          549,
          551,
          553,
          555,
          557,
          559,
          561,
          572,
          578,
          583,
          585,
          587,
          589,
          837,
          881,
          883,
          887,
          912,
          985,
          987,
          989,
          991,
          993,
          995,
          997,
          999,
          1001,
          1003,
          1005,
          1013,
          1016,
          1121,
          1123,
          1125,
          1127,
          1129,
          1131,
          1133,
          1135,
          1137,
          1139,
          1141,
          1143,
          1145,
          1147,
          1149,
          1151,
          1153,
          1163,
          1165,
          1167,
          1169,
          1171,
          1173,
          1175,
          1177,
          1179,
          1181,
          1183,
          1185,
          1187,
          1189,
          1191,
          1193,
          1195,
          1197,
          1199,
          1201,
          1203,
          1205,
          1207,
          1209,
          1211,
          1213,
          1215,
          1218,
          1220,
          1222,
          1224,
          1226,
          1228,
          1233,
          1235,
          1237,
          1239,
          1241,
          1243,
          1245,
          1247,
          1249,
          1251,
          1253,
          1255,
          1257,
          1259,
          1261,
          1263,
          1265,
          1267,
          1269,
          1271,
          1273,
          1275,
          1277,
          1279,
          1281,
          1283,
          1285,
          1287,
          1289,
          1291,
          1293,
          1295,
          1297,
          1299,
          1301,
          1303,
          1305,
          1307,
          1309,
          1311,
          1313,
          1315,
          1317,
          1319,
          1321,
          1323,
          1325,
          1327,
          7681,
          7683,
          7685,
          7687,
          7689,
          7691,
          7693,
          7695,
          7697,
          7699,
          7701,
          7703,
          7705,
          7707,
          7709,
          7711,
          7713,
          7715,
          7717,
          7719,
          7721,
          7723,
          7725,
          7727,
          7729,
          7731,
          7733,
          7735,
          7737,
          7739,
          7741,
          7743,
          7745,
          7747,
          7749,
          7751,
          7753,
          7755,
          7757,
          7759,
          7761,
          7763,
          7765,
          7767,
          7769,
          7771,
          7773,
          7775,
          7777,
          7779,
          7781,
          7783,
          7785,
          7787,
          7789,
          7791,
          7793,
          7795,
          7797,
          7799,
          7801,
          7803,
          7805,
          7807,
          7809,
          7811,
          7813,
          7815,
          7817,
          7819,
          7821,
          7823,
          7825,
          7827,
          7839,
          7841,
          7843,
          7845,
          7847,
          7849,
          7851,
          7853,
          7855,
          7857,
          7859,
          7861,
          7863,
          7865,
          7867,
          7869,
          7871,
          7873,
          7875,
          7877,
          7879,
          7881,
          7883,
          7885,
          7887,
          7889,
          7891,
          7893,
          7895,
          7897,
          7899,
          7901,
          7903,
          7905,
          7907,
          7909,
          7911,
          7913,
          7915,
          7917,
          7919,
          7921,
          7923,
          7925,
          7927,
          7929,
          7931,
          7933,
          8126,
          8305,
          8319,
          8458,
          8467,
          8495,
          8500,
          8505,
          8526,
          8580,
          11361,
          11368,
          11370,
          11372,
          11377,
          11393,
          11395,
          11397,
          11399,
          11401,
          11403,
          11405,
          11407,
          11409,
          11411,
          11413,
          11415,
          11417,
          11419,
          11421,
          11423,
          11425,
          11427,
          11429,
          11431,
          11433,
          11435,
          11437,
          11439,
          11441,
          11443,
          11445,
          11447,
          11449,
          11451,
          11453,
          11455,
          11457,
          11459,
          11461,
          11463,
          11465,
          11467,
          11469,
          11471,
          11473,
          11475,
          11477,
          11479,
          11481,
          11483,
          11485,
          11487,
          11489,
          11500,
          11502,
          11507,
          11559,
          11565,
          42561,
          42563,
          42565,
          42567,
          42569,
          42571,
          42573,
          42575,
          42577,
          42579,
          42581,
          42583,
          42585,
          42587,
          42589,
          42591,
          42593,
          42595,
          42597,
          42599,
          42601,
          42603,
          42605,
          42625,
          42627,
          42629,
          42631,
          42633,
          42635,
          42637,
          42639,
          42641,
          42643,
          42645,
          42647,
          42649,
          42787,
          42789,
          42791,
          42793,
          42795,
          42797,
          42803,
          42805,
          42807,
          42809,
          42811,
          42813,
          42815,
          42817,
          42819,
          42821,
          42823,
          42825,
          42827,
          42829,
          42831,
          42833,
          42835,
          42837,
          42839,
          42841,
          42843,
          42845,
          42847,
          42849,
          42851,
          42853,
          42855,
          42857,
          42859,
          42861,
          42874,
          42876,
          42879,
          42881,
          42883,
          42885,
          42887,
          42892,
          42894,
          42897,
          42903,
          42905,
          42907,
          42909,
          42911,
          42913,
          42915,
          42917,
          42919,
          42921,
          42927,
          42933,
          42935,
          42937,
          119995,
          120779
        )
          .addRange(97, 122)
          .addRange(223, 246)
          .addRange(248, 255)
          .addRange(311, 312)
          .addRange(328, 329)
          .addRange(382, 384)
          .addRange(396, 397)
          .addRange(409, 411)
          .addRange(426, 427)
          .addRange(441, 442)
          .addRange(445, 447)
          .addRange(476, 477)
          .addRange(495, 496)
          .addRange(563, 569)
          .addRange(575, 576)
          .addRange(591, 659)
          .addRange(661, 696)
          .addRange(704, 705)
          .addRange(736, 740)
          .addRange(890, 893)
          .addRange(940, 974)
          .addRange(976, 977)
          .addRange(981, 983)
          .addRange(1007, 1011)
          .addRange(1019, 1020)
          .addRange(1072, 1119)
          .addRange(1230, 1231)
          .addRange(1376, 1416)
          .addRange(4304, 4346)
          .addRange(4349, 4351)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7424, 7615)
          .addRange(7829, 7837)
          .addRange(7935, 7943)
          .addRange(7952, 7957)
          .addRange(7968, 7975)
          .addRange(7984, 7991)
          .addRange(8e3, 8005)
          .addRange(8016, 8023)
          .addRange(8032, 8039)
          .addRange(8048, 8061)
          .addRange(8064, 8071)
          .addRange(8080, 8087)
          .addRange(8096, 8103)
          .addRange(8112, 8116)
          .addRange(8118, 8119)
          .addRange(8130, 8132)
          .addRange(8134, 8135)
          .addRange(8144, 8147)
          .addRange(8150, 8151)
          .addRange(8160, 8167)
          .addRange(8178, 8180)
          .addRange(8182, 8183)
          .addRange(8336, 8348)
          .addRange(8462, 8463)
          .addRange(8508, 8509)
          .addRange(8518, 8521)
          .addRange(8560, 8575)
          .addRange(9424, 9449)
          .addRange(11312, 11358)
          .addRange(11365, 11366)
          .addRange(11379, 11380)
          .addRange(11382, 11389)
          .addRange(11491, 11492)
          .addRange(11520, 11557)
          .addRange(42651, 42653)
          .addRange(42799, 42801)
          .addRange(42863, 42872)
          .addRange(42899, 42901)
          .addRange(43e3, 43002)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65345, 65370)
          .addRange(66600, 66639)
          .addRange(66776, 66811)
          .addRange(68800, 68850)
          .addRange(71872, 71903)
          .addRange(93792, 93823)
          .addRange(119834, 119859)
          .addRange(119886, 119892)
          .addRange(119894, 119911)
          .addRange(119938, 119963)
          .addRange(119990, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120015)
          .addRange(120042, 120067)
          .addRange(120094, 120119)
          .addRange(120146, 120171)
          .addRange(120198, 120223)
          .addRange(120250, 120275)
          .addRange(120302, 120327)
          .addRange(120354, 120379)
          .addRange(120406, 120431)
          .addRange(120458, 120485)
          .addRange(120514, 120538)
          .addRange(120540, 120545)
          .addRange(120572, 120596)
          .addRange(120598, 120603)
          .addRange(120630, 120654)
          .addRange(120656, 120661)
          .addRange(120688, 120712)
          .addRange(120714, 120719)
          .addRange(120746, 120770)
          .addRange(120772, 120777)
          .addRange(125218, 125251);
      },
      function(e, t, n) {
        e.exports = n(0)(
          43,
          94,
          124,
          126,
          172,
          177,
          215,
          247,
          981,
          8214,
          8256,
          8260,
          8274,
          8417,
          8450,
          8455,
          8469,
          8484,
          8523,
          8669,
          9084,
          9143,
          9168,
          9698,
          9700,
          9792,
          9794,
          64297,
          65128,
          65291,
          65340,
          65342,
          65372,
          65374,
          65506,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(60, 62)
          .addRange(976, 978)
          .addRange(1008, 1009)
          .addRange(1012, 1014)
          .addRange(1542, 1544)
          .addRange(8242, 8244)
          .addRange(8289, 8292)
          .addRange(8314, 8318)
          .addRange(8330, 8334)
          .addRange(8400, 8412)
          .addRange(8421, 8422)
          .addRange(8427, 8431)
          .addRange(8458, 8467)
          .addRange(8472, 8477)
          .addRange(8488, 8489)
          .addRange(8492, 8493)
          .addRange(8495, 8497)
          .addRange(8499, 8504)
          .addRange(8508, 8521)
          .addRange(8592, 8615)
          .addRange(8617, 8622)
          .addRange(8624, 8625)
          .addRange(8630, 8631)
          .addRange(8636, 8667)
          .addRange(8676, 8677)
          .addRange(8692, 8959)
          .addRange(8968, 8971)
          .addRange(8992, 8993)
          .addRange(9115, 9141)
          .addRange(9180, 9186)
          .addRange(9632, 9633)
          .addRange(9646, 9655)
          .addRange(9660, 9665)
          .addRange(9670, 9671)
          .addRange(9674, 9675)
          .addRange(9679, 9683)
          .addRange(9703, 9708)
          .addRange(9720, 9727)
          .addRange(9733, 9734)
          .addRange(9824, 9827)
          .addRange(9837, 9839)
          .addRange(10176, 10239)
          .addRange(10496, 11007)
          .addRange(11056, 11076)
          .addRange(11079, 11084)
          .addRange(65121, 65126)
          .addRange(65308, 65310)
          .addRange(65513, 65516)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120779)
          .addRange(120782, 120831)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(126704, 126705);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(64976, 65007)
          .addRange(65534, 65535)
          .addRange(131070, 131071)
          .addRange(196606, 196607)
          .addRange(262142, 262143)
          .addRange(327678, 327679)
          .addRange(393214, 393215)
          .addRange(458750, 458751)
          .addRange(524286, 524287)
          .addRange(589822, 589823)
          .addRange(655358, 655359)
          .addRange(720894, 720895)
          .addRange(786430, 786431)
          .addRange(851966, 851967)
          .addRange(917502, 917503)
          .addRange(983038, 983039)
          .addRange(1048574, 1048575)
          .addRange(1114110, 1114111);
      },
      function(e, t, n) {
        e.exports = n(0)(96, 169, 174, 182, 187, 191, 215, 247, 12336)
          .addRange(33, 47)
          .addRange(58, 64)
          .addRange(91, 94)
          .addRange(123, 126)
          .addRange(161, 167)
          .addRange(171, 172)
          .addRange(176, 177)
          .addRange(8208, 8231)
          .addRange(8240, 8254)
          .addRange(8257, 8275)
          .addRange(8277, 8286)
          .addRange(8592, 9311)
          .addRange(9472, 10101)
          .addRange(10132, 11263)
          .addRange(11776, 11903)
          .addRange(12289, 12291)
          .addRange(12296, 12320)
          .addRange(64830, 64831)
          .addRange(65093, 65094);
      },
      function(e, t, n) {
        e.exports = n(0)(32, 133)
          .addRange(9, 13)
          .addRange(8206, 8207)
          .addRange(8232, 8233);
      },
      function(e, t, n) {
        e.exports = n(0)(34, 39, 171, 187, 11842, 65282, 65287)
          .addRange(8216, 8223)
          .addRange(8249, 8250)
          .addRange(12300, 12303)
          .addRange(12317, 12319)
          .addRange(65089, 65092)
          .addRange(65378, 65379);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(127462, 127487);
      },
      function(e, t, n) {
        e.exports = n(0)(
          33,
          46,
          63,
          1417,
          1748,
          2041,
          2103,
          2105,
          4962,
          5742,
          6147,
          6153,
          11822,
          11836,
          12290,
          42239,
          42739,
          42743,
          43311,
          44011,
          65106,
          65281,
          65294,
          65311,
          65377,
          70093,
          70313,
          92917,
          92996,
          93848,
          113823,
          121480
        )
          .addRange(1566, 1567)
          .addRange(1792, 1794)
          .addRange(2109, 2110)
          .addRange(2404, 2405)
          .addRange(4170, 4171)
          .addRange(4967, 4968)
          .addRange(5941, 5942)
          .addRange(6468, 6469)
          .addRange(6824, 6827)
          .addRange(7002, 7003)
          .addRange(7006, 7007)
          .addRange(7227, 7228)
          .addRange(7294, 7295)
          .addRange(8252, 8253)
          .addRange(8263, 8265)
          .addRange(42510, 42511)
          .addRange(43126, 43127)
          .addRange(43214, 43215)
          .addRange(43464, 43465)
          .addRange(43613, 43615)
          .addRange(43760, 43761)
          .addRange(65110, 65111)
          .addRange(68182, 68183)
          .addRange(69461, 69465)
          .addRange(69703, 69704)
          .addRange(69822, 69825)
          .addRange(69953, 69955)
          .addRange(70085, 70086)
          .addRange(70110, 70111)
          .addRange(70200, 70201)
          .addRange(70203, 70204)
          .addRange(70731, 70732)
          .addRange(71106, 71107)
          .addRange(71113, 71127)
          .addRange(71233, 71234)
          .addRange(71484, 71486)
          .addRange(72258, 72259)
          .addRange(72347, 72348)
          .addRange(72769, 72770)
          .addRange(73463, 73464)
          .addRange(92782, 92783)
          .addRange(92983, 92984);
      },
      function(e, t, n) {
        e.exports = n(0)(
          303,
          585,
          616,
          669,
          690,
          1011,
          1110,
          1112,
          7522,
          7574,
          7588,
          7592,
          7725,
          7883,
          8305,
          11388
        )
          .addRange(105, 106)
          .addRange(8520, 8521)
          .addRange(119842, 119843)
          .addRange(119894, 119895)
          .addRange(119946, 119947)
          .addRange(119998, 119999)
          .addRange(120050, 120051)
          .addRange(120102, 120103)
          .addRange(120154, 120155)
          .addRange(120206, 120207)
          .addRange(120258, 120259)
          .addRange(120310, 120311)
          .addRange(120362, 120363)
          .addRange(120414, 120415)
          .addRange(120466, 120467);
      },
      function(e, t, n) {
        e.exports = n(0)(
          33,
          44,
          46,
          63,
          894,
          903,
          1417,
          1475,
          1548,
          1563,
          1748,
          1804,
          2142,
          3848,
          6106,
          11822,
          11836,
          11841,
          11852,
          11854,
          43311,
          43743,
          44011,
          65281,
          65292,
          65294,
          65311,
          65377,
          65380,
          66463,
          66512,
          67671,
          67871,
          70093,
          70313,
          70747,
          72817,
          92917,
          92996,
          113823
        )
          .addRange(58, 59)
          .addRange(1566, 1567)
          .addRange(1792, 1802)
          .addRange(2040, 2041)
          .addRange(2096, 2110)
          .addRange(2404, 2405)
          .addRange(3674, 3675)
          .addRange(3853, 3858)
          .addRange(4170, 4171)
          .addRange(4961, 4968)
          .addRange(5741, 5742)
          .addRange(5867, 5869)
          .addRange(5941, 5942)
          .addRange(6100, 6102)
          .addRange(6146, 6149)
          .addRange(6152, 6153)
          .addRange(6468, 6469)
          .addRange(6824, 6827)
          .addRange(7002, 7003)
          .addRange(7005, 7007)
          .addRange(7227, 7231)
          .addRange(7294, 7295)
          .addRange(8252, 8253)
          .addRange(8263, 8265)
          .addRange(12289, 12290)
          .addRange(42238, 42239)
          .addRange(42509, 42511)
          .addRange(42739, 42743)
          .addRange(43126, 43127)
          .addRange(43214, 43215)
          .addRange(43463, 43465)
          .addRange(43613, 43615)
          .addRange(43760, 43761)
          .addRange(65104, 65106)
          .addRange(65108, 65111)
          .addRange(65306, 65307)
          .addRange(68182, 68183)
          .addRange(68336, 68341)
          .addRange(68410, 68415)
          .addRange(68505, 68508)
          .addRange(69461, 69465)
          .addRange(69703, 69709)
          .addRange(69822, 69825)
          .addRange(69953, 69955)
          .addRange(70085, 70086)
          .addRange(70110, 70111)
          .addRange(70200, 70204)
          .addRange(70731, 70733)
          .addRange(71106, 71109)
          .addRange(71113, 71127)
          .addRange(71233, 71234)
          .addRange(71484, 71486)
          .addRange(72258, 72259)
          .addRange(72347, 72348)
          .addRange(72353, 72354)
          .addRange(72769, 72771)
          .addRange(73463, 73464)
          .addRange(74864, 74868)
          .addRange(92782, 92783)
          .addRange(92983, 92985)
          .addRange(93847, 93848)
          .addRange(121479, 121482);
      },
      function(e, t, n) {
        e.exports = n(0)(64017, 64031, 64033)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(64014, 64015)
          .addRange(64019, 64020)
          .addRange(64035, 64036)
          .addRange(64039, 64041)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456);
      },
      function(e, t, n) {
        e.exports = n(0)(
          256,
          258,
          260,
          262,
          264,
          266,
          268,
          270,
          272,
          274,
          276,
          278,
          280,
          282,
          284,
          286,
          288,
          290,
          292,
          294,
          296,
          298,
          300,
          302,
          304,
          306,
          308,
          310,
          313,
          315,
          317,
          319,
          321,
          323,
          325,
          327,
          330,
          332,
          334,
          336,
          338,
          340,
          342,
          344,
          346,
          348,
          350,
          352,
          354,
          356,
          358,
          360,
          362,
          364,
          366,
          368,
          370,
          372,
          374,
          379,
          381,
          388,
          418,
          420,
          425,
          428,
          437,
          444,
          452,
          455,
          458,
          461,
          463,
          465,
          467,
          469,
          471,
          473,
          475,
          478,
          480,
          482,
          484,
          486,
          488,
          490,
          492,
          494,
          497,
          500,
          506,
          508,
          510,
          512,
          514,
          516,
          518,
          520,
          522,
          524,
          526,
          528,
          530,
          532,
          534,
          536,
          538,
          540,
          542,
          544,
          546,
          548,
          550,
          552,
          554,
          556,
          558,
          560,
          562,
          577,
          584,
          586,
          588,
          590,
          880,
          882,
          886,
          895,
          902,
          908,
          975,
          984,
          986,
          988,
          990,
          992,
          994,
          996,
          998,
          1e3,
          1002,
          1004,
          1006,
          1012,
          1015,
          1120,
          1122,
          1124,
          1126,
          1128,
          1130,
          1132,
          1134,
          1136,
          1138,
          1140,
          1142,
          1144,
          1146,
          1148,
          1150,
          1152,
          1162,
          1164,
          1166,
          1168,
          1170,
          1172,
          1174,
          1176,
          1178,
          1180,
          1182,
          1184,
          1186,
          1188,
          1190,
          1192,
          1194,
          1196,
          1198,
          1200,
          1202,
          1204,
          1206,
          1208,
          1210,
          1212,
          1214,
          1219,
          1221,
          1223,
          1225,
          1227,
          1229,
          1232,
          1234,
          1236,
          1238,
          1240,
          1242,
          1244,
          1246,
          1248,
          1250,
          1252,
          1254,
          1256,
          1258,
          1260,
          1262,
          1264,
          1266,
          1268,
          1270,
          1272,
          1274,
          1276,
          1278,
          1280,
          1282,
          1284,
          1286,
          1288,
          1290,
          1292,
          1294,
          1296,
          1298,
          1300,
          1302,
          1304,
          1306,
          1308,
          1310,
          1312,
          1314,
          1316,
          1318,
          1320,
          1322,
          1324,
          1326,
          4295,
          4301,
          7680,
          7682,
          7684,
          7686,
          7688,
          7690,
          7692,
          7694,
          7696,
          7698,
          7700,
          7702,
          7704,
          7706,
          7708,
          7710,
          7712,
          7714,
          7716,
          7718,
          7720,
          7722,
          7724,
          7726,
          7728,
          7730,
          7732,
          7734,
          7736,
          7738,
          7740,
          7742,
          7744,
          7746,
          7748,
          7750,
          7752,
          7754,
          7756,
          7758,
          7760,
          7762,
          7764,
          7766,
          7768,
          7770,
          7772,
          7774,
          7776,
          7778,
          7780,
          7782,
          7784,
          7786,
          7788,
          7790,
          7792,
          7794,
          7796,
          7798,
          7800,
          7802,
          7804,
          7806,
          7808,
          7810,
          7812,
          7814,
          7816,
          7818,
          7820,
          7822,
          7824,
          7826,
          7828,
          7838,
          7840,
          7842,
          7844,
          7846,
          7848,
          7850,
          7852,
          7854,
          7856,
          7858,
          7860,
          7862,
          7864,
          7866,
          7868,
          7870,
          7872,
          7874,
          7876,
          7878,
          7880,
          7882,
          7884,
          7886,
          7888,
          7890,
          7892,
          7894,
          7896,
          7898,
          7900,
          7902,
          7904,
          7906,
          7908,
          7910,
          7912,
          7914,
          7916,
          7918,
          7920,
          7922,
          7924,
          7926,
          7928,
          7930,
          7932,
          7934,
          8025,
          8027,
          8029,
          8031,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8517,
          8579,
          11360,
          11367,
          11369,
          11371,
          11378,
          11381,
          11394,
          11396,
          11398,
          11400,
          11402,
          11404,
          11406,
          11408,
          11410,
          11412,
          11414,
          11416,
          11418,
          11420,
          11422,
          11424,
          11426,
          11428,
          11430,
          11432,
          11434,
          11436,
          11438,
          11440,
          11442,
          11444,
          11446,
          11448,
          11450,
          11452,
          11454,
          11456,
          11458,
          11460,
          11462,
          11464,
          11466,
          11468,
          11470,
          11472,
          11474,
          11476,
          11478,
          11480,
          11482,
          11484,
          11486,
          11488,
          11490,
          11499,
          11501,
          11506,
          42560,
          42562,
          42564,
          42566,
          42568,
          42570,
          42572,
          42574,
          42576,
          42578,
          42580,
          42582,
          42584,
          42586,
          42588,
          42590,
          42592,
          42594,
          42596,
          42598,
          42600,
          42602,
          42604,
          42624,
          42626,
          42628,
          42630,
          42632,
          42634,
          42636,
          42638,
          42640,
          42642,
          42644,
          42646,
          42648,
          42650,
          42786,
          42788,
          42790,
          42792,
          42794,
          42796,
          42798,
          42802,
          42804,
          42806,
          42808,
          42810,
          42812,
          42814,
          42816,
          42818,
          42820,
          42822,
          42824,
          42826,
          42828,
          42830,
          42832,
          42834,
          42836,
          42838,
          42840,
          42842,
          42844,
          42846,
          42848,
          42850,
          42852,
          42854,
          42856,
          42858,
          42860,
          42862,
          42873,
          42875,
          42880,
          42882,
          42884,
          42886,
          42891,
          42893,
          42896,
          42898,
          42902,
          42904,
          42906,
          42908,
          42910,
          42912,
          42914,
          42916,
          42918,
          42920,
          42934,
          42936,
          119964,
          119970,
          120134,
          120778
        )
          .addRange(65, 90)
          .addRange(192, 214)
          .addRange(216, 222)
          .addRange(376, 377)
          .addRange(385, 386)
          .addRange(390, 391)
          .addRange(393, 395)
          .addRange(398, 401)
          .addRange(403, 404)
          .addRange(406, 408)
          .addRange(412, 413)
          .addRange(415, 416)
          .addRange(422, 423)
          .addRange(430, 431)
          .addRange(433, 435)
          .addRange(439, 440)
          .addRange(502, 504)
          .addRange(570, 571)
          .addRange(573, 574)
          .addRange(579, 582)
          .addRange(904, 906)
          .addRange(910, 911)
          .addRange(913, 929)
          .addRange(931, 939)
          .addRange(978, 980)
          .addRange(1017, 1018)
          .addRange(1021, 1071)
          .addRange(1216, 1217)
          .addRange(1329, 1366)
          .addRange(4256, 4293)
          .addRange(5024, 5109)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7944, 7951)
          .addRange(7960, 7965)
          .addRange(7976, 7983)
          .addRange(7992, 7999)
          .addRange(8008, 8013)
          .addRange(8040, 8047)
          .addRange(8120, 8123)
          .addRange(8136, 8139)
          .addRange(8152, 8155)
          .addRange(8168, 8172)
          .addRange(8184, 8187)
          .addRange(8459, 8461)
          .addRange(8464, 8466)
          .addRange(8473, 8477)
          .addRange(8490, 8493)
          .addRange(8496, 8499)
          .addRange(8510, 8511)
          .addRange(8544, 8559)
          .addRange(9398, 9423)
          .addRange(11264, 11310)
          .addRange(11362, 11364)
          .addRange(11373, 11376)
          .addRange(11390, 11392)
          .addRange(42877, 42878)
          .addRange(42922, 42926)
          .addRange(42928, 42932)
          .addRange(65313, 65338)
          .addRange(66560, 66599)
          .addRange(66736, 66771)
          .addRange(68736, 68786)
          .addRange(71840, 71871)
          .addRange(93760, 93791)
          .addRange(119808, 119833)
          .addRange(119860, 119885)
          .addRange(119912, 119937)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119989)
          .addRange(120016, 120041)
          .addRange(120068, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120120, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120172, 120197)
          .addRange(120224, 120249)
          .addRange(120276, 120301)
          .addRange(120328, 120353)
          .addRange(120380, 120405)
          .addRange(120432, 120457)
          .addRange(120488, 120512)
          .addRange(120546, 120570)
          .addRange(120604, 120628)
          .addRange(120662, 120686)
          .addRange(120720, 120744)
          .addRange(125184, 125217)
          .addRange(127280, 127305)
          .addRange(127312, 127337)
          .addRange(127344, 127369);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6155, 6157)
          .addRange(65024, 65039)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)(32, 133, 160, 5760, 8239, 8287, 12288)
          .addRange(9, 13)
          .addRange(8192, 8202)
          .addRange(8232, 8233);
      },
      function(e, t, n) {
        e.exports = n(0)(
          95,
          170,
          181,
          183,
          186,
          748,
          750,
          895,
          908,
          1369,
          1471,
          1479,
          1791,
          2042,
          2045,
          2482,
          2519,
          2556,
          2558,
          2620,
          2641,
          2654,
          2768,
          2929,
          2972,
          3024,
          3031,
          3294,
          3517,
          3530,
          3542,
          3716,
          3722,
          3725,
          3749,
          3751,
          3782,
          3840,
          3893,
          3895,
          3897,
          4038,
          4295,
          4301,
          4696,
          4800,
          6103,
          6823,
          8025,
          8027,
          8029,
          8126,
          8276,
          8305,
          8319,
          8417,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8526,
          11559,
          11565,
          11631,
          43259,
          64318,
          65137,
          65139,
          65143,
          65145,
          65147,
          65149,
          65343,
          66045,
          66272,
          67592,
          67644,
          68159,
          69415,
          70006,
          70108,
          70206,
          70280,
          70480,
          70487,
          70750,
          70855,
          71236,
          71935,
          72263,
          72349,
          73018,
          119970,
          119995,
          120134,
          121461,
          121476,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(48, 57)
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(768, 884)
          .addRange(886, 887)
          .addRange(891, 893)
          .addRange(902, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1155, 1159)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(1425, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1552, 1562)
          .addRange(1568, 1641)
          .addRange(1646, 1747)
          .addRange(1749, 1756)
          .addRange(1759, 1768)
          .addRange(1770, 1788)
          .addRange(1808, 1866)
          .addRange(1869, 1969)
          .addRange(1984, 2037)
          .addRange(2048, 2093)
          .addRange(2112, 2139)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2259, 2273)
          .addRange(2275, 2403)
          .addRange(2406, 2415)
          .addRange(2417, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2492, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2510)
          .addRange(2524, 2525)
          .addRange(2527, 2531)
          .addRange(2534, 2545)
          .addRange(2561, 2563)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2649, 2652)
          .addRange(2662, 2677)
          .addRange(2689, 2691)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2748, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2765)
          .addRange(2784, 2787)
          .addRange(2790, 2799)
          .addRange(2809, 2815)
          .addRange(2817, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2876, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2893)
          .addRange(2902, 2903)
          .addRange(2908, 2909)
          .addRange(2911, 2915)
          .addRange(2918, 2927)
          .addRange(2946, 2947)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3021)
          .addRange(3046, 3055)
          .addRange(3072, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3133, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3160, 3162)
          .addRange(3168, 3171)
          .addRange(3174, 3183)
          .addRange(3200, 3203)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3260, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3277)
          .addRange(3285, 3286)
          .addRange(3296, 3299)
          .addRange(3302, 3311)
          .addRange(3313, 3314)
          .addRange(3328, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3406)
          .addRange(3412, 3415)
          .addRange(3423, 3427)
          .addRange(3430, 3439)
          .addRange(3450, 3455)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3558, 3567)
          .addRange(3570, 3571)
          .addRange(3585, 3642)
          .addRange(3648, 3662)
          .addRange(3664, 3673)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3769)
          .addRange(3771, 3773)
          .addRange(3776, 3780)
          .addRange(3784, 3789)
          .addRange(3792, 3801)
          .addRange(3804, 3807)
          .addRange(3864, 3865)
          .addRange(3872, 3881)
          .addRange(3902, 3911)
          .addRange(3913, 3948)
          .addRange(3953, 3972)
          .addRange(3974, 3991)
          .addRange(3993, 4028)
          .addRange(4096, 4169)
          .addRange(4176, 4253)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4957, 4959)
          .addRange(4969, 4977)
          .addRange(4992, 5007)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5870, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5908)
          .addRange(5920, 5940)
          .addRange(5952, 5971)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6002, 6003)
          .addRange(6016, 6099)
          .addRange(6108, 6109)
          .addRange(6112, 6121)
          .addRange(6155, 6157)
          .addRange(6160, 6169)
          .addRange(6176, 6264)
          .addRange(6272, 6314)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6432, 6443)
          .addRange(6448, 6459)
          .addRange(6470, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6608, 6618)
          .addRange(6656, 6683)
          .addRange(6688, 6750)
          .addRange(6752, 6780)
          .addRange(6783, 6793)
          .addRange(6800, 6809)
          .addRange(6832, 6845)
          .addRange(6912, 6987)
          .addRange(6992, 7001)
          .addRange(7019, 7027)
          .addRange(7040, 7155)
          .addRange(7168, 7223)
          .addRange(7232, 7241)
          .addRange(7245, 7293)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7376, 7378)
          .addRange(7380, 7417)
          .addRange(7424, 7673)
          .addRange(7675, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8255, 8256)
          .addRange(8336, 8348)
          .addRange(8400, 8412)
          .addRange(8421, 8432)
          .addRange(8458, 8467)
          .addRange(8472, 8477)
          .addRange(8490, 8505)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8544, 8584)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11507)
          .addRange(11520, 11557)
          .addRange(11568, 11623)
          .addRange(11647, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(11744, 11775)
          .addRange(12293, 12295)
          .addRange(12321, 12335)
          .addRange(12337, 12341)
          .addRange(12344, 12348)
          .addRange(12353, 12438)
          .addRange(12441, 12442)
          .addRange(12445, 12447)
          .addRange(12449, 12538)
          .addRange(12540, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 42124)
          .addRange(42192, 42237)
          .addRange(42240, 42508)
          .addRange(42512, 42539)
          .addRange(42560, 42607)
          .addRange(42612, 42621)
          .addRange(42623, 42737)
          .addRange(42775, 42783)
          .addRange(42786, 42888)
          .addRange(42891, 42937)
          .addRange(42999, 43047)
          .addRange(43072, 43123)
          .addRange(43136, 43205)
          .addRange(43216, 43225)
          .addRange(43232, 43255)
          .addRange(43261, 43309)
          .addRange(43312, 43347)
          .addRange(43360, 43388)
          .addRange(43392, 43456)
          .addRange(43471, 43481)
          .addRange(43488, 43518)
          .addRange(43520, 43574)
          .addRange(43584, 43597)
          .addRange(43600, 43609)
          .addRange(43616, 43638)
          .addRange(43642, 43714)
          .addRange(43739, 43741)
          .addRange(43744, 43759)
          .addRange(43762, 43766)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 44010)
          .addRange(44012, 44013)
          .addRange(44016, 44025)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64285, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64605)
          .addRange(64612, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65017)
          .addRange(65024, 65039)
          .addRange(65056, 65071)
          .addRange(65075, 65076)
          .addRange(65101, 65103)
          .addRange(65151, 65276)
          .addRange(65296, 65305)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(65382, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65856, 65908)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66378)
          .addRange(66384, 66426)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66513, 66517)
          .addRange(66560, 66717)
          .addRange(66720, 66729)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68096, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68152, 68154)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68326)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68864, 68903)
          .addRange(68912, 68921)
          .addRange(69376, 69404)
          .addRange(69424, 69456)
          .addRange(69632, 69702)
          .addRange(69734, 69743)
          .addRange(69759, 69818)
          .addRange(69840, 69864)
          .addRange(69872, 69881)
          .addRange(69888, 69940)
          .addRange(69942, 69951)
          .addRange(69956, 69958)
          .addRange(69968, 70003)
          .addRange(70016, 70084)
          .addRange(70089, 70092)
          .addRange(70096, 70106)
          .addRange(70144, 70161)
          .addRange(70163, 70199)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70378)
          .addRange(70384, 70393)
          .addRange(70400, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70459, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70493, 70499)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70656, 70730)
          .addRange(70736, 70745)
          .addRange(70784, 70853)
          .addRange(70864, 70873)
          .addRange(71040, 71093)
          .addRange(71096, 71104)
          .addRange(71128, 71133)
          .addRange(71168, 71232)
          .addRange(71248, 71257)
          .addRange(71296, 71351)
          .addRange(71360, 71369)
          .addRange(71424, 71450)
          .addRange(71453, 71467)
          .addRange(71472, 71481)
          .addRange(71680, 71738)
          .addRange(71840, 71913)
          .addRange(72192, 72254)
          .addRange(72272, 72323)
          .addRange(72326, 72345)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72758)
          .addRange(72760, 72768)
          .addRange(72784, 72793)
          .addRange(72818, 72847)
          .addRange(72850, 72871)
          .addRange(72873, 72886)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73031)
          .addRange(73040, 73049)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73112)
          .addRange(73120, 73129)
          .addRange(73440, 73462)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92768, 92777)
          .addRange(92880, 92909)
          .addRange(92912, 92916)
          .addRange(92928, 92982)
          .addRange(92992, 92995)
          .addRange(93008, 93017)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93823)
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94095, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(113821, 113822)
          .addRange(119141, 119145)
          .addRange(119149, 119154)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(119362, 119364)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(120782, 120831)
          .addRange(121344, 121398)
          .addRange(121403, 121452)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(124928, 125124)
          .addRange(125136, 125142)
          .addRange(125184, 125258)
          .addRange(125264, 125273)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          181,
          186,
          748,
          750,
          895,
          902,
          908,
          1369,
          1749,
          1791,
          1808,
          1969,
          2042,
          2074,
          2084,
          2088,
          2365,
          2384,
          2482,
          2493,
          2510,
          2556,
          2654,
          2749,
          2768,
          2809,
          2877,
          2929,
          2947,
          2972,
          3024,
          3133,
          3200,
          3261,
          3294,
          3389,
          3406,
          3517,
          3634,
          3716,
          3722,
          3725,
          3749,
          3751,
          3762,
          3773,
          3782,
          3840,
          4159,
          4193,
          4238,
          4295,
          4301,
          4696,
          4800,
          6103,
          6108,
          6314,
          6823,
          8025,
          8027,
          8029,
          8126,
          8305,
          8319,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8526,
          11559,
          11565,
          11631,
          43259,
          43471,
          43642,
          43697,
          43712,
          43714,
          64285,
          64318,
          65137,
          65139,
          65143,
          65145,
          65147,
          65149,
          67592,
          67644,
          68096,
          69415,
          69956,
          70006,
          70106,
          70108,
          70280,
          70461,
          70480,
          70855,
          71236,
          71935,
          72192,
          72250,
          72272,
          72349,
          72768,
          73030,
          73112,
          94032,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(880, 884)
          .addRange(886, 887)
          .addRange(891, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1568, 1610)
          .addRange(1646, 1647)
          .addRange(1649, 1747)
          .addRange(1765, 1766)
          .addRange(1774, 1775)
          .addRange(1786, 1788)
          .addRange(1810, 1839)
          .addRange(1869, 1957)
          .addRange(1994, 2026)
          .addRange(2036, 2037)
          .addRange(2048, 2069)
          .addRange(2112, 2136)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2308, 2361)
          .addRange(2392, 2401)
          .addRange(2417, 2432)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2524, 2525)
          .addRange(2527, 2529)
          .addRange(2544, 2545)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2649, 2652)
          .addRange(2674, 2676)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2784, 2785)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2908, 2909)
          .addRange(2911, 2913)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3077, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3160, 3162)
          .addRange(3168, 3169)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3296, 3297)
          .addRange(3313, 3314)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3386)
          .addRange(3412, 3414)
          .addRange(3423, 3425)
          .addRange(3450, 3455)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3585, 3632)
          .addRange(3648, 3654)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3760)
          .addRange(3776, 3780)
          .addRange(3804, 3807)
          .addRange(3904, 3911)
          .addRange(3913, 3948)
          .addRange(3976, 3980)
          .addRange(4096, 4138)
          .addRange(4176, 4181)
          .addRange(4186, 4189)
          .addRange(4197, 4198)
          .addRange(4206, 4208)
          .addRange(4213, 4225)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4992, 5007)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5870, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5905)
          .addRange(5920, 5937)
          .addRange(5952, 5969)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6016, 6067)
          .addRange(6176, 6264)
          .addRange(6272, 6312)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6480, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6656, 6678)
          .addRange(6688, 6740)
          .addRange(6917, 6963)
          .addRange(6981, 6987)
          .addRange(7043, 7072)
          .addRange(7086, 7087)
          .addRange(7098, 7141)
          .addRange(7168, 7203)
          .addRange(7245, 7247)
          .addRange(7258, 7293)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7401, 7404)
          .addRange(7406, 7409)
          .addRange(7413, 7414)
          .addRange(7424, 7615)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8336, 8348)
          .addRange(8458, 8467)
          .addRange(8472, 8477)
          .addRange(8490, 8505)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8544, 8584)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(11568, 11623)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(12293, 12295)
          .addRange(12321, 12329)
          .addRange(12337, 12341)
          .addRange(12344, 12348)
          .addRange(12353, 12438)
          .addRange(12445, 12447)
          .addRange(12449, 12538)
          .addRange(12540, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 42124)
          .addRange(42192, 42237)
          .addRange(42240, 42508)
          .addRange(42512, 42527)
          .addRange(42538, 42539)
          .addRange(42560, 42606)
          .addRange(42623, 42653)
          .addRange(42656, 42735)
          .addRange(42775, 42783)
          .addRange(42786, 42888)
          .addRange(42891, 42937)
          .addRange(42999, 43009)
          .addRange(43011, 43013)
          .addRange(43015, 43018)
          .addRange(43020, 43042)
          .addRange(43072, 43123)
          .addRange(43138, 43187)
          .addRange(43250, 43255)
          .addRange(43261, 43262)
          .addRange(43274, 43301)
          .addRange(43312, 43334)
          .addRange(43360, 43388)
          .addRange(43396, 43442)
          .addRange(43488, 43492)
          .addRange(43494, 43503)
          .addRange(43514, 43518)
          .addRange(43520, 43560)
          .addRange(43584, 43586)
          .addRange(43588, 43595)
          .addRange(43616, 43638)
          .addRange(43646, 43695)
          .addRange(43701, 43702)
          .addRange(43705, 43709)
          .addRange(43739, 43741)
          .addRange(43744, 43754)
          .addRange(43762, 43764)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 44002)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64287, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64605)
          .addRange(64612, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65017)
          .addRange(65151, 65276)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(65382, 65437)
          .addRange(65440, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65856, 65908)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66378)
          .addRange(66384, 66421)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66513, 66517)
          .addRange(66560, 66717)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68112, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68324)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68864, 68899)
          .addRange(69376, 69404)
          .addRange(69424, 69445)
          .addRange(69635, 69687)
          .addRange(69763, 69807)
          .addRange(69840, 69864)
          .addRange(69891, 69926)
          .addRange(69968, 70002)
          .addRange(70019, 70066)
          .addRange(70081, 70084)
          .addRange(70144, 70161)
          .addRange(70163, 70187)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70366)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70493, 70497)
          .addRange(70656, 70708)
          .addRange(70727, 70730)
          .addRange(70784, 70831)
          .addRange(70852, 70853)
          .addRange(71040, 71086)
          .addRange(71128, 71131)
          .addRange(71168, 71215)
          .addRange(71296, 71338)
          .addRange(71424, 71450)
          .addRange(71680, 71723)
          .addRange(71840, 71903)
          .addRange(72203, 72242)
          .addRange(72284, 72323)
          .addRange(72326, 72329)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72750)
          .addRange(72818, 72847)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73008)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73097)
          .addRange(73440, 73458)
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92880, 92909)
          .addRange(92928, 92975)
          .addRange(92992, 92995)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93823)
          .addRange(93952, 94020)
          .addRange(94099, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(124928, 125124)
          .addRange(125184, 125251)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)(
          181,
          895,
          902,
          908,
          4295,
          4301,
          8025,
          8027,
          8029,
          8126,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8505,
          8526,
          11559,
          11565,
          43002,
          119970,
          119995,
          120134
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 442)
          .addRange(444, 447)
          .addRange(452, 659)
          .addRange(661, 687)
          .addRange(880, 883)
          .addRange(886, 887)
          .addRange(891, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4349, 4351)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7424, 7467)
          .addRange(7531, 7543)
          .addRange(7545, 7578)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8458, 8467)
          .addRange(8473, 8477)
          .addRange(8490, 8493)
          .addRange(8495, 8500)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8579, 8580)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11387)
          .addRange(11390, 11492)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(42560, 42605)
          .addRange(42624, 42651)
          .addRange(42786, 42863)
          .addRange(42865, 42887)
          .addRange(42891, 42894)
          .addRange(42896, 42937)
          .addRange(43824, 43866)
          .addRange(43872, 43877)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(66560, 66639)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(71840, 71903)
          .addRange(93760, 93823)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(125184, 125251);
      },
      function(e, t, n) {
        e.exports = n(0)(
          41,
          93,
          125,
          3899,
          3901,
          5788,
          8262,
          8318,
          8334,
          8969,
          8971,
          9002,
          10089,
          10091,
          10093,
          10095,
          10097,
          10099,
          10101,
          10182,
          10215,
          10217,
          10219,
          10221,
          10223,
          10628,
          10630,
          10632,
          10634,
          10636,
          10638,
          10640,
          10642,
          10644,
          10646,
          10648,
          10713,
          10715,
          10749,
          11811,
          11813,
          11815,
          11817,
          12297,
          12299,
          12301,
          12303,
          12305,
          12309,
          12311,
          12313,
          12315,
          64830,
          65048,
          65078,
          65080,
          65082,
          65084,
          65086,
          65088,
          65090,
          65092,
          65096,
          65114,
          65116,
          65118,
          65289,
          65341,
          65373,
          65376,
          65379
        ).addRange(12318, 12319);
      },
      function(e, t, n) {
        e.exports = n(0)(95, 8276, 65343)
          .addRange(8255, 8256)
          .addRange(65075, 65076)
          .addRange(65101, 65103);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(0, 31)
          .addRange(127, 159);
      },
      function(e, t, n) {
        e.exports = n(0)(
          36,
          1423,
          1547,
          2555,
          2801,
          3065,
          3647,
          6107,
          43064,
          65020,
          65129,
          65284,
          126128
        )
          .addRange(162, 165)
          .addRange(2046, 2047)
          .addRange(2546, 2547)
          .addRange(8352, 8383)
          .addRange(65504, 65505)
          .addRange(65509, 65510);
      },
      function(e, t, n) {
        e.exports = n(0)(
          45,
          1418,
          1470,
          5120,
          6150,
          11799,
          11802,
          11840,
          12316,
          12336,
          12448,
          65112,
          65123,
          65293
        )
          .addRange(8208, 8213)
          .addRange(11834, 11835)
          .addRange(65073, 65074);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(48, 57)
          .addRange(1632, 1641)
          .addRange(1776, 1785)
          .addRange(1984, 1993)
          .addRange(2406, 2415)
          .addRange(2534, 2543)
          .addRange(2662, 2671)
          .addRange(2790, 2799)
          .addRange(2918, 2927)
          .addRange(3046, 3055)
          .addRange(3174, 3183)
          .addRange(3302, 3311)
          .addRange(3430, 3439)
          .addRange(3558, 3567)
          .addRange(3664, 3673)
          .addRange(3792, 3801)
          .addRange(3872, 3881)
          .addRange(4160, 4169)
          .addRange(4240, 4249)
          .addRange(6112, 6121)
          .addRange(6160, 6169)
          .addRange(6470, 6479)
          .addRange(6608, 6617)
          .addRange(6784, 6793)
          .addRange(6800, 6809)
          .addRange(6992, 7001)
          .addRange(7088, 7097)
          .addRange(7232, 7241)
          .addRange(7248, 7257)
          .addRange(42528, 42537)
          .addRange(43216, 43225)
          .addRange(43264, 43273)
          .addRange(43472, 43481)
          .addRange(43504, 43513)
          .addRange(43600, 43609)
          .addRange(44016, 44025)
          .addRange(65296, 65305)
          .addRange(66720, 66729)
          .addRange(68912, 68921)
          .addRange(69734, 69743)
          .addRange(69872, 69881)
          .addRange(69942, 69951)
          .addRange(70096, 70105)
          .addRange(70384, 70393)
          .addRange(70736, 70745)
          .addRange(70864, 70873)
          .addRange(71248, 71257)
          .addRange(71360, 71369)
          .addRange(71472, 71481)
          .addRange(71904, 71913)
          .addRange(72784, 72793)
          .addRange(73040, 73049)
          .addRange(73120, 73129)
          .addRange(92768, 92777)
          .addRange(93008, 93017)
          .addRange(120782, 120831)
          .addRange(125264, 125273);
      },
      function(e, t, n) {
        e.exports = n(0)(6846)
          .addRange(1160, 1161)
          .addRange(8413, 8416)
          .addRange(8418, 8420)
          .addRange(42608, 42610);
      },
      function(e, t, n) {
        e.exports = n(0)(
          187,
          8217,
          8221,
          8250,
          11779,
          11781,
          11786,
          11789,
          11805,
          11809
        );
      },
      function(e, t, n) {
        e.exports = n(0)(
          173,
          1564,
          1757,
          1807,
          2274,
          6158,
          65279,
          69821,
          69837,
          917505
        )
          .addRange(1536, 1541)
          .addRange(8203, 8207)
          .addRange(8234, 8238)
          .addRange(8288, 8292)
          .addRange(8294, 8303)
          .addRange(65529, 65531)
          .addRange(113824, 113827)
          .addRange(119155, 119162)
          .addRange(917536, 917631);
      },
      function(e, t, n) {
        e.exports = n(0)(
          171,
          8216,
          8223,
          8249,
          11778,
          11780,
          11785,
          11788,
          11804,
          11808
        ).addRange(8219, 8220);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          181,
          186,
          748,
          750,
          895,
          902,
          908,
          1369,
          1749,
          1791,
          1808,
          1969,
          2042,
          2074,
          2084,
          2088,
          2365,
          2384,
          2482,
          2493,
          2510,
          2556,
          2654,
          2749,
          2768,
          2809,
          2877,
          2929,
          2947,
          2972,
          3024,
          3133,
          3200,
          3261,
          3294,
          3389,
          3406,
          3517,
          3716,
          3722,
          3725,
          3749,
          3751,
          3773,
          3782,
          3840,
          4159,
          4193,
          4238,
          4295,
          4301,
          4696,
          4800,
          6103,
          6108,
          6314,
          6823,
          8025,
          8027,
          8029,
          8126,
          8305,
          8319,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8526,
          11559,
          11565,
          11631,
          11823,
          43259,
          43471,
          43642,
          43697,
          43712,
          43714,
          64285,
          64318,
          67592,
          67644,
          68096,
          69415,
          69956,
          70006,
          70106,
          70108,
          70280,
          70461,
          70480,
          70855,
          71236,
          71935,
          72192,
          72250,
          72272,
          72349,
          72768,
          73030,
          73112,
          94032,
          119970,
          119995,
          120134,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(880, 884)
          .addRange(886, 887)
          .addRange(890, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 1013)
          .addRange(1015, 1153)
          .addRange(1162, 1327)
          .addRange(1329, 1366)
          .addRange(1376, 1416)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1568, 1610)
          .addRange(1646, 1647)
          .addRange(1649, 1747)
          .addRange(1765, 1766)
          .addRange(1774, 1775)
          .addRange(1786, 1788)
          .addRange(1810, 1839)
          .addRange(1869, 1957)
          .addRange(1994, 2026)
          .addRange(2036, 2037)
          .addRange(2048, 2069)
          .addRange(2112, 2136)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2308, 2361)
          .addRange(2392, 2401)
          .addRange(2417, 2432)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2524, 2525)
          .addRange(2527, 2529)
          .addRange(2544, 2545)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2649, 2652)
          .addRange(2674, 2676)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2784, 2785)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2908, 2909)
          .addRange(2911, 2913)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3077, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3160, 3162)
          .addRange(3168, 3169)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3296, 3297)
          .addRange(3313, 3314)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3386)
          .addRange(3412, 3414)
          .addRange(3423, 3425)
          .addRange(3450, 3455)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3585, 3632)
          .addRange(3634, 3635)
          .addRange(3648, 3654)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3760)
          .addRange(3762, 3763)
          .addRange(3776, 3780)
          .addRange(3804, 3807)
          .addRange(3904, 3911)
          .addRange(3913, 3948)
          .addRange(3976, 3980)
          .addRange(4096, 4138)
          .addRange(4176, 4181)
          .addRange(4186, 4189)
          .addRange(4197, 4198)
          .addRange(4206, 4208)
          .addRange(4213, 4225)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4992, 5007)
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5873, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5905)
          .addRange(5920, 5937)
          .addRange(5952, 5969)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6016, 6067)
          .addRange(6176, 6264)
          .addRange(6272, 6276)
          .addRange(6279, 6312)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6480, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6656, 6678)
          .addRange(6688, 6740)
          .addRange(6917, 6963)
          .addRange(6981, 6987)
          .addRange(7043, 7072)
          .addRange(7086, 7087)
          .addRange(7098, 7141)
          .addRange(7168, 7203)
          .addRange(7245, 7247)
          .addRange(7258, 7293)
          .addRange(7296, 7304)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7401, 7404)
          .addRange(7406, 7409)
          .addRange(7413, 7414)
          .addRange(7424, 7615)
          .addRange(7680, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8124)
          .addRange(8130, 8132)
          .addRange(8134, 8140)
          .addRange(8144, 8147)
          .addRange(8150, 8155)
          .addRange(8160, 8172)
          .addRange(8178, 8180)
          .addRange(8182, 8188)
          .addRange(8336, 8348)
          .addRange(8458, 8467)
          .addRange(8473, 8477)
          .addRange(8490, 8493)
          .addRange(8495, 8505)
          .addRange(8508, 8511)
          .addRange(8517, 8521)
          .addRange(8579, 8580)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(11360, 11492)
          .addRange(11499, 11502)
          .addRange(11506, 11507)
          .addRange(11520, 11557)
          .addRange(11568, 11623)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(12293, 12294)
          .addRange(12337, 12341)
          .addRange(12347, 12348)
          .addRange(12353, 12438)
          .addRange(12445, 12447)
          .addRange(12449, 12538)
          .addRange(12540, 12543)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 42124)
          .addRange(42192, 42237)
          .addRange(42240, 42508)
          .addRange(42512, 42527)
          .addRange(42538, 42539)
          .addRange(42560, 42606)
          .addRange(42623, 42653)
          .addRange(42656, 42725)
          .addRange(42775, 42783)
          .addRange(42786, 42888)
          .addRange(42891, 42937)
          .addRange(42999, 43009)
          .addRange(43011, 43013)
          .addRange(43015, 43018)
          .addRange(43020, 43042)
          .addRange(43072, 43123)
          .addRange(43138, 43187)
          .addRange(43250, 43255)
          .addRange(43261, 43262)
          .addRange(43274, 43301)
          .addRange(43312, 43334)
          .addRange(43360, 43388)
          .addRange(43396, 43442)
          .addRange(43488, 43492)
          .addRange(43494, 43503)
          .addRange(43514, 43518)
          .addRange(43520, 43560)
          .addRange(43584, 43586)
          .addRange(43588, 43595)
          .addRange(43616, 43638)
          .addRange(43646, 43695)
          .addRange(43701, 43702)
          .addRange(43705, 43709)
          .addRange(43739, 43741)
          .addRange(43744, 43754)
          .addRange(43762, 43764)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43824, 43866)
          .addRange(43868, 43877)
          .addRange(43888, 44002)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(64287, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65019)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65313, 65338)
          .addRange(65345, 65370)
          .addRange(65382, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66368)
          .addRange(66370, 66377)
          .addRange(66384, 66421)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66560, 66717)
          .addRange(66736, 66771)
          .addRange(66776, 66811)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68112, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68324)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68864, 68899)
          .addRange(69376, 69404)
          .addRange(69424, 69445)
          .addRange(69635, 69687)
          .addRange(69763, 69807)
          .addRange(69840, 69864)
          .addRange(69891, 69926)
          .addRange(69968, 70002)
          .addRange(70019, 70066)
          .addRange(70081, 70084)
          .addRange(70144, 70161)
          .addRange(70163, 70187)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70366)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70493, 70497)
          .addRange(70656, 70708)
          .addRange(70727, 70730)
          .addRange(70784, 70831)
          .addRange(70852, 70853)
          .addRange(71040, 71086)
          .addRange(71128, 71131)
          .addRange(71168, 71215)
          .addRange(71296, 71338)
          .addRange(71424, 71450)
          .addRange(71680, 71723)
          .addRange(71840, 71903)
          .addRange(72203, 72242)
          .addRange(72284, 72323)
          .addRange(72326, 72329)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72750)
          .addRange(72818, 72847)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73008)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73097)
          .addRange(73440, 73458)
          .addRange(73728, 74649)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92880, 92909)
          .addRange(92928, 92975)
          .addRange(92992, 92995)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93760, 93823)
          .addRange(93952, 94020)
          .addRange(94099, 94111)
          .addRange(94176, 94177)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120512)
          .addRange(120514, 120538)
          .addRange(120540, 120570)
          .addRange(120572, 120596)
          .addRange(120598, 120628)
          .addRange(120630, 120654)
          .addRange(120656, 120686)
          .addRange(120688, 120712)
          .addRange(120714, 120744)
          .addRange(120746, 120770)
          .addRange(120772, 120779)
          .addRange(124928, 125124)
          .addRange(125184, 125251)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)(12295, 66369, 66378)
          .addRange(5870, 5872)
          .addRange(8544, 8578)
          .addRange(8581, 8584)
          .addRange(12321, 12329)
          .addRange(12344, 12346)
          .addRange(42726, 42735)
          .addRange(65856, 65908)
          .addRange(66513, 66517)
          .addRange(74752, 74862);
      },
      function(e, t, n) {
        e.exports = n(0)(8232);
      },
      function(e, t, n) {
        e.exports = n(0)(
          181,
          257,
          259,
          261,
          263,
          265,
          267,
          269,
          271,
          273,
          275,
          277,
          279,
          281,
          283,
          285,
          287,
          289,
          291,
          293,
          295,
          297,
          299,
          301,
          303,
          305,
          307,
          309,
          314,
          316,
          318,
          320,
          322,
          324,
          326,
          331,
          333,
          335,
          337,
          339,
          341,
          343,
          345,
          347,
          349,
          351,
          353,
          355,
          357,
          359,
          361,
          363,
          365,
          367,
          369,
          371,
          373,
          375,
          378,
          380,
          387,
          389,
          392,
          402,
          405,
          414,
          417,
          419,
          421,
          424,
          429,
          432,
          436,
          438,
          454,
          457,
          460,
          462,
          464,
          466,
          468,
          470,
          472,
          474,
          479,
          481,
          483,
          485,
          487,
          489,
          491,
          493,
          499,
          501,
          505,
          507,
          509,
          511,
          513,
          515,
          517,
          519,
          521,
          523,
          525,
          527,
          529,
          531,
          533,
          535,
          537,
          539,
          541,
          543,
          545,
          547,
          549,
          551,
          553,
          555,
          557,
          559,
          561,
          572,
          578,
          583,
          585,
          587,
          589,
          881,
          883,
          887,
          912,
          985,
          987,
          989,
          991,
          993,
          995,
          997,
          999,
          1001,
          1003,
          1005,
          1013,
          1016,
          1121,
          1123,
          1125,
          1127,
          1129,
          1131,
          1133,
          1135,
          1137,
          1139,
          1141,
          1143,
          1145,
          1147,
          1149,
          1151,
          1153,
          1163,
          1165,
          1167,
          1169,
          1171,
          1173,
          1175,
          1177,
          1179,
          1181,
          1183,
          1185,
          1187,
          1189,
          1191,
          1193,
          1195,
          1197,
          1199,
          1201,
          1203,
          1205,
          1207,
          1209,
          1211,
          1213,
          1215,
          1218,
          1220,
          1222,
          1224,
          1226,
          1228,
          1233,
          1235,
          1237,
          1239,
          1241,
          1243,
          1245,
          1247,
          1249,
          1251,
          1253,
          1255,
          1257,
          1259,
          1261,
          1263,
          1265,
          1267,
          1269,
          1271,
          1273,
          1275,
          1277,
          1279,
          1281,
          1283,
          1285,
          1287,
          1289,
          1291,
          1293,
          1295,
          1297,
          1299,
          1301,
          1303,
          1305,
          1307,
          1309,
          1311,
          1313,
          1315,
          1317,
          1319,
          1321,
          1323,
          1325,
          1327,
          7681,
          7683,
          7685,
          7687,
          7689,
          7691,
          7693,
          7695,
          7697,
          7699,
          7701,
          7703,
          7705,
          7707,
          7709,
          7711,
          7713,
          7715,
          7717,
          7719,
          7721,
          7723,
          7725,
          7727,
          7729,
          7731,
          7733,
          7735,
          7737,
          7739,
          7741,
          7743,
          7745,
          7747,
          7749,
          7751,
          7753,
          7755,
          7757,
          7759,
          7761,
          7763,
          7765,
          7767,
          7769,
          7771,
          7773,
          7775,
          7777,
          7779,
          7781,
          7783,
          7785,
          7787,
          7789,
          7791,
          7793,
          7795,
          7797,
          7799,
          7801,
          7803,
          7805,
          7807,
          7809,
          7811,
          7813,
          7815,
          7817,
          7819,
          7821,
          7823,
          7825,
          7827,
          7839,
          7841,
          7843,
          7845,
          7847,
          7849,
          7851,
          7853,
          7855,
          7857,
          7859,
          7861,
          7863,
          7865,
          7867,
          7869,
          7871,
          7873,
          7875,
          7877,
          7879,
          7881,
          7883,
          7885,
          7887,
          7889,
          7891,
          7893,
          7895,
          7897,
          7899,
          7901,
          7903,
          7905,
          7907,
          7909,
          7911,
          7913,
          7915,
          7917,
          7919,
          7921,
          7923,
          7925,
          7927,
          7929,
          7931,
          7933,
          8126,
          8458,
          8467,
          8495,
          8500,
          8505,
          8526,
          8580,
          11361,
          11368,
          11370,
          11372,
          11377,
          11393,
          11395,
          11397,
          11399,
          11401,
          11403,
          11405,
          11407,
          11409,
          11411,
          11413,
          11415,
          11417,
          11419,
          11421,
          11423,
          11425,
          11427,
          11429,
          11431,
          11433,
          11435,
          11437,
          11439,
          11441,
          11443,
          11445,
          11447,
          11449,
          11451,
          11453,
          11455,
          11457,
          11459,
          11461,
          11463,
          11465,
          11467,
          11469,
          11471,
          11473,
          11475,
          11477,
          11479,
          11481,
          11483,
          11485,
          11487,
          11489,
          11500,
          11502,
          11507,
          11559,
          11565,
          42561,
          42563,
          42565,
          42567,
          42569,
          42571,
          42573,
          42575,
          42577,
          42579,
          42581,
          42583,
          42585,
          42587,
          42589,
          42591,
          42593,
          42595,
          42597,
          42599,
          42601,
          42603,
          42605,
          42625,
          42627,
          42629,
          42631,
          42633,
          42635,
          42637,
          42639,
          42641,
          42643,
          42645,
          42647,
          42649,
          42651,
          42787,
          42789,
          42791,
          42793,
          42795,
          42797,
          42803,
          42805,
          42807,
          42809,
          42811,
          42813,
          42815,
          42817,
          42819,
          42821,
          42823,
          42825,
          42827,
          42829,
          42831,
          42833,
          42835,
          42837,
          42839,
          42841,
          42843,
          42845,
          42847,
          42849,
          42851,
          42853,
          42855,
          42857,
          42859,
          42861,
          42863,
          42874,
          42876,
          42879,
          42881,
          42883,
          42885,
          42887,
          42892,
          42894,
          42897,
          42903,
          42905,
          42907,
          42909,
          42911,
          42913,
          42915,
          42917,
          42919,
          42921,
          42927,
          42933,
          42935,
          42937,
          43002,
          119995,
          120779
        )
          .addRange(97, 122)
          .addRange(223, 246)
          .addRange(248, 255)
          .addRange(311, 312)
          .addRange(328, 329)
          .addRange(382, 384)
          .addRange(396, 397)
          .addRange(409, 411)
          .addRange(426, 427)
          .addRange(441, 442)
          .addRange(445, 447)
          .addRange(476, 477)
          .addRange(495, 496)
          .addRange(563, 569)
          .addRange(575, 576)
          .addRange(591, 659)
          .addRange(661, 687)
          .addRange(891, 893)
          .addRange(940, 974)
          .addRange(976, 977)
          .addRange(981, 983)
          .addRange(1007, 1011)
          .addRange(1019, 1020)
          .addRange(1072, 1119)
          .addRange(1230, 1231)
          .addRange(1376, 1416)
          .addRange(4304, 4346)
          .addRange(4349, 4351)
          .addRange(5112, 5117)
          .addRange(7296, 7304)
          .addRange(7424, 7467)
          .addRange(7531, 7543)
          .addRange(7545, 7578)
          .addRange(7829, 7837)
          .addRange(7935, 7943)
          .addRange(7952, 7957)
          .addRange(7968, 7975)
          .addRange(7984, 7991)
          .addRange(8e3, 8005)
          .addRange(8016, 8023)
          .addRange(8032, 8039)
          .addRange(8048, 8061)
          .addRange(8064, 8071)
          .addRange(8080, 8087)
          .addRange(8096, 8103)
          .addRange(8112, 8116)
          .addRange(8118, 8119)
          .addRange(8130, 8132)
          .addRange(8134, 8135)
          .addRange(8144, 8147)
          .addRange(8150, 8151)
          .addRange(8160, 8167)
          .addRange(8178, 8180)
          .addRange(8182, 8183)
          .addRange(8462, 8463)
          .addRange(8508, 8509)
          .addRange(8518, 8521)
          .addRange(11312, 11358)
          .addRange(11365, 11366)
          .addRange(11379, 11380)
          .addRange(11382, 11387)
          .addRange(11491, 11492)
          .addRange(11520, 11557)
          .addRange(42799, 42801)
          .addRange(42865, 42872)
          .addRange(42899, 42901)
          .addRange(43824, 43866)
          .addRange(43872, 43877)
          .addRange(43888, 43967)
          .addRange(64256, 64262)
          .addRange(64275, 64279)
          .addRange(65345, 65370)
          .addRange(66600, 66639)
          .addRange(66776, 66811)
          .addRange(68800, 68850)
          .addRange(71872, 71903)
          .addRange(93792, 93823)
          .addRange(119834, 119859)
          .addRange(119886, 119892)
          .addRange(119894, 119911)
          .addRange(119938, 119963)
          .addRange(119990, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120015)
          .addRange(120042, 120067)
          .addRange(120094, 120119)
          .addRange(120146, 120171)
          .addRange(120198, 120223)
          .addRange(120250, 120275)
          .addRange(120302, 120327)
          .addRange(120354, 120379)
          .addRange(120406, 120431)
          .addRange(120458, 120485)
          .addRange(120514, 120538)
          .addRange(120540, 120545)
          .addRange(120572, 120596)
          .addRange(120598, 120603)
          .addRange(120630, 120654)
          .addRange(120656, 120661)
          .addRange(120688, 120712)
          .addRange(120714, 120719)
          .addRange(120746, 120770)
          .addRange(120772, 120777)
          .addRange(125218, 125251);
      },
      function(e, t, n) {
        e.exports = n(0)(
          1471,
          1479,
          1648,
          1809,
          2045,
          2492,
          2519,
          2558,
          2620,
          2641,
          2677,
          2748,
          2876,
          2946,
          3031,
          3260,
          3415,
          3530,
          3542,
          3633,
          3761,
          3893,
          3895,
          3897,
          4038,
          4239,
          6109,
          6313,
          6783,
          7405,
          11647,
          43010,
          43014,
          43019,
          43263,
          43493,
          43587,
          43696,
          43713,
          64286,
          66045,
          66272,
          68159,
          70003,
          70206,
          70487,
          70750,
          72263,
          73018,
          73031,
          121461,
          121476
        )
          .addRange(768, 879)
          .addRange(1155, 1161)
          .addRange(1425, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1552, 1562)
          .addRange(1611, 1631)
          .addRange(1750, 1756)
          .addRange(1759, 1764)
          .addRange(1767, 1768)
          .addRange(1770, 1773)
          .addRange(1840, 1866)
          .addRange(1958, 1968)
          .addRange(2027, 2035)
          .addRange(2070, 2073)
          .addRange(2075, 2083)
          .addRange(2085, 2087)
          .addRange(2089, 2093)
          .addRange(2137, 2139)
          .addRange(2259, 2273)
          .addRange(2275, 2307)
          .addRange(2362, 2364)
          .addRange(2366, 2383)
          .addRange(2385, 2391)
          .addRange(2402, 2403)
          .addRange(2433, 2435)
          .addRange(2494, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2509)
          .addRange(2530, 2531)
          .addRange(2561, 2563)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2672, 2673)
          .addRange(2689, 2691)
          .addRange(2750, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2765)
          .addRange(2786, 2787)
          .addRange(2810, 2815)
          .addRange(2817, 2819)
          .addRange(2878, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2893)
          .addRange(2902, 2903)
          .addRange(2914, 2915)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3021)
          .addRange(3072, 3076)
          .addRange(3134, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3170, 3171)
          .addRange(3201, 3203)
          .addRange(3262, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3277)
          .addRange(3285, 3286)
          .addRange(3298, 3299)
          .addRange(3328, 3331)
          .addRange(3387, 3388)
          .addRange(3390, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3405)
          .addRange(3426, 3427)
          .addRange(3458, 3459)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3570, 3571)
          .addRange(3636, 3642)
          .addRange(3655, 3662)
          .addRange(3764, 3769)
          .addRange(3771, 3772)
          .addRange(3784, 3789)
          .addRange(3864, 3865)
          .addRange(3902, 3903)
          .addRange(3953, 3972)
          .addRange(3974, 3975)
          .addRange(3981, 3991)
          .addRange(3993, 4028)
          .addRange(4139, 4158)
          .addRange(4182, 4185)
          .addRange(4190, 4192)
          .addRange(4194, 4196)
          .addRange(4199, 4205)
          .addRange(4209, 4212)
          .addRange(4226, 4237)
          .addRange(4250, 4253)
          .addRange(4957, 4959)
          .addRange(5906, 5908)
          .addRange(5938, 5940)
          .addRange(5970, 5971)
          .addRange(6002, 6003)
          .addRange(6068, 6099)
          .addRange(6155, 6157)
          .addRange(6277, 6278)
          .addRange(6432, 6443)
          .addRange(6448, 6459)
          .addRange(6679, 6683)
          .addRange(6741, 6750)
          .addRange(6752, 6780)
          .addRange(6832, 6846)
          .addRange(6912, 6916)
          .addRange(6964, 6980)
          .addRange(7019, 7027)
          .addRange(7040, 7042)
          .addRange(7073, 7085)
          .addRange(7142, 7155)
          .addRange(7204, 7223)
          .addRange(7376, 7378)
          .addRange(7380, 7400)
          .addRange(7410, 7412)
          .addRange(7415, 7417)
          .addRange(7616, 7673)
          .addRange(7675, 7679)
          .addRange(8400, 8432)
          .addRange(11503, 11505)
          .addRange(11744, 11775)
          .addRange(12330, 12335)
          .addRange(12441, 12442)
          .addRange(42607, 42610)
          .addRange(42612, 42621)
          .addRange(42654, 42655)
          .addRange(42736, 42737)
          .addRange(43043, 43047)
          .addRange(43136, 43137)
          .addRange(43188, 43205)
          .addRange(43232, 43249)
          .addRange(43302, 43309)
          .addRange(43335, 43347)
          .addRange(43392, 43395)
          .addRange(43443, 43456)
          .addRange(43561, 43574)
          .addRange(43596, 43597)
          .addRange(43643, 43645)
          .addRange(43698, 43700)
          .addRange(43703, 43704)
          .addRange(43710, 43711)
          .addRange(43755, 43759)
          .addRange(43765, 43766)
          .addRange(44003, 44010)
          .addRange(44012, 44013)
          .addRange(65024, 65039)
          .addRange(65056, 65071)
          .addRange(66422, 66426)
          .addRange(68097, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68111)
          .addRange(68152, 68154)
          .addRange(68325, 68326)
          .addRange(68900, 68903)
          .addRange(69446, 69456)
          .addRange(69632, 69634)
          .addRange(69688, 69702)
          .addRange(69759, 69762)
          .addRange(69808, 69818)
          .addRange(69888, 69890)
          .addRange(69927, 69940)
          .addRange(69957, 69958)
          .addRange(70016, 70018)
          .addRange(70067, 70080)
          .addRange(70089, 70092)
          .addRange(70188, 70199)
          .addRange(70367, 70378)
          .addRange(70400, 70403)
          .addRange(70459, 70460)
          .addRange(70462, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70498, 70499)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70709, 70726)
          .addRange(70832, 70851)
          .addRange(71087, 71093)
          .addRange(71096, 71104)
          .addRange(71132, 71133)
          .addRange(71216, 71232)
          .addRange(71339, 71351)
          .addRange(71453, 71467)
          .addRange(71724, 71738)
          .addRange(72193, 72202)
          .addRange(72243, 72249)
          .addRange(72251, 72254)
          .addRange(72273, 72283)
          .addRange(72330, 72345)
          .addRange(72751, 72758)
          .addRange(72760, 72767)
          .addRange(72850, 72871)
          .addRange(72873, 72886)
          .addRange(73009, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73029)
          .addRange(73098, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73111)
          .addRange(73459, 73462)
          .addRange(92912, 92916)
          .addRange(92976, 92982)
          .addRange(94033, 94078)
          .addRange(94095, 94098)
          .addRange(113821, 113822)
          .addRange(119141, 119145)
          .addRange(119149, 119154)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(119362, 119364)
          .addRange(121344, 121398)
          .addRange(121403, 121452)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(125136, 125142)
          .addRange(125252, 125258)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)(
          43,
          124,
          126,
          172,
          177,
          215,
          247,
          1014,
          8260,
          8274,
          8472,
          8523,
          8608,
          8611,
          8614,
          8622,
          8658,
          8660,
          9084,
          9655,
          9665,
          9839,
          64297,
          65122,
          65291,
          65372,
          65374,
          65506,
          120513,
          120539,
          120571,
          120597,
          120629,
          120655,
          120687,
          120713,
          120745,
          120771
        )
          .addRange(60, 62)
          .addRange(1542, 1544)
          .addRange(8314, 8316)
          .addRange(8330, 8332)
          .addRange(8512, 8516)
          .addRange(8592, 8596)
          .addRange(8602, 8603)
          .addRange(8654, 8655)
          .addRange(8692, 8959)
          .addRange(8992, 8993)
          .addRange(9115, 9139)
          .addRange(9180, 9185)
          .addRange(9720, 9727)
          .addRange(10176, 10180)
          .addRange(10183, 10213)
          .addRange(10224, 10239)
          .addRange(10496, 10626)
          .addRange(10649, 10711)
          .addRange(10716, 10747)
          .addRange(10750, 11007)
          .addRange(11056, 11076)
          .addRange(11079, 11084)
          .addRange(65124, 65126)
          .addRange(65308, 65310)
          .addRange(65513, 65516)
          .addRange(126704, 126705);
      },
      function(e, t, n) {
        e.exports = n(0)(
          748,
          750,
          884,
          890,
          1369,
          1600,
          2042,
          2074,
          2084,
          2088,
          2417,
          3654,
          3782,
          4348,
          6103,
          6211,
          6823,
          7544,
          8305,
          8319,
          11631,
          11823,
          12293,
          12347,
          40981,
          42508,
          42623,
          42864,
          42888,
          43471,
          43494,
          43632,
          43741,
          65392
        )
          .addRange(688, 705)
          .addRange(710, 721)
          .addRange(736, 740)
          .addRange(1765, 1766)
          .addRange(2036, 2037)
          .addRange(7288, 7293)
          .addRange(7468, 7530)
          .addRange(7579, 7615)
          .addRange(8336, 8348)
          .addRange(11388, 11389)
          .addRange(12337, 12341)
          .addRange(12445, 12446)
          .addRange(12540, 12542)
          .addRange(42232, 42237)
          .addRange(42652, 42653)
          .addRange(42775, 42783)
          .addRange(43e3, 43001)
          .addRange(43763, 43764)
          .addRange(43868, 43871)
          .addRange(65438, 65439)
          .addRange(92992, 92995)
          .addRange(94099, 94111)
          .addRange(94176, 94177);
      },
      function(e, t, n) {
        e.exports = n(0)(
          94,
          96,
          168,
          175,
          180,
          184,
          749,
          885,
          8125,
          43867,
          65342,
          65344,
          65507
        )
          .addRange(706, 709)
          .addRange(722, 735)
          .addRange(741, 747)
          .addRange(751, 767)
          .addRange(900, 901)
          .addRange(8127, 8129)
          .addRange(8141, 8143)
          .addRange(8157, 8159)
          .addRange(8173, 8175)
          .addRange(8189, 8190)
          .addRange(12443, 12444)
          .addRange(42752, 42774)
          .addRange(42784, 42785)
          .addRange(42889, 42890)
          .addRange(64434, 64449)
          .addRange(127995, 127999);
      },
      function(e, t, n) {
        e.exports = n(0)(
          1471,
          1479,
          1648,
          1809,
          2045,
          2362,
          2364,
          2381,
          2433,
          2492,
          2509,
          2558,
          2620,
          2641,
          2677,
          2748,
          2765,
          2817,
          2876,
          2879,
          2893,
          2902,
          2946,
          3008,
          3021,
          3072,
          3076,
          3201,
          3260,
          3263,
          3270,
          3405,
          3530,
          3542,
          3633,
          3761,
          3893,
          3895,
          3897,
          4038,
          4226,
          4237,
          4253,
          6086,
          6109,
          6313,
          6450,
          6683,
          6742,
          6752,
          6754,
          6783,
          6964,
          6972,
          6978,
          7142,
          7149,
          7405,
          7412,
          8417,
          11647,
          42607,
          43010,
          43014,
          43019,
          43263,
          43443,
          43452,
          43493,
          43587,
          43596,
          43644,
          43696,
          43713,
          43766,
          44005,
          44008,
          44013,
          64286,
          66045,
          66272,
          68159,
          69633,
          70003,
          70196,
          70206,
          70367,
          70464,
          70726,
          70750,
          70842,
          71229,
          71339,
          71341,
          71351,
          72263,
          72767,
          73018,
          73031,
          73109,
          73111,
          121461,
          121476
        )
          .addRange(768, 879)
          .addRange(1155, 1159)
          .addRange(1425, 1469)
          .addRange(1473, 1474)
          .addRange(1476, 1477)
          .addRange(1552, 1562)
          .addRange(1611, 1631)
          .addRange(1750, 1756)
          .addRange(1759, 1764)
          .addRange(1767, 1768)
          .addRange(1770, 1773)
          .addRange(1840, 1866)
          .addRange(1958, 1968)
          .addRange(2027, 2035)
          .addRange(2070, 2073)
          .addRange(2075, 2083)
          .addRange(2085, 2087)
          .addRange(2089, 2093)
          .addRange(2137, 2139)
          .addRange(2259, 2273)
          .addRange(2275, 2306)
          .addRange(2369, 2376)
          .addRange(2385, 2391)
          .addRange(2402, 2403)
          .addRange(2497, 2500)
          .addRange(2530, 2531)
          .addRange(2561, 2562)
          .addRange(2625, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2672, 2673)
          .addRange(2689, 2690)
          .addRange(2753, 2757)
          .addRange(2759, 2760)
          .addRange(2786, 2787)
          .addRange(2810, 2815)
          .addRange(2881, 2884)
          .addRange(2914, 2915)
          .addRange(3134, 3136)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3170, 3171)
          .addRange(3276, 3277)
          .addRange(3298, 3299)
          .addRange(3328, 3329)
          .addRange(3387, 3388)
          .addRange(3393, 3396)
          .addRange(3426, 3427)
          .addRange(3538, 3540)
          .addRange(3636, 3642)
          .addRange(3655, 3662)
          .addRange(3764, 3769)
          .addRange(3771, 3772)
          .addRange(3784, 3789)
          .addRange(3864, 3865)
          .addRange(3953, 3966)
          .addRange(3968, 3972)
          .addRange(3974, 3975)
          .addRange(3981, 3991)
          .addRange(3993, 4028)
          .addRange(4141, 4144)
          .addRange(4146, 4151)
          .addRange(4153, 4154)
          .addRange(4157, 4158)
          .addRange(4184, 4185)
          .addRange(4190, 4192)
          .addRange(4209, 4212)
          .addRange(4229, 4230)
          .addRange(4957, 4959)
          .addRange(5906, 5908)
          .addRange(5938, 5940)
          .addRange(5970, 5971)
          .addRange(6002, 6003)
          .addRange(6068, 6069)
          .addRange(6071, 6077)
          .addRange(6089, 6099)
          .addRange(6155, 6157)
          .addRange(6277, 6278)
          .addRange(6432, 6434)
          .addRange(6439, 6440)
          .addRange(6457, 6459)
          .addRange(6679, 6680)
          .addRange(6744, 6750)
          .addRange(6757, 6764)
          .addRange(6771, 6780)
          .addRange(6832, 6845)
          .addRange(6912, 6915)
          .addRange(6966, 6970)
          .addRange(7019, 7027)
          .addRange(7040, 7041)
          .addRange(7074, 7077)
          .addRange(7080, 7081)
          .addRange(7083, 7085)
          .addRange(7144, 7145)
          .addRange(7151, 7153)
          .addRange(7212, 7219)
          .addRange(7222, 7223)
          .addRange(7376, 7378)
          .addRange(7380, 7392)
          .addRange(7394, 7400)
          .addRange(7416, 7417)
          .addRange(7616, 7673)
          .addRange(7675, 7679)
          .addRange(8400, 8412)
          .addRange(8421, 8432)
          .addRange(11503, 11505)
          .addRange(11744, 11775)
          .addRange(12330, 12333)
          .addRange(12441, 12442)
          .addRange(42612, 42621)
          .addRange(42654, 42655)
          .addRange(42736, 42737)
          .addRange(43045, 43046)
          .addRange(43204, 43205)
          .addRange(43232, 43249)
          .addRange(43302, 43309)
          .addRange(43335, 43345)
          .addRange(43392, 43394)
          .addRange(43446, 43449)
          .addRange(43561, 43566)
          .addRange(43569, 43570)
          .addRange(43573, 43574)
          .addRange(43698, 43700)
          .addRange(43703, 43704)
          .addRange(43710, 43711)
          .addRange(43756, 43757)
          .addRange(65024, 65039)
          .addRange(65056, 65071)
          .addRange(66422, 66426)
          .addRange(68097, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68111)
          .addRange(68152, 68154)
          .addRange(68325, 68326)
          .addRange(68900, 68903)
          .addRange(69446, 69456)
          .addRange(69688, 69702)
          .addRange(69759, 69761)
          .addRange(69811, 69814)
          .addRange(69817, 69818)
          .addRange(69888, 69890)
          .addRange(69927, 69931)
          .addRange(69933, 69940)
          .addRange(70016, 70017)
          .addRange(70070, 70078)
          .addRange(70089, 70092)
          .addRange(70191, 70193)
          .addRange(70198, 70199)
          .addRange(70371, 70378)
          .addRange(70400, 70401)
          .addRange(70459, 70460)
          .addRange(70502, 70508)
          .addRange(70512, 70516)
          .addRange(70712, 70719)
          .addRange(70722, 70724)
          .addRange(70835, 70840)
          .addRange(70847, 70848)
          .addRange(70850, 70851)
          .addRange(71090, 71093)
          .addRange(71100, 71101)
          .addRange(71103, 71104)
          .addRange(71132, 71133)
          .addRange(71219, 71226)
          .addRange(71231, 71232)
          .addRange(71344, 71349)
          .addRange(71453, 71455)
          .addRange(71458, 71461)
          .addRange(71463, 71467)
          .addRange(71727, 71735)
          .addRange(71737, 71738)
          .addRange(72193, 72202)
          .addRange(72243, 72248)
          .addRange(72251, 72254)
          .addRange(72273, 72278)
          .addRange(72281, 72283)
          .addRange(72330, 72342)
          .addRange(72344, 72345)
          .addRange(72752, 72758)
          .addRange(72760, 72765)
          .addRange(72850, 72871)
          .addRange(72874, 72880)
          .addRange(72882, 72883)
          .addRange(72885, 72886)
          .addRange(73009, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73029)
          .addRange(73104, 73105)
          .addRange(73459, 73460)
          .addRange(92912, 92916)
          .addRange(92976, 92982)
          .addRange(94095, 94098)
          .addRange(113821, 113822)
          .addRange(119143, 119145)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(119362, 119364)
          .addRange(121344, 121398)
          .addRange(121403, 121452)
          .addRange(121499, 121503)
          .addRange(121505, 121519)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922)
          .addRange(125136, 125142)
          .addRange(125252, 125258)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)(185, 8304, 11517, 12295, 66369, 66378)
          .addRange(48, 57)
          .addRange(178, 179)
          .addRange(188, 190)
          .addRange(1632, 1641)
          .addRange(1776, 1785)
          .addRange(1984, 1993)
          .addRange(2406, 2415)
          .addRange(2534, 2543)
          .addRange(2548, 2553)
          .addRange(2662, 2671)
          .addRange(2790, 2799)
          .addRange(2918, 2927)
          .addRange(2930, 2935)
          .addRange(3046, 3058)
          .addRange(3174, 3183)
          .addRange(3192, 3198)
          .addRange(3302, 3311)
          .addRange(3416, 3422)
          .addRange(3430, 3448)
          .addRange(3558, 3567)
          .addRange(3664, 3673)
          .addRange(3792, 3801)
          .addRange(3872, 3891)
          .addRange(4160, 4169)
          .addRange(4240, 4249)
          .addRange(4969, 4988)
          .addRange(5870, 5872)
          .addRange(6112, 6121)
          .addRange(6128, 6137)
          .addRange(6160, 6169)
          .addRange(6470, 6479)
          .addRange(6608, 6618)
          .addRange(6784, 6793)
          .addRange(6800, 6809)
          .addRange(6992, 7001)
          .addRange(7088, 7097)
          .addRange(7232, 7241)
          .addRange(7248, 7257)
          .addRange(8308, 8313)
          .addRange(8320, 8329)
          .addRange(8528, 8578)
          .addRange(8581, 8585)
          .addRange(9312, 9371)
          .addRange(9450, 9471)
          .addRange(10102, 10131)
          .addRange(12321, 12329)
          .addRange(12344, 12346)
          .addRange(12690, 12693)
          .addRange(12832, 12841)
          .addRange(12872, 12879)
          .addRange(12881, 12895)
          .addRange(12928, 12937)
          .addRange(12977, 12991)
          .addRange(42528, 42537)
          .addRange(42726, 42735)
          .addRange(43056, 43061)
          .addRange(43216, 43225)
          .addRange(43264, 43273)
          .addRange(43472, 43481)
          .addRange(43504, 43513)
          .addRange(43600, 43609)
          .addRange(44016, 44025)
          .addRange(65296, 65305)
          .addRange(65799, 65843)
          .addRange(65856, 65912)
          .addRange(65930, 65931)
          .addRange(66273, 66299)
          .addRange(66336, 66339)
          .addRange(66513, 66517)
          .addRange(66720, 66729)
          .addRange(67672, 67679)
          .addRange(67705, 67711)
          .addRange(67751, 67759)
          .addRange(67835, 67839)
          .addRange(67862, 67867)
          .addRange(68028, 68029)
          .addRange(68032, 68047)
          .addRange(68050, 68095)
          .addRange(68160, 68168)
          .addRange(68221, 68222)
          .addRange(68253, 68255)
          .addRange(68331, 68335)
          .addRange(68440, 68447)
          .addRange(68472, 68479)
          .addRange(68521, 68527)
          .addRange(68858, 68863)
          .addRange(68912, 68921)
          .addRange(69216, 69246)
          .addRange(69405, 69414)
          .addRange(69457, 69460)
          .addRange(69714, 69743)
          .addRange(69872, 69881)
          .addRange(69942, 69951)
          .addRange(70096, 70105)
          .addRange(70113, 70132)
          .addRange(70384, 70393)
          .addRange(70736, 70745)
          .addRange(70864, 70873)
          .addRange(71248, 71257)
          .addRange(71360, 71369)
          .addRange(71472, 71483)
          .addRange(71904, 71922)
          .addRange(72784, 72812)
          .addRange(73040, 73049)
          .addRange(73120, 73129)
          .addRange(74752, 74862)
          .addRange(92768, 92777)
          .addRange(93008, 93017)
          .addRange(93019, 93025)
          .addRange(93824, 93846)
          .addRange(119520, 119539)
          .addRange(119648, 119672)
          .addRange(120782, 120831)
          .addRange(125127, 125135)
          .addRange(125264, 125273)
          .addRange(126065, 126123)
          .addRange(126125, 126127)
          .addRange(126129, 126132)
          .addRange(127232, 127244);
      },
      function(e, t, n) {
        e.exports = n(0)(
          40,
          91,
          123,
          3898,
          3900,
          5787,
          8218,
          8222,
          8261,
          8317,
          8333,
          8968,
          8970,
          9001,
          10088,
          10090,
          10092,
          10094,
          10096,
          10098,
          10100,
          10181,
          10214,
          10216,
          10218,
          10220,
          10222,
          10627,
          10629,
          10631,
          10633,
          10635,
          10637,
          10639,
          10641,
          10643,
          10645,
          10647,
          10712,
          10714,
          10748,
          11810,
          11812,
          11814,
          11816,
          11842,
          12296,
          12298,
          12300,
          12302,
          12304,
          12308,
          12310,
          12312,
          12314,
          12317,
          64831,
          65047,
          65077,
          65079,
          65081,
          65083,
          65085,
          65087,
          65089,
          65091,
          65095,
          65113,
          65115,
          65117,
          65288,
          65339,
          65371,
          65375,
          65378
        );
      },
      function(e, t, n) {
        e.exports = n(0)(
          173,
          907,
          909,
          930,
          1328,
          1424,
          1757,
          2111,
          2143,
          2229,
          2274,
          2436,
          2473,
          2481,
          2526,
          2564,
          2601,
          2609,
          2612,
          2615,
          2621,
          2653,
          2692,
          2702,
          2706,
          2729,
          2737,
          2740,
          2758,
          2762,
          2816,
          2820,
          2857,
          2865,
          2868,
          2910,
          2948,
          2961,
          2971,
          2973,
          3017,
          3085,
          3089,
          3113,
          3141,
          3145,
          3159,
          3213,
          3217,
          3241,
          3252,
          3269,
          3273,
          3295,
          3312,
          3332,
          3341,
          3345,
          3397,
          3401,
          3460,
          3506,
          3516,
          3541,
          3543,
          3715,
          3721,
          3736,
          3744,
          3748,
          3750,
          3756,
          3770,
          3781,
          3783,
          3912,
          3992,
          4029,
          4045,
          4294,
          4681,
          4695,
          4697,
          4745,
          4785,
          4799,
          4801,
          4823,
          4881,
          5901,
          5997,
          6001,
          6431,
          6751,
          7674,
          8024,
          8026,
          8028,
          8030,
          8117,
          8133,
          8156,
          8181,
          8191,
          8335,
          11209,
          11263,
          11311,
          11359,
          11558,
          11687,
          11695,
          11703,
          11711,
          11719,
          11727,
          11735,
          11743,
          11930,
          12352,
          12592,
          12687,
          12831,
          13055,
          43470,
          43519,
          43815,
          43823,
          64311,
          64317,
          64319,
          64322,
          64325,
          65107,
          65127,
          65141,
          65511,
          65548,
          65575,
          65595,
          65598,
          65935,
          66462,
          67593,
          67638,
          67670,
          67827,
          68100,
          68116,
          68120,
          69821,
          69941,
          70112,
          70162,
          70279,
          70281,
          70286,
          70302,
          70404,
          70441,
          70449,
          70452,
          70458,
          70746,
          70748,
          72713,
          72759,
          72872,
          72967,
          72970,
          73019,
          73022,
          73062,
          73065,
          73103,
          73106,
          74863,
          92767,
          93018,
          93026,
          119893,
          119965,
          119981,
          119994,
          119996,
          120004,
          120070,
          120085,
          120093,
          120122,
          120127,
          120133,
          120145,
          121504,
          122887,
          122914,
          122917,
          126468,
          126496,
          126499,
          126504,
          126515,
          126520,
          126522,
          126536,
          126538,
          126540,
          126544,
          126547,
          126552,
          126554,
          126556,
          126558,
          126560,
          126563,
          126571,
          126579,
          126584,
          126589,
          126591,
          126602,
          126628,
          126634,
          127168,
          127184,
          129343,
          129403
        )
          .addRange(0, 31)
          .addRange(127, 159)
          .addRange(888, 889)
          .addRange(896, 899)
          .addRange(1367, 1368)
          .addRange(1419, 1420)
          .addRange(1480, 1487)
          .addRange(1515, 1518)
          .addRange(1525, 1541)
          .addRange(1564, 1565)
          .addRange(1806, 1807)
          .addRange(1867, 1868)
          .addRange(1970, 1983)
          .addRange(2043, 2044)
          .addRange(2094, 2095)
          .addRange(2140, 2141)
          .addRange(2155, 2207)
          .addRange(2238, 2258)
          .addRange(2445, 2446)
          .addRange(2449, 2450)
          .addRange(2483, 2485)
          .addRange(2490, 2491)
          .addRange(2501, 2502)
          .addRange(2505, 2506)
          .addRange(2511, 2518)
          .addRange(2520, 2523)
          .addRange(2532, 2533)
          .addRange(2559, 2560)
          .addRange(2571, 2574)
          .addRange(2577, 2578)
          .addRange(2618, 2619)
          .addRange(2627, 2630)
          .addRange(2633, 2634)
          .addRange(2638, 2640)
          .addRange(2642, 2648)
          .addRange(2655, 2661)
          .addRange(2679, 2688)
          .addRange(2746, 2747)
          .addRange(2766, 2767)
          .addRange(2769, 2783)
          .addRange(2788, 2789)
          .addRange(2802, 2808)
          .addRange(2829, 2830)
          .addRange(2833, 2834)
          .addRange(2874, 2875)
          .addRange(2885, 2886)
          .addRange(2889, 2890)
          .addRange(2894, 2901)
          .addRange(2904, 2907)
          .addRange(2916, 2917)
          .addRange(2936, 2945)
          .addRange(2955, 2957)
          .addRange(2966, 2968)
          .addRange(2976, 2978)
          .addRange(2981, 2983)
          .addRange(2987, 2989)
          .addRange(3002, 3005)
          .addRange(3011, 3013)
          .addRange(3022, 3023)
          .addRange(3025, 3030)
          .addRange(3032, 3045)
          .addRange(3067, 3071)
          .addRange(3130, 3132)
          .addRange(3150, 3156)
          .addRange(3163, 3167)
          .addRange(3172, 3173)
          .addRange(3184, 3191)
          .addRange(3258, 3259)
          .addRange(3278, 3284)
          .addRange(3287, 3293)
          .addRange(3300, 3301)
          .addRange(3315, 3327)
          .addRange(3408, 3411)
          .addRange(3428, 3429)
          .addRange(3456, 3457)
          .addRange(3479, 3481)
          .addRange(3518, 3519)
          .addRange(3527, 3529)
          .addRange(3531, 3534)
          .addRange(3552, 3557)
          .addRange(3568, 3569)
          .addRange(3573, 3584)
          .addRange(3643, 3646)
          .addRange(3676, 3712)
          .addRange(3717, 3718)
          .addRange(3723, 3724)
          .addRange(3726, 3731)
          .addRange(3752, 3753)
          .addRange(3774, 3775)
          .addRange(3790, 3791)
          .addRange(3802, 3803)
          .addRange(3808, 3839)
          .addRange(3949, 3952)
          .addRange(4059, 4095)
          .addRange(4296, 4300)
          .addRange(4302, 4303)
          .addRange(4686, 4687)
          .addRange(4702, 4703)
          .addRange(4750, 4751)
          .addRange(4790, 4791)
          .addRange(4806, 4807)
          .addRange(4886, 4887)
          .addRange(4955, 4956)
          .addRange(4989, 4991)
          .addRange(5018, 5023)
          .addRange(5110, 5111)
          .addRange(5118, 5119)
          .addRange(5789, 5791)
          .addRange(5881, 5887)
          .addRange(5909, 5919)
          .addRange(5943, 5951)
          .addRange(5972, 5983)
          .addRange(6004, 6015)
          .addRange(6110, 6111)
          .addRange(6122, 6127)
          .addRange(6138, 6143)
          .addRange(6158, 6159)
          .addRange(6170, 6175)
          .addRange(6265, 6271)
          .addRange(6315, 6319)
          .addRange(6390, 6399)
          .addRange(6444, 6447)
          .addRange(6460, 6463)
          .addRange(6465, 6467)
          .addRange(6510, 6511)
          .addRange(6517, 6527)
          .addRange(6572, 6575)
          .addRange(6602, 6607)
          .addRange(6619, 6621)
          .addRange(6684, 6685)
          .addRange(6781, 6782)
          .addRange(6794, 6799)
          .addRange(6810, 6815)
          .addRange(6830, 6831)
          .addRange(6847, 6911)
          .addRange(6988, 6991)
          .addRange(7037, 7039)
          .addRange(7156, 7163)
          .addRange(7224, 7226)
          .addRange(7242, 7244)
          .addRange(7305, 7311)
          .addRange(7355, 7356)
          .addRange(7368, 7375)
          .addRange(7418, 7423)
          .addRange(7958, 7959)
          .addRange(7966, 7967)
          .addRange(8006, 8007)
          .addRange(8014, 8015)
          .addRange(8062, 8063)
          .addRange(8148, 8149)
          .addRange(8176, 8177)
          .addRange(8203, 8207)
          .addRange(8234, 8238)
          .addRange(8288, 8303)
          .addRange(8306, 8307)
          .addRange(8349, 8351)
          .addRange(8384, 8399)
          .addRange(8433, 8447)
          .addRange(8588, 8591)
          .addRange(9255, 9279)
          .addRange(9291, 9311)
          .addRange(11124, 11125)
          .addRange(11158, 11159)
          .addRange(11508, 11512)
          .addRange(11560, 11564)
          .addRange(11566, 11567)
          .addRange(11624, 11630)
          .addRange(11633, 11646)
          .addRange(11671, 11679)
          .addRange(11855, 11903)
          .addRange(12020, 12031)
          .addRange(12246, 12271)
          .addRange(12284, 12287)
          .addRange(12439, 12440)
          .addRange(12544, 12548)
          .addRange(12731, 12735)
          .addRange(12772, 12783)
          .addRange(19894, 19903)
          .addRange(40944, 40959)
          .addRange(42125, 42127)
          .addRange(42183, 42191)
          .addRange(42540, 42559)
          .addRange(42744, 42751)
          .addRange(42938, 42998)
          .addRange(43052, 43055)
          .addRange(43066, 43071)
          .addRange(43128, 43135)
          .addRange(43206, 43213)
          .addRange(43226, 43231)
          .addRange(43348, 43358)
          .addRange(43389, 43391)
          .addRange(43482, 43485)
          .addRange(43575, 43583)
          .addRange(43598, 43599)
          .addRange(43610, 43611)
          .addRange(43715, 43738)
          .addRange(43767, 43776)
          .addRange(43783, 43784)
          .addRange(43791, 43792)
          .addRange(43799, 43807)
          .addRange(43878, 43887)
          .addRange(44014, 44015)
          .addRange(44026, 44031)
          .addRange(55204, 55215)
          .addRange(55239, 55242)
          .addRange(55292, 63743)
          .addRange(64110, 64111)
          .addRange(64218, 64255)
          .addRange(64263, 64274)
          .addRange(64280, 64284)
          .addRange(64450, 64466)
          .addRange(64832, 64847)
          .addRange(64912, 64913)
          .addRange(64968, 65007)
          .addRange(65022, 65023)
          .addRange(65050, 65055)
          .addRange(65132, 65135)
          .addRange(65277, 65280)
          .addRange(65471, 65473)
          .addRange(65480, 65481)
          .addRange(65488, 65489)
          .addRange(65496, 65497)
          .addRange(65501, 65503)
          .addRange(65519, 65531)
          .addRange(65534, 65535)
          .addRange(65614, 65615)
          .addRange(65630, 65663)
          .addRange(65787, 65791)
          .addRange(65795, 65798)
          .addRange(65844, 65846)
          .addRange(65948, 65951)
          .addRange(65953, 65999)
          .addRange(66046, 66175)
          .addRange(66205, 66207)
          .addRange(66257, 66271)
          .addRange(66300, 66303)
          .addRange(66340, 66348)
          .addRange(66379, 66383)
          .addRange(66427, 66431)
          .addRange(66500, 66503)
          .addRange(66518, 66559)
          .addRange(66718, 66719)
          .addRange(66730, 66735)
          .addRange(66772, 66775)
          .addRange(66812, 66815)
          .addRange(66856, 66863)
          .addRange(66916, 66926)
          .addRange(66928, 67071)
          .addRange(67383, 67391)
          .addRange(67414, 67423)
          .addRange(67432, 67583)
          .addRange(67590, 67591)
          .addRange(67641, 67643)
          .addRange(67645, 67646)
          .addRange(67743, 67750)
          .addRange(67760, 67807)
          .addRange(67830, 67834)
          .addRange(67868, 67870)
          .addRange(67898, 67902)
          .addRange(67904, 67967)
          .addRange(68024, 68027)
          .addRange(68048, 68049)
          .addRange(68103, 68107)
          .addRange(68150, 68151)
          .addRange(68155, 68158)
          .addRange(68169, 68175)
          .addRange(68185, 68191)
          .addRange(68256, 68287)
          .addRange(68327, 68330)
          .addRange(68343, 68351)
          .addRange(68406, 68408)
          .addRange(68438, 68439)
          .addRange(68467, 68471)
          .addRange(68498, 68504)
          .addRange(68509, 68520)
          .addRange(68528, 68607)
          .addRange(68681, 68735)
          .addRange(68787, 68799)
          .addRange(68851, 68857)
          .addRange(68904, 68911)
          .addRange(68922, 69215)
          .addRange(69247, 69375)
          .addRange(69416, 69423)
          .addRange(69466, 69631)
          .addRange(69710, 69713)
          .addRange(69744, 69758)
          .addRange(69826, 69839)
          .addRange(69865, 69871)
          .addRange(69882, 69887)
          .addRange(69959, 69967)
          .addRange(70007, 70015)
          .addRange(70094, 70095)
          .addRange(70133, 70143)
          .addRange(70207, 70271)
          .addRange(70314, 70319)
          .addRange(70379, 70383)
          .addRange(70394, 70399)
          .addRange(70413, 70414)
          .addRange(70417, 70418)
          .addRange(70469, 70470)
          .addRange(70473, 70474)
          .addRange(70478, 70479)
          .addRange(70481, 70486)
          .addRange(70488, 70492)
          .addRange(70500, 70501)
          .addRange(70509, 70511)
          .addRange(70517, 70655)
          .addRange(70751, 70783)
          .addRange(70856, 70863)
          .addRange(70874, 71039)
          .addRange(71094, 71095)
          .addRange(71134, 71167)
          .addRange(71237, 71247)
          .addRange(71258, 71263)
          .addRange(71277, 71295)
          .addRange(71352, 71359)
          .addRange(71370, 71423)
          .addRange(71451, 71452)
          .addRange(71468, 71471)
          .addRange(71488, 71679)
          .addRange(71740, 71839)
          .addRange(71923, 71934)
          .addRange(71936, 72191)
          .addRange(72264, 72271)
          .addRange(72324, 72325)
          .addRange(72355, 72383)
          .addRange(72441, 72703)
          .addRange(72774, 72783)
          .addRange(72813, 72815)
          .addRange(72848, 72849)
          .addRange(72887, 72959)
          .addRange(73015, 73017)
          .addRange(73032, 73039)
          .addRange(73050, 73055)
          .addRange(73113, 73119)
          .addRange(73130, 73439)
          .addRange(73465, 73727)
          .addRange(74650, 74751)
          .addRange(74869, 74879)
          .addRange(75076, 77823)
          .addRange(78895, 82943)
          .addRange(83527, 92159)
          .addRange(92729, 92735)
          .addRange(92778, 92781)
          .addRange(92784, 92879)
          .addRange(92910, 92911)
          .addRange(92918, 92927)
          .addRange(92998, 93007)
          .addRange(93048, 93052)
          .addRange(93072, 93759)
          .addRange(93851, 93951)
          .addRange(94021, 94031)
          .addRange(94079, 94094)
          .addRange(94112, 94175)
          .addRange(94178, 94207)
          .addRange(100338, 100351)
          .addRange(101107, 110591)
          .addRange(110879, 110959)
          .addRange(111356, 113663)
          .addRange(113771, 113775)
          .addRange(113789, 113791)
          .addRange(113801, 113807)
          .addRange(113818, 113819)
          .addRange(113824, 118783)
          .addRange(119030, 119039)
          .addRange(119079, 119080)
          .addRange(119155, 119162)
          .addRange(119273, 119295)
          .addRange(119366, 119519)
          .addRange(119540, 119551)
          .addRange(119639, 119647)
          .addRange(119673, 119807)
          .addRange(119968, 119969)
          .addRange(119971, 119972)
          .addRange(119975, 119976)
          .addRange(120075, 120076)
          .addRange(120135, 120137)
          .addRange(120486, 120487)
          .addRange(120780, 120781)
          .addRange(121484, 121498)
          .addRange(121520, 122879)
          .addRange(122905, 122906)
          .addRange(122923, 124927)
          .addRange(125125, 125126)
          .addRange(125143, 125183)
          .addRange(125259, 125263)
          .addRange(125274, 125277)
          .addRange(125280, 126064)
          .addRange(126133, 126463)
          .addRange(126501, 126502)
          .addRange(126524, 126529)
          .addRange(126531, 126534)
          .addRange(126549, 126550)
          .addRange(126565, 126566)
          .addRange(126620, 126624)
          .addRange(126652, 126703)
          .addRange(126706, 126975)
          .addRange(127020, 127023)
          .addRange(127124, 127135)
          .addRange(127151, 127152)
          .addRange(127222, 127231)
          .addRange(127245, 127247)
          .addRange(127340, 127343)
          .addRange(127405, 127461)
          .addRange(127491, 127503)
          .addRange(127548, 127551)
          .addRange(127561, 127567)
          .addRange(127570, 127583)
          .addRange(127590, 127743)
          .addRange(128725, 128735)
          .addRange(128749, 128751)
          .addRange(128762, 128767)
          .addRange(128884, 128895)
          .addRange(128985, 129023)
          .addRange(129036, 129039)
          .addRange(129096, 129103)
          .addRange(129114, 129119)
          .addRange(129160, 129167)
          .addRange(129198, 129279)
          .addRange(129292, 129295)
          .addRange(129393, 129394)
          .addRange(129399, 129401)
          .addRange(129443, 129455)
          .addRange(129466, 129471)
          .addRange(129475, 129487)
          .addRange(129536, 129631)
          .addRange(129646, 131071)
          .addRange(173783, 173823)
          .addRange(177973, 177983)
          .addRange(178206, 178207)
          .addRange(183970, 183983)
          .addRange(191457, 194559)
          .addRange(195102, 917759)
          .addRange(918e3, 1114111);
      },
      function(e, t, n) {
        e.exports = n(0)(
          170,
          186,
          443,
          660,
          1749,
          1791,
          1808,
          1969,
          2365,
          2384,
          2482,
          2493,
          2510,
          2556,
          2654,
          2749,
          2768,
          2809,
          2877,
          2929,
          2947,
          2972,
          3024,
          3133,
          3200,
          3261,
          3294,
          3389,
          3406,
          3517,
          3716,
          3722,
          3725,
          3749,
          3751,
          3773,
          3840,
          4159,
          4193,
          4238,
          4696,
          4800,
          6108,
          6314,
          12294,
          12348,
          12447,
          12543,
          42606,
          42895,
          42999,
          43259,
          43642,
          43697,
          43712,
          43714,
          43762,
          64285,
          64318,
          67592,
          67644,
          68096,
          69415,
          69956,
          70006,
          70106,
          70108,
          70280,
          70461,
          70480,
          70855,
          71236,
          71935,
          72192,
          72250,
          72272,
          72349,
          72768,
          73030,
          73112,
          94032,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(448, 451)
          .addRange(1488, 1514)
          .addRange(1519, 1522)
          .addRange(1568, 1599)
          .addRange(1601, 1610)
          .addRange(1646, 1647)
          .addRange(1649, 1747)
          .addRange(1774, 1775)
          .addRange(1786, 1788)
          .addRange(1810, 1839)
          .addRange(1869, 1957)
          .addRange(1994, 2026)
          .addRange(2048, 2069)
          .addRange(2112, 2136)
          .addRange(2144, 2154)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2308, 2361)
          .addRange(2392, 2401)
          .addRange(2418, 2432)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2524, 2525)
          .addRange(2527, 2529)
          .addRange(2544, 2545)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2649, 2652)
          .addRange(2674, 2676)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2784, 2785)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2908, 2909)
          .addRange(2911, 2913)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3077, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3160, 3162)
          .addRange(3168, 3169)
          .addRange(3205, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3296, 3297)
          .addRange(3313, 3314)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3386)
          .addRange(3412, 3414)
          .addRange(3423, 3425)
          .addRange(3450, 3455)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3585, 3632)
          .addRange(3634, 3635)
          .addRange(3648, 3653)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3760)
          .addRange(3762, 3763)
          .addRange(3776, 3780)
          .addRange(3804, 3807)
          .addRange(3904, 3911)
          .addRange(3913, 3948)
          .addRange(3976, 3980)
          .addRange(4096, 4138)
          .addRange(4176, 4181)
          .addRange(4186, 4189)
          .addRange(4197, 4198)
          .addRange(4206, 4208)
          .addRange(4213, 4225)
          .addRange(4352, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4992, 5007)
          .addRange(5121, 5740)
          .addRange(5743, 5759)
          .addRange(5761, 5786)
          .addRange(5792, 5866)
          .addRange(5873, 5880)
          .addRange(5888, 5900)
          .addRange(5902, 5905)
          .addRange(5920, 5937)
          .addRange(5952, 5969)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6016, 6067)
          .addRange(6176, 6210)
          .addRange(6212, 6264)
          .addRange(6272, 6276)
          .addRange(6279, 6312)
          .addRange(6320, 6389)
          .addRange(6400, 6430)
          .addRange(6480, 6509)
          .addRange(6512, 6516)
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6656, 6678)
          .addRange(6688, 6740)
          .addRange(6917, 6963)
          .addRange(6981, 6987)
          .addRange(7043, 7072)
          .addRange(7086, 7087)
          .addRange(7098, 7141)
          .addRange(7168, 7203)
          .addRange(7245, 7247)
          .addRange(7258, 7287)
          .addRange(7401, 7404)
          .addRange(7406, 7409)
          .addRange(7413, 7414)
          .addRange(8501, 8504)
          .addRange(11568, 11623)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(12353, 12438)
          .addRange(12449, 12538)
          .addRange(12549, 12591)
          .addRange(12593, 12686)
          .addRange(12704, 12730)
          .addRange(12784, 12799)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(40960, 40980)
          .addRange(40982, 42124)
          .addRange(42192, 42231)
          .addRange(42240, 42507)
          .addRange(42512, 42527)
          .addRange(42538, 42539)
          .addRange(42656, 42725)
          .addRange(43003, 43009)
          .addRange(43011, 43013)
          .addRange(43015, 43018)
          .addRange(43020, 43042)
          .addRange(43072, 43123)
          .addRange(43138, 43187)
          .addRange(43250, 43255)
          .addRange(43261, 43262)
          .addRange(43274, 43301)
          .addRange(43312, 43334)
          .addRange(43360, 43388)
          .addRange(43396, 43442)
          .addRange(43488, 43492)
          .addRange(43495, 43503)
          .addRange(43514, 43518)
          .addRange(43520, 43560)
          .addRange(43584, 43586)
          .addRange(43588, 43595)
          .addRange(43616, 43631)
          .addRange(43633, 43638)
          .addRange(43646, 43695)
          .addRange(43701, 43702)
          .addRange(43705, 43709)
          .addRange(43739, 43740)
          .addRange(43744, 43754)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822)
          .addRange(43968, 44002)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(64287, 64296)
          .addRange(64298, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64433)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65019)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(65382, 65391)
          .addRange(65393, 65437)
          .addRange(65440, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500)
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(66176, 66204)
          .addRange(66208, 66256)
          .addRange(66304, 66335)
          .addRange(66349, 66368)
          .addRange(66370, 66377)
          .addRange(66384, 66421)
          .addRange(66432, 66461)
          .addRange(66464, 66499)
          .addRange(66504, 66511)
          .addRange(66640, 66717)
          .addRange(66816, 66855)
          .addRange(66864, 66915)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640)
          .addRange(67647, 67669)
          .addRange(67680, 67702)
          .addRange(67712, 67742)
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67840, 67861)
          .addRange(67872, 67897)
          .addRange(67968, 68023)
          .addRange(68030, 68031)
          .addRange(68112, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68192, 68220)
          .addRange(68224, 68252)
          .addRange(68288, 68295)
          .addRange(68297, 68324)
          .addRange(68352, 68405)
          .addRange(68416, 68437)
          .addRange(68448, 68466)
          .addRange(68480, 68497)
          .addRange(68608, 68680)
          .addRange(68864, 68899)
          .addRange(69376, 69404)
          .addRange(69424, 69445)
          .addRange(69635, 69687)
          .addRange(69763, 69807)
          .addRange(69840, 69864)
          .addRange(69891, 69926)
          .addRange(69968, 70002)
          .addRange(70019, 70066)
          .addRange(70081, 70084)
          .addRange(70144, 70161)
          .addRange(70163, 70187)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70312)
          .addRange(70320, 70366)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70493, 70497)
          .addRange(70656, 70708)
          .addRange(70727, 70730)
          .addRange(70784, 70831)
          .addRange(70852, 70853)
          .addRange(71040, 71086)
          .addRange(71128, 71131)
          .addRange(71168, 71215)
          .addRange(71296, 71338)
          .addRange(71424, 71450)
          .addRange(71680, 71723)
          .addRange(72203, 72242)
          .addRange(72284, 72323)
          .addRange(72326, 72329)
          .addRange(72384, 72440)
          .addRange(72704, 72712)
          .addRange(72714, 72750)
          .addRange(72818, 72847)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73008)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73097)
          .addRange(73440, 73458)
          .addRange(73728, 74649)
          .addRange(74880, 75075)
          .addRange(77824, 78894)
          .addRange(82944, 83526)
          .addRange(92160, 92728)
          .addRange(92736, 92766)
          .addRange(92880, 92909)
          .addRange(92928, 92975)
          .addRange(93027, 93047)
          .addRange(93053, 93071)
          .addRange(93952, 94020)
          .addRange(94208, 100337)
          .addRange(100352, 101106)
          .addRange(110592, 110878)
          .addRange(110960, 111355)
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(124928, 125124)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)(185, 6618, 8304, 8585, 11517)
          .addRange(178, 179)
          .addRange(188, 190)
          .addRange(2548, 2553)
          .addRange(2930, 2935)
          .addRange(3056, 3058)
          .addRange(3192, 3198)
          .addRange(3416, 3422)
          .addRange(3440, 3448)
          .addRange(3882, 3891)
          .addRange(4969, 4988)
          .addRange(6128, 6137)
          .addRange(8308, 8313)
          .addRange(8320, 8329)
          .addRange(8528, 8543)
          .addRange(9312, 9371)
          .addRange(9450, 9471)
          .addRange(10102, 10131)
          .addRange(12690, 12693)
          .addRange(12832, 12841)
          .addRange(12872, 12879)
          .addRange(12881, 12895)
          .addRange(12928, 12937)
          .addRange(12977, 12991)
          .addRange(43056, 43061)
          .addRange(65799, 65843)
          .addRange(65909, 65912)
          .addRange(65930, 65931)
          .addRange(66273, 66299)
          .addRange(66336, 66339)
          .addRange(67672, 67679)
          .addRange(67705, 67711)
          .addRange(67751, 67759)
          .addRange(67835, 67839)
          .addRange(67862, 67867)
          .addRange(68028, 68029)
          .addRange(68032, 68047)
          .addRange(68050, 68095)
          .addRange(68160, 68168)
          .addRange(68221, 68222)
          .addRange(68253, 68255)
          .addRange(68331, 68335)
          .addRange(68440, 68447)
          .addRange(68472, 68479)
          .addRange(68521, 68527)
          .addRange(68858, 68863)
          .addRange(69216, 69246)
          .addRange(69405, 69414)
          .addRange(69457, 69460)
          .addRange(69714, 69733)
          .addRange(70113, 70132)
          .addRange(71482, 71483)
          .addRange(71914, 71922)
          .addRange(72794, 72812)
          .addRange(93019, 93025)
          .addRange(93824, 93846)
          .addRange(119520, 119539)
          .addRange(119648, 119672)
          .addRange(125127, 125135)
          .addRange(126065, 126123)
          .addRange(126125, 126127)
          .addRange(126129, 126132)
          .addRange(127232, 127244);
      },
      function(e, t, n) {
        e.exports = n(0)(
          42,
          44,
          92,
          161,
          167,
          191,
          894,
          903,
          1417,
          1472,
          1475,
          1478,
          1563,
          1748,
          2142,
          2416,
          2557,
          2678,
          2800,
          3204,
          3572,
          3663,
          3860,
          3973,
          4347,
          7379,
          8275,
          11632,
          11787,
          11803,
          11841,
          12349,
          12539,
          42611,
          42622,
          43260,
          43359,
          44011,
          65049,
          65072,
          65128,
          65290,
          65292,
          65340,
          65377,
          66463,
          66512,
          66927,
          67671,
          67871,
          67903,
          68223,
          70093,
          70107,
          70313,
          70747,
          70749,
          70854,
          71739,
          92917,
          92996,
          113823
        )
          .addRange(33, 35)
          .addRange(37, 39)
          .addRange(46, 47)
          .addRange(58, 59)
          .addRange(63, 64)
          .addRange(182, 183)
          .addRange(1370, 1375)
          .addRange(1523, 1524)
          .addRange(1545, 1546)
          .addRange(1548, 1549)
          .addRange(1566, 1567)
          .addRange(1642, 1645)
          .addRange(1792, 1805)
          .addRange(2039, 2041)
          .addRange(2096, 2110)
          .addRange(2404, 2405)
          .addRange(3674, 3675)
          .addRange(3844, 3858)
          .addRange(4048, 4052)
          .addRange(4057, 4058)
          .addRange(4170, 4175)
          .addRange(4960, 4968)
          .addRange(5741, 5742)
          .addRange(5867, 5869)
          .addRange(5941, 5942)
          .addRange(6100, 6102)
          .addRange(6104, 6106)
          .addRange(6144, 6149)
          .addRange(6151, 6154)
          .addRange(6468, 6469)
          .addRange(6686, 6687)
          .addRange(6816, 6822)
          .addRange(6824, 6829)
          .addRange(7002, 7008)
          .addRange(7164, 7167)
          .addRange(7227, 7231)
          .addRange(7294, 7295)
          .addRange(7360, 7367)
          .addRange(8214, 8215)
          .addRange(8224, 8231)
          .addRange(8240, 8248)
          .addRange(8251, 8254)
          .addRange(8257, 8259)
          .addRange(8263, 8273)
          .addRange(8277, 8286)
          .addRange(11513, 11516)
          .addRange(11518, 11519)
          .addRange(11776, 11777)
          .addRange(11782, 11784)
          .addRange(11790, 11798)
          .addRange(11800, 11801)
          .addRange(11806, 11807)
          .addRange(11818, 11822)
          .addRange(11824, 11833)
          .addRange(11836, 11839)
          .addRange(11843, 11854)
          .addRange(12289, 12291)
          .addRange(42238, 42239)
          .addRange(42509, 42511)
          .addRange(42738, 42743)
          .addRange(43124, 43127)
          .addRange(43214, 43215)
          .addRange(43256, 43258)
          .addRange(43310, 43311)
          .addRange(43457, 43469)
          .addRange(43486, 43487)
          .addRange(43612, 43615)
          .addRange(43742, 43743)
          .addRange(43760, 43761)
          .addRange(65040, 65046)
          .addRange(65093, 65094)
          .addRange(65097, 65100)
          .addRange(65104, 65106)
          .addRange(65108, 65111)
          .addRange(65119, 65121)
          .addRange(65130, 65131)
          .addRange(65281, 65283)
          .addRange(65285, 65287)
          .addRange(65294, 65295)
          .addRange(65306, 65307)
          .addRange(65311, 65312)
          .addRange(65380, 65381)
          .addRange(65792, 65794)
          .addRange(68176, 68184)
          .addRange(68336, 68342)
          .addRange(68409, 68415)
          .addRange(68505, 68508)
          .addRange(69461, 69465)
          .addRange(69703, 69709)
          .addRange(69819, 69820)
          .addRange(69822, 69825)
          .addRange(69952, 69955)
          .addRange(70004, 70005)
          .addRange(70085, 70088)
          .addRange(70109, 70111)
          .addRange(70200, 70205)
          .addRange(70731, 70735)
          .addRange(71105, 71127)
          .addRange(71233, 71235)
          .addRange(71264, 71276)
          .addRange(71484, 71486)
          .addRange(72255, 72262)
          .addRange(72346, 72348)
          .addRange(72350, 72354)
          .addRange(72769, 72773)
          .addRange(72816, 72817)
          .addRange(73463, 73464)
          .addRange(74864, 74868)
          .addRange(92782, 92783)
          .addRange(92983, 92987)
          .addRange(93847, 93850)
          .addRange(121479, 121483)
          .addRange(125278, 125279);
      },
      function(e, t, n) {
        e.exports = n(0)(
          166,
          169,
          174,
          176,
          1154,
          1758,
          1769,
          2038,
          2554,
          2928,
          3066,
          3199,
          3407,
          3449,
          3859,
          3892,
          3894,
          3896,
          6464,
          8468,
          8485,
          8487,
          8489,
          8494,
          8522,
          8527,
          8659,
          12292,
          12320,
          12880,
          43065,
          65021,
          65508,
          65512,
          65952,
          68296,
          71487,
          92997,
          113820,
          119365,
          126124,
          129402
        )
          .addRange(1421, 1422)
          .addRange(1550, 1551)
          .addRange(1789, 1790)
          .addRange(3059, 3064)
          .addRange(3841, 3843)
          .addRange(3861, 3863)
          .addRange(3866, 3871)
          .addRange(4030, 4037)
          .addRange(4039, 4044)
          .addRange(4046, 4047)
          .addRange(4053, 4056)
          .addRange(4254, 4255)
          .addRange(5008, 5017)
          .addRange(6622, 6655)
          .addRange(7009, 7018)
          .addRange(7028, 7036)
          .addRange(8448, 8449)
          .addRange(8451, 8454)
          .addRange(8456, 8457)
          .addRange(8470, 8471)
          .addRange(8478, 8483)
          .addRange(8506, 8507)
          .addRange(8524, 8525)
          .addRange(8586, 8587)
          .addRange(8597, 8601)
          .addRange(8604, 8607)
          .addRange(8609, 8610)
          .addRange(8612, 8613)
          .addRange(8615, 8621)
          .addRange(8623, 8653)
          .addRange(8656, 8657)
          .addRange(8661, 8691)
          .addRange(8960, 8967)
          .addRange(8972, 8991)
          .addRange(8994, 9e3)
          .addRange(9003, 9083)
          .addRange(9085, 9114)
          .addRange(9140, 9179)
          .addRange(9186, 9254)
          .addRange(9280, 9290)
          .addRange(9372, 9449)
          .addRange(9472, 9654)
          .addRange(9656, 9664)
          .addRange(9666, 9719)
          .addRange(9728, 9838)
          .addRange(9840, 10087)
          .addRange(10132, 10175)
          .addRange(10240, 10495)
          .addRange(11008, 11055)
          .addRange(11077, 11078)
          .addRange(11085, 11123)
          .addRange(11126, 11157)
          .addRange(11160, 11208)
          .addRange(11210, 11262)
          .addRange(11493, 11498)
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245)
          .addRange(12272, 12283)
          .addRange(12306, 12307)
          .addRange(12342, 12343)
          .addRange(12350, 12351)
          .addRange(12688, 12689)
          .addRange(12694, 12703)
          .addRange(12736, 12771)
          .addRange(12800, 12830)
          .addRange(12842, 12871)
          .addRange(12896, 12927)
          .addRange(12938, 12976)
          .addRange(12992, 13054)
          .addRange(13056, 13311)
          .addRange(19904, 19967)
          .addRange(42128, 42182)
          .addRange(43048, 43051)
          .addRange(43062, 43063)
          .addRange(43639, 43641)
          .addRange(65517, 65518)
          .addRange(65532, 65533)
          .addRange(65847, 65855)
          .addRange(65913, 65929)
          .addRange(65932, 65934)
          .addRange(65936, 65947)
          .addRange(66e3, 66044)
          .addRange(67703, 67704)
          .addRange(92988, 92991)
          .addRange(118784, 119029)
          .addRange(119040, 119078)
          .addRange(119081, 119140)
          .addRange(119146, 119148)
          .addRange(119171, 119172)
          .addRange(119180, 119209)
          .addRange(119214, 119272)
          .addRange(119296, 119361)
          .addRange(119552, 119638)
          .addRange(120832, 121343)
          .addRange(121399, 121402)
          .addRange(121453, 121460)
          .addRange(121462, 121475)
          .addRange(121477, 121478)
          .addRange(126976, 127019)
          .addRange(127024, 127123)
          .addRange(127136, 127150)
          .addRange(127153, 127167)
          .addRange(127169, 127183)
          .addRange(127185, 127221)
          .addRange(127248, 127339)
          .addRange(127344, 127404)
          .addRange(127462, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127568, 127569)
          .addRange(127584, 127589)
          .addRange(127744, 127994)
          .addRange(128e3, 128724)
          .addRange(128736, 128748)
          .addRange(128752, 128761)
          .addRange(128768, 128883)
          .addRange(128896, 128984)
          .addRange(129024, 129035)
          .addRange(129040, 129095)
          .addRange(129104, 129113)
          .addRange(129120, 129159)
          .addRange(129168, 129197)
          .addRange(129280, 129291)
          .addRange(129296, 129342)
          .addRange(129344, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535)
          .addRange(129632, 129645);
      },
      function(e, t, n) {
        e.exports = n(0)(8233);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(57344, 63743)
          .addRange(983040, 1048573)
          .addRange(1048576, 1114109);
      },
      function(e, t, n) {
        e.exports = n(0)(
          95,
          123,
          125,
          161,
          167,
          171,
          187,
          191,
          894,
          903,
          1470,
          1472,
          1475,
          1478,
          1563,
          1748,
          2142,
          2416,
          2557,
          2678,
          2800,
          3204,
          3572,
          3663,
          3860,
          3973,
          4347,
          5120,
          7379,
          11632,
          12336,
          12349,
          12448,
          12539,
          42611,
          42622,
          43260,
          43359,
          44011,
          65123,
          65128,
          65343,
          65371,
          65373,
          66463,
          66512,
          66927,
          67671,
          67871,
          67903,
          68223,
          70093,
          70107,
          70313,
          70747,
          70749,
          70854,
          71739,
          92917,
          92996,
          113823
        )
          .addRange(33, 35)
          .addRange(37, 42)
          .addRange(44, 47)
          .addRange(58, 59)
          .addRange(63, 64)
          .addRange(91, 93)
          .addRange(182, 183)
          .addRange(1370, 1375)
          .addRange(1417, 1418)
          .addRange(1523, 1524)
          .addRange(1545, 1546)
          .addRange(1548, 1549)
          .addRange(1566, 1567)
          .addRange(1642, 1645)
          .addRange(1792, 1805)
          .addRange(2039, 2041)
          .addRange(2096, 2110)
          .addRange(2404, 2405)
          .addRange(3674, 3675)
          .addRange(3844, 3858)
          .addRange(3898, 3901)
          .addRange(4048, 4052)
          .addRange(4057, 4058)
          .addRange(4170, 4175)
          .addRange(4960, 4968)
          .addRange(5741, 5742)
          .addRange(5787, 5788)
          .addRange(5867, 5869)
          .addRange(5941, 5942)
          .addRange(6100, 6102)
          .addRange(6104, 6106)
          .addRange(6144, 6154)
          .addRange(6468, 6469)
          .addRange(6686, 6687)
          .addRange(6816, 6822)
          .addRange(6824, 6829)
          .addRange(7002, 7008)
          .addRange(7164, 7167)
          .addRange(7227, 7231)
          .addRange(7294, 7295)
          .addRange(7360, 7367)
          .addRange(8208, 8231)
          .addRange(8240, 8259)
          .addRange(8261, 8273)
          .addRange(8275, 8286)
          .addRange(8317, 8318)
          .addRange(8333, 8334)
          .addRange(8968, 8971)
          .addRange(9001, 9002)
          .addRange(10088, 10101)
          .addRange(10181, 10182)
          .addRange(10214, 10223)
          .addRange(10627, 10648)
          .addRange(10712, 10715)
          .addRange(10748, 10749)
          .addRange(11513, 11516)
          .addRange(11518, 11519)
          .addRange(11776, 11822)
          .addRange(11824, 11854)
          .addRange(12289, 12291)
          .addRange(12296, 12305)
          .addRange(12308, 12319)
          .addRange(42238, 42239)
          .addRange(42509, 42511)
          .addRange(42738, 42743)
          .addRange(43124, 43127)
          .addRange(43214, 43215)
          .addRange(43256, 43258)
          .addRange(43310, 43311)
          .addRange(43457, 43469)
          .addRange(43486, 43487)
          .addRange(43612, 43615)
          .addRange(43742, 43743)
          .addRange(43760, 43761)
          .addRange(64830, 64831)
          .addRange(65040, 65049)
          .addRange(65072, 65106)
          .addRange(65108, 65121)
          .addRange(65130, 65131)
          .addRange(65281, 65283)
          .addRange(65285, 65290)
          .addRange(65292, 65295)
          .addRange(65306, 65307)
          .addRange(65311, 65312)
          .addRange(65339, 65341)
          .addRange(65375, 65381)
          .addRange(65792, 65794)
          .addRange(68176, 68184)
          .addRange(68336, 68342)
          .addRange(68409, 68415)
          .addRange(68505, 68508)
          .addRange(69461, 69465)
          .addRange(69703, 69709)
          .addRange(69819, 69820)
          .addRange(69822, 69825)
          .addRange(69952, 69955)
          .addRange(70004, 70005)
          .addRange(70085, 70088)
          .addRange(70109, 70111)
          .addRange(70200, 70205)
          .addRange(70731, 70735)
          .addRange(71105, 71127)
          .addRange(71233, 71235)
          .addRange(71264, 71276)
          .addRange(71484, 71486)
          .addRange(72255, 72262)
          .addRange(72346, 72348)
          .addRange(72350, 72354)
          .addRange(72769, 72773)
          .addRange(72816, 72817)
          .addRange(73463, 73464)
          .addRange(74864, 74868)
          .addRange(92782, 92783)
          .addRange(92983, 92987)
          .addRange(93847, 93850)
          .addRange(121479, 121483)
          .addRange(125278, 125279);
      },
      function(e, t, n) {
        e.exports = n(0)(32, 160, 5760, 8239, 8287, 12288)
          .addRange(8192, 8202)
          .addRange(8232, 8233);
      },
      function(e, t, n) {
        e.exports = n(0)(32, 160, 5760, 8239, 8287, 12288).addRange(8192, 8202);
      },
      function(e, t, n) {
        e.exports = n(0)(
          2307,
          2363,
          2519,
          2563,
          2691,
          2761,
          2878,
          2880,
          2903,
          3031,
          3262,
          3415,
          3967,
          4145,
          4152,
          4239,
          6070,
          6741,
          6743,
          6753,
          6916,
          6965,
          6971,
          7042,
          7073,
          7082,
          7143,
          7150,
          7393,
          7415,
          43047,
          43395,
          43597,
          43643,
          43645,
          43755,
          43765,
          44012,
          69632,
          69634,
          69762,
          69932,
          70018,
          70197,
          70487,
          70725,
          70841,
          70849,
          71102,
          71230,
          71340,
          71350,
          71462,
          71736,
          72249,
          72343,
          72751,
          72766,
          72873,
          72881,
          72884,
          73110
        )
          .addRange(2366, 2368)
          .addRange(2377, 2380)
          .addRange(2382, 2383)
          .addRange(2434, 2435)
          .addRange(2494, 2496)
          .addRange(2503, 2504)
          .addRange(2507, 2508)
          .addRange(2622, 2624)
          .addRange(2750, 2752)
          .addRange(2763, 2764)
          .addRange(2818, 2819)
          .addRange(2887, 2888)
          .addRange(2891, 2892)
          .addRange(3006, 3007)
          .addRange(3009, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3020)
          .addRange(3073, 3075)
          .addRange(3137, 3140)
          .addRange(3202, 3203)
          .addRange(3264, 3268)
          .addRange(3271, 3272)
          .addRange(3274, 3275)
          .addRange(3285, 3286)
          .addRange(3330, 3331)
          .addRange(3390, 3392)
          .addRange(3398, 3400)
          .addRange(3402, 3404)
          .addRange(3458, 3459)
          .addRange(3535, 3537)
          .addRange(3544, 3551)
          .addRange(3570, 3571)
          .addRange(3902, 3903)
          .addRange(4139, 4140)
          .addRange(4155, 4156)
          .addRange(4182, 4183)
          .addRange(4194, 4196)
          .addRange(4199, 4205)
          .addRange(4227, 4228)
          .addRange(4231, 4236)
          .addRange(4250, 4252)
          .addRange(6078, 6085)
          .addRange(6087, 6088)
          .addRange(6435, 6438)
          .addRange(6441, 6443)
          .addRange(6448, 6449)
          .addRange(6451, 6456)
          .addRange(6681, 6682)
          .addRange(6755, 6756)
          .addRange(6765, 6770)
          .addRange(6973, 6977)
          .addRange(6979, 6980)
          .addRange(7078, 7079)
          .addRange(7146, 7148)
          .addRange(7154, 7155)
          .addRange(7204, 7211)
          .addRange(7220, 7221)
          .addRange(7410, 7411)
          .addRange(12334, 12335)
          .addRange(43043, 43044)
          .addRange(43136, 43137)
          .addRange(43188, 43203)
          .addRange(43346, 43347)
          .addRange(43444, 43445)
          .addRange(43450, 43451)
          .addRange(43453, 43456)
          .addRange(43567, 43568)
          .addRange(43571, 43572)
          .addRange(43758, 43759)
          .addRange(44003, 44004)
          .addRange(44006, 44007)
          .addRange(44009, 44010)
          .addRange(69808, 69810)
          .addRange(69815, 69816)
          .addRange(69957, 69958)
          .addRange(70067, 70069)
          .addRange(70079, 70080)
          .addRange(70188, 70190)
          .addRange(70194, 70195)
          .addRange(70368, 70370)
          .addRange(70402, 70403)
          .addRange(70462, 70463)
          .addRange(70465, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70498, 70499)
          .addRange(70709, 70711)
          .addRange(70720, 70721)
          .addRange(70832, 70834)
          .addRange(70843, 70846)
          .addRange(71087, 71089)
          .addRange(71096, 71099)
          .addRange(71216, 71218)
          .addRange(71227, 71228)
          .addRange(71342, 71343)
          .addRange(71456, 71457)
          .addRange(71724, 71726)
          .addRange(72279, 72280)
          .addRange(73098, 73102)
          .addRange(73107, 73108)
          .addRange(73461, 73462)
          .addRange(94033, 94078)
          .addRange(119141, 119142)
          .addRange(119149, 119154);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(55296, 57343);
      },
      function(e, t, n) {
        e.exports = n(0)(
          36,
          43,
          94,
          96,
          124,
          126,
          172,
          180,
          184,
          215,
          247,
          749,
          885,
          1014,
          1154,
          1547,
          1758,
          1769,
          2038,
          2801,
          2928,
          3199,
          3407,
          3449,
          3647,
          3859,
          3892,
          3894,
          3896,
          6107,
          6464,
          8125,
          8260,
          8274,
          8468,
          8485,
          8487,
          8489,
          8494,
          8527,
          12292,
          12320,
          12880,
          43867,
          64297,
          65122,
          65129,
          65284,
          65291,
          65342,
          65344,
          65372,
          65374,
          65952,
          68296,
          71487,
          92997,
          113820,
          119365,
          120513,
          120539,
          120571,
          120597,
          120629,
          120655,
          120687,
          120713,
          120745,
          120771,
          126124,
          126128,
          129402
        )
          .addRange(60, 62)
          .addRange(162, 166)
          .addRange(168, 169)
          .addRange(174, 177)
          .addRange(706, 709)
          .addRange(722, 735)
          .addRange(741, 747)
          .addRange(751, 767)
          .addRange(900, 901)
          .addRange(1421, 1423)
          .addRange(1542, 1544)
          .addRange(1550, 1551)
          .addRange(1789, 1790)
          .addRange(2046, 2047)
          .addRange(2546, 2547)
          .addRange(2554, 2555)
          .addRange(3059, 3066)
          .addRange(3841, 3843)
          .addRange(3861, 3863)
          .addRange(3866, 3871)
          .addRange(4030, 4037)
          .addRange(4039, 4044)
          .addRange(4046, 4047)
          .addRange(4053, 4056)
          .addRange(4254, 4255)
          .addRange(5008, 5017)
          .addRange(6622, 6655)
          .addRange(7009, 7018)
          .addRange(7028, 7036)
          .addRange(8127, 8129)
          .addRange(8141, 8143)
          .addRange(8157, 8159)
          .addRange(8173, 8175)
          .addRange(8189, 8190)
          .addRange(8314, 8316)
          .addRange(8330, 8332)
          .addRange(8352, 8383)
          .addRange(8448, 8449)
          .addRange(8451, 8454)
          .addRange(8456, 8457)
          .addRange(8470, 8472)
          .addRange(8478, 8483)
          .addRange(8506, 8507)
          .addRange(8512, 8516)
          .addRange(8522, 8525)
          .addRange(8586, 8587)
          .addRange(8592, 8967)
          .addRange(8972, 9e3)
          .addRange(9003, 9254)
          .addRange(9280, 9290)
          .addRange(9372, 9449)
          .addRange(9472, 10087)
          .addRange(10132, 10180)
          .addRange(10183, 10213)
          .addRange(10224, 10626)
          .addRange(10649, 10711)
          .addRange(10716, 10747)
          .addRange(10750, 11123)
          .addRange(11126, 11157)
          .addRange(11160, 11208)
          .addRange(11210, 11262)
          .addRange(11493, 11498)
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245)
          .addRange(12272, 12283)
          .addRange(12306, 12307)
          .addRange(12342, 12343)
          .addRange(12350, 12351)
          .addRange(12443, 12444)
          .addRange(12688, 12689)
          .addRange(12694, 12703)
          .addRange(12736, 12771)
          .addRange(12800, 12830)
          .addRange(12842, 12871)
          .addRange(12896, 12927)
          .addRange(12938, 12976)
          .addRange(12992, 13054)
          .addRange(13056, 13311)
          .addRange(19904, 19967)
          .addRange(42128, 42182)
          .addRange(42752, 42774)
          .addRange(42784, 42785)
          .addRange(42889, 42890)
          .addRange(43048, 43051)
          .addRange(43062, 43065)
          .addRange(43639, 43641)
          .addRange(64434, 64449)
          .addRange(65020, 65021)
          .addRange(65124, 65126)
          .addRange(65308, 65310)
          .addRange(65504, 65510)
          .addRange(65512, 65518)
          .addRange(65532, 65533)
          .addRange(65847, 65855)
          .addRange(65913, 65929)
          .addRange(65932, 65934)
          .addRange(65936, 65947)
          .addRange(66e3, 66044)
          .addRange(67703, 67704)
          .addRange(92988, 92991)
          .addRange(118784, 119029)
          .addRange(119040, 119078)
          .addRange(119081, 119140)
          .addRange(119146, 119148)
          .addRange(119171, 119172)
          .addRange(119180, 119209)
          .addRange(119214, 119272)
          .addRange(119296, 119361)
          .addRange(119552, 119638)
          .addRange(120832, 121343)
          .addRange(121399, 121402)
          .addRange(121453, 121460)
          .addRange(121462, 121475)
          .addRange(121477, 121478)
          .addRange(126704, 126705)
          .addRange(126976, 127019)
          .addRange(127024, 127123)
          .addRange(127136, 127150)
          .addRange(127153, 127167)
          .addRange(127169, 127183)
          .addRange(127185, 127221)
          .addRange(127248, 127339)
          .addRange(127344, 127404)
          .addRange(127462, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127568, 127569)
          .addRange(127584, 127589)
          .addRange(127744, 128724)
          .addRange(128736, 128748)
          .addRange(128752, 128761)
          .addRange(128768, 128883)
          .addRange(128896, 128984)
          .addRange(129024, 129035)
          .addRange(129040, 129095)
          .addRange(129104, 129113)
          .addRange(129120, 129159)
          .addRange(129168, 129197)
          .addRange(129280, 129291)
          .addRange(129296, 129342)
          .addRange(129344, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535)
          .addRange(129632, 129645);
      },
      function(e, t, n) {
        e.exports = n(0)(453, 456, 459, 498, 8124, 8140, 8188)
          .addRange(8072, 8079)
          .addRange(8088, 8095)
          .addRange(8104, 8111);
      },
      function(e, t, n) {
        e.exports = n(0)(
          907,
          909,
          930,
          1328,
          1424,
          1565,
          1806,
          2111,
          2143,
          2229,
          2436,
          2473,
          2481,
          2526,
          2564,
          2601,
          2609,
          2612,
          2615,
          2621,
          2653,
          2692,
          2702,
          2706,
          2729,
          2737,
          2740,
          2758,
          2762,
          2816,
          2820,
          2857,
          2865,
          2868,
          2910,
          2948,
          2961,
          2971,
          2973,
          3017,
          3085,
          3089,
          3113,
          3141,
          3145,
          3159,
          3213,
          3217,
          3241,
          3252,
          3269,
          3273,
          3295,
          3312,
          3332,
          3341,
          3345,
          3397,
          3401,
          3460,
          3506,
          3516,
          3541,
          3543,
          3715,
          3721,
          3736,
          3744,
          3748,
          3750,
          3756,
          3770,
          3781,
          3783,
          3912,
          3992,
          4029,
          4045,
          4294,
          4681,
          4695,
          4697,
          4745,
          4785,
          4799,
          4801,
          4823,
          4881,
          5901,
          5997,
          6001,
          6159,
          6431,
          6751,
          7674,
          8024,
          8026,
          8028,
          8030,
          8117,
          8133,
          8156,
          8181,
          8191,
          8293,
          8335,
          11209,
          11263,
          11311,
          11359,
          11558,
          11687,
          11695,
          11703,
          11711,
          11719,
          11727,
          11735,
          11743,
          11930,
          12352,
          12592,
          12687,
          12831,
          13055,
          43470,
          43519,
          43815,
          43823,
          64311,
          64317,
          64319,
          64322,
          64325,
          65107,
          65127,
          65141,
          65280,
          65511,
          65548,
          65575,
          65595,
          65598,
          65935,
          66462,
          67593,
          67638,
          67670,
          67827,
          68100,
          68116,
          68120,
          69941,
          70112,
          70162,
          70279,
          70281,
          70286,
          70302,
          70404,
          70441,
          70449,
          70452,
          70458,
          70746,
          70748,
          72713,
          72759,
          72872,
          72967,
          72970,
          73019,
          73022,
          73062,
          73065,
          73103,
          73106,
          74863,
          92767,
          93018,
          93026,
          119893,
          119965,
          119981,
          119994,
          119996,
          120004,
          120070,
          120085,
          120093,
          120122,
          120127,
          120133,
          120145,
          121504,
          122887,
          122914,
          122917,
          126468,
          126496,
          126499,
          126504,
          126515,
          126520,
          126522,
          126536,
          126538,
          126540,
          126544,
          126547,
          126552,
          126554,
          126556,
          126558,
          126560,
          126563,
          126571,
          126579,
          126584,
          126589,
          126591,
          126602,
          126628,
          126634,
          127168,
          127184,
          129343,
          129403
        )
          .addRange(888, 889)
          .addRange(896, 899)
          .addRange(1367, 1368)
          .addRange(1419, 1420)
          .addRange(1480, 1487)
          .addRange(1515, 1518)
          .addRange(1525, 1535)
          .addRange(1867, 1868)
          .addRange(1970, 1983)
          .addRange(2043, 2044)
          .addRange(2094, 2095)
          .addRange(2140, 2141)
          .addRange(2155, 2207)
          .addRange(2238, 2258)
          .addRange(2445, 2446)
          .addRange(2449, 2450)
          .addRange(2483, 2485)
          .addRange(2490, 2491)
          .addRange(2501, 2502)
          .addRange(2505, 2506)
          .addRange(2511, 2518)
          .addRange(2520, 2523)
          .addRange(2532, 2533)
          .addRange(2559, 2560)
          .addRange(2571, 2574)
          .addRange(2577, 2578)
          .addRange(2618, 2619)
          .addRange(2627, 2630)
          .addRange(2633, 2634)
          .addRange(2638, 2640)
          .addRange(2642, 2648)
          .addRange(2655, 2661)
          .addRange(2679, 2688)
          .addRange(2746, 2747)
          .addRange(2766, 2767)
          .addRange(2769, 2783)
          .addRange(2788, 2789)
          .addRange(2802, 2808)
          .addRange(2829, 2830)
          .addRange(2833, 2834)
          .addRange(2874, 2875)
          .addRange(2885, 2886)
          .addRange(2889, 2890)
          .addRange(2894, 2901)
          .addRange(2904, 2907)
          .addRange(2916, 2917)
          .addRange(2936, 2945)
          .addRange(2955, 2957)
          .addRange(2966, 2968)
          .addRange(2976, 2978)
          .addRange(2981, 2983)
          .addRange(2987, 2989)
          .addRange(3002, 3005)
          .addRange(3011, 3013)
          .addRange(3022, 3023)
          .addRange(3025, 3030)
          .addRange(3032, 3045)
          .addRange(3067, 3071)
          .addRange(3130, 3132)
          .addRange(3150, 3156)
          .addRange(3163, 3167)
          .addRange(3172, 3173)
          .addRange(3184, 3191)
          .addRange(3258, 3259)
          .addRange(3278, 3284)
          .addRange(3287, 3293)
          .addRange(3300, 3301)
          .addRange(3315, 3327)
          .addRange(3408, 3411)
          .addRange(3428, 3429)
          .addRange(3456, 3457)
          .addRange(3479, 3481)
          .addRange(3518, 3519)
          .addRange(3527, 3529)
          .addRange(3531, 3534)
          .addRange(3552, 3557)
          .addRange(3568, 3569)
          .addRange(3573, 3584)
          .addRange(3643, 3646)
          .addRange(3676, 3712)
          .addRange(3717, 3718)
          .addRange(3723, 3724)
          .addRange(3726, 3731)
          .addRange(3752, 3753)
          .addRange(3774, 3775)
          .addRange(3790, 3791)
          .addRange(3802, 3803)
          .addRange(3808, 3839)
          .addRange(3949, 3952)
          .addRange(4059, 4095)
          .addRange(4296, 4300)
          .addRange(4302, 4303)
          .addRange(4686, 4687)
          .addRange(4702, 4703)
          .addRange(4750, 4751)
          .addRange(4790, 4791)
          .addRange(4806, 4807)
          .addRange(4886, 4887)
          .addRange(4955, 4956)
          .addRange(4989, 4991)
          .addRange(5018, 5023)
          .addRange(5110, 5111)
          .addRange(5118, 5119)
          .addRange(5789, 5791)
          .addRange(5881, 5887)
          .addRange(5909, 5919)
          .addRange(5943, 5951)
          .addRange(5972, 5983)
          .addRange(6004, 6015)
          .addRange(6110, 6111)
          .addRange(6122, 6127)
          .addRange(6138, 6143)
          .addRange(6170, 6175)
          .addRange(6265, 6271)
          .addRange(6315, 6319)
          .addRange(6390, 6399)
          .addRange(6444, 6447)
          .addRange(6460, 6463)
          .addRange(6465, 6467)
          .addRange(6510, 6511)
          .addRange(6517, 6527)
          .addRange(6572, 6575)
          .addRange(6602, 6607)
          .addRange(6619, 6621)
          .addRange(6684, 6685)
          .addRange(6781, 6782)
          .addRange(6794, 6799)
          .addRange(6810, 6815)
          .addRange(6830, 6831)
          .addRange(6847, 6911)
          .addRange(6988, 6991)
          .addRange(7037, 7039)
          .addRange(7156, 7163)
          .addRange(7224, 7226)
          .addRange(7242, 7244)
          .addRange(7305, 7311)
          .addRange(7355, 7356)
          .addRange(7368, 7375)
          .addRange(7418, 7423)
          .addRange(7958, 7959)
          .addRange(7966, 7967)
          .addRange(8006, 8007)
          .addRange(8014, 8015)
          .addRange(8062, 8063)
          .addRange(8148, 8149)
          .addRange(8176, 8177)
          .addRange(8306, 8307)
          .addRange(8349, 8351)
          .addRange(8384, 8399)
          .addRange(8433, 8447)
          .addRange(8588, 8591)
          .addRange(9255, 9279)
          .addRange(9291, 9311)
          .addRange(11124, 11125)
          .addRange(11158, 11159)
          .addRange(11508, 11512)
          .addRange(11560, 11564)
          .addRange(11566, 11567)
          .addRange(11624, 11630)
          .addRange(11633, 11646)
          .addRange(11671, 11679)
          .addRange(11855, 11903)
          .addRange(12020, 12031)
          .addRange(12246, 12271)
          .addRange(12284, 12287)
          .addRange(12439, 12440)
          .addRange(12544, 12548)
          .addRange(12731, 12735)
          .addRange(12772, 12783)
          .addRange(19894, 19903)
          .addRange(40944, 40959)
          .addRange(42125, 42127)
          .addRange(42183, 42191)
          .addRange(42540, 42559)
          .addRange(42744, 42751)
          .addRange(42938, 42998)
          .addRange(43052, 43055)
          .addRange(43066, 43071)
          .addRange(43128, 43135)
          .addRange(43206, 43213)
          .addRange(43226, 43231)
          .addRange(43348, 43358)
          .addRange(43389, 43391)
          .addRange(43482, 43485)
          .addRange(43575, 43583)
          .addRange(43598, 43599)
          .addRange(43610, 43611)
          .addRange(43715, 43738)
          .addRange(43767, 43776)
          .addRange(43783, 43784)
          .addRange(43791, 43792)
          .addRange(43799, 43807)
          .addRange(43878, 43887)
          .addRange(44014, 44015)
          .addRange(44026, 44031)
          .addRange(55204, 55215)
          .addRange(55239, 55242)
          .addRange(55292, 55295)
          .addRange(64110, 64111)
          .addRange(64218, 64255)
          .addRange(64263, 64274)
          .addRange(64280, 64284)
          .addRange(64450, 64466)
          .addRange(64832, 64847)
          .addRange(64912, 64913)
          .addRange(64968, 65007)
          .addRange(65022, 65023)
          .addRange(65050, 65055)
          .addRange(65132, 65135)
          .addRange(65277, 65278)
          .addRange(65471, 65473)
          .addRange(65480, 65481)
          .addRange(65488, 65489)
          .addRange(65496, 65497)
          .addRange(65501, 65503)
          .addRange(65519, 65528)
          .addRange(65534, 65535)
          .addRange(65614, 65615)
          .addRange(65630, 65663)
          .addRange(65787, 65791)
          .addRange(65795, 65798)
          .addRange(65844, 65846)
          .addRange(65948, 65951)
          .addRange(65953, 65999)
          .addRange(66046, 66175)
          .addRange(66205, 66207)
          .addRange(66257, 66271)
          .addRange(66300, 66303)
          .addRange(66340, 66348)
          .addRange(66379, 66383)
          .addRange(66427, 66431)
          .addRange(66500, 66503)
          .addRange(66518, 66559)
          .addRange(66718, 66719)
          .addRange(66730, 66735)
          .addRange(66772, 66775)
          .addRange(66812, 66815)
          .addRange(66856, 66863)
          .addRange(66916, 66926)
          .addRange(66928, 67071)
          .addRange(67383, 67391)
          .addRange(67414, 67423)
          .addRange(67432, 67583)
          .addRange(67590, 67591)
          .addRange(67641, 67643)
          .addRange(67645, 67646)
          .addRange(67743, 67750)
          .addRange(67760, 67807)
          .addRange(67830, 67834)
          .addRange(67868, 67870)
          .addRange(67898, 67902)
          .addRange(67904, 67967)
          .addRange(68024, 68027)
          .addRange(68048, 68049)
          .addRange(68103, 68107)
          .addRange(68150, 68151)
          .addRange(68155, 68158)
          .addRange(68169, 68175)
          .addRange(68185, 68191)
          .addRange(68256, 68287)
          .addRange(68327, 68330)
          .addRange(68343, 68351)
          .addRange(68406, 68408)
          .addRange(68438, 68439)
          .addRange(68467, 68471)
          .addRange(68498, 68504)
          .addRange(68509, 68520)
          .addRange(68528, 68607)
          .addRange(68681, 68735)
          .addRange(68787, 68799)
          .addRange(68851, 68857)
          .addRange(68904, 68911)
          .addRange(68922, 69215)
          .addRange(69247, 69375)
          .addRange(69416, 69423)
          .addRange(69466, 69631)
          .addRange(69710, 69713)
          .addRange(69744, 69758)
          .addRange(69826, 69836)
          .addRange(69838, 69839)
          .addRange(69865, 69871)
          .addRange(69882, 69887)
          .addRange(69959, 69967)
          .addRange(70007, 70015)
          .addRange(70094, 70095)
          .addRange(70133, 70143)
          .addRange(70207, 70271)
          .addRange(70314, 70319)
          .addRange(70379, 70383)
          .addRange(70394, 70399)
          .addRange(70413, 70414)
          .addRange(70417, 70418)
          .addRange(70469, 70470)
          .addRange(70473, 70474)
          .addRange(70478, 70479)
          .addRange(70481, 70486)
          .addRange(70488, 70492)
          .addRange(70500, 70501)
          .addRange(70509, 70511)
          .addRange(70517, 70655)
          .addRange(70751, 70783)
          .addRange(70856, 70863)
          .addRange(70874, 71039)
          .addRange(71094, 71095)
          .addRange(71134, 71167)
          .addRange(71237, 71247)
          .addRange(71258, 71263)
          .addRange(71277, 71295)
          .addRange(71352, 71359)
          .addRange(71370, 71423)
          .addRange(71451, 71452)
          .addRange(71468, 71471)
          .addRange(71488, 71679)
          .addRange(71740, 71839)
          .addRange(71923, 71934)
          .addRange(71936, 72191)
          .addRange(72264, 72271)
          .addRange(72324, 72325)
          .addRange(72355, 72383)
          .addRange(72441, 72703)
          .addRange(72774, 72783)
          .addRange(72813, 72815)
          .addRange(72848, 72849)
          .addRange(72887, 72959)
          .addRange(73015, 73017)
          .addRange(73032, 73039)
          .addRange(73050, 73055)
          .addRange(73113, 73119)
          .addRange(73130, 73439)
          .addRange(73465, 73727)
          .addRange(74650, 74751)
          .addRange(74869, 74879)
          .addRange(75076, 77823)
          .addRange(78895, 82943)
          .addRange(83527, 92159)
          .addRange(92729, 92735)
          .addRange(92778, 92781)
          .addRange(92784, 92879)
          .addRange(92910, 92911)
          .addRange(92918, 92927)
          .addRange(92998, 93007)
          .addRange(93048, 93052)
          .addRange(93072, 93759)
          .addRange(93851, 93951)
          .addRange(94021, 94031)
          .addRange(94079, 94094)
          .addRange(94112, 94175)
          .addRange(94178, 94207)
          .addRange(100338, 100351)
          .addRange(101107, 110591)
          .addRange(110879, 110959)
          .addRange(111356, 113663)
          .addRange(113771, 113775)
          .addRange(113789, 113791)
          .addRange(113801, 113807)
          .addRange(113818, 113819)
          .addRange(113828, 118783)
          .addRange(119030, 119039)
          .addRange(119079, 119080)
          .addRange(119273, 119295)
          .addRange(119366, 119519)
          .addRange(119540, 119551)
          .addRange(119639, 119647)
          .addRange(119673, 119807)
          .addRange(119968, 119969)
          .addRange(119971, 119972)
          .addRange(119975, 119976)
          .addRange(120075, 120076)
          .addRange(120135, 120137)
          .addRange(120486, 120487)
          .addRange(120780, 120781)
          .addRange(121484, 121498)
          .addRange(121520, 122879)
          .addRange(122905, 122906)
          .addRange(122923, 124927)
          .addRange(125125, 125126)
          .addRange(125143, 125183)
          .addRange(125259, 125263)
          .addRange(125274, 125277)
          .addRange(125280, 126064)
          .addRange(126133, 126463)
          .addRange(126501, 126502)
          .addRange(126524, 126529)
          .addRange(126531, 126534)
          .addRange(126549, 126550)
          .addRange(126565, 126566)
          .addRange(126620, 126624)
          .addRange(126652, 126703)
          .addRange(126706, 126975)
          .addRange(127020, 127023)
          .addRange(127124, 127135)
          .addRange(127151, 127152)
          .addRange(127222, 127231)
          .addRange(127245, 127247)
          .addRange(127340, 127343)
          .addRange(127405, 127461)
          .addRange(127491, 127503)
          .addRange(127548, 127551)
          .addRange(127561, 127567)
          .addRange(127570, 127583)
          .addRange(127590, 127743)
          .addRange(128725, 128735)
          .addRange(128749, 128751)
          .addRange(128762, 128767)
          .addRange(128884, 128895)
          .addRange(128985, 129023)
          .addRange(129036, 129039)
          .addRange(129096, 129103)
          .addRange(129114, 129119)
          .addRange(129160, 129167)
          .addRange(129198, 129279)
          .addRange(129292, 129295)
          .addRange(129393, 129394)
          .addRange(129399, 129401)
          .addRange(129443, 129455)
          .addRange(129466, 129471)
          .addRange(129475, 129487)
          .addRange(129536, 129631)
          .addRange(129646, 131071)
          .addRange(173783, 173823)
          .addRange(177973, 177983)
          .addRange(178206, 178207)
          .addRange(183970, 183983)
          .addRange(191457, 194559)
          .addRange(195102, 917504)
          .addRange(917506, 917535)
          .addRange(917632, 917759)
          .addRange(918e3, 983039)
          .addRange(1048574, 1048575)
          .addRange(1114110, 1114111);
      },
      function(e, t, n) {
        e.exports = n(0)(
          256,
          258,
          260,
          262,
          264,
          266,
          268,
          270,
          272,
          274,
          276,
          278,
          280,
          282,
          284,
          286,
          288,
          290,
          292,
          294,
          296,
          298,
          300,
          302,
          304,
          306,
          308,
          310,
          313,
          315,
          317,
          319,
          321,
          323,
          325,
          327,
          330,
          332,
          334,
          336,
          338,
          340,
          342,
          344,
          346,
          348,
          350,
          352,
          354,
          356,
          358,
          360,
          362,
          364,
          366,
          368,
          370,
          372,
          374,
          379,
          381,
          388,
          418,
          420,
          425,
          428,
          437,
          444,
          452,
          455,
          458,
          461,
          463,
          465,
          467,
          469,
          471,
          473,
          475,
          478,
          480,
          482,
          484,
          486,
          488,
          490,
          492,
          494,
          497,
          500,
          506,
          508,
          510,
          512,
          514,
          516,
          518,
          520,
          522,
          524,
          526,
          528,
          530,
          532,
          534,
          536,
          538,
          540,
          542,
          544,
          546,
          548,
          550,
          552,
          554,
          556,
          558,
          560,
          562,
          577,
          584,
          586,
          588,
          590,
          880,
          882,
          886,
          895,
          902,
          908,
          975,
          984,
          986,
          988,
          990,
          992,
          994,
          996,
          998,
          1e3,
          1002,
          1004,
          1006,
          1012,
          1015,
          1120,
          1122,
          1124,
          1126,
          1128,
          1130,
          1132,
          1134,
          1136,
          1138,
          1140,
          1142,
          1144,
          1146,
          1148,
          1150,
          1152,
          1162,
          1164,
          1166,
          1168,
          1170,
          1172,
          1174,
          1176,
          1178,
          1180,
          1182,
          1184,
          1186,
          1188,
          1190,
          1192,
          1194,
          1196,
          1198,
          1200,
          1202,
          1204,
          1206,
          1208,
          1210,
          1212,
          1214,
          1219,
          1221,
          1223,
          1225,
          1227,
          1229,
          1232,
          1234,
          1236,
          1238,
          1240,
          1242,
          1244,
          1246,
          1248,
          1250,
          1252,
          1254,
          1256,
          1258,
          1260,
          1262,
          1264,
          1266,
          1268,
          1270,
          1272,
          1274,
          1276,
          1278,
          1280,
          1282,
          1284,
          1286,
          1288,
          1290,
          1292,
          1294,
          1296,
          1298,
          1300,
          1302,
          1304,
          1306,
          1308,
          1310,
          1312,
          1314,
          1316,
          1318,
          1320,
          1322,
          1324,
          1326,
          4295,
          4301,
          7680,
          7682,
          7684,
          7686,
          7688,
          7690,
          7692,
          7694,
          7696,
          7698,
          7700,
          7702,
          7704,
          7706,
          7708,
          7710,
          7712,
          7714,
          7716,
          7718,
          7720,
          7722,
          7724,
          7726,
          7728,
          7730,
          7732,
          7734,
          7736,
          7738,
          7740,
          7742,
          7744,
          7746,
          7748,
          7750,
          7752,
          7754,
          7756,
          7758,
          7760,
          7762,
          7764,
          7766,
          7768,
          7770,
          7772,
          7774,
          7776,
          7778,
          7780,
          7782,
          7784,
          7786,
          7788,
          7790,
          7792,
          7794,
          7796,
          7798,
          7800,
          7802,
          7804,
          7806,
          7808,
          7810,
          7812,
          7814,
          7816,
          7818,
          7820,
          7822,
          7824,
          7826,
          7828,
          7838,
          7840,
          7842,
          7844,
          7846,
          7848,
          7850,
          7852,
          7854,
          7856,
          7858,
          7860,
          7862,
          7864,
          7866,
          7868,
          7870,
          7872,
          7874,
          7876,
          7878,
          7880,
          7882,
          7884,
          7886,
          7888,
          7890,
          7892,
          7894,
          7896,
          7898,
          7900,
          7902,
          7904,
          7906,
          7908,
          7910,
          7912,
          7914,
          7916,
          7918,
          7920,
          7922,
          7924,
          7926,
          7928,
          7930,
          7932,
          7934,
          8025,
          8027,
          8029,
          8031,
          8450,
          8455,
          8469,
          8484,
          8486,
          8488,
          8517,
          8579,
          11360,
          11367,
          11369,
          11371,
          11378,
          11381,
          11394,
          11396,
          11398,
          11400,
          11402,
          11404,
          11406,
          11408,
          11410,
          11412,
          11414,
          11416,
          11418,
          11420,
          11422,
          11424,
          11426,
          11428,
          11430,
          11432,
          11434,
          11436,
          11438,
          11440,
          11442,
          11444,
          11446,
          11448,
          11450,
          11452,
          11454,
          11456,
          11458,
          11460,
          11462,
          11464,
          11466,
          11468,
          11470,
          11472,
          11474,
          11476,
          11478,
          11480,
          11482,
          11484,
          11486,
          11488,
          11490,
          11499,
          11501,
          11506,
          42560,
          42562,
          42564,
          42566,
          42568,
          42570,
          42572,
          42574,
          42576,
          42578,
          42580,
          42582,
          42584,
          42586,
          42588,
          42590,
          42592,
          42594,
          42596,
          42598,
          42600,
          42602,
          42604,
          42624,
          42626,
          42628,
          42630,
          42632,
          42634,
          42636,
          42638,
          42640,
          42642,
          42644,
          42646,
          42648,
          42650,
          42786,
          42788,
          42790,
          42792,
          42794,
          42796,
          42798,
          42802,
          42804,
          42806,
          42808,
          42810,
          42812,
          42814,
          42816,
          42818,
          42820,
          42822,
          42824,
          42826,
          42828,
          42830,
          42832,
          42834,
          42836,
          42838,
          42840,
          42842,
          42844,
          42846,
          42848,
          42850,
          42852,
          42854,
          42856,
          42858,
          42860,
          42862,
          42873,
          42875,
          42880,
          42882,
          42884,
          42886,
          42891,
          42893,
          42896,
          42898,
          42902,
          42904,
          42906,
          42908,
          42910,
          42912,
          42914,
          42916,
          42918,
          42920,
          42934,
          42936,
          119964,
          119970,
          120134,
          120778
        )
          .addRange(65, 90)
          .addRange(192, 214)
          .addRange(216, 222)
          .addRange(376, 377)
          .addRange(385, 386)
          .addRange(390, 391)
          .addRange(393, 395)
          .addRange(398, 401)
          .addRange(403, 404)
          .addRange(406, 408)
          .addRange(412, 413)
          .addRange(415, 416)
          .addRange(422, 423)
          .addRange(430, 431)
          .addRange(433, 435)
          .addRange(439, 440)
          .addRange(502, 504)
          .addRange(570, 571)
          .addRange(573, 574)
          .addRange(579, 582)
          .addRange(904, 906)
          .addRange(910, 911)
          .addRange(913, 929)
          .addRange(931, 939)
          .addRange(978, 980)
          .addRange(1017, 1018)
          .addRange(1021, 1071)
          .addRange(1216, 1217)
          .addRange(1329, 1366)
          .addRange(4256, 4293)
          .addRange(5024, 5109)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(7944, 7951)
          .addRange(7960, 7965)
          .addRange(7976, 7983)
          .addRange(7992, 7999)
          .addRange(8008, 8013)
          .addRange(8040, 8047)
          .addRange(8120, 8123)
          .addRange(8136, 8139)
          .addRange(8152, 8155)
          .addRange(8168, 8172)
          .addRange(8184, 8187)
          .addRange(8459, 8461)
          .addRange(8464, 8466)
          .addRange(8473, 8477)
          .addRange(8490, 8493)
          .addRange(8496, 8499)
          .addRange(8510, 8511)
          .addRange(11264, 11310)
          .addRange(11362, 11364)
          .addRange(11373, 11376)
          .addRange(11390, 11392)
          .addRange(42877, 42878)
          .addRange(42922, 42926)
          .addRange(42928, 42932)
          .addRange(65313, 65338)
          .addRange(66560, 66599)
          .addRange(66736, 66771)
          .addRange(68736, 68786)
          .addRange(71840, 71871)
          .addRange(93760, 93791)
          .addRange(119808, 119833)
          .addRange(119860, 119885)
          .addRange(119912, 119937)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119989)
          .addRange(120016, 120041)
          .addRange(120068, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120120, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120172, 120197)
          .addRange(120224, 120249)
          .addRange(120276, 120301)
          .addRange(120328, 120353)
          .addRange(120380, 120405)
          .addRange(120432, 120457)
          .addRange(120488, 120512)
          .addRange(120546, 120570)
          .addRange(120604, 120628)
          .addRange(120662, 120686)
          .addRange(120720, 120744)
          .addRange(125184, 125217);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(125184, 125258)
          .addRange(125264, 125273)
          .addRange(125278, 125279);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(71424, 71450)
          .addRange(71453, 71467)
          .addRange(71472, 71487);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(82944, 83526);
      },
      function(e, t, n) {
        e.exports = n(0)(
          1564,
          1566,
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(1536, 1540)
          .addRange(1542, 1547)
          .addRange(1549, 1562)
          .addRange(1568, 1599)
          .addRange(1601, 1610)
          .addRange(1622, 1647)
          .addRange(1649, 1756)
          .addRange(1758, 1791)
          .addRange(1872, 1919)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2259, 2273)
          .addRange(2275, 2303)
          .addRange(64336, 64449)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65021)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(69216, 69246)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(126704, 126705);
      },
      function(e, t, n) {
        e.exports = n(0)(1418)
          .addRange(1329, 1366)
          .addRange(1369, 1416)
          .addRange(1421, 1423)
          .addRange(64275, 64279);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68352, 68405)
          .addRange(68409, 68415);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6912, 6987)
          .addRange(6992, 7036);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(42656, 42743)
          .addRange(92160, 92728);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(92880, 92909)
          .addRange(92912, 92917);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(7104, 7155)
          .addRange(7164, 7167);
      },
      function(e, t, n) {
        e.exports = n(0)(2482, 2519)
          .addRange(2432, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2492, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2510)
          .addRange(2524, 2525)
          .addRange(2527, 2531)
          .addRange(2534, 2558);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(72704, 72712)
          .addRange(72714, 72758)
          .addRange(72760, 72773)
          .addRange(72784, 72812);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(746, 747)
          .addRange(12549, 12591)
          .addRange(12704, 12730);
      },
      function(e, t, n) {
        e.exports = n(0)(69759)
          .addRange(69632, 69709)
          .addRange(69714, 69743);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(10240, 10495);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6656, 6683)
          .addRange(6686, 6687);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(5952, 5971);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5120, 5759)
          .addRange(6320, 6389);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66208, 66256);
      },
      function(e, t, n) {
        e.exports = n(0)(66927).addRange(66864, 66915);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(69888, 69940)
          .addRange(69942, 69958);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43520, 43574)
          .addRange(43584, 43597)
          .addRange(43600, 43609)
          .addRange(43612, 43615);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(43888, 43967);
      },
      function(e, t, n) {
        e.exports = n(0)(
          215,
          247,
          884,
          894,
          901,
          903,
          1417,
          1541,
          1548,
          1563,
          1567,
          1600,
          1757,
          2274,
          3647,
          4347,
          6149,
          7379,
          7393,
          12294,
          12448,
          43310,
          43471,
          43867,
          65279,
          65392,
          119970,
          119995,
          120134,
          129402,
          917505
        )
          .addRange(0, 64)
          .addRange(91, 96)
          .addRange(123, 169)
          .addRange(171, 185)
          .addRange(187, 191)
          .addRange(697, 735)
          .addRange(741, 745)
          .addRange(748, 767)
          .addRange(2404, 2405)
          .addRange(4053, 4056)
          .addRange(5867, 5869)
          .addRange(5941, 5942)
          .addRange(6146, 6147)
          .addRange(7401, 7404)
          .addRange(7406, 7411)
          .addRange(7413, 7415)
          .addRange(8192, 8203)
          .addRange(8206, 8292)
          .addRange(8294, 8304)
          .addRange(8308, 8318)
          .addRange(8320, 8334)
          .addRange(8352, 8383)
          .addRange(8448, 8485)
          .addRange(8487, 8489)
          .addRange(8492, 8497)
          .addRange(8499, 8525)
          .addRange(8527, 8543)
          .addRange(8585, 8587)
          .addRange(8592, 9254)
          .addRange(9280, 9290)
          .addRange(9312, 10239)
          .addRange(10496, 11123)
          .addRange(11126, 11157)
          .addRange(11160, 11208)
          .addRange(11210, 11262)
          .addRange(11776, 11854)
          .addRange(12272, 12283)
          .addRange(12288, 12292)
          .addRange(12296, 12320)
          .addRange(12336, 12343)
          .addRange(12348, 12351)
          .addRange(12443, 12444)
          .addRange(12539, 12540)
          .addRange(12688, 12703)
          .addRange(12736, 12771)
          .addRange(12832, 12895)
          .addRange(12927, 13007)
          .addRange(13144, 13311)
          .addRange(19904, 19967)
          .addRange(42752, 42785)
          .addRange(42888, 42890)
          .addRange(43056, 43065)
          .addRange(64830, 64831)
          .addRange(65040, 65049)
          .addRange(65072, 65106)
          .addRange(65108, 65126)
          .addRange(65128, 65131)
          .addRange(65281, 65312)
          .addRange(65339, 65344)
          .addRange(65371, 65381)
          .addRange(65438, 65439)
          .addRange(65504, 65510)
          .addRange(65512, 65518)
          .addRange(65529, 65533)
          .addRange(65792, 65794)
          .addRange(65799, 65843)
          .addRange(65847, 65855)
          .addRange(65936, 65947)
          .addRange(66e3, 66044)
          .addRange(66273, 66299)
          .addRange(113824, 113827)
          .addRange(118784, 119029)
          .addRange(119040, 119078)
          .addRange(119081, 119142)
          .addRange(119146, 119162)
          .addRange(119171, 119172)
          .addRange(119180, 119209)
          .addRange(119214, 119272)
          .addRange(119520, 119539)
          .addRange(119552, 119638)
          .addRange(119648, 119672)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120779)
          .addRange(120782, 120831)
          .addRange(126065, 126132)
          .addRange(126976, 127019)
          .addRange(127024, 127123)
          .addRange(127136, 127150)
          .addRange(127153, 127167)
          .addRange(127169, 127183)
          .addRange(127185, 127221)
          .addRange(127232, 127244)
          .addRange(127248, 127339)
          .addRange(127344, 127404)
          .addRange(127462, 127487)
          .addRange(127489, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127568, 127569)
          .addRange(127584, 127589)
          .addRange(127744, 128724)
          .addRange(128736, 128748)
          .addRange(128752, 128761)
          .addRange(128768, 128883)
          .addRange(128896, 128984)
          .addRange(129024, 129035)
          .addRange(129040, 129095)
          .addRange(129104, 129113)
          .addRange(129120, 129159)
          .addRange(129168, 129197)
          .addRange(129280, 129291)
          .addRange(129296, 129342)
          .addRange(129344, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535)
          .addRange(129632, 129645)
          .addRange(917536, 917631);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(994, 1007)
          .addRange(11392, 11507)
          .addRange(11513, 11519);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74864, 74868)
          .addRange(74880, 75075);
      },
      function(e, t, n) {
        e.exports = n(0)(67592, 67644, 67647)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640);
      },
      function(e, t, n) {
        e.exports = n(0)(7467, 7544)
          .addRange(1024, 1156)
          .addRange(1159, 1327)
          .addRange(7296, 7304)
          .addRange(11744, 11775)
          .addRange(42560, 42655)
          .addRange(65070, 65071);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66560, 66639);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2304, 2384)
          .addRange(2387, 2403)
          .addRange(2406, 2431)
          .addRange(43232, 43263);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(71680, 71739);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(113820, 113823);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(77824, 78894);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66816, 66855);
      },
      function(e, t, n) {
        e.exports = n(0)(4696, 4800)
          .addRange(4608, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4957, 4988)
          .addRange(4992, 5017)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822);
      },
      function(e, t, n) {
        e.exports = n(0)(4295, 4301, 11559, 11565)
          .addRange(4256, 4293)
          .addRange(4304, 4346)
          .addRange(4348, 4351)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(11520, 11557);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66352, 66378);
      },
      function(e, t, n) {
        e.exports = n(0)(70480, 70487)
          .addRange(70400, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70460, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70493, 70499)
          .addRange(70502, 70508)
          .addRange(70512, 70516);
      },
      function(e, t, n) {
        e.exports = n(0)(
          895,
          900,
          902,
          908,
          7615,
          8025,
          8027,
          8029,
          8486,
          43877,
          65952
        )
          .addRange(880, 883)
          .addRange(885, 887)
          .addRange(890, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 993)
          .addRange(1008, 1023)
          .addRange(7462, 7466)
          .addRange(7517, 7521)
          .addRange(7526, 7530)
          .addRange(7936, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8132)
          .addRange(8134, 8147)
          .addRange(8150, 8155)
          .addRange(8157, 8175)
          .addRange(8178, 8180)
          .addRange(8182, 8190)
          .addRange(65856, 65934)
          .addRange(119296, 119365);
      },
      function(e, t, n) {
        e.exports = n(0)(2768)
          .addRange(2689, 2691)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2748, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2765)
          .addRange(2784, 2787)
          .addRange(2790, 2801)
          .addRange(2809, 2815);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73112)
          .addRange(73120, 73129);
      },
      function(e, t, n) {
        e.exports = n(0)(2620, 2641, 2654)
          .addRange(2561, 2563)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2649, 2652)
          .addRange(2662, 2678);
      },
      function(e, t, n) {
        e.exports = n(0)(12293, 12295)
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245)
          .addRange(12321, 12329)
          .addRange(12344, 12347)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(4352, 4607)
          .addRange(12334, 12335)
          .addRange(12593, 12686)
          .addRange(12800, 12830)
          .addRange(12896, 12926)
          .addRange(43360, 43388)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(65440, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68864, 68903)
          .addRange(68912, 68921);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(5920, 5940);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67835, 67839);
      },
      function(e, t, n) {
        e.exports = n(0)(64318)
          .addRange(1425, 1479)
          .addRange(1488, 1514)
          .addRange(1519, 1524)
          .addRange(64285, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64335);
      },
      function(e, t, n) {
        e.exports = n(0)(127488)
          .addRange(12353, 12438)
          .addRange(12445, 12447)
          .addRange(110593, 110878);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67648, 67669)
          .addRange(67671, 67679);
      },
      function(e, t, n) {
        e.exports = n(0)(1648, 7405, 7412, 66045, 66272, 70459)
          .addRange(768, 879)
          .addRange(1157, 1158)
          .addRange(1611, 1621)
          .addRange(2385, 2386)
          .addRange(6832, 6846)
          .addRange(7376, 7378)
          .addRange(7380, 7392)
          .addRange(7394, 7400)
          .addRange(7416, 7417)
          .addRange(7616, 7673)
          .addRange(7675, 7679)
          .addRange(8204, 8205)
          .addRange(8400, 8432)
          .addRange(12330, 12333)
          .addRange(12441, 12442)
          .addRange(65024, 65039)
          .addRange(65056, 65069)
          .addRange(119143, 119145)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68448, 68466)
          .addRange(68472, 68479);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68416, 68437)
          .addRange(68440, 68447);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43392, 43469)
          .addRange(43472, 43481)
          .addRange(43486, 43487);
      },
      function(e, t, n) {
        e.exports = n(0)(69837).addRange(69760, 69825);
      },
      function(e, t, n) {
        e.exports = n(0)(3294)
          .addRange(3200, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3260, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3277)
          .addRange(3285, 3286)
          .addRange(3296, 3299)
          .addRange(3302, 3311)
          .addRange(3313, 3314);
      },
      function(e, t, n) {
        e.exports = n(0)(110592)
          .addRange(12449, 12538)
          .addRange(12541, 12543)
          .addRange(12784, 12799)
          .addRange(13008, 13054)
          .addRange(13056, 13143)
          .addRange(65382, 65391)
          .addRange(65393, 65437);
      },
      function(e, t, n) {
        e.exports = n(0)(43311).addRange(43264, 43309);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68096, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68152, 68154)
          .addRange(68159, 68168)
          .addRange(68176, 68184);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6016, 6109)
          .addRange(6112, 6121)
          .addRange(6128, 6137)
          .addRange(6624, 6655);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(70144, 70161)
          .addRange(70163, 70206);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(70320, 70378)
          .addRange(70384, 70393);
      },
      function(e, t, n) {
        e.exports = n(0)(3716, 3722, 3725, 3749, 3751, 3782)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3769)
          .addRange(3771, 3773)
          .addRange(3776, 3780)
          .addRange(3784, 3789)
          .addRange(3792, 3801)
          .addRange(3804, 3807);
      },
      function(e, t, n) {
        e.exports = n(0)(170, 186, 8305, 8319, 8498, 8526)
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 696)
          .addRange(736, 740)
          .addRange(7424, 7461)
          .addRange(7468, 7516)
          .addRange(7522, 7525)
          .addRange(7531, 7543)
          .addRange(7545, 7614)
          .addRange(7680, 7935)
          .addRange(8336, 8348)
          .addRange(8490, 8491)
          .addRange(8544, 8584)
          .addRange(11360, 11391)
          .addRange(42786, 42887)
          .addRange(42891, 42937)
          .addRange(42999, 43007)
          .addRange(43824, 43866)
          .addRange(43868, 43876)
          .addRange(64256, 64262)
          .addRange(65313, 65338)
          .addRange(65345, 65370);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(7168, 7223)
          .addRange(7227, 7241)
          .addRange(7245, 7247);
      },
      function(e, t, n) {
        e.exports = n(0)(6464)
          .addRange(6400, 6430)
          .addRange(6432, 6443)
          .addRange(6448, 6459)
          .addRange(6468, 6479);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(42192, 42239);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66176, 66204);
      },
      function(e, t, n) {
        e.exports = n(0)(67903).addRange(67872, 67897);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(69968, 70006);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(73440, 73464);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(3328, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3407)
          .addRange(3412, 3427)
          .addRange(3430, 3455);
      },
      function(e, t, n) {
        e.exports = n(0)(2142).addRange(2112, 2139);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68288, 68326)
          .addRange(68331, 68342);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(72816, 72847)
          .addRange(72850, 72871)
          .addRange(72873, 72886);
      },
      function(e, t, n) {
        e.exports = n(0)(73018)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73031)
          .addRange(73040, 73049);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(93760, 93850);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43744, 43766)
          .addRange(43968, 44013)
          .addRange(44016, 44025);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(124928, 125124)
          .addRange(125127, 125142);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68e3, 68023)
          .addRange(68028, 68047)
          .addRange(68050, 68095);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(67968, 67999);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94095, 94111);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(71168, 71236)
          .addRange(71248, 71257);
      },
      function(e, t, n) {
        e.exports = n(0)(6148)
          .addRange(6144, 6145)
          .addRange(6150, 6158)
          .addRange(6160, 6169)
          .addRange(6176, 6264)
          .addRange(6272, 6314)
          .addRange(71264, 71276);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(92736, 92766)
          .addRange(92768, 92777)
          .addRange(92782, 92783);
      },
      function(e, t, n) {
        e.exports = n(0)(70280)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70313);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(4096, 4255)
          .addRange(43488, 43518)
          .addRange(43616, 43647);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67712, 67742)
          .addRange(67751, 67759);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6608, 6618)
          .addRange(6622, 6623);
      },
      function(e, t, n) {
        e.exports = n(0)(70747)
          .addRange(70656, 70745)
          .addRange(70749, 70750);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(1984, 2042)
          .addRange(2045, 2047);
      },
      function(e, t, n) {
        e.exports = n(0)(94177).addRange(110960, 111355);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(5760, 5788);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(7248, 7295);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68858, 68863);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66304, 66339)
          .addRange(66349, 66351);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(68224, 68255);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66384, 66426);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66464, 66499)
          .addRange(66504, 66517);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(69376, 69415);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(68192, 68223);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(68608, 68680);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2817, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2876, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2893)
          .addRange(2902, 2903)
          .addRange(2908, 2909)
          .addRange(2911, 2915)
          .addRange(2918, 2935);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66736, 66771)
          .addRange(66776, 66811);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66688, 66717)
          .addRange(66720, 66729);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(92928, 92997)
          .addRange(93008, 93017)
          .addRange(93019, 93025)
          .addRange(93027, 93047)
          .addRange(93053, 93071);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(67680, 67711);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(72384, 72440);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(43072, 43127);
      },
      function(e, t, n) {
        e.exports = n(0)(67871).addRange(67840, 67867);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68480, 68497)
          .addRange(68505, 68508)
          .addRange(68521, 68527);
      },
      function(e, t, n) {
        e.exports = n(0)(43359).addRange(43312, 43347);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5792, 5866)
          .addRange(5870, 5880);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2048, 2093)
          .addRange(2096, 2110);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43136, 43205)
          .addRange(43214, 43225);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(70016, 70093)
          .addRange(70096, 70111);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66640, 66687);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(71040, 71093)
          .addRange(71096, 71133);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(120832, 121483)
          .addRange(121499, 121503)
          .addRange(121505, 121519);
      },
      function(e, t, n) {
        e.exports = n(0)(3517, 3530, 3542)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3558, 3567)
          .addRange(3570, 3572)
          .addRange(70113, 70132);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(69424, 69465);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(69840, 69864)
          .addRange(69872, 69881);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(72272, 72323)
          .addRange(72326, 72354);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(7040, 7103)
          .addRange(7360, 7367);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(43008, 43051);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(1792, 1805)
          .addRange(1807, 1866)
          .addRange(1869, 1871)
          .addRange(2144, 2154);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5888, 5900)
          .addRange(5902, 5908);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6002, 6003);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6480, 6509)
          .addRange(6512, 6516);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6688, 6750)
          .addRange(6752, 6780)
          .addRange(6783, 6793)
          .addRange(6800, 6809)
          .addRange(6816, 6829);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43648, 43714)
          .addRange(43739, 43743);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(71296, 71351)
          .addRange(71360, 71369);
      },
      function(e, t, n) {
        e.exports = n(0)(2972, 3024, 3031)
          .addRange(2946, 2947)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3021)
          .addRange(3046, 3066);
      },
      function(e, t, n) {
        e.exports = n(0)(94176)
          .addRange(94208, 100337)
          .addRange(100352, 101106);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(3072, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3133, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3160, 3162)
          .addRange(3168, 3171)
          .addRange(3174, 3183)
          .addRange(3192, 3199);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(1920, 1969);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(3585, 3642)
          .addRange(3648, 3675);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(3840, 3911)
          .addRange(3913, 3948)
          .addRange(3953, 3991)
          .addRange(3993, 4028)
          .addRange(4030, 4044)
          .addRange(4046, 4052)
          .addRange(4057, 4058);
      },
      function(e, t, n) {
        e.exports = n(0)(11647)
          .addRange(11568, 11623)
          .addRange(11631, 11632);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(70784, 70855)
          .addRange(70864, 70873);
      },
      function(e, t, n) {
        e.exports = n(0)(66463).addRange(66432, 66461);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(42240, 42539);
      },
      function(e, t, n) {
        e.exports = n(0)(71935).addRange(71840, 71922);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(40960, 42124)
          .addRange(42128, 42182);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(72192, 72263);
      },
      function(e, t, n) {
        e.exports = n(0)(1600)
          .addRange(125184, 125258)
          .addRange(125264, 125273)
          .addRange(125278, 125279);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(71424, 71450)
          .addRange(71453, 71467)
          .addRange(71472, 71487);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(82944, 83526);
      },
      function(e, t, n) {
        e.exports = n(0)(
          126500,
          126503,
          126521,
          126523,
          126530,
          126535,
          126537,
          126539,
          126548,
          126551,
          126553,
          126555,
          126557,
          126559,
          126564,
          126590
        )
          .addRange(1536, 1540)
          .addRange(1542, 1564)
          .addRange(1566, 1756)
          .addRange(1758, 1791)
          .addRange(1872, 1919)
          .addRange(2208, 2228)
          .addRange(2230, 2237)
          .addRange(2259, 2273)
          .addRange(2275, 2303)
          .addRange(64336, 64449)
          .addRange(64467, 64829)
          .addRange(64848, 64911)
          .addRange(64914, 64967)
          .addRange(65008, 65021)
          .addRange(65136, 65140)
          .addRange(65142, 65276)
          .addRange(66272, 66299)
          .addRange(69216, 69246)
          .addRange(126464, 126467)
          .addRange(126469, 126495)
          .addRange(126497, 126498)
          .addRange(126505, 126514)
          .addRange(126516, 126519)
          .addRange(126541, 126543)
          .addRange(126545, 126546)
          .addRange(126561, 126562)
          .addRange(126567, 126570)
          .addRange(126572, 126578)
          .addRange(126580, 126583)
          .addRange(126585, 126588)
          .addRange(126592, 126601)
          .addRange(126603, 126619)
          .addRange(126625, 126627)
          .addRange(126629, 126633)
          .addRange(126635, 126651)
          .addRange(126704, 126705);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(1329, 1366)
          .addRange(1369, 1418)
          .addRange(1421, 1423)
          .addRange(64275, 64279);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68352, 68405)
          .addRange(68409, 68415);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6912, 6987)
          .addRange(6992, 7036);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(42656, 42743)
          .addRange(92160, 92728);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(92880, 92909)
          .addRange(92912, 92917);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(7104, 7155)
          .addRange(7164, 7167);
      },
      function(e, t, n) {
        e.exports = n(0)(2482, 2519, 7376, 7378, 7384, 7393, 7402, 7405, 43249)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(2432, 2435)
          .addRange(2437, 2444)
          .addRange(2447, 2448)
          .addRange(2451, 2472)
          .addRange(2474, 2480)
          .addRange(2486, 2489)
          .addRange(2492, 2500)
          .addRange(2503, 2504)
          .addRange(2507, 2510)
          .addRange(2524, 2525)
          .addRange(2527, 2531)
          .addRange(2534, 2558)
          .addRange(7381, 7382)
          .addRange(7413, 7415);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(72704, 72712)
          .addRange(72714, 72758)
          .addRange(72760, 72773)
          .addRange(72784, 72812);
      },
      function(e, t, n) {
        e.exports = n(0)(12336, 12343, 12539)
          .addRange(746, 747)
          .addRange(12289, 12291)
          .addRange(12296, 12305)
          .addRange(12307, 12319)
          .addRange(12330, 12333)
          .addRange(12549, 12591)
          .addRange(12704, 12730)
          .addRange(65093, 65094)
          .addRange(65377, 65381);
      },
      function(e, t, n) {
        e.exports = n(0)(69759)
          .addRange(69632, 69709)
          .addRange(69714, 69743);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(10240, 10495);
      },
      function(e, t, n) {
        e.exports = n(0)(43471)
          .addRange(6656, 6683)
          .addRange(6686, 6687);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5941, 5942)
          .addRange(5952, 5971);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5120, 5759)
          .addRange(6320, 6389);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66208, 66256);
      },
      function(e, t, n) {
        e.exports = n(0)(66927).addRange(66864, 66915);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2534, 2543)
          .addRange(4160, 4169)
          .addRange(69888, 69940)
          .addRange(69942, 69958);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43520, 43574)
          .addRange(43584, 43597)
          .addRange(43600, 43609)
          .addRange(43612, 43615);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5024, 5109)
          .addRange(5112, 5117)
          .addRange(43888, 43967);
      },
      function(e, t, n) {
        e.exports = n(0)(
          215,
          247,
          884,
          894,
          901,
          903,
          1541,
          1757,
          2274,
          3647,
          12288,
          12292,
          12306,
          12320,
          12342,
          12927,
          13311,
          43867,
          65279,
          119970,
          119995,
          120134,
          129402,
          917505
        )
          .addRange(0, 64)
          .addRange(91, 96)
          .addRange(123, 169)
          .addRange(171, 185)
          .addRange(187, 191)
          .addRange(697, 735)
          .addRange(741, 745)
          .addRange(748, 767)
          .addRange(4053, 4056)
          .addRange(5867, 5869)
          .addRange(8192, 8203)
          .addRange(8206, 8292)
          .addRange(8294, 8304)
          .addRange(8308, 8318)
          .addRange(8320, 8334)
          .addRange(8352, 8383)
          .addRange(8448, 8485)
          .addRange(8487, 8489)
          .addRange(8492, 8497)
          .addRange(8499, 8525)
          .addRange(8527, 8543)
          .addRange(8585, 8587)
          .addRange(8592, 9254)
          .addRange(9280, 9290)
          .addRange(9312, 10239)
          .addRange(10496, 11123)
          .addRange(11126, 11157)
          .addRange(11160, 11208)
          .addRange(11210, 11262)
          .addRange(11776, 11842)
          .addRange(11844, 11854)
          .addRange(12272, 12283)
          .addRange(12872, 12895)
          .addRange(12977, 12991)
          .addRange(13004, 13007)
          .addRange(13169, 13178)
          .addRange(13184, 13279)
          .addRange(19904, 19967)
          .addRange(42752, 42785)
          .addRange(42888, 42890)
          .addRange(64830, 64831)
          .addRange(65040, 65049)
          .addRange(65072, 65092)
          .addRange(65095, 65106)
          .addRange(65108, 65126)
          .addRange(65128, 65131)
          .addRange(65281, 65312)
          .addRange(65339, 65344)
          .addRange(65371, 65376)
          .addRange(65504, 65510)
          .addRange(65512, 65518)
          .addRange(65529, 65533)
          .addRange(65936, 65947)
          .addRange(66e3, 66044)
          .addRange(118784, 119029)
          .addRange(119040, 119078)
          .addRange(119081, 119142)
          .addRange(119146, 119162)
          .addRange(119171, 119172)
          .addRange(119180, 119209)
          .addRange(119214, 119272)
          .addRange(119520, 119539)
          .addRange(119552, 119638)
          .addRange(119666, 119672)
          .addRange(119808, 119892)
          .addRange(119894, 119964)
          .addRange(119966, 119967)
          .addRange(119973, 119974)
          .addRange(119977, 119980)
          .addRange(119982, 119993)
          .addRange(119997, 120003)
          .addRange(120005, 120069)
          .addRange(120071, 120074)
          .addRange(120077, 120084)
          .addRange(120086, 120092)
          .addRange(120094, 120121)
          .addRange(120123, 120126)
          .addRange(120128, 120132)
          .addRange(120138, 120144)
          .addRange(120146, 120485)
          .addRange(120488, 120779)
          .addRange(120782, 120831)
          .addRange(126065, 126132)
          .addRange(126976, 127019)
          .addRange(127024, 127123)
          .addRange(127136, 127150)
          .addRange(127153, 127167)
          .addRange(127169, 127183)
          .addRange(127185, 127221)
          .addRange(127232, 127244)
          .addRange(127248, 127339)
          .addRange(127344, 127404)
          .addRange(127462, 127487)
          .addRange(127489, 127490)
          .addRange(127504, 127547)
          .addRange(127552, 127560)
          .addRange(127584, 127589)
          .addRange(127744, 128724)
          .addRange(128736, 128748)
          .addRange(128752, 128761)
          .addRange(128768, 128883)
          .addRange(128896, 128984)
          .addRange(129024, 129035)
          .addRange(129040, 129095)
          .addRange(129104, 129113)
          .addRange(129120, 129159)
          .addRange(129168, 129197)
          .addRange(129280, 129291)
          .addRange(129296, 129342)
          .addRange(129344, 129392)
          .addRange(129395, 129398)
          .addRange(129404, 129442)
          .addRange(129456, 129465)
          .addRange(129472, 129474)
          .addRange(129488, 129535)
          .addRange(129632, 129645)
          .addRange(917536, 917631);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(994, 1007)
          .addRange(11392, 11507)
          .addRange(11513, 11519)
          .addRange(66272, 66299);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(73728, 74649)
          .addRange(74752, 74862)
          .addRange(74864, 74868)
          .addRange(74880, 75075);
      },
      function(e, t, n) {
        e.exports = n(0)(67592, 67644, 67647)
          .addRange(65792, 65794)
          .addRange(65799, 65843)
          .addRange(65847, 65855)
          .addRange(67584, 67589)
          .addRange(67594, 67637)
          .addRange(67639, 67640);
      },
      function(e, t, n) {
        e.exports = n(0)(7467, 7544, 11843)
          .addRange(1024, 1327)
          .addRange(7296, 7304)
          .addRange(11744, 11775)
          .addRange(42560, 42655)
          .addRange(65070, 65071);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66560, 66639);
      },
      function(e, t, n) {
        e.exports = n(0)(8432)
          .addRange(2304, 2431)
          .addRange(7376, 7414)
          .addRange(7416, 7417)
          .addRange(43056, 43065)
          .addRange(43232, 43263);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2404, 2415)
          .addRange(43056, 43065)
          .addRange(71680, 71739);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(113664, 113770)
          .addRange(113776, 113788)
          .addRange(113792, 113800)
          .addRange(113808, 113817)
          .addRange(113820, 113827);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(77824, 78894);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66816, 66855);
      },
      function(e, t, n) {
        e.exports = n(0)(4696, 4800)
          .addRange(4608, 4680)
          .addRange(4682, 4685)
          .addRange(4688, 4694)
          .addRange(4698, 4701)
          .addRange(4704, 4744)
          .addRange(4746, 4749)
          .addRange(4752, 4784)
          .addRange(4786, 4789)
          .addRange(4792, 4798)
          .addRange(4802, 4805)
          .addRange(4808, 4822)
          .addRange(4824, 4880)
          .addRange(4882, 4885)
          .addRange(4888, 4954)
          .addRange(4957, 4988)
          .addRange(4992, 5017)
          .addRange(11648, 11670)
          .addRange(11680, 11686)
          .addRange(11688, 11694)
          .addRange(11696, 11702)
          .addRange(11704, 11710)
          .addRange(11712, 11718)
          .addRange(11720, 11726)
          .addRange(11728, 11734)
          .addRange(11736, 11742)
          .addRange(43777, 43782)
          .addRange(43785, 43790)
          .addRange(43793, 43798)
          .addRange(43808, 43814)
          .addRange(43816, 43822);
      },
      function(e, t, n) {
        e.exports = n(0)(1417, 4295, 4301, 11559, 11565)
          .addRange(4256, 4293)
          .addRange(4304, 4351)
          .addRange(7312, 7354)
          .addRange(7357, 7359)
          .addRange(11520, 11557);
      },
      function(e, t, n) {
        e.exports = n(0)(1156, 1159, 11843, 42607)
          .addRange(11264, 11310)
          .addRange(11312, 11358)
          .addRange(122880, 122886)
          .addRange(122888, 122904)
          .addRange(122907, 122913)
          .addRange(122915, 122916)
          .addRange(122918, 122922);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66352, 66378);
      },
      function(e, t, n) {
        e.exports = n(0)(7376, 8432, 70480, 70487)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(3046, 3059)
          .addRange(7378, 7379)
          .addRange(7410, 7412)
          .addRange(7416, 7417)
          .addRange(70400, 70403)
          .addRange(70405, 70412)
          .addRange(70415, 70416)
          .addRange(70419, 70440)
          .addRange(70442, 70448)
          .addRange(70450, 70451)
          .addRange(70453, 70457)
          .addRange(70459, 70468)
          .addRange(70471, 70472)
          .addRange(70475, 70477)
          .addRange(70493, 70499)
          .addRange(70502, 70508)
          .addRange(70512, 70516);
      },
      function(e, t, n) {
        e.exports = n(0)(
          834,
          837,
          895,
          900,
          902,
          908,
          8025,
          8027,
          8029,
          8486,
          43877,
          65952
        )
          .addRange(880, 883)
          .addRange(885, 887)
          .addRange(890, 893)
          .addRange(904, 906)
          .addRange(910, 929)
          .addRange(931, 993)
          .addRange(1008, 1023)
          .addRange(7462, 7466)
          .addRange(7517, 7521)
          .addRange(7526, 7530)
          .addRange(7615, 7617)
          .addRange(7936, 7957)
          .addRange(7960, 7965)
          .addRange(7968, 8005)
          .addRange(8008, 8013)
          .addRange(8016, 8023)
          .addRange(8031, 8061)
          .addRange(8064, 8116)
          .addRange(8118, 8132)
          .addRange(8134, 8147)
          .addRange(8150, 8155)
          .addRange(8157, 8175)
          .addRange(8178, 8180)
          .addRange(8182, 8190)
          .addRange(65856, 65934)
          .addRange(119296, 119365);
      },
      function(e, t, n) {
        e.exports = n(0)(2768)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(2689, 2691)
          .addRange(2693, 2701)
          .addRange(2703, 2705)
          .addRange(2707, 2728)
          .addRange(2730, 2736)
          .addRange(2738, 2739)
          .addRange(2741, 2745)
          .addRange(2748, 2757)
          .addRange(2759, 2761)
          .addRange(2763, 2765)
          .addRange(2784, 2787)
          .addRange(2790, 2801)
          .addRange(2809, 2815)
          .addRange(43056, 43065);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2404, 2405)
          .addRange(73056, 73061)
          .addRange(73063, 73064)
          .addRange(73066, 73102)
          .addRange(73104, 73105)
          .addRange(73107, 73112)
          .addRange(73120, 73129);
      },
      function(e, t, n) {
        e.exports = n(0)(2620, 2641, 2654)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(2561, 2563)
          .addRange(2565, 2570)
          .addRange(2575, 2576)
          .addRange(2579, 2600)
          .addRange(2602, 2608)
          .addRange(2610, 2611)
          .addRange(2613, 2614)
          .addRange(2616, 2617)
          .addRange(2622, 2626)
          .addRange(2631, 2632)
          .addRange(2635, 2637)
          .addRange(2649, 2652)
          .addRange(2662, 2678)
          .addRange(43056, 43065);
      },
      function(e, t, n) {
        e.exports = n(0)(12336, 12539)
          .addRange(11904, 11929)
          .addRange(11931, 12019)
          .addRange(12032, 12245)
          .addRange(12289, 12291)
          .addRange(12293, 12305)
          .addRange(12307, 12319)
          .addRange(12321, 12333)
          .addRange(12343, 12351)
          .addRange(12688, 12703)
          .addRange(12736, 12771)
          .addRange(12832, 12871)
          .addRange(12928, 12976)
          .addRange(12992, 13003)
          .addRange(13144, 13168)
          .addRange(13179, 13183)
          .addRange(13280, 13310)
          .addRange(13312, 19893)
          .addRange(19968, 40943)
          .addRange(63744, 64109)
          .addRange(64112, 64217)
          .addRange(65093, 65094)
          .addRange(65377, 65381)
          .addRange(119648, 119665)
          .addRange(127568, 127569)
          .addRange(131072, 173782)
          .addRange(173824, 177972)
          .addRange(177984, 178205)
          .addRange(178208, 183969)
          .addRange(183984, 191456)
          .addRange(194560, 195101);
      },
      function(e, t, n) {
        e.exports = n(0)(12343, 12539)
          .addRange(4352, 4607)
          .addRange(12289, 12291)
          .addRange(12296, 12305)
          .addRange(12307, 12319)
          .addRange(12334, 12336)
          .addRange(12593, 12686)
          .addRange(12800, 12830)
          .addRange(12896, 12926)
          .addRange(43360, 43388)
          .addRange(44032, 55203)
          .addRange(55216, 55238)
          .addRange(55243, 55291)
          .addRange(65093, 65094)
          .addRange(65377, 65381)
          .addRange(65440, 65470)
          .addRange(65474, 65479)
          .addRange(65482, 65487)
          .addRange(65490, 65495)
          .addRange(65498, 65500);
      },
      function(e, t, n) {
        e.exports = n(0)(1548, 1563, 1567, 1600, 1748)
          .addRange(68864, 68903)
          .addRange(68912, 68921);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(5920, 5942);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67808, 67826)
          .addRange(67828, 67829)
          .addRange(67835, 67839);
      },
      function(e, t, n) {
        e.exports = n(0)(64318)
          .addRange(1425, 1479)
          .addRange(1488, 1514)
          .addRange(1519, 1524)
          .addRange(64285, 64310)
          .addRange(64312, 64316)
          .addRange(64320, 64321)
          .addRange(64323, 64324)
          .addRange(64326, 64335);
      },
      function(e, t, n) {
        e.exports = n(0)(12343, 65392, 127488)
          .addRange(12289, 12291)
          .addRange(12296, 12305)
          .addRange(12307, 12319)
          .addRange(12336, 12341)
          .addRange(12348, 12349)
          .addRange(12353, 12438)
          .addRange(12441, 12448)
          .addRange(12539, 12540)
          .addRange(65093, 65094)
          .addRange(65377, 65381)
          .addRange(65438, 65439)
          .addRange(110593, 110878);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67648, 67669)
          .addRange(67671, 67679);
      },
      function(e, t, n) {
        e.exports = n(0)(66045)
          .addRange(768, 833)
          .addRange(835, 836)
          .addRange(838, 866)
          .addRange(6832, 6846)
          .addRange(7618, 7673)
          .addRange(7675, 7679)
          .addRange(8204, 8205)
          .addRange(8400, 8431)
          .addRange(65024, 65039)
          .addRange(65056, 65069)
          .addRange(119143, 119145)
          .addRange(119163, 119170)
          .addRange(119173, 119179)
          .addRange(119210, 119213)
          .addRange(917760, 917999);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68448, 68466)
          .addRange(68472, 68479);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68416, 68437)
          .addRange(68440, 68447);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43392, 43469)
          .addRange(43471, 43481)
          .addRange(43486, 43487);
      },
      function(e, t, n) {
        e.exports = n(0)(69837)
          .addRange(2406, 2415)
          .addRange(43056, 43065)
          .addRange(69760, 69825);
      },
      function(e, t, n) {
        e.exports = n(0)(3294, 7376, 7378, 7386, 7412)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(3200, 3212)
          .addRange(3214, 3216)
          .addRange(3218, 3240)
          .addRange(3242, 3251)
          .addRange(3253, 3257)
          .addRange(3260, 3268)
          .addRange(3270, 3272)
          .addRange(3274, 3277)
          .addRange(3285, 3286)
          .addRange(3296, 3299)
          .addRange(3302, 3311)
          .addRange(3313, 3314)
          .addRange(43056, 43061);
      },
      function(e, t, n) {
        e.exports = n(0)(12343, 110592)
          .addRange(12289, 12291)
          .addRange(12296, 12305)
          .addRange(12307, 12319)
          .addRange(12336, 12341)
          .addRange(12348, 12349)
          .addRange(12441, 12444)
          .addRange(12448, 12543)
          .addRange(12784, 12799)
          .addRange(13008, 13054)
          .addRange(13056, 13143)
          .addRange(65093, 65094)
          .addRange(65377, 65439);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(43264, 43311);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68096, 68099)
          .addRange(68101, 68102)
          .addRange(68108, 68115)
          .addRange(68117, 68119)
          .addRange(68121, 68149)
          .addRange(68152, 68154)
          .addRange(68159, 68168)
          .addRange(68176, 68184);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6016, 6109)
          .addRange(6112, 6121)
          .addRange(6128, 6137)
          .addRange(6624, 6655);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2790, 2799)
          .addRange(43056, 43065)
          .addRange(70144, 70161)
          .addRange(70163, 70206);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2404, 2405)
          .addRange(43056, 43065)
          .addRange(70320, 70378)
          .addRange(70384, 70393);
      },
      function(e, t, n) {
        e.exports = n(0)(3716, 3722, 3725, 3749, 3751, 3782)
          .addRange(3713, 3714)
          .addRange(3719, 3720)
          .addRange(3732, 3735)
          .addRange(3737, 3743)
          .addRange(3745, 3747)
          .addRange(3754, 3755)
          .addRange(3757, 3769)
          .addRange(3771, 3773)
          .addRange(3776, 3780)
          .addRange(3784, 3789)
          .addRange(3792, 3801)
          .addRange(3804, 3807);
      },
      function(e, t, n) {
        e.exports = n(0)(170, 186, 4347, 8305, 8319, 8432, 8498, 8526, 43310)
          .addRange(65, 90)
          .addRange(97, 122)
          .addRange(192, 214)
          .addRange(216, 246)
          .addRange(248, 696)
          .addRange(736, 740)
          .addRange(867, 879)
          .addRange(1157, 1158)
          .addRange(2385, 2386)
          .addRange(7424, 7461)
          .addRange(7468, 7516)
          .addRange(7522, 7525)
          .addRange(7531, 7543)
          .addRange(7545, 7614)
          .addRange(7680, 7935)
          .addRange(8336, 8348)
          .addRange(8490, 8491)
          .addRange(8544, 8584)
          .addRange(11360, 11391)
          .addRange(42786, 42887)
          .addRange(42891, 42937)
          .addRange(42999, 43007)
          .addRange(43824, 43866)
          .addRange(43868, 43876)
          .addRange(64256, 64262)
          .addRange(65313, 65338)
          .addRange(65345, 65370);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(7168, 7223)
          .addRange(7227, 7241)
          .addRange(7245, 7247);
      },
      function(e, t, n) {
        e.exports = n(0)(2405, 6464)
          .addRange(6400, 6430)
          .addRange(6432, 6443)
          .addRange(6448, 6459)
          .addRange(6468, 6479);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(65799, 65843)
          .addRange(67072, 67382)
          .addRange(67392, 67413)
          .addRange(67424, 67431);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(65536, 65547)
          .addRange(65549, 65574)
          .addRange(65576, 65594)
          .addRange(65596, 65597)
          .addRange(65599, 65613)
          .addRange(65616, 65629)
          .addRange(65664, 65786)
          .addRange(65792, 65794)
          .addRange(65799, 65843)
          .addRange(65847, 65855);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(42192, 42239);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66176, 66204);
      },
      function(e, t, n) {
        e.exports = n(0)(67903).addRange(67872, 67897);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2404, 2415)
          .addRange(43056, 43065)
          .addRange(69968, 70006);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(73440, 73464);
      },
      function(e, t, n) {
        e.exports = n(0)(7386)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(3328, 3331)
          .addRange(3333, 3340)
          .addRange(3342, 3344)
          .addRange(3346, 3396)
          .addRange(3398, 3400)
          .addRange(3402, 3407)
          .addRange(3412, 3427)
          .addRange(3430, 3455)
          .addRange(43056, 43058);
      },
      function(e, t, n) {
        e.exports = n(0)(1600, 2142).addRange(2112, 2139);
      },
      function(e, t, n) {
        e.exports = n(0)(1600)
          .addRange(68288, 68326)
          .addRange(68331, 68342);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(72816, 72847)
          .addRange(72850, 72871)
          .addRange(72873, 72886);
      },
      function(e, t, n) {
        e.exports = n(0)(73018)
          .addRange(72960, 72966)
          .addRange(72968, 72969)
          .addRange(72971, 73014)
          .addRange(73020, 73021)
          .addRange(73023, 73031)
          .addRange(73040, 73049);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(93760, 93850);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43744, 43766)
          .addRange(43968, 44013)
          .addRange(44016, 44025);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(124928, 125124)
          .addRange(125127, 125142);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68e3, 68023)
          .addRange(68028, 68047)
          .addRange(68050, 68095);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(67968, 67999);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(93952, 94020)
          .addRange(94032, 94078)
          .addRange(94095, 94111);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43056, 43065)
          .addRange(71168, 71236)
          .addRange(71248, 71257);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6144, 6158)
          .addRange(6160, 6169)
          .addRange(6176, 6264)
          .addRange(6272, 6314)
          .addRange(71264, 71276);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(92736, 92766)
          .addRange(92768, 92777)
          .addRange(92782, 92783);
      },
      function(e, t, n) {
        e.exports = n(0)(70280)
          .addRange(2662, 2671)
          .addRange(70272, 70278)
          .addRange(70282, 70285)
          .addRange(70287, 70301)
          .addRange(70303, 70313);
      },
      function(e, t, n) {
        e.exports = n(0)(43310)
          .addRange(4096, 4255)
          .addRange(43488, 43518)
          .addRange(43616, 43647);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(67712, 67742)
          .addRange(67751, 67759);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6528, 6571)
          .addRange(6576, 6601)
          .addRange(6608, 6618)
          .addRange(6622, 6623);
      },
      function(e, t, n) {
        e.exports = n(0)(70747)
          .addRange(70656, 70745)
          .addRange(70749, 70750);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(1984, 2042)
          .addRange(2045, 2047);
      },
      function(e, t, n) {
        e.exports = n(0)(94177).addRange(110960, 111355);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(5760, 5788);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(7248, 7295);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(68736, 68786)
          .addRange(68800, 68850)
          .addRange(68858, 68863);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66304, 66339)
          .addRange(66349, 66351);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(68224, 68255);
      },
      function(e, t, n) {
        e.exports = n(0)(1155).addRange(66384, 66426);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66464, 66499)
          .addRange(66504, 66517);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(69376, 69415);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(68192, 68223);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(68608, 68680);
      },
      function(e, t, n) {
        e.exports = n(0)(7386)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(2817, 2819)
          .addRange(2821, 2828)
          .addRange(2831, 2832)
          .addRange(2835, 2856)
          .addRange(2858, 2864)
          .addRange(2866, 2867)
          .addRange(2869, 2873)
          .addRange(2876, 2884)
          .addRange(2887, 2888)
          .addRange(2891, 2893)
          .addRange(2902, 2903)
          .addRange(2908, 2909)
          .addRange(2911, 2915)
          .addRange(2918, 2935);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66736, 66771)
          .addRange(66776, 66811);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(66688, 66717)
          .addRange(66720, 66729);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(92928, 92997)
          .addRange(93008, 93017)
          .addRange(93019, 93025)
          .addRange(93027, 93047)
          .addRange(93053, 93071);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(67680, 67711);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(72384, 72440);
      },
      function(e, t, n) {
        e.exports = n(0)(6149)
          .addRange(6146, 6147)
          .addRange(43072, 43127);
      },
      function(e, t, n) {
        e.exports = n(0)(67871).addRange(67840, 67867);
      },
      function(e, t, n) {
        e.exports = n(0)(1600)
          .addRange(68480, 68497)
          .addRange(68505, 68508)
          .addRange(68521, 68527);
      },
      function(e, t, n) {
        e.exports = n(0)(43359).addRange(43312, 43347);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5792, 5866)
          .addRange(5870, 5880);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2048, 2093)
          .addRange(2096, 2110);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43136, 43205)
          .addRange(43214, 43225);
      },
      function(e, t, n) {
        e.exports = n(0)(2385, 7383, 7385, 7392)
          .addRange(7388, 7389)
          .addRange(70016, 70093)
          .addRange(70096, 70111);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(66640, 66687);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(71040, 71093)
          .addRange(71096, 71133);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(120832, 121483)
          .addRange(121499, 121503)
          .addRange(121505, 121519);
      },
      function(e, t, n) {
        e.exports = n(0)(3517, 3530, 3542)
          .addRange(2404, 2405)
          .addRange(3458, 3459)
          .addRange(3461, 3478)
          .addRange(3482, 3505)
          .addRange(3507, 3515)
          .addRange(3520, 3526)
          .addRange(3535, 3540)
          .addRange(3544, 3551)
          .addRange(3558, 3567)
          .addRange(3570, 3572)
          .addRange(70113, 70132);
      },
      function(e, t, n) {
        e.exports = n(0)(1600).addRange(69424, 69465);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(69840, 69864)
          .addRange(69872, 69881);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(72272, 72323)
          .addRange(72326, 72354);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(7040, 7103)
          .addRange(7360, 7367);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2404, 2405)
          .addRange(2534, 2543)
          .addRange(43008, 43051);
      },
      function(e, t, n) {
        e.exports = n(0)(1548, 1567, 1600, 1648)
          .addRange(1563, 1564)
          .addRange(1611, 1621)
          .addRange(1792, 1805)
          .addRange(1807, 1866)
          .addRange(1869, 1871)
          .addRange(2144, 2154);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5888, 5900)
          .addRange(5902, 5908)
          .addRange(5941, 5942);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(5941, 5942)
          .addRange(5984, 5996)
          .addRange(5998, 6e3)
          .addRange(6002, 6003);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(4160, 4169)
          .addRange(6480, 6509)
          .addRange(6512, 6516);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(6688, 6750)
          .addRange(6752, 6780)
          .addRange(6783, 6793)
          .addRange(6800, 6809)
          .addRange(6816, 6829);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(43648, 43714)
          .addRange(43739, 43743);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2404, 2405)
          .addRange(43056, 43065)
          .addRange(71296, 71351)
          .addRange(71360, 71369);
      },
      function(e, t, n) {
        e.exports = n(0)(2972, 3024, 3031, 7386, 43251, 70401, 70403)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(2946, 2947)
          .addRange(2949, 2954)
          .addRange(2958, 2960)
          .addRange(2962, 2965)
          .addRange(2969, 2970)
          .addRange(2974, 2975)
          .addRange(2979, 2980)
          .addRange(2984, 2986)
          .addRange(2990, 3001)
          .addRange(3006, 3010)
          .addRange(3014, 3016)
          .addRange(3018, 3021)
          .addRange(3046, 3066)
          .addRange(70459, 70460);
      },
      function(e, t, n) {
        e.exports = n(0)(94176)
          .addRange(94208, 100337)
          .addRange(100352, 101106);
      },
      function(e, t, n) {
        e.exports = n(0)(7386)
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(3072, 3084)
          .addRange(3086, 3088)
          .addRange(3090, 3112)
          .addRange(3114, 3129)
          .addRange(3133, 3140)
          .addRange(3142, 3144)
          .addRange(3146, 3149)
          .addRange(3157, 3158)
          .addRange(3160, 3162)
          .addRange(3168, 3171)
          .addRange(3174, 3183)
          .addRange(3192, 3199);
      },
      function(e, t, n) {
        e.exports = n(0)(1548, 1567, 65010, 65021)
          .addRange(1563, 1564)
          .addRange(1632, 1641)
          .addRange(1920, 1969);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(3585, 3642)
          .addRange(3648, 3675);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(3840, 3911)
          .addRange(3913, 3948)
          .addRange(3953, 3991)
          .addRange(3993, 4028)
          .addRange(4030, 4044)
          .addRange(4046, 4052)
          .addRange(4057, 4058);
      },
      function(e, t, n) {
        e.exports = n(0)(11647)
          .addRange(11568, 11623)
          .addRange(11631, 11632);
      },
      function(e, t, n) {
        e.exports = n(0)()
          .addRange(2385, 2386)
          .addRange(2404, 2405)
          .addRange(43056, 43065)
          .addRange(70784, 70855)
          .addRange(70864, 70873);
      },
      function(e, t, n) {
        e.exports = n(0)(66463).addRange(66432, 66461);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(42240, 42539);
      },
      function(e, t, n) {
        e.exports = n(0)(71935).addRange(71840, 71922);
      },
      function(e, t, n) {
        e.exports = n(0)(12539)
          .addRange(12289, 12290)
          .addRange(12296, 12305)
          .addRange(12308, 12315)
          .addRange(40960, 42124)
          .addRange(42128, 42182)
          .addRange(65377, 65381);
      },
      function(e, t, n) {
        e.exports = n(0)().addRange(72192, 72263);
      },
      function(e, t) {
        e.exports = new Map([
          [
            "General_Category",
            [
              "Cased_Letter",
              "Close_Punctuation",
              "Connector_Punctuation",
              "Control",
              "Currency_Symbol",
              "Dash_Punctuation",
              "Decimal_Number",
              "Enclosing_Mark",
              "Final_Punctuation",
              "Format",
              "Initial_Punctuation",
              "Letter",
              "Letter_Number",
              "Line_Separator",
              "Lowercase_Letter",
              "Mark",
              "Math_Symbol",
              "Modifier_Letter",
              "Modifier_Symbol",
              "Nonspacing_Mark",
              "Number",
              "Open_Punctuation",
              "Other",
              "Other_Letter",
              "Other_Number",
              "Other_Punctuation",
              "Other_Symbol",
              "Paragraph_Separator",
              "Private_Use",
              "Punctuation",
              "Separator",
              "Space_Separator",
              "Spacing_Mark",
              "Surrogate",
              "Symbol",
              "Titlecase_Letter",
              "Unassigned",
              "Uppercase_Letter",
            ],
          ],
          [
            "Script",
            [
              "Adlam",
              "Ahom",
              "Anatolian_Hieroglyphs",
              "Arabic",
              "Armenian",
              "Avestan",
              "Balinese",
              "Bamum",
              "Bassa_Vah",
              "Batak",
              "Bengali",
              "Bhaiksuki",
              "Bopomofo",
              "Brahmi",
              "Braille",
              "Buginese",
              "Buhid",
              "Canadian_Aboriginal",
              "Carian",
              "Caucasian_Albanian",
              "Chakma",
              "Cham",
              "Cherokee",
              "Common",
              "Coptic",
              "Cuneiform",
              "Cypriot",
              "Cyrillic",
              "Deseret",
              "Devanagari",
              "Dogra",
              "Duployan",
              "Egyptian_Hieroglyphs",
              "Elbasan",
              "Ethiopic",
              "Georgian",
              "Glagolitic",
              "Gothic",
              "Grantha",
              "Greek",
              "Gujarati",
              "Gunjala_Gondi",
              "Gurmukhi",
              "Han",
              "Hangul",
              "Hanifi_Rohingya",
              "Hanunoo",
              "Hatran",
              "Hebrew",
              "Hiragana",
              "Imperial_Aramaic",
              "Inherited",
              "Inscriptional_Pahlavi",
              "Inscriptional_Parthian",
              "Javanese",
              "Kaithi",
              "Kannada",
              "Katakana",
              "Kayah_Li",
              "Kharoshthi",
              "Khmer",
              "Khojki",
              "Khudawadi",
              "Lao",
              "Latin",
              "Lepcha",
              "Limbu",
              "Linear_A",
              "Linear_B",
              "Lisu",
              "Lycian",
              "Lydian",
              "Mahajani",
              "Makasar",
              "Malayalam",
              "Mandaic",
              "Manichaean",
              "Marchen",
              "Masaram_Gondi",
              "Medefaidrin",
              "Meetei_Mayek",
              "Mende_Kikakui",
              "Meroitic_Cursive",
              "Meroitic_Hieroglyphs",
              "Miao",
              "Modi",
              "Mongolian",
              "Mro",
              "Multani",
              "Myanmar",
              "Nabataean",
              "New_Tai_Lue",
              "Newa",
              "Nko",
              "Nushu",
              "Ogham",
              "Ol_Chiki",
              "Old_Hungarian",
              "Old_Italic",
              "Old_North_Arabian",
              "Old_Permic",
              "Old_Persian",
              "Old_Sogdian",
              "Old_South_Arabian",
              "Old_Turkic",
              "Oriya",
              "Osage",
              "Osmanya",
              "Pahawh_Hmong",
              "Palmyrene",
              "Pau_Cin_Hau",
              "Phags_Pa",
              "Phoenician",
              "Psalter_Pahlavi",
              "Rejang",
              "Runic",
              "Samaritan",
              "Saurashtra",
              "Sharada",
              "Shavian",
              "Siddham",
              "SignWriting",
              "Sinhala",
              "Sogdian",
              "Sora_Sompeng",
              "Soyombo",
              "Sundanese",
              "Syloti_Nagri",
              "Syriac",
              "Tagalog",
              "Tagbanwa",
              "Tai_Le",
              "Tai_Tham",
              "Tai_Viet",
              "Takri",
              "Tamil",
              "Tangut",
              "Telugu",
              "Thaana",
              "Thai",
              "Tibetan",
              "Tifinagh",
              "Tirhuta",
              "Ugaritic",
              "Vai",
              "Warang_Citi",
              "Yi",
              "Zanabazar_Square",
            ],
          ],
          [
            "Script_Extensions",
            [
              "Adlam",
              "Ahom",
              "Anatolian_Hieroglyphs",
              "Arabic",
              "Armenian",
              "Avestan",
              "Balinese",
              "Bamum",
              "Bassa_Vah",
              "Batak",
              "Bengali",
              "Bhaiksuki",
              "Bopomofo",
              "Brahmi",
              "Braille",
              "Buginese",
              "Buhid",
              "Canadian_Aboriginal",
              "Carian",
              "Caucasian_Albanian",
              "Chakma",
              "Cham",
              "Cherokee",
              "Common",
              "Coptic",
              "Cuneiform",
              "Cypriot",
              "Cyrillic",
              "Deseret",
              "Devanagari",
              "Dogra",
              "Duployan",
              "Egyptian_Hieroglyphs",
              "Elbasan",
              "Ethiopic",
              "Georgian",
              "Glagolitic",
              "Gothic",
              "Grantha",
              "Greek",
              "Gujarati",
              "Gunjala_Gondi",
              "Gurmukhi",
              "Han",
              "Hangul",
              "Hanifi_Rohingya",
              "Hanunoo",
              "Hatran",
              "Hebrew",
              "Hiragana",
              "Imperial_Aramaic",
              "Inherited",
              "Inscriptional_Pahlavi",
              "Inscriptional_Parthian",
              "Javanese",
              "Kaithi",
              "Kannada",
              "Katakana",
              "Kayah_Li",
              "Kharoshthi",
              "Khmer",
              "Khojki",
              "Khudawadi",
              "Lao",
              "Latin",
              "Lepcha",
              "Limbu",
              "Linear_A",
              "Linear_B",
              "Lisu",
              "Lycian",
              "Lydian",
              "Mahajani",
              "Makasar",
              "Malayalam",
              "Mandaic",
              "Manichaean",
              "Marchen",
              "Masaram_Gondi",
              "Medefaidrin",
              "Meetei_Mayek",
              "Mende_Kikakui",
              "Meroitic_Cursive",
              "Meroitic_Hieroglyphs",
              "Miao",
              "Modi",
              "Mongolian",
              "Mro",
              "Multani",
              "Myanmar",
              "Nabataean",
              "New_Tai_Lue",
              "Newa",
              "Nko",
              "Nushu",
              "Ogham",
              "Ol_Chiki",
              "Old_Hungarian",
              "Old_Italic",
              "Old_North_Arabian",
              "Old_Permic",
              "Old_Persian",
              "Old_Sogdian",
              "Old_South_Arabian",
              "Old_Turkic",
              "Oriya",
              "Osage",
              "Osmanya",
              "Pahawh_Hmong",
              "Palmyrene",
              "Pau_Cin_Hau",
              "Phags_Pa",
              "Phoenician",
              "Psalter_Pahlavi",
              "Rejang",
              "Runic",
              "Samaritan",
              "Saurashtra",
              "Sharada",
              "Shavian",
              "Siddham",
              "SignWriting",
              "Sinhala",
              "Sogdian",
              "Sora_Sompeng",
              "Soyombo",
              "Sundanese",
              "Syloti_Nagri",
              "Syriac",
              "Tagalog",
              "Tagbanwa",
              "Tai_Le",
              "Tai_Tham",
              "Tai_Viet",
              "Takri",
              "Tamil",
              "Tangut",
              "Telugu",
              "Thaana",
              "Thai",
              "Tibetan",
              "Tifinagh",
              "Tirhuta",
              "Ugaritic",
              "Vai",
              "Warang_Citi",
              "Yi",
              "Zanabazar_Square",
            ],
          ],
          [
            "Binary_Property",
            [
              "ASCII",
              "ASCII_Hex_Digit",
              "Alphabetic",
              "Any",
              "Assigned",
              "Bidi_Control",
              "Bidi_Mirrored",
              "Case_Ignorable",
              "Cased",
              "Changes_When_Casefolded",
              "Changes_When_Casemapped",
              "Changes_When_Lowercased",
              "Changes_When_NFKC_Casefolded",
              "Changes_When_Titlecased",
              "Changes_When_Uppercased",
              "Dash",
              "Default_Ignorable_Code_Point",
              "Deprecated",
              "Diacritic",
              "Emoji",
              "Emoji_Component",
              "Emoji_Modifier",
              "Emoji_Modifier_Base",
              "Emoji_Presentation",
              "Extended_Pictographic",
              "Extender",
              "Grapheme_Base",
              "Grapheme_Extend",
              "Hex_Digit",
              "IDS_Binary_Operator",
              "IDS_Trinary_Operator",
              "ID_Continue",
              "ID_Start",
              "Ideographic",
              "Join_Control",
              "Logical_Order_Exception",
              "Lowercase",
              "Math",
              "Noncharacter_Code_Point",
              "Pattern_Syntax",
              "Pattern_White_Space",
              "Quotation_Mark",
              "Radical",
              "Regional_Indicator",
              "Sentence_Terminal",
              "Soft_Dotted",
              "Terminal_Punctuation",
              "Unified_Ideograph",
              "Uppercase",
              "Variation_Selector",
              "White_Space",
              "XID_Continue",
              "XID_Start",
            ],
          ],
        ]);
      },
      function(e, t) {
        e.exports = "11.0.0";
      },
      function(e, t, n) {
        var a = n(932);
        e.exports = function(e, t) {
          return e && e.length && t && t.length ? a(e, t) : e;
        };
      },
      function(e, t, n) {
        var c = n(50),
          p = n(80),
          g = n(933),
          f = n(29),
          h = n(155),
          R = Array.prototype.splice;
        e.exports = function(e, t, n, a) {
          var r = a ? g : p,
            i = -1,
            o = t.length,
            s = e;
          for (e === t && (t = h(t)), n && (s = c(e, f(n))); ++i < o; )
            for (
              var d = 0, u = t[i], l = n ? n(u) : u;
              -1 < (d = r(s, l, d, a));

            )
              s !== e && R.call(s, d, 1), R.call(e, d, 1);
          return e;
        };
      },
      function(e, t) {
        e.exports = function(e, t, n, a) {
          for (var r = n - 1, i = e.length; ++r < i; ) if (a(e[r], t)) return r;
          return -1;
        };
      },
      function(e, t, n) {
        var s = n(935),
          d = n(39),
          u = n(49),
          l = Math.ceil,
          c = Math.max;
        e.exports = function(e, t, n) {
          t = (n ? d(e, t, n) : void 0 === t) ? 1 : c(u(t), 0);
          var a = null == e ? 0 : e.length;
          if (!a || t < 1) return [];
          for (var r = 0, i = 0, o = Array(l(a / t)); r < a; )
            o[i++] = s(e, r, (r += t));
          return o;
        };
      },
      function(e, t) {
        e.exports = function(e, t, n) {
          var a = -1,
            r = e.length;
          t < 0 && (t = r < -t ? 0 : r + t),
            (n = r < n ? r : n) < 0 && (n += r),
            (r = n < t ? 0 : (n - t) >>> 0),
            (t >>>= 0);
          for (var i = Array(r); ++a < r; ) i[a] = e[a + t];
          return i;
        };
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            e.traverse(a);
          });
        var a = {
          ThisExpression: function(e) {
            e.replaceWith(e.scope.buildUndefinedNode());
          },
          Function: function(e) {
            e.isArrowFunctionExpression() || e.skip();
          },
          ClassProperty: function(e) {
            e.skip();
          },
        };
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var a = n(1),
          r = n.n(a);
        function i() {
          var e = r()([
            "\n    (function() {\n      throw new Error('\"' + '",
            "' + '\" is read-only.');\n    })()\n  ",
          ]);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        function y() {
          var e = s(n(15));
          return (
            (y = function() {
              return e;
            }),
            e
          );
        }
        function O() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (O = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e = s(n(24));
          return (
            (o = function() {
              return e;
            }),
            e
          );
        }
        function F() {
          var e = s(n(239));
          return (
            (F = function() {
              return e;
            }),
            e
          );
        }
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          (exports.default = function(t, s) {
            var e = new Map(),
              n = new Map(),
              a = function(e) {
                t.requeue(e);
              },
              r = s.source,
              i = Array.isArray(r),
              o = 0;
            for (r = i ? r : r[Symbol.iterator](); ; ) {
              var d;
              if (i) {
                if (o >= r.length) break;
                d = r[o++];
              } else {
                if ((o = r.next()).done) break;
                d = o.value;
              }
              var u = d,
                l = u[0],
                c = (w = u[1]).imports,
                p = Array.isArray(c),
                g = 0;
              for (c = p ? c : c[Symbol.iterator](); ; ) {
                var f;
                if (p) {
                  if (g >= c.length) break;
                  f = c[g++];
                } else {
                  if ((g = c.next()).done) break;
                  f = g.value;
                }
                var h = f,
                  R = h[0],
                  y = h[1];
                e.set(R, [l, y, null]);
              }
              var m = w.importsNamespace,
                v = Array.isArray(m),
                b = 0;
              for (m = v ? m : m[Symbol.iterator](); ; ) {
                var E;
                if (v) {
                  if (b >= m.length) break;
                  E = m[b++];
                } else {
                  if ((b = m.next()).done) break;
                  E = b.value;
                }
                R = E;
                e.set(R, [l, null, R]);
              }
            }
            var x = s.local,
              A = Array.isArray(x),
              S = 0;
            for (x = A ? x : x[Symbol.iterator](); ; ) {
              var _, T;
              if (A) {
                if (S >= x.length) break;
                T = x[S++];
              } else {
                if ((S = x.next()).done) break;
                T = S.value;
              }
              var P = T,
                C = P[0],
                w = P[1],
                D = n.get(C);
              D || ((D = []), n.set(C, D)), (_ = D).push.apply(_, w.names);
            }
            t.traverse(k, {
              metadata: s,
              requeueInParent: a,
              scope: t.scope,
              exported: n,
            }),
              (0, F().default)(
                t,
                new Set(Array.from(e.keys()).concat(Array.from(n.keys())))
              ),
              t.traverse(j, {
                seen: new WeakSet(),
                metadata: s,
                requeueInParent: a,
                scope: t.scope,
                imported: e,
                exported: n,
                buildImportReference: function(e, t) {
                  var n = e[0],
                    a = e[1],
                    r = e[2],
                    i = s.source.get(n);
                  if (r) return i.lazy && (t = O().callExpression(t, [])), t;
                  var o = O().identifier(i.name);
                  return (
                    i.lazy && (o = O().callExpression(o, [])),
                    O().memberExpression(o, O().identifier(a))
                  );
                },
              });
          });
        var k = {
            ClassProperty: function(e) {
              e.skip();
            },
            Function: function(e) {
              e.skip();
            },
            ClassDeclaration: function(e) {
              var t = this.requeueInParent,
                n = this.exported,
                a = this.metadata,
                r = e.node.id;
              if (!r) throw new Error("Expected class to have a name");
              var i = r.name,
                o = n.get(i) || [];
              if (0 < o.length) {
                var s = O().expressionStatement(m(a, o, O().identifier(i)));
                (s._blockHoist = e.node._blockHoist), t(e.insertAfter(s)[0]);
              }
            },
            VariableDeclaration: function(a) {
              var r = this.requeueInParent,
                i = this.exported,
                o = this.metadata;
              Object.keys(a.getOuterBindingIdentifiers()).forEach(function(e) {
                var t = i.get(e) || [];
                if (0 < t.length) {
                  var n = O().expressionStatement(m(o, t, O().identifier(e)));
                  (n._blockHoist = a.node._blockHoist), r(a.insertAfter(n)[0]);
                }
              });
            },
          },
          m = function(n, e, t) {
            return (e || []).reduce(function(e, t) {
              return O().assignmentExpression(
                "=",
                O().memberExpression(
                  O().identifier(n.exportName),
                  O().identifier(t)
                ),
                e
              );
            }, t);
          },
          v = function(e) {
            return o().default.expression.ast(i(), e);
          },
          j = {
            ReferencedIdentifier: function(e) {
              var t = this.seen,
                n = this.buildImportReference,
                a = this.scope,
                r = this.imported,
                i = this.requeueInParent;
              if (!t.has(e.node)) {
                t.add(e.node);
                var o = e.node.name,
                  s = e.scope.getBinding(o);
                if (a.getBinding(o) === s) {
                  var d = r.get(o);
                  if (d) {
                    var u = n(d, e.node);
                    if (
                      ((u.loc = e.node.loc),
                      e.parentPath.isCallExpression({ callee: e.node }) &&
                        O().isMemberExpression(u))
                    )
                      e.replaceWith(
                        O().sequenceExpression([O().numericLiteral(0), u])
                      );
                    else if (e.isJSXIdentifier() && O().isMemberExpression(u)) {
                      var l = u.object,
                        c = u.property;
                      e.replaceWith(
                        O().JSXMemberExpression(
                          O().JSXIdentifier(l.name),
                          O().JSXIdentifier(c.name)
                        )
                      );
                    } else e.replaceWith(u);
                    i(e), e.skip();
                  }
                }
              }
            },
            AssignmentExpression: {
              exit: function(n) {
                var a = this,
                  r = this.scope,
                  e = this.seen,
                  t = this.imported,
                  i = this.exported,
                  o = this.requeueInParent,
                  s = this.buildImportReference;
                if (!e.has(n.node)) {
                  e.add(n.node);
                  var d = n.get("left");
                  if (d.isIdentifier()) {
                    var u = d.node.name;
                    if (r.getBinding(u) !== n.scope.getBinding(u)) return;
                    var l = i.get(u) || [],
                      c = t.get(u);
                    if (0 < l.length || c) {
                      (0, y().default)(
                        "=" === n.node.operator,
                        "Path was not simplified"
                      );
                      var p = n.node;
                      c &&
                        ((p.left = s(c, p.left)),
                        (p.right = O().sequenceExpression([p.right, v(u)]))),
                        n.replaceWith(m(this.metadata, l, p)),
                        o(n);
                    }
                  } else if (d.isMemberExpression());
                  else {
                    var g = d.getOuterBindingIdentifiers(),
                      f = Object.keys(g)
                        .filter(function(e) {
                          return t.has(e);
                        })
                        .pop();
                    f &&
                      (n.node.right = O().sequenceExpression([
                        n.node.right,
                        v(f),
                      ]));
                    var h = [];
                    if (
                      (Object.keys(g).forEach(function(e) {
                        if (r.getBinding(e) === n.scope.getBinding(e)) {
                          var t = i.get(e) || [];
                          0 < t.length &&
                            h.push(m(a.metadata, t, O().identifier(e)));
                        }
                      }),
                      0 < h.length)
                    ) {
                      var R = O().sequenceExpression(h);
                      n.parentPath.isExpressionStatement() &&
                        ((R = O().expressionStatement(R))._blockHoist =
                          n.parentPath.node._blockHoist),
                        o(n.insertAfter(R)[0]);
                    }
                  }
                }
              },
            },
          };
      },
      function(e, t, n) {
        "use strict";
        function C() {
          var e = n(6);
          return (
            (C = function() {
              return e;
            }),
            e
          );
        }
        function b() {
          var e,
            t = (e = n(84)) && e.__esModule ? e : { default: e };
          return (
            (b = function() {
              return t;
            }),
            t
          );
        }
        function w(e) {
          return (
            0 === e.imports.size &&
            0 === e.importsNamespace.size &&
            0 === e.reexports.size &&
            0 === e.reexportNamespace.size &&
            !e.reexportAll
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.hasExports = function(e) {
            var t = e.local,
              n = e.source;
            return (
              0 < t.size ||
              Array.from(n).some(function(e) {
                var t = e[1];
                return (
                  0 < t.reexports.size ||
                  0 < t.reexportNamespace.size ||
                  !!t.reexportAll
                );
              })
            );
          }),
          (t.isSideEffectImport = w),
          (t.default = function(e, t, n) {
            var a = void 0 === n ? {} : n,
              r = a.noInterop,
              i = void 0 !== r && r,
              o = a.loose,
              s = void 0 !== o && o,
              d = a.lazy,
              u = void 0 !== d && d,
              l = a.esNamespaceOnly,
              c = void 0 !== l && l;
            t || (t = e.scope.generateUidIdentifier("exports").name),
              e.get("body").forEach(function(e) {
                e.isExportDefaultDeclaration() && (0, b().default)(e);
              });
            var p = (function(a, e) {
                var t = e.lazy,
                  u = (function(e, r) {
                    var i = new Map();
                    e.get("body").forEach(function(e) {
                      var t;
                      if (e.isImportDeclaration()) t = "import";
                      else {
                        if (
                          (e.isExportDefaultDeclaration() &&
                            (e = e.get("declaration")),
                          e.isExportNamedDeclaration())
                        )
                          if (e.node.declaration) e = e.get("declaration");
                          else if (
                            r &&
                            e.node.source &&
                            e.get("source").isStringLiteral()
                          )
                            return void e.node.specifiers.forEach(function(e) {
                              i.set(e.local.name, "block");
                            });
                        if (e.isFunctionDeclaration()) t = "hoisted";
                        else if (e.isClassDeclaration()) t = "block";
                        else if (e.isVariableDeclaration({ kind: "var" }))
                          t = "var";
                        else {
                          if (!e.isVariableDeclaration()) return;
                          t = "block";
                        }
                      }
                      Object.keys(e.getOuterBindingIdentifiers()).forEach(
                        function(e) {
                          i.set(e, t);
                        }
                      );
                    });
                    var o = new Map(),
                      s = function(e) {
                        var t = e.node.name,
                          n = o.get(t);
                        if (!n) {
                          var a = i.get(t);
                          if (void 0 === a)
                            throw e.buildCodeFrameError(
                              'Exporting local "' +
                                t +
                                '", which is not declared.'
                            );
                          (n = { names: [], kind: a }), o.set(t, n);
                        }
                        return n;
                      };
                    return (
                      e.get("body").forEach(function(e) {
                        if (
                          !e.isExportNamedDeclaration() ||
                          (!r && e.node.source)
                        ) {
                          if (e.isExportDefaultDeclaration()) {
                            var t = e.get("declaration");
                            if (
                              !t.isFunctionDeclaration() &&
                              !t.isClassDeclaration()
                            )
                              throw t.buildCodeFrameError(
                                "Unexpected default expression export."
                              );
                            s(t.get("id")).names.push("default");
                          }
                        } else if (e.node.declaration) {
                          var n = e.get("declaration"),
                            a = n.getOuterBindingIdentifierPaths();
                          Object.keys(a).forEach(function(e) {
                            if ("__esModule" === e)
                              throw n.buildCodeFrameError(
                                'Illegal export "__esModule".'
                              );
                            s(a[e]).names.push(e);
                          });
                        } else
                          e.get("specifiers").forEach(function(e) {
                            var t = e.get("local"),
                              n = e.get("exported");
                            if ("__esModule" === n.node.name)
                              throw n.buildCodeFrameError(
                                'Illegal export "__esModule".'
                              );
                            s(t).names.push(n.node.name);
                          });
                      }),
                      o
                    );
                  })(a, e.loose),
                  r = new Map(),
                  n = function(e) {
                    var t = e.value,
                      n = r.get(t);
                    return (
                      n ||
                        ((n = {
                          name: a.scope.generateUidIdentifier(
                            (0, C().basename)(t, (0, C().extname)(t))
                          ).name,
                          interop: "none",
                          loc: null,
                          imports: new Map(),
                          importsNamespace: new Set(),
                          reexports: new Map(),
                          reexportNamespace: new Set(),
                          reexportAll: null,
                          lazy: !1,
                        }),
                        r.set(t, n)),
                      n
                    );
                  };
                a.get("body").forEach(function(e) {
                  if (e.isImportDeclaration()) {
                    var d = n(e.node.source);
                    d.loc || (d.loc = e.node.loc),
                      e.get("specifiers").forEach(function(e) {
                        if (e.isImportDefaultSpecifier()) {
                          var t = e.get("local").node.name;
                          d.imports.set(t, "default");
                          var n = u.get(t);
                          n &&
                            (u.delete(t),
                            n.names.forEach(function(e) {
                              d.reexports.set(e, "default");
                            }));
                        } else if (e.isImportNamespaceSpecifier()) {
                          var a = e.get("local").node.name;
                          d.importsNamespace.add(a);
                          var r = u.get(a);
                          r &&
                            (u.delete(a),
                            r.names.forEach(function(e) {
                              d.reexportNamespace.add(e);
                            }));
                        } else if (e.isImportSpecifier()) {
                          var i = e.get("imported").node.name,
                            o = e.get("local").node.name;
                          d.imports.set(o, i);
                          var s = u.get(o);
                          s &&
                            (u.delete(o),
                            s.names.forEach(function(e) {
                              d.reexports.set(e, i);
                            }));
                        }
                      });
                  } else if (e.isExportAllDeclaration()) {
                    var t = n(e.node.source);
                    t.loc || (t.loc = e.node.loc),
                      (t.reexportAll = { loc: e.node.loc });
                  } else if (e.isExportNamedDeclaration() && e.node.source) {
                    var a = n(e.node.source);
                    a.loc || (a.loc = e.node.loc),
                      e.get("specifiers").forEach(function(e) {
                        if (!e.isExportSpecifier())
                          throw e.buildCodeFrameError(
                            "Unexpected export specifier type"
                          );
                        var t = e.get("local").node.name,
                          n = e.get("exported").node.name;
                        if ((a.reexports.set(n, t), "__esModule" === n))
                          throw n.buildCodeFrameError(
                            'Illegal export "__esModule".'
                          );
                      });
                  }
                });
                var i = r.values(),
                  o = Array.isArray(i),
                  s = 0;
                for (i = o ? i : i[Symbol.iterator](); ; ) {
                  var d;
                  if (o) {
                    if (s >= i.length) break;
                    d = i[s++];
                  } else {
                    if ((s = i.next()).done) break;
                    d = s.value;
                  }
                  var l = d,
                    c = !1,
                    p = !1;
                  0 < l.importsNamespace.size && (p = c = !0),
                    l.reexportAll && (p = !0);
                  var g = l.imports.values(),
                    f = Array.isArray(g),
                    h = 0;
                  for (g = f ? g : g[Symbol.iterator](); ; ) {
                    var R;
                    if (f) {
                      if (h >= g.length) break;
                      R = g[h++];
                    } else {
                      if ((h = g.next()).done) break;
                      R = h.value;
                    }
                    "default" === R ? (c = !0) : (p = !0);
                  }
                  var y = l.reexports.values(),
                    m = Array.isArray(y),
                    v = 0;
                  for (y = m ? y : y[Symbol.iterator](); ; ) {
                    var b;
                    if (m) {
                      if (v >= y.length) break;
                      b = y[v++];
                    } else {
                      if ((v = y.next()).done) break;
                      b = v.value;
                    }
                    "default" === b ? (c = !0) : (p = !0);
                  }
                  c && p
                    ? (l.interop = "namespace")
                    : c && (l.interop = "default");
                }
                var E = r,
                  x = Array.isArray(E),
                  A = 0;
                for (E = x ? E : E[Symbol.iterator](); ; ) {
                  var S;
                  if (x) {
                    if (A >= E.length) break;
                    S = E[A++];
                  } else {
                    if ((A = E.next()).done) break;
                    S = A.value;
                  }
                  var _ = S,
                    T = _[0],
                    P = _[1];
                  if (!1 !== t && !w(P) && !P.reexportAll)
                    if (!0 === t) P.lazy = !/\./.test(T);
                    else if (Array.isArray(t)) P.lazy = t.indexOf(T);
                    else {
                      if ("function" != typeof t)
                        throw new Error(
                          ".lazy must be a boolean, string array, or function"
                        );
                      P.lazy = t(T);
                    }
                }
                return { local: u, source: r };
              })(e, { loose: s, lazy: u }),
              g = p.local,
              f = p.source;
            e.get("body").forEach(function(e) {
              if (e.isImportDeclaration()) e.remove();
              else if (e.isExportNamedDeclaration())
                e.node.declaration
                  ? ((e.node.declaration._blockHoist = e.node._blockHoist),
                    e.replaceWith(e.node.declaration))
                  : e.remove();
              else if (e.isExportDefaultDeclaration()) {
                var t = e.get("declaration");
                if (!t.isFunctionDeclaration() && !t.isClassDeclaration())
                  throw t.buildCodeFrameError(
                    "Unexpected default expression export."
                  );
                (t._blockHoist = e.node._blockHoist), e.replaceWith(t);
              } else e.isExportAllDeclaration() && e.remove();
            });
            var h = f,
              R = Array.isArray(h),
              y = 0;
            for (h = R ? h : h[Symbol.iterator](); ; ) {
              var m;
              if (R) {
                if (y >= h.length) break;
                m = h[y++];
              } else {
                if ((y = h.next()).done) break;
                m = y.value;
              }
              var v = m[1];
              0 < v.importsNamespace.size &&
                (v.name = v.importsNamespace.values().next().value),
                i
                  ? (v.interop = "none")
                  : c && "namespace" === v.interop && (v.interop = "default");
            }
            return {
              exportName: t,
              exportNameListName: null,
              local: g,
              source: f,
            };
          });
      },
      function(e, t, n) {
        "use strict";
        function E() {
          var e,
            t = (e = n(940)) && e.__esModule ? e : { default: e };
          return (
            (E = function() {
              return t;
            }),
            t
          );
        }
        function x() {
          var e = n(3);
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            for (
              var n = e.node,
                a = e.scope,
                r = { iife: !1, scope: a },
                i = [],
                o = e.get("params"),
                s = null,
                d = 0;
              d < o.length;
              d++
            ) {
              var u = o[d],
                l = u.isAssignmentPattern();
              if (l && (t || "set" === n.kind)) {
                var c = u.get("left"),
                  p = u.get("right"),
                  g = a.buildUndefinedNode();
                if (c.isIdentifier())
                  i.push(
                    S({
                      ASSIGNMENT_IDENTIFIER: x().types.cloneNode(c.node),
                      DEFAULT_VALUE: p.node,
                      UNDEFINED: g,
                    })
                  ),
                    u.replaceWith(c.node);
                else if (c.isObjectPattern() || c.isArrayPattern()) {
                  var f = a.generateUidIdentifier();
                  i.push(
                    _({
                      ASSIGNMENT_IDENTIFIER: c.node,
                      DEFAULT_VALUE: p.node,
                      PARAMETER_NAME: x().types.cloneNode(f),
                      UNDEFINED: g,
                    })
                  ),
                    u.replaceWith(f);
                }
              } else if (l) {
                null === s && (s = d);
                var h = u.get("left"),
                  R = u.get("right");
                r.iife ||
                  (R.isIdentifier() && !P(a, R.node)
                    ? (r.iife = !0)
                    : R.traverse(C, r));
                var y = A({
                  VARIABLE_NAME: h.node,
                  DEFAULT_VALUE: R.node,
                  ARGUMENT_KEY: x().types.numericLiteral(d),
                });
                i.push(y);
              } else if (null !== s) {
                var m = T([u.node, x().types.numericLiteral(d)]);
                i.push(m);
              } else if (u.isObjectPattern() || u.isArrayPattern()) {
                var v = e.scope.generateUidIdentifier("ref"),
                  b = x().types.variableDeclaration("let", [
                    x().types.variableDeclarator(u.node, v),
                  ]);
                i.push(b), u.replaceWith(x().types.cloneNode(v));
              }
              r.iife || u.isIdentifier() || u.traverse(C, r);
            }
            return (
              0 !== i.length &&
              (null !== s && (n.params = n.params.slice(0, s)),
              e.ensureBlock(),
              r.iife
                ? (i.push((0, E().default)(e, a)),
                  e.set("body", x().types.blockStatement(i)))
                : e.get("body").unshiftContainer("body", i),
              !0)
            );
          });
        var A = (0, x().template)(
            "\n  let VARIABLE_NAME =\n    arguments.length > ARGUMENT_KEY && arguments[ARGUMENT_KEY] !== undefined ?\n      arguments[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n"
          ),
          S = (0, x().template)(
            "\n  if (ASSIGNMENT_IDENTIFIER === UNDEFINED) {\n    ASSIGNMENT_IDENTIFIER = DEFAULT_VALUE;\n  }\n"
          ),
          _ = (0, x().template)(
            "\n  let ASSIGNMENT_IDENTIFIER = PARAMETER_NAME === UNDEFINED ? DEFAULT_VALUE : PARAMETER_NAME ;\n"
          ),
          T = (0, x().template)(
            "\n  let $0 = arguments.length > $1 ? arguments[$1] : undefined;\n"
          );
        function P(e, t) {
          if (!e.hasOwnBinding(t.name)) return !0;
          var n = e.getOwnBinding(t.name).kind;
          return "param" === n || "local" === n;
        }
        var C = {
          ReferencedIdentifier: function(e, t) {
            var n = e.scope,
              a = e.node;
            ("eval" !== a.name && P(n, a)) || ((t.iife = !0), e.stop());
          },
          Scope: function(e) {
            e.skip();
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function d() {
          var e,
            t = (e = n(240)) && e.__esModule ? e : { default: e };
          return (
            (d = function() {
              return t;
            }),
            t
          );
        }
        function u() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            void 0 === t && (t = e.scope);
            var n = e.node,
              a = u().functionExpression(
                null,
                [],
                n.body,
                n.generator,
                n.async
              ),
              r = a,
              i = [];
            (0, d().default)(e, function(e) {
              return t.push({ id: e });
            });
            var o = { foundThis: !1, foundArguments: !1 };
            e.traverse(l, o),
              o.foundArguments &&
                ((r = u().memberExpression(a, u().identifier("apply"))),
                (i = []),
                o.foundThis && i.push(u().thisExpression()),
                o.foundArguments &&
                  (o.foundThis || i.push(u().nullLiteral()),
                  i.push(u().identifier("arguments"))));
            var s = u().callExpression(r, i);
            return (
              n.generator && (s = u().yieldExpression(s, !0)),
              u().returnStatement(s)
            );
          });
        var l = {
          enter: function(e, t) {
            e.isThisExpression() && (t.foundThis = !0),
              e.isReferencedIdentifier({ name: "arguments" }) &&
                (t.foundArguments = !0);
          },
          Function: function(e) {
            e.skip();
          },
        };
      },
      function(e, t, n) {
        "use strict";
        function C() {
          var e = n(3);
          return (
            (C = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var t,
              n,
              a = e.node,
              r = e.scope;
            if (
              !(
                0 < (n = (t = a).params.length) &&
                C().types.isRestElement(t.params[n - 1])
              )
            )
              return !1;
            var i = a.params.pop().argument,
              o = C().types.identifier("arguments");
            if (C().types.isPattern(i)) {
              var s = i;
              i = r.generateUidIdentifier("ref");
              var d = C().types.variableDeclaration("let", [
                C().types.variableDeclarator(s, i),
              ]);
              a.body.body.unshift(d);
            }
            var u,
              l,
              c,
              p = {
                references: [],
                offset: a.params.length,
                argumentsNode: o,
                outerBinding: r.getBindingIdentifier(i.name),
                candidates: [],
                name: i.name,
                deopted: !1,
              };
            if ((e.traverse(O, p), !p.deopted && !p.references.length)) {
              var g = p.candidates,
                f = Array.isArray(g),
                h = 0;
              for (g = f ? g : g[Symbol.iterator](); ; ) {
                var R;
                if (f) {
                  if (h >= g.length) break;
                  R = g[h++];
                } else {
                  if ((h = g.next()).done) break;
                  R = h.value;
                }
                var y = R,
                  m = y.path,
                  v = y.cause,
                  b = C().types.cloneNode(o);
                switch (v) {
                  case "indexGetter":
                    F(m, b, p.offset);
                    break;
                  case "lengthGetter":
                    (u = m),
                      (l = b),
                      (c = p.offset)
                        ? u.parentPath.replaceWith(
                            D({
                              ARGUMENTS: l,
                              OFFSET: C().types.numericLiteral(c),
                            })
                          )
                        : u.replaceWith(l);
                    break;
                  default:
                    m.replaceWith(b);
                }
              }
              return !0;
            }
            p.references = p.references.concat(
              p.candidates.map(function(e) {
                return e.path;
              })
            );
            var E,
              x,
              A = C().types.numericLiteral(a.params.length),
              S = r.generateUidIdentifier("key"),
              _ = r.generateUidIdentifier("len");
            x = a.params.length
              ? ((E = C().types.binaryExpression(
                  "-",
                  C().types.cloneNode(S),
                  C().types.cloneNode(A)
                )),
                C().types.conditionalExpression(
                  C().types.binaryExpression(
                    ">",
                    C().types.cloneNode(_),
                    C().types.cloneNode(A)
                  ),
                  C().types.binaryExpression(
                    "-",
                    C().types.cloneNode(_),
                    C().types.cloneNode(A)
                  ),
                  C().types.numericLiteral(0)
                ))
              : ((E = C().types.identifier(S.name)),
                C().types.identifier(_.name));
            var T = w({
              ARGUMENTS: o,
              ARRAY_KEY: E,
              ARRAY_LEN: x,
              START: A,
              ARRAY: i,
              KEY: S,
              LEN: _,
            });
            if (p.deopted) a.body.body.unshift(T);
            else {
              var P = e
                .getEarliestCommonAncestorFrom(p.references)
                .getStatementParent();
              P.findParent(function(e) {
                if (!e.isLoop()) return e.isFunction();
                P = e;
              }),
                P.insertBefore(T);
            }
            return !0;
          });
        var w = (0, C().template)(
            "\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = new Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"
          ),
          u = (0, C().template)(
            "\n  (INDEX < OFFSET || ARGUMENTS.length <= INDEX) ? undefined : ARGUMENTS[INDEX]\n"
          ),
          l = (0, C().template)(
            "\n  REF = INDEX, (REF < OFFSET || ARGUMENTS.length <= REF) ? undefined : ARGUMENTS[REF]\n"
          ),
          D = (0, C().template)(
            "\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n"
          );
        function o(e, t) {
          return (
            e.node.name === t.name &&
            e.scope.bindingIdentifierEquals(t.name, t.outerBinding)
          );
        }
        var O = {
          Scope: function(e, t) {
            e.scope.bindingIdentifierEquals(t.name, t.outerBinding) || e.skip();
          },
          Flow: function(e) {
            e.isTypeCastExpression() || e.skip();
          },
          Function: function(e, t) {
            var n = t.noOptimise;
            (t.noOptimise = !0), e.traverse(O, t), (t.noOptimise = n), e.skip();
          },
          ReferencedIdentifier: function(e, t) {
            var n = e.node;
            if (("arguments" === n.name && (t.deopted = !0), o(e, t)))
              if (t.noOptimise) t.deopted = !0;
              else {
                var a = e.parentPath;
                if ("params" === a.listKey && a.key < t.offset) return;
                if (a.isMemberExpression({ object: n })) {
                  var r = a.parentPath;
                  if (
                    !t.deopted &&
                    !(
                      (r.isAssignmentExpression() && a.node === r.node.left) ||
                      r.isLVal() ||
                      r.isForXStatement() ||
                      r.isUpdateExpression() ||
                      r.isUnaryExpression({ operator: "delete" }) ||
                      ((r.isCallExpression() || r.isNewExpression()) &&
                        a.node === r.node.callee)
                    )
                  )
                    if (a.node.computed) {
                      if (a.get("property").isBaseType("number"))
                        return void t.candidates.push({
                          cause: "indexGetter",
                          path: e,
                        });
                    } else if ("length" === a.node.property.name)
                      return void t.candidates.push({
                        cause: "lengthGetter",
                        path: e,
                      });
                }
                if (0 === t.offset && a.isSpreadElement()) {
                  var i = a.parentPath;
                  if (i.isCallExpression() && 1 === i.node.arguments.length)
                    return void t.candidates.push({
                      cause: "argSpread",
                      path: e,
                    });
                }
                t.references.push(e);
              }
          },
          BindingIdentifier: function(e, t) {
            o(e, t) && (t.deopted = !0);
          },
        };
        function F(e, t, n) {
          var a,
            r = C().types.numericLiteral(n);
          a = C().types.isNumericLiteral(e.parent.property)
            ? C().types.numericLiteral(e.parent.property.value + n)
            : 0 === n
              ? e.parent.property
              : C().types.binaryExpression(
                  "+",
                  e.parent.property,
                  C().types.cloneNode(r)
                );
          var i = e.scope;
          if (i.isPure(a)) {
            var o = e.parentPath;
            o.replaceWith(u({ ARGUMENTS: t, OFFSET: r, INDEX: a }));
            var s = o
              .get("test")
              .get("left")
              .evaluate();
            s.confident &&
              (!0 === s.value
                ? o.replaceWith(o.scope.buildUndefinedNode())
                : o.get("test").replaceWith(o.get("test").get("right")));
          } else {
            var d = i.generateUidIdentifierBasedOnNode(a);
            i.push({ id: d, kind: "var" }),
              e.parentPath.replaceWith(
                l({
                  ARGUMENTS: t,
                  OFFSET: r,
                  INDEX: a,
                  REF: C().types.cloneNode(d),
                })
              );
          }
        }
      },
      function(e, t, n) {
        "use strict";
        function y() {
          var e,
            t = (e = n(15)) && e.__esModule ? e : { default: e };
          return (
            (y = function() {
              return t;
            }),
            t
          );
        }
        function a() {
          var e = n(3);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t) {
            var n = e.node;
            if (n.declare) e.remove();
            else {
              if (n.const)
                throw e.buildCodeFrameError("'const' enums are not supported.");
              var a,
                r,
                i,
                s,
                d,
                u,
                l,
                o,
                c,
                p,
                g,
                f = n.id.name,
                h = ((a = e),
                (r = t),
                (i = n.id),
                (o = ((s = a),
                (d = r),
                (u = Object.create(null)),
                (l = -1),
                s.node.members.map(function(e) {
                  var t,
                    n,
                    a,
                    r = d.isIdentifier(e.id) ? e.id.name : e.id.value,
                    i = e.initializer;
                  if (i) {
                    var o = ((a = u),
                    "StringLiteral" === (n = i).type
                      ? n.value
                      : (function r(e) {
                          switch (e.type) {
                            case "UnaryExpression":
                              return (function(e) {
                                var t = e.argument,
                                  n = e.operator,
                                  a = r(t);
                                if (void 0 !== a)
                                  switch (n) {
                                    case "+":
                                      return a;
                                    case "-":
                                      return -a;
                                    case "~":
                                      return ~a;
                                    default:
                                      return;
                                  }
                              })(e);
                            case "BinaryExpression":
                              return (function(e) {
                                var t = r(e.left);
                                if (void 0 !== t) {
                                  var n = r(e.right);
                                  if (void 0 !== n)
                                    switch (e.operator) {
                                      case "|":
                                        return t | n;
                                      case "&":
                                        return t & n;
                                      case ">>":
                                        return t >> n;
                                      case ">>>":
                                        return t >>> n;
                                      case "<<":
                                        return t << n;
                                      case "^":
                                        return t ^ n;
                                      case "*":
                                        return t * n;
                                      case "/":
                                        return t / n;
                                      case "+":
                                        return t + n;
                                      case "-":
                                        return t - n;
                                      case "%":
                                        return t % n;
                                      default:
                                        return;
                                    }
                                }
                              })(e);
                            case "NumericLiteral":
                              return e.value;
                            case "ParenthesizedExpression":
                              return r(e.expression);
                            case "Identifier":
                              return a[e.name];
                            default:
                              return;
                          }
                        })(n));
                    l =
                      void 0 !== o
                        ? "number" == typeof (u[r] = o)
                          ? ((t = d.numericLiteral(o)), o)
                          : ((0, y().default)("string" == typeof o),
                            void (t = d.stringLiteral(o)))
                        : void (t = i);
                  } else {
                    if (void 0 === l)
                      throw s.buildCodeFrameError(
                        "Enum member must have initializer."
                      );
                    l++, (t = d.numericLiteral(l)), (u[r] = l);
                  }
                  return [r, t];
                })).map(function(e) {
                  var t = e[0],
                    n = e[1];
                  return v(r.isStringLiteral(n), {
                    ENUM: r.cloneNode(i),
                    NAME: t,
                    VALUE: n,
                  });
                })),
                m({ ID: r.cloneNode(i), ASSIGNMENTS: o }));
              switch (e.parent.type) {
                case "BlockStatement":
                case "ExportNamedDeclaration":
                case "Program":
                  if (
                    (e.insertAfter(h),
                    (function e(t) {
                      return t.isExportDeclaration()
                        ? e(t.parentPath)
                        : !!t.getData(f) || (t.setData(f, !0), !1);
                    })(e.parentPath))
                  )
                    e.remove();
                  else {
                    var R = t.isProgram(e.parent);
                    e.replaceWith(
                      ((c = n.id),
                      (g = R ? "var" : "let"),
                      (p = t).variableDeclaration(g, [p.variableDeclarator(c)]))
                    );
                  }
                  break;
                default:
                  throw new Error("Unexpected enum parent '" + e.parent.type);
              }
            }
          });
        var m = (0, a().template)(
            "\n  (function (ID) {\n    ASSIGNMENTS;\n  })(ID || (ID = {}));\n"
          ),
          r = (0, a().template)('\n  ENUM["NAME"] = VALUE;\n'),
          i = (0, a().template)('\n  ENUM[ENUM["NAME"] = VALUE] = "NAME";\n'),
          v = function(e, t) {
            return (e ? r : i)(t);
          };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = n(3);
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                MemberExpression: {
                  exit: function(e) {
                    var t = e.node,
                      n = t.property;
                    t.computed ||
                      !r().types.isIdentifier(n) ||
                      r().types.isValidES3Identifier(n.name) ||
                      ((t.property = r().types.stringLiteral(n.name)),
                      (t.computed = !0));
                  },
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = n(3);
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                ObjectProperty: {
                  exit: function(e) {
                    var t = e.node,
                      n = t.key;
                    t.computed ||
                      !r().types.isIdentifier(n) ||
                      r().types.isValidES3Identifier(n.name) ||
                      (t.key = r().types.stringLiteral(n.name));
                  },
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(237));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function c() {
          var e = n(3);
          return (
            (c = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                ObjectExpression: function(e, t) {
                  var n = e.node,
                    a = !1,
                    r = n.properties,
                    i = Array.isArray(r),
                    o = 0;
                  for (r = i ? r : r[Symbol.iterator](); ; ) {
                    var s;
                    if (i) {
                      if (o >= r.length) break;
                      s = r[o++];
                    } else {
                      if ((o = r.next()).done) break;
                      s = o.value;
                    }
                    var d = s;
                    if ("get" === d.kind || "set" === d.kind) {
                      a = !0;
                      break;
                    }
                  }
                  if (a) {
                    var u = {};
                    (n.properties = n.properties.filter(function(e) {
                      return (
                        !!(
                          e.computed ||
                          ("get" !== e.kind && "set" !== e.kind)
                        ) || (l().push(u, e, null, t), !1)
                      );
                    })),
                      e.replaceWith(
                        c().types.callExpression(
                          c().types.memberExpression(
                            c().types.identifier("Object"),
                            c().types.identifier("defineProperties")
                          ),
                          [n, l().toDefineObject(u)]
                        )
                      );
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(947)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: (0, r().default)({
                operator: "**",
                build: function(e, t) {
                  return i().types.callExpression(
                    i().types.memberExpression(
                      i().types.identifier("Math"),
                      i().types.identifier("pow")
                    ),
                    [e, t]
                  );
                },
              }),
            }
          );
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function s() {
          var e,
            t = (e = n(948)) && e.__esModule ? e : { default: e };
          return (
            (s = function() {
              return t;
            }),
            t
          );
        }
        function d() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e) {
            var i = e.build,
              o = e.operator;
            return {
              AssignmentExpression: function(e) {
                var t = e.node,
                  n = e.scope;
                if (t.operator === o + "=") {
                  var a = [],
                    r = (0, s().default)(t.left, a, this, n);
                  a.push(
                    d().assignmentExpression("=", r.ref, i(r.uid, t.right))
                  ),
                    e.replaceWith(d().sequenceExpression(a));
                }
              },
              BinaryExpression: function(e) {
                var t = e.node;
                t.operator === o && e.replaceWith(i(t.left, t.right));
              },
            };
          });
      },
      function(e, t, n) {
        "use strict";
        function l() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(4));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = function(e, t, n, a, r) {
            var i, o, s;
            if (
              ((i =
                l().isIdentifier(e) && r
                  ? e
                  : (function(e, t, n, a) {
                      var r;
                      if (l().isSuper(e)) return e;
                      if (l().isIdentifier(e)) {
                        if (a.hasBinding(e.name)) return e;
                        r = e;
                      } else {
                        if (!l().isMemberExpression(e))
                          throw new Error(
                            "We can't explode this node type " + e.type
                          );
                        if (
                          ((r = e.object),
                          l().isSuper(r) ||
                            (l().isIdentifier(r) && a.hasBinding(r.name)))
                        )
                          return r;
                      }
                      var i = a.generateUidIdentifierBasedOnNode(r);
                      return (
                        a.push({ id: i }),
                        t.push(
                          l().assignmentExpression(
                            "=",
                            l().cloneNode(i),
                            l().cloneNode(r)
                          )
                        ),
                        i
                      );
                    })(e, t, 0, a)),
              l().isIdentifier(e))
            )
              (o = l().cloneNode(e)), (s = i);
            else {
              var d = (function(e, t, n, a) {
                  var r = e.property,
                    i = l().toComputedKey(e, r);
                  if (l().isLiteral(i) && l().isPureish(i)) return i;
                  var o = a.generateUidIdentifierBasedOnNode(r);
                  return (
                    a.push({ id: o }),
                    t.push(
                      l().assignmentExpression(
                        "=",
                        l().cloneNode(o),
                        l().cloneNode(r)
                      )
                    ),
                    o
                  );
                })(e, t, 0, a),
                u = e.computed || l().isLiteral(d);
              (s = l().memberExpression(l().cloneNode(i), l().cloneNode(d), u)),
                (o = l().memberExpression(
                  l().cloneNode(i),
                  l().cloneNode(d),
                  u
                ));
            }
            return { uid: s, ref: o };
          });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e,
            t = (e = n(93)) && e.__esModule ? e : { default: e };
          return (
            (o = function() {
              return t;
            }),
            t
          );
        }
        function s() {
          var e = n(3);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          function r(e, t) {
            var n = e.getPrevSibling(),
              a = "trailing";
            n.node || ((n = e.parentPath), (a = "inner")),
              n.addComment(a, i(e, t)),
              e.remove();
          }
          function i(e, t) {
            var n = e
              .getSource()
              .replace(/\*-\//g, "*-ESCAPED/")
              .replace(/\*\//g, "*-/");
            return (
              t && t.optional && (n = "?" + n),
              ":" !== n[0] && (n = ":: " + n),
              n
            );
          }
          return (
            e.assertVersion(7),
            {
              inherits: o().default,
              visitor: {
                TypeCastExpression: function(e) {
                  var t = e.node;
                  e
                    .get("expression")
                    .addComment("trailing", i(e.get("typeAnnotation"))),
                    e.replaceWith(
                      s().types.parenthesizedExpression(t.expression)
                    );
                },
                Identifier: function(e) {
                  if (!e.parentPath.isFlow()) {
                    var t = e.node;
                    if (t.typeAnnotation) {
                      var n = e.get("typeAnnotation");
                      e.addComment("trailing", i(n, t)),
                        n.remove(),
                        t.optional && (t.optional = !1);
                    } else
                      t.optional &&
                        (e.addComment("trailing", ":: ?"), (t.optional = !1));
                  }
                },
                AssignmentPattern: {
                  exit: function(e) {
                    var t = e.node.left;
                    t.optional && (t.optional = !1);
                  },
                },
                Function: function(e) {
                  if (!e.isDeclareFunction()) {
                    var t = e.node;
                    if (t.returnType) {
                      var n = e.get("returnType"),
                        a = n.get("typeAnnotation");
                      e.get("body").addComment("leading", i(n, a.node)),
                        n.remove();
                    }
                    if (t.typeParameters) {
                      var r = e.get("typeParameters");
                      e.get("id").addComment("trailing", i(r, r.node)),
                        r.remove();
                    }
                  }
                },
                ClassProperty: function(e) {
                  var t = e.node,
                    n = e.parent;
                  if (t.value) {
                    if (t.typeAnnotation) {
                      var a = e.get("typeAnnotation");
                      e.get("key").addComment("trailing", i(a, a.node)),
                        a.remove();
                    }
                  } else r(e, n);
                },
                ExportNamedDeclaration: function(e) {
                  var t = e.node,
                    n = e.parent;
                  ("type" === t.exportKind ||
                    s().types.isFlow(t.declaration)) &&
                    r(e, n);
                },
                ImportDeclaration: function(e) {
                  var t = e.node,
                    n = e.parent;
                  ("type" !== t.importKind && "typeof" !== t.importKind) ||
                    r(e, n);
                },
                Flow: function(e) {
                  r(e, e.parent);
                },
                Class: function(e) {
                  if (e.node.typeParameters) {
                    var t = e.get("typeParameters");
                    e.get("body").addComment("leading", i(t, t.node)),
                      t.remove();
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e = n(3);
          return (
            (r = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                FunctionExpression: {
                  exit: function(e) {
                    var t = e.node;
                    t.id &&
                      e.replaceWith(
                        r().types.callExpression(
                          r().types.functionExpression(
                            null,
                            [],
                            r().types.blockStatement([
                              r().types.toStatement(t),
                              r().types.returnStatement(
                                r().types.cloneNode(t.id)
                              ),
                            ])
                          ),
                          []
                        )
                      );
                  },
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = n(3);
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              name: "transform-new-target",
              visitor: {
                MetaProperty: function(e) {
                  var t = e.get("meta"),
                    n = e.get("property"),
                    a = e.scope;
                  if (
                    t.isIdentifier({ name: "new" }) &&
                    n.isIdentifier({ name: "target" })
                  ) {
                    var r = e.findParent(function(e) {
                      return (
                        !!e.isClass() ||
                        (!(!e.isFunction() || e.isArrowFunctionExpression()) &&
                          !e.isClassMethod({ kind: "constructor" }))
                      );
                    });
                    if (!r)
                      throw e.buildCodeFrameError(
                        "new.target must be under a (non-arrow) function or a class."
                      );
                    var i = r.node;
                    if (!i.id) {
                      if (r.isMethod())
                        return void e.replaceWith(a.buildUndefinedNode());
                      i.id = a.generateUidIdentifier("target");
                    }
                    var o = s().types.memberExpression(
                      s().types.thisExpression(),
                      s().types.identifier("constructor")
                    );
                    if (r.isClass()) return void e.replaceWith(o);
                    e.replaceWith(
                      s().types.conditionalExpression(
                        s().types.binaryExpression(
                          "instanceof",
                          s().types.thisExpression(),
                          s().types.cloneNode(i.id)
                        ),
                        o,
                        a.buildUndefinedNode()
                      )
                    );
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                CallExpression: function(e, t) {
                  e.get("callee").matchesPattern("Object.assign") &&
                    (e.node.callee = t.addHelper("extends"));
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function o() {
          var e,
            t = (e = n(228)) && e.__esModule ? e : { default: e };
          return (
            (o = function() {
              return t;
            }),
            t
          );
        }
        function y() {
          var e = n(3);
          return (
            (y = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.useBuiltIns,
            a = void 0 !== n && n,
            r = t.loose,
            h = void 0 !== r && r;
          if ("boolean" != typeof h)
            throw new Error(".loose must be a boolean, or undefined");
          function c(e) {
            return a
              ? y().types.memberExpression(
                  y().types.identifier("Object"),
                  y().types.identifier("assign")
                )
              : e.addHelper("extends");
          }
          function l(e) {
            var t = !1;
            return (
              i(e, function() {
                (t = !0), e.stop();
              }),
              t
            );
          }
          function i(e, t) {
            e.traverse({
              Expression: function(e) {
                var t = e.parent.type;
                (("AssignmentPattern" == t && "right" === e.key) ||
                  ("ObjectProperty" == t &&
                    e.parent.computed &&
                    "key" === e.key)) &&
                  e.skip();
              },
              RestElement: t,
            });
          }
          function R(d, e, t) {
            var n = d.get("properties"),
              a = n[n.length - 1];
            y().types.assertRestElement(a.node);
            var r = y().types.cloneNode(a.node);
            a.remove();
            var i,
              o = (function(e) {
                var t = [],
                  n = e.get("properties"),
                  a = Array.isArray(n),
                  r = 0;
                for (n = a ? n : n[Symbol.iterator](); ; ) {
                  var i;
                  if (a) {
                    if (r >= n.length) break;
                    i = n[r++];
                  } else {
                    if ((r = n.next()).done) break;
                    i = r.value;
                  }
                  var o = i,
                    s = o.get("key");
                  if (o.node.computed && !s.isPure()) {
                    var d = e.scope.generateUidBasedOnNode(s.node),
                      u = y().types.variableDeclarator(
                        y().types.identifier(d),
                        s.node
                      );
                    t.push(u), s.replaceWith(y().types.identifier(d));
                  }
                }
                return t;
              })(d),
              s = (function(e) {
                var t = [],
                  n = !0,
                  a = d.node.properties,
                  r = Array.isArray(a),
                  i = 0;
                for (a = r ? a : a[Symbol.iterator](); ; ) {
                  var o;
                  if (r) {
                    if (i >= a.length) break;
                    o = a[i++];
                  } else {
                    if ((i = a.next()).done) break;
                    o = i.value;
                  }
                  var s = o;
                  y().types.isIdentifier(s.key) && !s.computed
                    ? t.push(y().types.stringLiteral(s.key.name))
                    : y().types.isLiteral(s.key)
                      ? t.push(y().types.stringLiteral(String(s.key.value)))
                      : (t.push(y().types.cloneNode(s.key)), (n = !1));
                }
                return { keys: t, allLiteral: n };
              })(),
              u = s.keys,
              l = s.allLiteral;
            return 0 === u.length
              ? [
                  o,
                  r.argument,
                  y().types.callExpression(c(e), [
                    y().types.objectExpression([]),
                    y().types.cloneNode(t),
                  ]),
                ]
              : ((i = l
                  ? y().types.arrayExpression(u)
                  : y().types.callExpression(
                      y().types.memberExpression(
                        y().types.arrayExpression(u),
                        y().types.identifier("map")
                      ),
                      [e.addHelper("toPropertyKey")]
                    )),
                [
                  o,
                  r.argument,
                  y().types.callExpression(
                    e.addHelper("objectWithoutProperties" + (h ? "Loose" : "")),
                    [y().types.cloneNode(t), i]
                  ),
                ]);
          }
          function d(e, t, n, a) {
            if (t.isAssignmentPattern()) d(e, t.get("left"), n, a);
            else {
              if (t.isArrayPattern() && l(t))
                for (var r = t.get("elements"), i = 0; i < r.length; i++)
                  d(e, r[i], i, r.length);
              if (t.isObjectPattern() && l(t)) {
                var o = e.scope.generateUidIdentifier("ref"),
                  s = y().types.variableDeclaration("let", [
                    y().types.variableDeclarator(t.node, o),
                  ]);
                e.ensureBlock(),
                  e.get("body").unshiftContainer("body", s),
                  t.replaceWith(y().types.cloneNode(o));
              }
            }
          }
          return {
            inherits: o().default,
            visitor: {
              Function: function(e) {
                for (var t = e.get("params"), n = t.length - 1; 0 <= n; n--)
                  d(t[n].parentPath, t[n], n, t.length);
              },
              VariableDeclarator: function(e, p) {
                if (e.get("id").isObjectPattern()) {
                  var g = e,
                    f = e;
                  i(e.get("id"), function(e) {
                    if (e.parentPath.isObjectPattern()) {
                      if (
                        1 < f.node.id.properties.length &&
                        !y().types.isIdentifier(f.node.init)
                      ) {
                        var t = e.scope.generateUidIdentifierBasedOnNode(
                          f.node.init,
                          "ref"
                        );
                        return (
                          f.insertBefore(
                            y().types.variableDeclarator(t, f.node.init)
                          ),
                          void f.replaceWith(
                            y().types.variableDeclarator(
                              f.node.id,
                              y().types.cloneNode(t)
                            )
                          )
                        );
                      }
                      var n,
                        a = f.node.init,
                        r = [];
                      e.findParent(function(e) {
                        if (e.isObjectProperty()) r.unshift(e.node.key.name);
                        else if (e.isVariableDeclarator())
                          return (n = e.parentPath.node.kind), !0;
                      }),
                        r.length &&
                          r.forEach(function(e) {
                            a = y().types.memberExpression(
                              a,
                              y().types.identifier(e)
                            );
                          });
                      var i = e.findParent(function(e) {
                          return e.isObjectPattern();
                        }),
                        o = R(i, p, a),
                        s = o[0],
                        d = o[1],
                        u = o[2];
                      h &&
                        ((c = (l = i).getOuterBindingIdentifierPaths()),
                        Object.keys(c).forEach(function(e) {
                          var t = c[e].parentPath;
                          1 < l.scope.getBinding(e).references ||
                            !t.isObjectProperty() ||
                            t.remove();
                        })),
                        y().types.assertIdentifier(d),
                        g.insertBefore(s),
                        g.insertAfter(y().types.variableDeclarator(d, u)),
                        (g = g.getSibling(g.key + 1)),
                        e.scope.registerBinding(n, g),
                        0 === i.node.properties.length &&
                          i
                            .findParent(function(e) {
                              return (
                                e.isObjectProperty() || e.isVariableDeclarator()
                              );
                            })
                            .remove();
                    }
                    var l, c;
                  });
                }
              },
              ExportNamedDeclaration: function(e) {
                var t = e.get("declaration");
                if (
                  t.isVariableDeclaration() &&
                  t.get("declarations").some(function(e) {
                    return l(e.get("id"));
                  })
                ) {
                  var n = [];
                  for (var a in e.getOuterBindingIdentifiers(e))
                    n.push(
                      y().types.exportSpecifier(
                        y().types.identifier(a),
                        y().types.identifier(a)
                      )
                    );
                  e.replaceWith(t.node),
                    e.insertAfter(y().types.exportNamedDeclaration(null, n));
                }
              },
              CatchClause: function(e) {
                var t = e.get("param");
                d(t.parentPath, t);
              },
              AssignmentExpression: function(e, t) {
                var n = e.get("left");
                if (n.isObjectPattern() && l(n)) {
                  var a = [],
                    r = e.scope.generateUidBasedOnNode(e.node.right, "ref");
                  a.push(
                    y().types.variableDeclaration("var", [
                      y().types.variableDeclarator(
                        y().types.identifier(r),
                        e.node.right
                      ),
                    ])
                  );
                  var i = R(n, t, y().types.identifier(r)),
                    o = i[0],
                    s = i[1],
                    d = i[2];
                  0 < o.length &&
                    a.push(y().types.variableDeclaration("var", o));
                  var u = y().types.cloneNode(e.node);
                  (u.right = y().types.identifier(r)),
                    a.push(y().types.expressionStatement(u)),
                    a.push(
                      y().types.toStatement(
                        y().types.assignmentExpression("=", s, d)
                      )
                    ),
                    a.push(
                      y().types.expressionStatement(y().types.identifier(r))
                    ),
                    e.replaceWithMultiple(a);
                }
              },
              ForXStatement: function(e) {
                var t = e.node,
                  n = e.scope,
                  a = e.get("left"),
                  r = t.left;
                if (y().types.isObjectPattern(r) && l(a)) {
                  var i = n.generateUidIdentifier("ref");
                  return (
                    (t.left = y().types.variableDeclaration("var", [
                      y().types.variableDeclarator(i),
                    ])),
                    e.ensureBlock(),
                    void t.body.body.unshift(
                      y().types.variableDeclaration("var", [
                        y().types.variableDeclarator(r, y().types.cloneNode(i)),
                      ])
                    )
                  );
                }
                if (y().types.isVariableDeclaration(r)) {
                  var o = r.declarations[0].id;
                  if (y().types.isObjectPattern(o)) {
                    var s = n.generateUidIdentifier("ref");
                    (t.left = y().types.variableDeclaration(r.kind, [
                      y().types.variableDeclarator(s, null),
                    ])),
                      e.ensureBlock(),
                      t.body.body.unshift(
                        y().types.variableDeclaration(t.left.kind, [
                          y().types.variableDeclarator(
                            o,
                            y().types.cloneNode(s)
                          ),
                        ])
                      );
                  }
                }
              },
              ObjectExpression: function(o, e) {
                if (
                  (function(e) {
                    var t = o.node.properties,
                      n = Array.isArray(t),
                      a = 0;
                    for (t = n ? t : t[Symbol.iterator](); ; ) {
                      var r;
                      if (n) {
                        if (a >= t.length) break;
                        r = t[a++];
                      } else {
                        if ((a = t.next()).done) break;
                        r = a.value;
                      }
                      var i = r;
                      if (y().types.isSpreadElement(i)) return !0;
                    }
                    return !1;
                  })()
                ) {
                  var t,
                    n = [],
                    a = [];
                  y().types.isSpreadElement(o.node.properties[0]) &&
                    n.push(y().types.objectExpression([]));
                  var r = o.node.properties,
                    i = Array.isArray(r),
                    s = 0;
                  for (r = i ? r : r[Symbol.iterator](); ; ) {
                    var d;
                    if (i) {
                      if (s >= r.length) break;
                      d = r[s++];
                    } else {
                      if ((s = r.next()).done) break;
                      d = s.value;
                    }
                    var u = d;
                    y().types.isSpreadElement(u)
                      ? (l(), n.push(u.argument))
                      : a.push(u);
                  }
                  l(),
                    (t = h ? c(e) : e.addHelper("objectSpread")),
                    o.replaceWith(y().types.callExpression(t, n));
                }
                function l() {
                  a.length && (n.push(y().types.objectExpression(a)), (a = []));
                }
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                CallExpression: function(e, t) {
                  e.get("callee").matchesPattern("Object.setPrototypeOf") &&
                    (e.node.callee = t.addHelper("defaults"));
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(229)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              inherits: r().default,
              visitor: {
                CatchClause: function(e) {
                  if (!e.node.param) {
                    var t = e.scope.generateUidIdentifier("unused");
                    e.get("param").replaceWith(t);
                  }
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function c() {
          var e,
            t = (e = n(238)) && e.__esModule ? e : { default: e };
          return (
            (c = function() {
              return t;
            }),
            t
          );
        }
        function p() {
          var e = n(3);
          return (
            (p = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          function i(e) {
            var t = e.left;
            return (
              p().types.isMemberExpression(t) &&
              p().types.isLiteral(p().types.toComputedKey(t, t.property), {
                value: "__proto__",
              })
            );
          }
          function o(e, t, n) {
            return p().types.expressionStatement(
              p().types.callExpression(n.addHelper("defaults"), [t, e.right])
            );
          }
          return (
            e.assertVersion(7),
            {
              visitor: {
                AssignmentExpression: function(e, t) {
                  if (i(e.node)) {
                    var n = [],
                      a = e.node.left.object,
                      r = e.scope.maybeGenerateMemoised(a);
                    r &&
                      n.push(
                        p().types.expressionStatement(
                          p().types.assignmentExpression("=", r, a)
                        )
                      ),
                      n.push(o(e.node, p().types.cloneNode(r || a), t)),
                      r && n.push(p().types.cloneNode(r)),
                      e.replaceWithMultiple(n);
                  }
                },
                ExpressionStatement: function(e, t) {
                  var n = e.node.expression;
                  p().types.isAssignmentExpression(n, { operator: "=" }) &&
                    i(n) &&
                    e.replaceWith(o(n, n.left.object, t));
                },
                ObjectExpression: function(e, t) {
                  var n,
                    a,
                    r = e.node,
                    i = r.properties,
                    o = Array.isArray(i),
                    s = 0;
                  for (i = o ? i : i[Symbol.iterator](); ; ) {
                    var d;
                    if (o) {
                      if (s >= i.length) break;
                      d = i[s++];
                    } else {
                      if ((s = i.next()).done) break;
                      d = s.value;
                    }
                    var u = d;
                    (a = u),
                      p().types.isLiteral(p().types.toComputedKey(a, a.key), {
                        value: "__proto__",
                      }) && ((n = u.value), (0, c().default)(r.properties, u));
                  }
                  if (n) {
                    var l = [p().types.objectExpression([]), n];
                    r.properties.length && l.push(r),
                      e.replaceWith(
                        p().types.callExpression(t.addHelper("extends"), l)
                      );
                  }
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = n(3);
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e,
            t = (e = n(94)) && e.__esModule ? e : { default: e };
          return (
            (u = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var i = t.allowMutablePropsOnTags;
          if (null != i && !Array.isArray(i))
            throw new Error(
              ".allowMutablePropsOnTags must be an array, null, or undefined."
            );
          var o = new WeakSet(),
            s = {
              enter: function(e, t) {
                var n = function() {
                  (t.isImmutable = !1), e.stop();
                };
                if (e.isJSXClosingElement()) e.skip();
                else {
                  if (
                    e.isJSXIdentifier({ name: "ref" }) &&
                    e.parentPath.isJSXAttribute({ name: e.node })
                  )
                    return n();
                  if (
                    !(
                      e.isJSXIdentifier() ||
                      e.isIdentifier() ||
                      e.isJSXMemberExpression() ||
                      e.isImmutable()
                    )
                  ) {
                    if (e.isPure()) {
                      var a = e.evaluate();
                      if (a.confident) {
                        var r = a.value;
                        if (
                          (t.mutablePropsAllowed ||
                            !r ||
                            "object" != typeof r) &&
                          "function" != typeof r
                        )
                          return void e.skip();
                      } else if (d().types.isIdentifier(a.deopt)) return;
                    }
                    n();
                  }
                }
              },
            };
          return {
            visitor: {
              JSXElement: function(e) {
                if (!o.has(e.node)) {
                  o.add(e.node);
                  var t = { isImmutable: !0 };
                  if (null != i) {
                    for (
                      var n = e.get("openingElement.name");
                      n.isJSXMemberExpression();

                    )
                      n = n.get("property");
                    var a = n.node.name;
                    t.mutablePropsAllowed = -1 < i.indexOf(a);
                  }
                  if ((e.traverse(s, t), t.isImmutable)) {
                    var r = e.hoist();
                    r && (0, u().default)(r);
                  }
                }
              },
            },
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(100)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: (0, r().default)({
                filter: function(e) {
                  return (
                    e.openingElement &&
                    !(function(e) {
                      for (var t = 0; t < e.length; t++) {
                        var n = e[t];
                        if (i().types.isJSXSpreadAttribute(n)) return !0;
                        if (
                          ((a = n),
                          (r = "ref"),
                          i().types.isJSXAttribute(a) &&
                            i().types.isJSXIdentifier(a.name, { name: r }))
                        )
                          return !0;
                      }
                      var a, r;
                      return !1;
                    })(e.openingElement.attributes)
                  );
                },
                pre: function(e) {
                  var t = e.tagName,
                    n = e.args;
                  i().types.react.isCompatTag(t)
                    ? n.push(i().types.stringLiteral(t))
                    : n.push(e.tagExpr);
                },
                post: function(e, t) {
                  e.callee = t.addHelper("jsx");
                  var n = e.args[1],
                    a = !1;
                  if (i().types.isObjectExpression(n)) {
                    var r = n.properties.findIndex(function(e) {
                      return i().types.isIdentifier(e.key, { name: "key" });
                    });
                    -1 < r &&
                      (e.args.splice(2, 0, n.properties[r].value),
                      n.properties.splice(r, 1),
                      (a = !0));
                  } else
                    i().types.isNullLiteral(n) &&
                      e.args.splice(1, 1, i().types.objectExpression([]));
                  !a &&
                    2 < e.args.length &&
                    e.args.splice(
                      2,
                      0,
                      i().types.unaryExpression(
                        "void",
                        i().types.numericLiteral(0)
                      )
                    );
                },
              }),
            }
          );
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(100)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("jsx");
              },
              visitor: (0, r().default)({
                pre: function(e) {
                  e.callee = e.tagExpr;
                },
                post: function(e) {
                  i().types.react.isCompatTag(e.tagName) &&
                    (e.call = i().types.callExpression(
                      i().types.memberExpression(
                        i().types.memberExpression(
                          i().types.identifier("React"),
                          i().types.identifier("DOM")
                        ),
                        e.tagExpr,
                        i().types.isLiteral(e.tagExpr)
                      ),
                      e.args
                    ));
                },
                compat: !0,
              }),
            }
          );
        });
        t.default = o;
      },
      function(e, t, a) {
        "use strict";
        (t.__esModule = !0),
          (t.default = function(e) {
            var t = { visitor: a(961).getVisitor(e) },
              n = e && e.version;
            return (
              n && 7 <= parseInt(n, 10) && (t.name = "regenerator-transform"), t
            );
          });
      },
      function(e, t, n) {
        "use strict";
        var S = a(n(15)),
          _ = n(962),
          T = n(247),
          P = a(n(965)),
          C = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(32));
        function a(e) {
          return e && e.__esModule ? e : { default: e };
        }
        t.getVisitor = function(e) {
          var A = e.types;
          return {
            Function: {
              exit: C.wrapWithTypes(A, function(e, t) {
                var n = e.node;
                if (n.generator) {
                  if (n.async) {
                    if (!1 === t.opts.asyncGenerators) return;
                  } else if (!1 === t.opts.generators) return;
                } else {
                  if (!n.async) return;
                  if (!1 === t.opts.async) return;
                }
                n = (e = (0, P.default)(e)).node;
                var a = e.scope.generateUidIdentifier("context"),
                  r = e.scope.generateUidIdentifier("args");
                e.ensureBlock();
                var i = e.get("body");
                n.async && i.traverse(F), i.traverse(O, { context: a });
                var o = [],
                  s = [];
                i.get("body").forEach(function(e) {
                  var t = e.node;
                  A.isExpressionStatement(t) && A.isStringLiteral(t.expression)
                    ? o.push(t)
                    : t && null != t._blockHoist
                      ? o.push(t)
                      : s.push(t);
                }),
                  0 < o.length && (i.node.body = s);
                var d,
                  u,
                  l,
                  c = ((d = e),
                  (u = C.getTypes()),
                  (l = d.node),
                  u.assertFunction(l),
                  l.id ||
                    (l.id = d.scope.parent.generateUidIdentifier("callee")),
                  l.generator && u.isFunctionDeclaration(l)
                    ? (function(e) {
                        var t = C.getTypes(),
                          n = e.node;
                        t.assertIdentifier(n.id);
                        var a = e.findParent(function(e) {
                          return e.isProgram() || e.isBlockStatement();
                        });
                        if (!a) return n.id;
                        var r = a.node;
                        S.default.ok(Array.isArray(r.body));
                        var i = w(r);
                        i.decl ||
                          ((i.decl = t.variableDeclaration("var", [])),
                          a.unshiftContainer("body", i.decl),
                          (i.declPath = a.get("body.0"))),
                          S.default.strictEqual(i.declPath.node, i.decl);
                        var o = a.scope.generateUidIdentifier("marked"),
                          s = t.callExpression(C.runtimeProperty("mark"), [
                            t.clone(n.id),
                          ]),
                          d =
                            i.decl.declarations.push(
                              t.variableDeclarator(o, s)
                            ) - 1,
                          u = i.declPath.get("declarations." + d + ".init");
                        return (
                          S.default.strictEqual(u.node, s),
                          u.addComment("leading", "#__PURE__"),
                          t.clone(o)
                        );
                      })(d)
                    : u.clone(l.id));
                A.assertIdentifier(n.id);
                var p,
                  g = A.identifier(n.id.name + "$"),
                  f = (0, _.hoist)(e);
                if (
                  ((p = {
                    didRenameArguments: !1,
                    getArgsId: function() {
                      return A.clone(r);
                    },
                  }),
                  e.traverse(D, p),
                  p.didRenameArguments)
                ) {
                  f = f || A.variableDeclaration("var", []);
                  var h = A.identifier("arguments");
                  (h._shadowedFunctionLiteral = e),
                    f.declarations.push(A.variableDeclarator(A.clone(r), h));
                }
                var R = new T.Emitter(a);
                R.explode(e.get("body")),
                  f && 0 < f.declarations.length && o.push(f);
                var y = [
                    R.getContextFunction(g),
                    n.generator ? c : A.nullLiteral(),
                    A.thisExpression(),
                  ],
                  m = R.getTryLocsList();
                m && y.push(m);
                var v = A.callExpression(
                  C.runtimeProperty(n.async ? "async" : "wrap"),
                  y
                );
                o.push(A.returnStatement(v)), (n.body = A.blockStatement(o));
                var b = i.node.directives;
                b && (n.body.directives = b);
                var E = n.generator;
                E && (n.generator = !1),
                  n.async && (n.async = !1),
                  E &&
                    A.isExpression(n) &&
                    (C.replaceWithOrRemove(
                      e,
                      A.callExpression(C.runtimeProperty("mark"), [n])
                    ),
                    e.addComment("leading", "#__PURE__"));
                var x = R.getInsertedLocs();
                e.traverse({
                  NumericLiteral: function(e) {
                    x.has(e.node) &&
                      e.replaceWith(A.numericLiteral(e.node.value));
                  },
                }),
                  e.requeue();
              }),
            },
          };
        };
        var w = n(248).makeAccessor(),
          D = {
            "FunctionExpression|FunctionDeclaration": function(e) {
              e.skip();
            },
            Identifier: function(e, t) {
              "arguments" === e.node.name &&
                C.isReference(e) &&
                (C.replaceWithOrRemove(e, t.getArgsId()),
                (t.didRenameArguments = !0));
            },
          },
          O = {
            MetaProperty: function(e) {
              var t = e.node;
              if ("function" === t.meta.name && "sent" === t.property.name) {
                var n = C.getTypes();
                C.replaceWithOrRemove(
                  e,
                  n.memberExpression(
                    n.clone(this.context),
                    n.identifier("_sent")
                  )
                );
              }
            },
          },
          F = {
            Function: function(e) {
              e.skip();
            },
            AwaitExpression: function(e) {
              var t = C.getTypes(),
                n = e.node.argument;
              C.replaceWithOrRemove(
                e,
                t.yieldExpression(
                  t.callExpression(C.runtimeProperty("awrap"), [n]),
                  !1
                )
              );
            },
          };
      },
      function(e, t, n) {
        "use strict";
        var o = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(32)),
          s = Object.prototype.hasOwnProperty;
        t.hoist = function(e) {
          var a = o.getTypes();
          a.assertFunction(e.node);
          var r = {};
          function n(e, t) {
            a.assertVariableDeclaration(e);
            var n = [];
            return (
              e.declarations.forEach(function(e) {
                (r[e.id.name] = a.identifier(e.id.name)),
                  e.init
                    ? n.push(a.assignmentExpression("=", e.id, e.init))
                    : t && n.push(e.id);
              }),
              0 === n.length
                ? null
                : 1 === n.length
                  ? n[0]
                  : a.sequenceExpression(n)
            );
          }
          e.get("body").traverse({
            VariableDeclaration: {
              exit: function(e) {
                var t = n(e.node, !1);
                null === t
                  ? e.remove()
                  : o.replaceWithOrRemove(e, a.expressionStatement(t)),
                  e.skip();
              },
            },
            ForStatement: function(e) {
              var t = e.node.init;
              a.isVariableDeclaration(t) &&
                o.replaceWithOrRemove(e.get("init"), n(t, !1));
            },
            ForXStatement: function(e) {
              var t = e.get("left");
              t.isVariableDeclaration() &&
                o.replaceWithOrRemove(t, n(t.node, !0));
            },
            FunctionDeclaration: function(e) {
              var t = e.node;
              r[t.id.name] = t.id;
              var n = a.expressionStatement(
                a.assignmentExpression(
                  "=",
                  a.clone(t.id),
                  a.functionExpression(
                    e.scope.generateUidIdentifierBasedOnNode(t),
                    t.params,
                    t.body,
                    t.generator,
                    t.expression
                  )
                )
              );
              e.parentPath.isBlockStatement()
                ? (e.parentPath.unshiftContainer("body", n), e.remove())
                : o.replaceWithOrRemove(e, n),
                e.skip();
            },
            FunctionExpression: function(e) {
              e.skip();
            },
            ArrowFunctionExpression: function(e) {
              e.skip();
            },
          });
          var i = {};
          e.get("params").forEach(function(e) {
            var t = e.node;
            a.isIdentifier(t) && (i[t.name] = t);
          });
          var t = [];
          return (
            Object.keys(r).forEach(function(e) {
              s.call(i, e) || t.push(a.variableDeclarator(r[e], null));
            }),
            0 === t.length ? null : a.variableDeclaration("var", t)
          );
        };
      },
      function(e, t, n) {
        "use strict";
        var a,
          r = (a = n(15)) && a.__esModule ? a : { default: a },
          i = n(234),
          o = n(32);
        function s() {
          r.default.ok(this instanceof s);
        }
        function d(e) {
          s.call(this),
            (0, o.getTypes)().assertLiteral(e),
            (this.returnLoc = e);
        }
        function u(e, t, n) {
          s.call(this);
          var a = (0, o.getTypes)();
          a.assertLiteral(e),
            a.assertLiteral(t),
            n ? a.assertIdentifier(n) : (n = null),
            (this.breakLoc = e),
            (this.continueLoc = t),
            (this.label = n);
        }
        function l(e) {
          s.call(this), (0, o.getTypes)().assertLiteral(e), (this.breakLoc = e);
        }
        function c(e, t, n) {
          s.call(this),
            (0, o.getTypes)().assertLiteral(e),
            t ? r.default.ok(t instanceof p) : (t = null),
            n ? r.default.ok(n instanceof g) : (n = null),
            r.default.ok(t || n),
            (this.firstLoc = e),
            (this.catchEntry = t),
            (this.finallyEntry = n);
        }
        function p(e, t) {
          s.call(this);
          var n = (0, o.getTypes)();
          n.assertLiteral(e),
            n.assertIdentifier(t),
            (this.firstLoc = e),
            (this.paramId = t);
        }
        function g(e, t) {
          s.call(this);
          var n = (0, o.getTypes)();
          n.assertLiteral(e),
            n.assertLiteral(t),
            (this.firstLoc = e),
            (this.afterLoc = t);
        }
        function f(e, t) {
          s.call(this);
          var n = (0, o.getTypes)();
          n.assertLiteral(e),
            n.assertIdentifier(t),
            (this.breakLoc = e),
            (this.label = t);
        }
        function h(e) {
          r.default.ok(this instanceof h);
          var t = n(247).Emitter;
          r.default.ok(e instanceof t),
            (this.emitter = e),
            (this.entryStack = [new d(e.finalLoc)]);
        }
        (0, i.inherits)(d, s),
          (t.FunctionEntry = d),
          (0, i.inherits)(u, s),
          (t.LoopEntry = u),
          (0, i.inherits)(l, s),
          (t.SwitchEntry = l),
          (0, i.inherits)(c, s),
          (t.TryEntry = c),
          (0, i.inherits)(p, s),
          (t.CatchEntry = p),
          (0, i.inherits)(g, s),
          (t.FinallyEntry = g),
          (0, i.inherits)(f, s),
          (t.LabeledEntry = f);
        var R = h.prototype;
        (t.LeapManager = h),
          (R.withEntry = function(e, t) {
            r.default.ok(e instanceof s), this.entryStack.push(e);
            try {
              t.call(this.emitter);
            } finally {
              var n = this.entryStack.pop();
              r.default.strictEqual(n, e);
            }
          }),
          (R._findLeapLocation = function(e, t) {
            for (var n = this.entryStack.length - 1; 0 <= n; --n) {
              var a = this.entryStack[n],
                r = a[e];
              if (r)
                if (t) {
                  if (a.label && a.label.name === t.name) return r;
                } else if (!(a instanceof f)) return r;
            }
            return null;
          }),
          (R.getBreakLoc = function(e) {
            return this._findLeapLocation("breakLoc", e);
          }),
          (R.getContinueLoc = function(e) {
            return this._findLeapLocation("continueLoc", e);
          });
      },
      function(e, t, n) {
        "use strict";
        var a,
          s = (a = n(15)) && a.__esModule ? a : { default: a },
          d = n(32),
          i = n(248).makeAccessor(),
          u = Object.prototype.hasOwnProperty;
        function r(n, a) {
          function r(e) {
            var t = (0, d.getTypes)();
            t.assertNode(e);
            var n = !1;
            function a(e) {
              return (
                n ||
                  (Array.isArray(e)
                    ? e.some(a)
                    : t.isNode(e) &&
                      (s.default.strictEqual(n, !1), (n = o(e)))),
                n
              );
            }
            var r = t.VISITOR_KEYS[e.type];
            if (r) for (var i = 0; i < r.length; i++) a(e[r[i]]);
            return n;
          }
          function o(e) {
            (0, d.getTypes)().assertNode(e);
            var t = i(e);
            return u.call(t, n)
              ? t[n]
              : u.call(l, e.type)
                ? (t[n] = !1)
                : u.call(a, e.type)
                  ? (t[n] = !0)
                  : (t[n] = r(e));
          }
          return (o.onlyChildren = r), o;
        }
        var l = { FunctionExpression: !0, ArrowFunctionExpression: !0 },
          o = {
            CallExpression: !0,
            ForInStatement: !0,
            UnaryExpression: !0,
            BinaryExpression: !0,
            AssignmentExpression: !0,
            UpdateExpression: !0,
            NewExpression: !0,
          },
          c = {
            YieldExpression: !0,
            BreakStatement: !0,
            ContinueStatement: !0,
            ReturnStatement: !0,
            ThrowStatement: !0,
          };
        for (var p in c) u.call(c, p) && (o[p] = c[p]);
        (t.hasSideEffects = r("hasSideEffects", o)),
          (t.containsLeap = r("containsLeap", c));
      },
      function(e, t, n) {
        "use strict";
        (t.__esModule = !0),
          (t.default = function(e) {
            var t = r.getTypes();
            if (!e.node || !t.isFunction(e.node))
              throw new Error(
                "replaceShorthandObjectMethod can only be called on Function AST node paths."
              );
            if (!t.isObjectMethod(e.node)) return e;
            if (!e.node.generator) return e;
            var n = e.node.params.map(function(e) {
                return t.cloneDeep(e);
              }),
              a = t.functionExpression(
                null,
                n,
                t.cloneDeep(e.node.body),
                e.node.generator,
                e.node.async
              );
            return (
              r.replaceWithOrRemove(
                e,
                t.objectProperty(
                  t.cloneDeep(e.node.key),
                  a,
                  e.node.computed,
                  !1
                )
              ),
              e.get("value")
            );
          });
        var r = (function(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var n in e)
              if (Object.prototype.hasOwnProperty.call(e, n)) {
                var a =
                  Object.defineProperty && Object.getOwnPropertyDescriptor
                    ? Object.getOwnPropertyDescriptor(e, n)
                    : {};
                a.get || a.set ? Object.defineProperty(t, n, a) : (t[n] = e[n]);
              }
          return (t.default = e), t;
        })(n(32));
      },
      function(e, t, n) {
        "use strict";
        function E() {
          var e = r(n(6));
          return (
            (E = function() {
              return e;
            }),
            e
          );
        }
        function x() {
          var e = r(n(967));
          return (
            (x = function() {
              return e;
            }),
            e
          );
        }
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function A() {
          var e = n(95);
          return (
            (A = function() {
              return e;
            }),
            e
          );
        }
        function S() {
          var e = n(3);
          return (
            (S = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var _ = r(n(972));
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function T(e) {
          return !(!e || !e.supportsStaticESM);
        }
        var i = (0, a().declare)(function(e, t, n) {
          e.assertVersion(7);
          var a = t.corejs,
            r = void 0 !== a && a,
            i = t.helpers,
            s = void 0 === i || i,
            o = t.regenerator,
            d = void 0 === o || o,
            u = t.useESModules,
            l = void 0 !== u && u,
            c = t.version,
            p = void 0 === c ? "7.0.0-beta.0" : c,
            g = t.absoluteRuntime,
            f = void 0 !== g && g;
          if ("boolean" != typeof d)
            throw new Error(
              "The 'regenerator' option must be undefined, or a boolean."
            );
          if ("boolean" != typeof s)
            throw new Error(
              "The 'helpers' option must be undefined, or a boolean."
            );
          if ("boolean" != typeof l && "auto" !== l)
            throw new Error(
              "The 'useESModules' option must be undefined, or a boolean, or 'auto'."
            );
          if ("boolean" != typeof f && "string" != typeof f)
            throw new Error(
              "The 'absoluteRuntime' option must be undefined, a boolean, or a string."
            );
          if (
            !(
              !1 === r ||
              ("number" == typeof r && 2 === r) ||
              ("string" == typeof r && "2" === r)
            )
          )
            throw new Error(
              "The 'corejs' option must be undefined, false, 2 or '2', but got " +
                JSON.stringify(r) +
                "."
            );
          function h(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
          }
          if (h(t, "useBuiltIns"))
            throw t.useBuiltIns
              ? new Error(
                  "The 'useBuiltIns' option has been removed. The @gerhobbelt/babel-runtime module now uses builtins by default."
                )
              : new Error(
                  "The 'useBuiltIns' option has been removed. Use the 'corejs'option with value '2' to polyfill with CoreJS 2.x via @gerhobbelt/babel-runtime."
                );
          if (h(t, "polyfill"))
            throw !1 === t.polyfill
              ? new Error(
                  "The 'polyfill' option has been removed. The @gerhobbelt/babel-runtime module now skips polyfilling by default."
                )
              : new Error(
                  "The 'polyfill' option has been removed. Use the 'corejs'option with value '2' to polyfill with CoreJS 2.x via @gerhobbelt/babel-runtime."
                );
          if (h(t, "moduleName"))
            throw new Error(
              "The 'moduleName' option has been removed. @gerhobbelt/babel-transform-runtime no longer supports arbitrary runtimes. If you were using this to set an absolute path for Babel's standard runtimes, please use the 'absoluteRuntime' option."
            );
          var R = "auto" === l ? e.caller(T) : l,
            y = "" + r == "2",
            m = y
              ? "@gerhobbelt/babel-runtime-corejs2"
              : "@gerhobbelt/babel-runtime",
            v = ["interopRequireWildcard", "interopRequireDefault"],
            b = m;
          return (
            !1 !== f &&
              (b = (function(t, n) {
                try {
                  return E().default.dirname(
                    x().default.sync(t + "/package.json", { basedir: n })
                  );
                } catch (e) {
                  if ("MODULE_NOT_FOUND" !== e.code) throw e;
                  throw Object.assign(
                    new Error(
                      'Failed to resolve "' + t + '" relative to "' + n + '"'
                    ),
                    { code: "BABEL_RUNTIME_NOT_FOUND", runtime: t, dirname: n }
                  );
                }
              })(m, E().default.resolve(n, !0 === f ? "." : f))),
            {
              pre: function(i) {
                var a = this;
                s &&
                  i.set("helperGenerator", function(e) {
                    if (!i.availableHelper || i.availableHelper(e, p)) {
                      var t =
                          -1 === v.indexOf(e) || (0, A().isModule)(i.path)
                            ? void 0
                            : 4,
                        n =
                          R && "module" === i.path.node.sourceType
                            ? "helpers/esm"
                            : "helpers";
                      return a.addDefaultImport(b + "/" + n + "/" + e, e, t);
                    }
                  });
                var o = new Map();
                this.addDefaultImport = function(e, t, n) {
                  var a = e + ":" + t + ":" + ((0, A().isModule)(i.path) || ""),
                    r = o.get(a);
                  return (
                    r
                      ? (r = S().types.cloneNode(r))
                      : ((r = (0, A().addDefault)(i.path, e, {
                          importedInterop: "uncompiled",
                          nameHint: t,
                          blockHoist: n,
                        })),
                        o.set(a, r)),
                    r
                  );
                };
              },
              visitor: {
                ReferencedIdentifier: function(e) {
                  var t = e.node,
                    n = e.parent,
                    a = e.scope;
                  "regeneratorRuntime" === t.name && d
                    ? e.replaceWith(
                        this.addDefaultImport(
                          b + "/regenerator",
                          "regeneratorRuntime"
                        )
                      )
                    : y &&
                      (S().types.isMemberExpression(n) ||
                        (h(_.default.builtins, t.name) &&
                          (a.getBindingIdentifier(t.name) ||
                            e.replaceWith(
                              this.addDefaultImport(
                                b + "/core-js/" + _.default.builtins[t.name],
                                t.name
                              )
                            ))));
                },
                CallExpression: function(e) {
                  if (y && !e.node.arguments.length) {
                    var t = e.node.callee;
                    S().types.isMemberExpression(t) &&
                      t.computed &&
                      e
                        .get("callee.property")
                        .matchesPattern("Symbol.iterator") &&
                      e.replaceWith(
                        S().types.callExpression(
                          this.addDefaultImport(
                            b + "/core-js/get-iterator",
                            "getIterator"
                          ),
                          [t.object]
                        )
                      );
                  }
                },
                BinaryExpression: function(e) {
                  y &&
                    "in" === e.node.operator &&
                    e.get("left").matchesPattern("Symbol.iterator") &&
                    e.replaceWith(
                      S().types.callExpression(
                        this.addDefaultImport(
                          b + "/core-js/is-iterable",
                          "isIterable"
                        ),
                        [e.node.right]
                      )
                    );
                },
                MemberExpression: {
                  enter: function(e) {
                    if (y && e.isReferenced()) {
                      var t = e.node,
                        n = t.object,
                        a = t.property;
                      if (
                        S().types.isReferenced(n, t) &&
                        !t.computed &&
                        h(_.default.methods, n.name)
                      ) {
                        var r = _.default.methods[n.name];
                        if (
                          h(r, a.name) &&
                          !e.scope.getBindingIdentifier(n.name)
                        ) {
                          if (
                            "Object" === n.name &&
                            "defineProperty" === a.name &&
                            e.parentPath.isCallExpression()
                          ) {
                            var i = e.parentPath.node;
                            if (
                              3 === i.arguments.length &&
                              S().types.isLiteral(i.arguments[1])
                            )
                              return;
                          }
                          e.replaceWith(
                            this.addDefaultImport(
                              b + "/core-js/" + r[a.name],
                              n.name + "$" + a.name
                            )
                          );
                        }
                      }
                    }
                  },
                  exit: function(e) {
                    if (y && e.isReferenced()) {
                      var t = e.node,
                        n = t.object;
                      h(_.default.builtins, n.name) &&
                        (e.scope.getBindingIdentifier(n.name) ||
                          e.replaceWith(
                            S().types.memberExpression(
                              this.addDefaultImport(
                                b + "/core-js/" + _.default.builtins[n.name],
                                n.name
                              ),
                              t.property,
                              t.computed
                            )
                          ));
                    }
                  },
                },
              },
            }
          );
        });
        t.default = i;
      },
      function(e, t, n) {
        var a = n(101),
          r = n(969);
        (r.core = a),
          (r.isCore = function(e) {
            return a[e];
          }),
          (r.sync = n(971)),
          (e.exports = r);
      },
      function(e) {
        e.exports = {
          assert: !0,
          async_hooks: ">= 8",
          buffer_ieee754: "< 0.9.7",
          buffer: !0,
          child_process: !0,
          cluster: !0,
          console: !0,
          constants: !0,
          crypto: !0,
          _debugger: "< 8",
          dgram: !0,
          dns: !0,
          domain: !0,
          events: !0,
          freelist: "< 6",
          fs: !0,
          "fs/promises": ">= 10 && < 10.1",
          _http_agent: ">= 0.11.1",
          _http_client: ">= 0.11.1",
          _http_common: ">= 0.11.1",
          _http_incoming: ">= 0.11.1",
          _http_outgoing: ">= 0.11.1",
          _http_server: ">= 0.11.1",
          http: !0,
          http2: ">= 8.8",
          https: !0,
          inspector: ">= 8.0.0",
          _linklist: "< 8",
          module: !0,
          net: !0,
          "node-inspect/lib/_inspect": ">= 7.6.0",
          "node-inspect/lib/internal/inspect_client": ">= 7.6.0",
          "node-inspect/lib/internal/inspect_repl": ">= 7.6.0",
          os: !0,
          path: !0,
          perf_hooks: ">= 8.5",
          process: ">= 1",
          punycode: !0,
          querystring: !0,
          readline: !0,
          repl: !0,
          smalloc: ">= 0.11.5 && < 3",
          _stream_duplex: ">= 0.9.4",
          _stream_transform: ">= 0.9.4",
          _stream_wrap: ">= 1.4.1",
          _stream_passthrough: ">= 0.9.4",
          _stream_readable: ">= 0.9.4",
          _stream_writable: ">= 0.9.4",
          stream: !0,
          string_decoder: !0,
          sys: !0,
          timers: !0,
          _tls_common: ">= 0.11.13",
          _tls_legacy: ">= 0.11.3 && < 10",
          _tls_wrap: ">= 0.11.3",
          tls: !0,
          trace_events: ">= 10",
          tty: !0,
          url: !0,
          util: !0,
          "v8/tools/arguments": ">= 10",
          "v8/tools/codemap": [">= 4.4.0 && < 5", ">= 5.2.0"],
          "v8/tools/consarray": [">= 4.4.0 && < 5", ">= 5.2.0"],
          "v8/tools/csvparser": [">= 4.4.0 && < 5", ">= 5.2.0"],
          "v8/tools/logreader": [">= 4.4.0 && < 5", ">= 5.2.0"],
          "v8/tools/profile_view": [">= 4.4.0 && < 5", ">= 5.2.0"],
          "v8/tools/splaytree": [">= 4.4.0 && < 5", ">= 5.2.0"],
          v8: ">= 1",
          vm: !0,
          zlib: !0,
        };
      },
      function(e, t, n) {
        (function(y) {
          var c = n(101),
            p = n(31),
            m = n(6),
            v = n(249),
            b = n(250),
            E = function(e, n) {
              p.stat(e, function(e, t) {
                return e
                  ? "ENOENT" === e.code || "ENOTDIR" === e.code
                    ? n(null, !1)
                    : n(e)
                  : n(null, t.isFile() || t.isFIFO());
              });
            };
          e.exports = function(d, e, t) {
            var r = t,
              g = e || {};
            if (
              ("function" == typeof g && ((r = g), (g = {})),
              "string" != typeof d)
            ) {
              var n = new TypeError("Path must be a string.");
              return y.nextTick(function() {
                r(n);
              });
            }
            var f = g.isFile || E,
              h = g.readFile || p.readFile,
              R = g.extensions || [".js"],
              a = g.basedir || m.dirname(v()),
              i = g.filename || a;
            if (
              ((g.paths = g.paths || []),
              /^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(d))
            ) {
              var o = m.resolve(a, d);
              (".." !== d && "/" !== d.slice(-1)) || (o += "/"),
                /\/$/.test(d) && o === a
                  ? l(o, g.package, s)
                  : u(o, g.package, s);
            } else
              !(function a(r, i) {
                if (0 === i.length) return r(null, void 0);
                var o = i[0];
                function s(e, t, n) {
                  return e ? r(e) : t ? r(null, t, n) : void a(r, i.slice(1));
                }
                u(m.join(o, d), g.package, function(e, t, n) {
                  return e
                    ? r(e)
                    : t
                      ? r(null, t, n)
                      : void l(m.join(o, d), g.package, s);
                });
              })(function(e, t, n) {
                if (e) r(e);
                else if (t) r(null, t, n);
                else {
                  if (c[d]) return r(null, d);
                  var a = new Error(
                    "Cannot find module '" + d + "' from '" + i + "'"
                  );
                  (a.code = "MODULE_NOT_FOUND"), r(a);
                }
              }, b(a, g));
            function s(e, t, n) {
              e
                ? r(e)
                : t
                  ? r(null, t, n)
                  : l(o, function(e, t, n) {
                      if (e) r(e);
                      else if (t) r(null, t, n);
                      else {
                        var a = new Error(
                          "Cannot find module '" + d + "' from '" + i + "'"
                        );
                        (a.code = "MODULE_NOT_FOUND"), r(a);
                      }
                    });
            }
            function u(e, t, n) {
              var a = t,
                p = n;
              "function" == typeof a && ((p = a), (a = void 0)),
                (function o(s, d, e) {
                  if (0 === s.length) return p(null, void 0, e);
                  var u = d + s[0],
                    l = e;
                  function t(e, t, n) {
                    if (((l = t), e)) return p(e);
                    if (n && l && g.pathFilter) {
                      var a = m.relative(n, u),
                        r = a.slice(0, a.length - s[0].length),
                        i = g.pathFilter(l, d, r);
                      if (i)
                        return o([""].concat(R.slice()), m.resolve(n, i), l);
                    }
                    f(u, c);
                  }
                  function c(e, t) {
                    return e
                      ? p(e)
                      : t
                        ? p(null, u, l)
                        : void o(s.slice(1), d, l);
                  }
                  l
                    ? t(null, l)
                    : (function n(a, r) {
                        if ("" === a || "/" === a) return r(null);
                        if ("win32" === y.platform && /^\w:[/\\]*$/.test(a))
                          return r(null);
                        if (/[/\\]node_modules[/\\]*$/.test(a)) return r(null);
                        var i = m.join(a, "package.json");
                        f(i, function(e, t) {
                          if (!t) return n(m.dirname(a), r);
                          h(i, function(e, t) {
                            e && r(e);
                            try {
                              var n = JSON.parse(t);
                            } catch (e) {}
                            n && g.packageFilter && (n = g.packageFilter(n, i)),
                              r(null, n, a);
                          });
                        });
                      })(m.dirname(u), t);
                })([""].concat(R), e, a);
            }
            function l(a, e, t) {
              var r = t,
                n = e;
              "function" == typeof n && ((r = n), (n = g.package));
              var i = m.join(a, "package.json");
              f(i, function(e, t) {
                return e
                  ? r(e)
                  : t
                    ? void h(i, function(e, t) {
                        if (e) return r(e);
                        try {
                          var n = JSON.parse(t);
                        } catch (e) {}
                        if (
                          (g.packageFilter && (n = g.packageFilter(n, i)),
                          n.main)
                        )
                          return (
                            ("." !== n.main && "./" !== n.main) ||
                              (n.main = "index"),
                            void u(m.resolve(a, n.main), n, function(e, t, n) {
                              return e
                                ? r(e)
                                : t
                                  ? r(null, t, n)
                                  : n
                                    ? void l(m.resolve(a, n.main), n, function(
                                        e,
                                        t,
                                        n
                                      ) {
                                        return e
                                          ? r(e)
                                          : t
                                            ? r(null, t, n)
                                            : void u(m.join(a, "index"), n, r);
                                      })
                                    : u(m.join(a, "index"), n, r);
                            })
                          );
                        u(m.join(a, "/index"), n, r);
                      })
                    : u(m.join(a, "index"), n, r);
              });
            }
          };
        }.call(this, n(7)));
      },
      function(i, e, t) {
        "use strict";
        (function(e) {
          var t = "win32" === e.platform,
            s = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,
            d = /^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/,
            n = {
              parse: function(e) {
                if ("string" != typeof e)
                  throw new TypeError(
                    "Parameter 'pathString' must be a string, not " + typeof e
                  );
                var t,
                  n,
                  a,
                  r,
                  i,
                  o = ((t = e),
                  (n = s.exec(t)),
                  (a = (n[1] || "") + (n[2] || "")),
                  (r = n[3] || ""),
                  (i = d.exec(r)),
                  [a, i[1], i[2], i[3]]);
                if (!o || 4 !== o.length)
                  throw new TypeError("Invalid path '" + e + "'");
                return {
                  root: o[0],
                  dir: o[0] + o[1].slice(0, -1),
                  base: o[2],
                  ext: o[3],
                  name: o[2].slice(0, o[2].length - o[3].length),
                };
              },
            },
            a = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
            r = {
              parse: function(e) {
                if ("string" != typeof e)
                  throw new TypeError(
                    "Parameter 'pathString' must be a string, not " + typeof e
                  );
                var t,
                  n = ((t = e), a.exec(t).slice(1));
                if (!n || 4 !== n.length)
                  throw new TypeError("Invalid path '" + e + "'");
                return (
                  (n[1] = n[1] || ""),
                  (n[2] = n[2] || ""),
                  (n[3] = n[3] || ""),
                  {
                    root: n[0],
                    dir: n[0] + n[1].slice(0, -1),
                    base: n[2],
                    ext: n[3],
                    name: n[2].slice(0, n[2].length - n[3].length),
                  }
                );
              },
            };
          (i.exports = t ? n.parse : r.parse),
            (i.exports.posix = r.parse),
            (i.exports.win32 = n.parse);
        }.call(this, t(7)));
      },
      function(e, t, n) {
        (function(f) {
          var h = n(101),
            R = n(31),
            y = n(6),
            m = n(249),
            v = n(250),
            b = function(e) {
              try {
                var t = R.statSync(e);
              } catch (e) {
                if (e && ("ENOENT" === e.code || "ENOTDIR" === e.code))
                  return !1;
                throw e;
              }
              return t.isFile() || t.isFIFO();
            };
          e.exports = function(e, t) {
            if ("string" != typeof e)
              throw new TypeError("Path must be a string.");
            var s = t || {},
              o = s.isFile || b,
              d = s.readFileSync || R.readFileSync,
              u = s.extensions || [".js"],
              l = s.basedir || y.dirname(m()),
              n = s.filename || l;
            if (
              ((s.paths = s.paths || []),
              /^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(e))
            ) {
              var a = y.resolve(l, e);
              (".." !== e && "/" !== e.slice(-1)) || (a += "/");
              var r = p(a) || g(a);
              if (r) return r;
            } else {
              var i = (function(e, t) {
                for (var n = v(l, s), a = 0; a < n.length; a++) {
                  var r = n[a],
                    i = p(y.join(r, "/", e));
                  if (i) return i;
                  var o = g(y.join(r, "/", e));
                  if (o) return o;
                }
              })(e);
              if (i) return i;
            }
            if (h[e]) return e;
            var c = new Error(
              "Cannot find module '" + e + "' from '" + n + "'"
            );
            throw ((c.code = "MODULE_NOT_FOUND"), c);
            function p(e) {
              var t = (function e(t) {
                if (
                  "" !== t &&
                  "/" !== t &&
                  !(
                    ("win32" === f.platform && /^\w:[/\\]*$/.test(t)) ||
                    /[/\\]node_modules[/\\]*$/.test(t)
                  )
                ) {
                  var n = y.join(t, "package.json");
                  if (!o(n)) return e(y.dirname(t));
                  var a = d(n);
                  try {
                    var r = JSON.parse(a);
                  } catch (e) {}
                  return (
                    r && s.packageFilter && (r = s.packageFilter(r, t)),
                    { pkg: r, dir: t }
                  );
                }
              })(y.dirname(e));
              if (t && t.dir && t.pkg && s.pathFilter) {
                var n = y.relative(t.dir, e),
                  a = s.pathFilter(t.pkg, e, n);
                a && (e = y.resolve(t.dir, a));
              }
              if (o(e)) return e;
              for (var r = 0; r < u.length; r++) {
                var i = e + u[r];
                if (o(i)) return i;
              }
            }
            function g(e) {
              var t = y.join(e, "/package.json");
              if (o(t))
                try {
                  var n = d(t, "UTF8"),
                    a = JSON.parse(n);
                  if (
                    (s.packageFilter && (a = s.packageFilter(a, e)), a.main)
                  ) {
                    ("." !== a.main && "./" !== a.main) || (a.main = "index");
                    var r = p(y.resolve(e, a.main));
                    if (r) return r;
                    var i = g(y.resolve(e, a.main));
                    if (i) return i;
                  }
                } catch (e) {}
              return p(y.join(e, "/index"));
            }
          };
        }.call(this, n(7)));
      },
      function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0),
          (t.default = {
            builtins: {
              Symbol: "symbol",
              Promise: "promise",
              Map: "map",
              WeakMap: "weak-map",
              Set: "set",
              WeakSet: "weak-set",
              setImmediate: "set-immediate",
              clearImmediate: "clear-immediate",
              parseFloat: "parse-float",
              parseInt: "parse-int",
            },
            methods: {
              Array: {
                from: "array/from",
                isArray: "array/is-array",
                of: "array/of",
              },
              JSON: { stringify: "json/stringify" },
              Object: {
                assign: "object/assign",
                create: "object/create",
                defineProperties: "object/define-properties",
                defineProperty: "object/define-property",
                entries: "object/entries",
                freeze: "object/freeze",
                getOwnPropertyDescriptor: "object/get-own-property-descriptor",
                getOwnPropertyDescriptors:
                  "object/get-own-property-descriptors",
                getOwnPropertyNames: "object/get-own-property-names",
                getOwnPropertySymbols: "object/get-own-property-symbols",
                getPrototypeOf: "object/get-prototype-of",
                isExtensible: "object/is-extensible",
                isFrozen: "object/is-frozen",
                isSealed: "object/is-sealed",
                is: "object/is",
                keys: "object/keys",
                preventExtensions: "object/prevent-extensions",
                seal: "object/seal",
                setPrototypeOf: "object/set-prototype-of",
                values: "object/values",
              },
              Symbol: {
                asyncIterator: "symbol/async-iterator",
                for: "symbol/for",
                hasInstance: "symbol/has-instance",
                isConcatSpreadable: "symbol/is-concat-spreadable",
                iterator: "symbol/iterator",
                keyFor: "symbol/key-for",
                match: "symbol/match",
                replace: "symbol/replace",
                search: "symbol/search",
                species: "symbol/species",
                split: "symbol/split",
                toPrimitive: "symbol/to-primitive",
                toStringTag: "symbol/to-string-tag",
                unscopables: "symbol/unscopables",
              },
              String: {
                at: "string/at",
                fromCodePoint: "string/from-code-point",
                raw: "string/raw",
              },
              Number: {
                EPSILON: "number/epsilon",
                isFinite: "number/is-finite",
                isInteger: "number/is-integer",
                isNaN: "number/is-nan",
                isSafeInteger: "number/is-safe-integer",
                MAX_SAFE_INTEGER: "number/max-safe-integer",
                MIN_SAFE_INTEGER: "number/min-safe-integer",
                parseFloat: "number/parse-float",
                parseInt: "number/parse-int",
              },
              Reflect: {
                apply: "reflect/apply",
                construct: "reflect/construct",
                defineProperty: "reflect/define-property",
                deleteProperty: "reflect/delete-property",
                getOwnPropertyDescriptor: "reflect/get-own-property-descriptor",
                getPrototypeOf: "reflect/get-prototype-of",
                get: "reflect/get",
                has: "reflect/has",
                isExtensible: "reflect/is-extensible",
                ownKeys: "reflect/own-keys",
                preventExtensions: "reflect/prevent-extensions",
                setPrototypeOf: "reflect/set-prototype-of",
                set: "reflect/set",
              },
              Date: { now: "date/now" },
            },
          });
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function i() {
          var e = n(3);
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              visitor: {
                Program: function(e) {
                  var t = e.node.directives,
                    n = Array.isArray(t),
                    a = 0;
                  for (t = n ? t : t[Symbol.iterator](); ; ) {
                    var r;
                    if (n) {
                      if (a >= t.length) break;
                      r = t[a++];
                    } else {
                      if ((a = t.next()).done) break;
                      r = a.value;
                    }
                    if ("use strict" === r.value.value) return;
                  }
                  e.unshiftContainer(
                    "directives",
                    i().types.directive(
                      i().types.directiveLiteral("use strict")
                    )
                  );
                },
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(98)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        function i() {
          var e = (function(e) {
            if (e && e.__esModule) return e;
            var t = {};
            if (null != e)
              for (var n in e)
                if (Object.prototype.hasOwnProperty.call(e, n)) {
                  var a =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(e, n)
                      : {};
                  a.get || a.set
                    ? Object.defineProperty(t, n, a)
                    : (t[n] = e[n]);
                }
            return (t.default = e), t;
          })(n(60));
          return (
            (i = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var o = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.useUnicodeFlag,
            a = void 0 === n || n;
          if ("boolean" != typeof a)
            throw new Error(".useUnicodeFlag must be a boolean, or undefined");
          return {
            visitor: {
              RegExpLiteral: function(e) {
                var t = e.node;
                i().is(t, "u") &&
                  ((t.pattern = (0, r().default)(t.pattern, t.flags, {
                    unicodePropertyEscape: !0,
                    useUnicodeFlag: a,
                  })),
                  a || i().pullFlag(t, "u"));
              },
            },
          };
        });
        t.default = o;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e = r(n(244));
          return (
            (s = function() {
              return e;
            }),
            e
          );
        }
        function d() {
          var e = r(n(243));
          return (
            (d = function() {
              return e;
            }),
            e
          );
        }
        function u() {
          var e = r(n(246));
          return (
            (u = function() {
              return e;
            }),
            e
          );
        }
        function l() {
          var e = r(n(245));
          return (
            (l = function() {
              return e;
            }),
            e
          );
        }
        function r(e) {
          return e && e.__esModule ? e : { default: e };
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e, t) {
          e.assertVersion(7);
          var n = t.pragma || "React.createElement",
            a = t.pragmaFrag || "React.Fragment",
            r = void 0 === t.throwIfNamespace || !!t.throwIfNamespace,
            i = !!t.development,
            o = !!t.useBuiltIns;
          if ("boolean" != typeof i)
            throw new Error(
              "@gerhobbelt/babel-preset-react 'development' option must be a boolean."
            );
          return {
            plugins: [
              [
                s().default,
                {
                  pragma: n,
                  pragmaFrag: a,
                  throwIfNamespace: r,
                  useBuiltIns: o,
                },
              ],
              d().default,
              i && u().default,
              i && l().default,
            ].filter(Boolean),
          };
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var c = n(136),
          a = n(134),
          p = n.n(a);
        t.default = function(e, t) {
          void 0 === t && (t = {});
          var n = t,
            a = n.loose,
            r = void 0 !== a && a,
            i = n.useBuiltIns,
            o = void 0 !== i && i,
            s = n.decoratorsLegacy,
            d = void 0 !== s && s,
            u = n.pipelineProposal,
            l = void 0 === u ? "minimal" : u;
          return {
            presets: [
              [
                c.default,
                {
                  loose: r,
                  useBuiltIns: o,
                  decoratorsLegacy: d,
                  pipelineProposal: l,
                },
              ],
            ],
            plugins: [p.a],
          };
        };
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("jsonStrings");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("numericSeparator");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("throwExpressions");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("logicalAssignment");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("optionalChaining");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e) {
          return (
            e.assertVersion(7),
            {
              manipulateOptions: function(e, t) {
                t.plugins.push("nullishCoalescingOperator");
              },
            }
          );
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function s() {
          var e,
            t = (e = n(241)) && e.__esModule ? e : { default: e };
          return (
            (s = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var r = (0, a().declare)(function(e, t) {
          var n = t.jsxPragma,
            a = t.allExtensions,
            r = void 0 !== a && a,
            i = t.isTSX,
            o = void 0 !== i && i;
          if ((e.assertVersion(7), "boolean" != typeof r))
            throw new Error(".allExtensions must be a boolean, or undefined");
          if ("boolean" != typeof o)
            throw new Error(".isTSX must be a boolean, or undefined");
          if (o && !r)
            throw new Error("isTSX:true requires allExtensions:true");
          return {
            overrides: r
              ? [{ plugins: [[s().default, { jsxPragma: n, isTSX: o }]] }]
              : [
                  { test: /\.ts$/, plugins: [[s().default, { jsxPragma: n }]] },
                  {
                    test: /\.tsx$/,
                    plugins: [[s().default, { jsxPragma: n, isTSX: !0 }]],
                  },
                ],
          };
        });
        t.default = r;
      },
      function(e, t, n) {
        "use strict";
        function a() {
          var e = n(2);
          return (
            (a = function() {
              return e;
            }),
            e
          );
        }
        function r() {
          var e,
            t = (e = n(242)) && e.__esModule ? e : { default: e };
          return (
            (r = function() {
              return t;
            }),
            t
          );
        }
        Object.defineProperty(t, "__esModule", { value: !0 }),
          (t.default = void 0);
        var i = (0, a().declare)(function(e, t) {
          var n = t.all;
          return e.assertVersion(7), { plugins: [[r().default, { all: n }]] };
        });
        t.default = i;
      },
      function(e, t, n) {
        "use strict";
        n.r(t);
        var p,
          a = n(3),
          o = ["text/jsx", "text/babel"],
          g = 0;
        function s(e, t) {
          var n = e.getAttribute(t);
          return "" === n
            ? []
            : n
              ? n.split(",").map(function(e) {
                  return e.trim();
                })
              : null;
        }
        function d(u, e) {
          var l = [],
            c = e.length;
          function i() {
            var e, t, n, a, r, i, o, s, d;
            for (t = 0; t < c; t++)
              if ((e = l[t]).loaded && !e.executed)
                (e.executed = !0),
                  (n = u),
                  (a = e),
                  (d = s = o = i = r = void 0),
                  ((d = document.createElement("script")).text = ((r = n),
                  null != (i = a).url
                    ? (o = i.url)
                    : ((o = "Inline Babel script"),
                      1 < ++g && (o += " (" + g + ")")),
                  r(
                    i.content,
                    Object.assign(
                      { filename: o },
                      ((s = i),
                      {
                        presets: s.presets || ["react", "es2015"],
                        plugins: s.plugins || [
                          "proposal-class-properties",
                          "proposal-object-rest-spread",
                          "transform-flow-strip-types",
                        ],
                        sourceMaps: "inline",
                      })
                    )
                  ).code)),
                  a.module && (d.type = "module"),
                  p.appendChild(d);
              else if (!e.loaded && !e.error && !e.async) break;
          }
          e.forEach(function(e, t) {
            var n,
              a,
              r = {
                async: e.hasAttribute("async"),
                error: !1,
                executed: !1,
                module: -1 !== e.type.indexOf("module"),
                plugins: s(e, "data-plugins"),
                presets: s(e, "data-presets"),
              };
            e.src
              ? ((l[t] = Object.assign({}, r, {
                  content: null,
                  loaded: !1,
                  url: e.src,
                })),
                (n = e.src),
                (a = new XMLHttpRequest()).open("GET", n, !0),
                "overrideMimeType" in a && a.overrideMimeType("text/plain"),
                (a.onreadystatechange = function() {
                  if (4 === a.readyState) {
                    if (0 !== a.status && 200 !== a.status)
                      throw ((l[t].error = !0),
                      i(),
                      new Error("Could not load " + n));
                    (e = a.responseText),
                      (l[t].loaded = !0),
                      (l[t].content = e),
                      i();
                  }
                  var e;
                }),
                a.send(null))
              : (l[t] = Object.assign({}, r, {
                  content: e.innerHTML,
                  loaded: !0,
                  url: null,
                }));
          }),
            i();
        }
        n.d(t, "transform", function() {
          return l;
        }),
          n.d(t, "transformFromAst", function() {
            return c;
          }),
          n.d(t, "availablePlugins", function() {
            return f;
          }),
          n.d(t, "availablePresets", function() {
            return h;
          }),
          n.d(t, "buildExternalHelpers", function() {
            return R;
          }),
          n.d(t, "registerPlugin", function() {
            return y;
          }),
          n.d(t, "registerPlugins", function() {
            return m;
          }),
          n.d(t, "registerPreset", function() {
            return v;
          }),
          n.d(t, "registerPresets", function() {
            return b;
          }),
          n.d(t, "version", function() {
            return E;
          }),
          n.d(t, "transformScriptTags", function() {
            return A;
          }),
          n.d(t, "disableScriptTags", function() {
            return S;
          });
        var r =
          Array.isArray ||
          function(e) {
            return "[object Array]" === Object.prototype.toString.call(e);
          };
        function i(e, t) {
          return r(t) && "string" == typeof t[0]
            ? e.hasOwnProperty(t[0])
              ? [e[t[0]]].concat(t.slice(1))
              : void 0
            : "string" == typeof t
              ? e[t]
              : t;
        }
        function u(e) {
          var t = (e.presets || []).map(function(e) {
              var t = i(h, e);
              if (!t)
                throw new Error(
                  'Invalid preset specified in Babel options: "' + e + '"'
                );
              return (
                r(t) &&
                  "object" == typeof t[0] &&
                  t[0].hasOwnProperty("buildPreset") &&
                  (t[0] = Object.assign({}, t[0], {
                    buildPreset: t[0].buildPreset,
                  })),
                t
              );
            }),
            n = (e.plugins || []).map(function(e) {
              var t = i(f, e);
              if (!t)
                throw new Error(
                  'Invalid plugin specified in Babel options: "' + e + '"'
                );
              return t;
            });
          return Object.assign({ babelrc: !1 }, e, { presets: t, plugins: n });
        }
        function l(e, t) {
          return a.transform(e, u(t));
        }
        function c(e, t, n) {
          return a.transformFromAst(e, t, u(n));
        }
        var f = {},
          h = {},
          R = a.buildExternalHelpers;
        function y(e, t) {
          f.hasOwnProperty(e) &&
            console.warn(
              'A plugin named "' +
                e +
                '" is already registered, it will be overridden'
            ),
            (f[e] = t);
        }
        function m(t) {
          Object.keys(t).forEach(function(e) {
            return y(e, t[e]);
          });
        }
        function v(e, t) {
          h.hasOwnProperty(e) &&
            console.warn(
              'A preset named "' +
                e +
                '" is already registered, it will be overridden'
            ),
            (h[e] = t);
        }
        function b(t) {
          Object.keys(t).forEach(function(e) {
            return v(e, t[e]);
          });
        }
        m({
          "external-helpers": n(514),
          "syntax-async-generators": n(219),
          "syntax-class-properties": n(220),
          "syntax-decorators": n(221),
          "syntax-do-expressions": n(222),
          "syntax-dynamic-import": n(103),
          "syntax-export-default-from": n(223),
          "syntax-export-namespace-from": n(224),
          "syntax-flow": n(93),
          "syntax-function-bind": n(225),
          "syntax-function-sent": n(226),
          "syntax-import-meta": n(104),
          "syntax-jsx": n(227),
          "syntax-object-rest-spread": n(228),
          "syntax-optional-catch-binding": n(229),
          "syntax-pipeline-operator": n(230),
          "syntax-typescript": n(231),
          "transform-async-to-generator": n(515),
          "proposal-async-generator-functions": n(520),
          "proposal-class-properties": n(105),
          "proposal-decorators": n(106),
          "proposal-do-expressions": n(107),
          "proposal-export-default-from": n(108),
          "proposal-export-namespace-from": n(109),
          "proposal-pipeline-operator": n(110),
          "transform-arrow-functions": n(111),
          "transform-block-scoped-functions": n(112),
          "transform-block-scoping": n(113),
          "transform-classes": n(114),
          "transform-computed-properties": n(115),
          "transform-destructuring": n(116),
          "transform-dotall-regex": n(531),
          "transform-duplicate-keys": n(117),
          "transform-for-of": n(118),
          "transform-function-name": n(119),
          "transform-instanceof": n(120),
          "transform-literals": n(121),
          "transform-modules-amd": n(122),
          "transform-modules-commonjs": n(123),
          "transform-modules-systemjs": n(124),
          "transform-modules-umd": n(125),
          "transform-object-super": n(126),
          "transform-parameters": n(127),
          "transform-shorthand-properties": n(128),
          "transform-spread": n(129),
          "transform-sticky-regex": n(130),
          "transform-template-literals": n(131),
          "transform-typeof-symbol": n(132),
          "transform-typescript": n(241),
          "transform-unicode-regex": n(133),
          "transform-member-expression-literals": n(943),
          "transform-property-literals": n(944),
          "transform-property-mutators": n(945),
          "transform-exponentiation-operator": n(946),
          "transform-flow-comments": n(949),
          "transform-flow-strip-types": n(242),
          "proposal-function-bind": n(134),
          "transform-jscript": n(950),
          "transform-new-target": n(951),
          "transform-object-assign": n(952),
          "proposal-object-rest-spread": n(953),
          "transform-object-set-prototype-of-to-assign": n(954),
          "proposal-optional-catch-binding": n(955),
          "transform-proto-to-assign": n(956),
          "transform-react-constant-elements": n(957),
          "transform-react-display-name": n(243),
          "transform-react-inline-elements": n(958),
          "transform-react-jsx": n(244),
          "transform-react-jsx-compat": n(959),
          "transform-react-jsx-self": n(245),
          "transform-react-jsx-source": n(246),
          "transform-regenerator": n(135),
          "transform-runtime": n(966),
          "transform-strict-mode": n(973),
          "proposal-unicode-property-regex": n(974),
        }),
          b({
            es2015: n(102),
            es2016: function() {
              return { plugins: [f["transform-exponentiation-operator"]] };
            },
            es2017: function() {
              return { plugins: [f["transform-async-to-generator"]] };
            },
            react: n(975),
            "stage-0": n(976),
            "stage-1": n(136),
            "stage-2": n(137),
            "stage-3": n(138),
            "es2015-loose": { presets: [[n(102), { loose: !0 }]] },
            "es2015-no-commonjs": { presets: [[n(102), { modules: !1 }]] },
            typescript: n(983),
            flow: n(984),
          });
        var E = "7.0.0-14";
        function x() {
          A();
        }
        function A(e) {
          !(function(e, t) {
            (p = document.getElementsByTagName("head")[0]),
              t || (t = document.getElementsByTagName("script"));
            for (var n = [], a = 0; a < t.length; a++) {
              var r = t.item(a),
                i = r.type.split(";")[0];
              -1 !== o.indexOf(i) && n.push(r);
            }
            0 !== n.length &&
              (console.warn(
                "You are using the in-browser Babel transformer. Be sure to precompile your scripts for production - https://babeljs.io/docs/setup/"
              ),
              d(e, n));
          })(l, e);
        }
        function S() {
          window.removeEventListener("DOMContentLoaded", x);
        }
        "undefined" != typeof window &&
          window &&
          window.addEventListener &&
          window.addEventListener("DOMContentLoaded", x, !1);
      },
    ]);
  }
);
